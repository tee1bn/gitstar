%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 10.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For:  
%%CreationDate: 10/30/2017
%%BoundingBox: 0 0 906 816
%%HiResBoundingBox: 0 0 905.9628 815.3341
%%CropBox: 0 0 905.9628 815.3341
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x243 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Untitled-1-10</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-10-30T12:54:36+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-10-30T12:54:36+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-10-30T12:54:36+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>232</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgA6AEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq07oil3&#xA;YKqirMTQAe5xVI7/AM++SNPiMt5r2nwoKj4rmKpI2IChuRPyGGirDdY/5yP/ACu05isN5PqTAVIs&#xA;4GIr4cpvRU/QcPAVYnqX/OWmiIv+43y/czsV63M0cADf7AT1GS4FYXq3/OUn5g3TuLC2sdPiOycY&#xA;2mkHzaRip/4DDwBWMat+en5qamCsuvTW8Z6JaLHbEfJ4lV/+Gw8IQwy71PUryf6xd3c1xcA8hNLI&#xA;zvy615MSa5JX0D/zjZ+aOt32qy+UdaunvI2hafTLidi8qNFTnDyNSylKstT8NPurnFL6IytXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUs1fzR5b0ZS2rapaWHEVIuJo4z9CsQThpWE6&#xA;n/zkP+VNieK6q964NGW1glYD35MqIfobDwFWLat/zlf5UgYrpej3l7T9uZo7ZSfahmanzGHgVhes&#xA;f85V+dLlyNL02y0+E9PUElxKP9kWjT/hMlwBWJ3/AOff5sXsRifXXiQk19CGCFt/B0jV9vnh4Qhh&#xA;+q+Ydf1d+eq6ldX7eNzNJN/xMthpUvwq7FXYq7FXYq7FWZ/k1qv6L/NDy7cluKyXa2zH2ulNvv8A&#xA;8jMjLkr7fylLsVdirsVdirsVdirsVdirsVdirsVdiqC1LW9G0tPU1O/trFKcudzMkIp41crirCtX&#xA;/Pz8qtNLo2tLdyp/uu0ilmr8pFX0v+HyXCVYzq3/ADlT5FtgV06wvr+SlQSscEZ9uTMz/wDCYeAq&#xA;wfVv+csPNUwI0vRrKyBrRp2kuWA7UKmBa/RkuBWMar/zkV+at/yWPUo7CNxQpaQRLT5PIJJB9DYe&#xA;AIYRqnmnzNqxb9KateXwc1ZbieSQH6GYjDSpWSSSSak7knCrsVdirsVdirsVdirsVdirsVdirsVV&#xA;9PvJbG/tr2E0mtZUmjI2+KNgw/EYq/Qe1uIrm2iuYjWKZFkjPirio/A5jpVMVdirsVdirsVdirsV&#xA;diqRXfn3yNZzNBd+YtMt50NGikvLdHBrTdS9RhoqhJPzS/LeNyjeZ9MJHdbqJh96sRjwlXf8rK/L&#xA;m5hdE81aZHUcS/1yCNhXuvNhjRVieq2X5KaryOqecEvY2NXgl8wSNGR4CMXHED2Aw7qkzeUv+cW7&#xA;iShutPMsm3qNqtzWp2B5NcU+/DclW/8AKuP+cY/+rrp3/cZX/qtjclXHyD/zi/OQsV7pyNKfSRU1&#xA;aQkNX7QDTsfpO2NyVoflR/zjlbKXuNVtCpIAaXVkUA+xWROuPEVcv5Z/840TVii1SwMjgheGsKzD&#xA;vUD1j+rG5K1/yqf/AJxytvjuNWtSh+Eerq0aivXYiRN8eIq2v5Yf841XFY4NUsS5Fax6urMPenqt&#xA;+rG5K0Pyj/5x2g/ezavbmNftCTVY1Xfbch1P448RVe35Pf8AOPeoL6VlqcCSACTlbaokjcCaA0d5&#xA;RQ+NMeIqtb8mv+cfo6Rvq0QkTZy2pxBif8ocuv0Y8RVx/JD8hrtQLXVgpj2kaDUoXJJ3HLlzA+im&#xA;PEVc35GfkTblpZ9WIjY0CyajCqgnegICn7zjxFWh+S35Az1ih1dDIw29PUoWb6AS36seIq2v5Bfk&#xA;irBm1iVlG5Vr+3ofnRQceIq3H+Rv5E3xMVnqvKRRzYQajDI3EbEkHntv4Y8RVav5CfkhGQ76xIyj&#xA;qGv7cDfbsoOPEVd/0L3+TE44w6xcBh+7JjvrZjzbdesbfFToMeMq4/8AOPX5MQn0pdZuBIoHLnfW&#xA;yt07j0x+rHjKuP8AzjZ+UlxSWHWr4Rt09O7tWXbbYmFv148ZV6tpF15e0rT7HRYdThk+pQw2kPqz&#xA;xGZxEgjTlx41dgBWijftkVTnArsVdirsVdirsVdirwv/AJyf896tpGnaf5c02RrYaorzXtzGzJIY&#xA;oyFESlSPhck8vECnQnJwCvmHLUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV9Jf84v8An/WNSl1DyrqdxJdpaQC80+SVi7xxq6xyR8jU8ayIVHbfK5hL6AytXYq7FXYq&#xA;7FXYq+Zf+ctP+Ui0H/mEl/5O5ZBXg+WIdirsVdiqfeU/IvmrzbNcQ+XrH69LahWnUSwxFQ5IU/vX&#xA;jqKjt0wE0qzzV5L8x+VtWj0nW7X6vfyxpNHErpLySQlVIaMsPtKRiDaspH/OPf5v/wDVg/6e7L/q&#xA;vg4grFNF8neZNa19vL+mWRn1hDKr2vONKGGvqVeRlT4afzYbVF+cPy783eTksm8xWQsjqHq/VkEs&#xA;UpPo8OdfSZwP7xe+INqv8o/lp50832tzc+XrAXsdo6xz/vYYSGcEinrPGDsO2JICozzN+T/5geWN&#xA;FOs63py2tkrrG7CeCVlZzRaiJ364BIFWGZJWbWH5K/mbqGjQ6zZ6MZtNuIRcwzC4tQWiK8gwQyh+&#xA;nbjXI8QVhOSVOfKnk3zJ5s1GTTvL9n9dvIoWuJIvUiipErKhblM0a/akUUrXATSrvNnkrzN5Svor&#xA;HzBZfUrqeL14o/Uil5RliteULyL1U7VriDapPBDLPNHBCpeWVgkaDqWY0AHzOFXpX/QuP5sf9WyH&#xA;/pKt/wDmvI8YVI/OH5S+d/KGlx6nrtpHb2csy26Os8UhMjKzgcUZj9lDiJAq35R/KLz15t0o6rod&#xA;nHPZLK0Bd54ozzQAkcXYH9oYmQCp3/0Lj+bH/Vsh/wCkq3/5rx4wrCvNnlLXPKmrHSdahWC+WNZT&#xA;GkiSDi9ePxIWHbCDapPhV2KvZ/8AnFL/AMmHqP8A2yJv+om2yE+SX1XlSuxV2KuxV2KuxV8y/wDO&#xA;Wn/KRaD/AMwkv/J3LIK8HyxDsVdirsVeyf8AOLOpi2/MG6smai3+nyqi+MkUiSD/AIQPkJ8ksz/P&#xA;Hyq2rfm35FACumolbaVB9v07WcTSk9dvTmNNvHIxOyveDPCJ1gLgTOrOqdyqFQx+guMgrwT8sfL8&#xA;Vj/zkX5xRd47eG4nir1VruaGUAV8FkYZYTsrHv8AnLHUXk816Lp3KsdtYtcBfBriZkP3iAYYKz//&#xA;AJxu0KSH8q5JQxt5dWu55Vn4hjwXjACA1VO8TUqKZGZ3VP8Az3ow1X8rPMJhupdRt73TzeWaE8j+&#xA;5UTxcDVq14LX+Y7jrgHNXxdlyH2t+Vf/AJJ3Rf8AtnN/xtlMuaXxTlyHs/8Azil/5MPUf+2RN/1E&#xA;22QnySiP+csP+Uy0j/tnD/k/JjDkryHy3/ykWl/8xcH/ACdXJFD7a/MvzZc+UvJOpeYLaJJriyEX&#xA;pRShijNLMkXxcSp/b8cpAspfL/5hfnprnnjy6ui6jp1rbItwlys1uZK1RWXjR2b+fLRGkI78pPzm&#xA;8weXIdO8p2FhZy295fKrXEwkEnK5kVCSUYDYe2CUUvor81vOd95O8mXWvWMUM9zBJCiQz8uDerIE&#xA;P2WU1ANcriLKvjvz15z1Lzl5jn13UYoobiZI4/Rg5emqxqFFObOe1Tv1y4CkJBhV2KvZ/wDnFL/y&#xA;Yeo/9sib/qJtshPkl9V5UrsVdirsVdirsVfMv/OWn/KRaD/zCS/8ncsgrwfLEOxV2KuxVm/5Jah9&#xA;Q/NTy7Ny4CS5NuSeh+sRtDToepfIy5K+q/NXlyXU/PXk3Ul5CPR3v5piFqOMsCoAW7Vfj88qB2Sl&#xA;935mEf55afoRcFJdCmYICRSZ7gSb70P7u3PyrhrZUZpPlr6v+bPmDXhD6aXemWEfq9fUkLyq/wDw&#xA;KW8YP0YL2V81/wDORV+bv81tUQSCSO0jt7dKEnjSFXZdx/O7dMthyQ+k/JFvd6N+UOlra25a9t9H&#xA;WeO2jUszTtCZuIUblmdug75WeaV/5XadqUP5ZaLpeu2z2d6tq1rPayEBwgZ1QGh2JiANOowS5q+J&#xA;9SsZLDUbqxkNZLSaSBzQipjYqdj06Zeh9o/lgAPyf0WnE/7jP2a0+y3j38ffKZc0vibLkPZv+cUz&#xA;/wAhE1D/ALZE3/UTb5CfJKO/5yySMeatEcH96bFgy16KJmKmnzJxgrxjQwW1rTwCwJuYQCn2/wC8&#xA;H2ffwyRQ+8fNGvaLoGhXWr624j0y1CG4co0v25FRPgUMTV2HbKQEvmb/AJyB8++Q/Ndtoo8szrPL&#xA;ZPcfWCIJIKLKsfH7aJXdMsiCFeZ+Sf8AlM9B/wC2jaf8n0yR5IfVX/OSHL/lVGo0AI9e15GtKD1l&#xA;36eOVQ5pfHmXIdirsVe1/wDOKMJPnzVJq7JpciU/17iA/wDGmQnyS+p8qV2KuxV2KuxV2KvmX/nL&#xA;T/lItB/5hJf+TuWQV4PliHYq7FXYqmHl3UjpfmDTNTBobG7guQf+MMiv/wAa4Cr9AsoS+ZNb8zxx&#xA;/wDOUtvdO5it7a6h04NsKepbiBq124mSU/RllelX02R03pT8crV8M+a55vNH5oajVjy1PVmt4jWp&#xA;CNP6MYqf5UoMvGwQ+yPNnmrQ/JXlqTVtRV10+zEcSQwKGkYkhERFYqK/M5SBaUi/K/8AMnTfzBg1&#xA;DULayaxfT5xAsbvzd4WTlG78QFFW50XelOu+GQpXy7+dGkrpf5o+YrZRRZLr60PD/SkW4NPplyyP&#xA;JD6t/KuKGb8rfLsQBWOTTYkag4mrJRiKjxrvlUuaXkf5k/8AOPHkryx5I1XXrC+1GS7sY0eFLiW3&#xA;MRLSolGCwxk7NtRuuTEySqRf84pGP/H2pAj95+ipCpoOguIK7/SMM+SvbPzC/Jnyv571O21HV7q+&#xA;gntYfq8a2kkKIU5s9SJIpTWreOQEqV8v+bvLNl5U/NV9C0ySSa2sLy1EElyVZyXWKT4zEFGzP2X8&#xA;csBsIfZHmny1pvmbQLvQ9TDmxvVVZvTIVxwcOpUkNQhlHbKgaS+d/wA7PyX8m+SvJ8WraQ9213Le&#xA;RW1LiVHTi6SOdgiGv7vLIytXkHlB0TzZojyEiNb+1ZyK1AEyk0pvkih9Wf8AOSQ/5BVffBzpcW3x&#xA;fyfvR8X8PpyqHNL49y5DsVdir2//AJxP/wCUz1f/ALZx/wCT8eQnyS+o8qV2KuxV2KuxV2KvmX/n&#xA;LT/lItB/5hJf+TuWQV4PliF0UUsr8IkaR+vFQSfuGKo9fLfmJvs6XeHau0EvTr/LgtVk2g65CvKb&#xA;TrqNenJ4ZFG/zGNqgSKbHrhVGJrOsRxtFHfXCRN9pFlcKe24BpgVCtJI0nqM5aQmpckk18a4VRK6&#xA;xq6xtGt9cLG/20ErhT8xXAqFR3R1dGKupBVgaEEbggjCqJu9W1W8jEd3eT3MankqSyO4BpSoDE77&#xA;4q1aanqVkGFndzWwehcQyNHWnSvEiuKqVzdXN1M01zK88zU5SyMXY0FBVmqemKo2DzJ5it44o7fV&#xA;byGOAUgSO4lVUHggDDj9GClWXOva7dWzWt1qN1PbMwdoJZpHQsOjFWYiuNKo2Wo6hYSNJY3U1rI6&#xA;lHeCRo2KnqpKkVB8MKoweavNC8OOsXo9M1jpcy/CTvt8W2ClS+a4uJ52uJpXlndubyuxZy3iWO5O&#xA;FVY6rqhQIbycoCSF9R6AnqaVxVTlvb2aP0pbiSSOobgzsy8gCAaE9RyOKqIJBBBoRuCMVVXu7uRC&#xA;jzSMjGpVmJBPWtCcVUsVdirsVe3/APOJ/wDymer/APbOP/J+PIT5JfUeVK7FXYq7FXYq7FXnf5kf&#xA;k3pvn3XdOv8AUtQmtrOwhaJra3VfUkLPyr6j8goH+ockJUqK0L8kPyx0e2SFNEhvWUljPfAXLsTT&#xA;rz+H9kbBafecTIqyyGDQ9Gt+MMdrptudyqLHAm3y4jbIqhD518mg0OvadX/mLg/5rw0VXRecPKUz&#xA;cItbsJGpXil1Cxp8g2NKq3uheXNYAmvtPs9RDLwEk0MU9VBO1WDbY2rBvMn/ADjx+WeshnhsX0m5&#xA;YbS2D+mte37pg8X3KMImVeRebf8AnFzzbpyvP5fu4tagXf0GpbXFPYMTG1P9cfLJiavHtS0vUtLv&#xA;JLLUrWWzvIjSS3nRo3X5qwByaENirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVe4/wDOJ0bn&#xA;zfrMgHwLp4Vj7tMhH/ETkJpfUOVK7FXYq7FXYqgtY1rSNGsXv9WvIrGzj+3PO4Ra9gK9SewG5xV4&#xA;t5u/5yp0K0d7fyxp76m4NPrlyTBB81SnqMPnxyYgryHzF+en5m65K7PrEmnwMfhttP8A9GVR4B1/&#xA;en/ZOcmIhDBru8vLyYz3c8lxO32pZXZ3PzZiTklUsVdiqN0vXNa0mb19Lv7iwmH+7LaV4m+9CMFK&#xA;9A8uf85FfmZo7qLi9TV7YUrDfRhjTvSVOElfmxwGAV7N5L/5yX8l63IlrrUbaBePQK8zCS1Y/wDG&#xA;YBeH+zUD3yBgUs/80eTPKPnPTEh1e0ivoGXlbXSECRA24aKZPiAPXY0PeuRBpXzN+aH/ADj/AOYP&#xA;Kpl1LRvU1bQFq7uADcW6jf8AfIv2lA/bUU8QuWRlavJsmh2KuxV2KuxV2KuxVVtLW4u7qG1tkMtx&#xA;cOsUMY6s7kKqj5k4q+k9G/5xv8g6LpMM/nTVib6YASH6wlrbI5FSkZYBnI8Sd/AZVxnolF/8qd/5&#xA;x7/6u8P/AHFIv+aseIq7/lTv/OPf/V3h/wC4pF/zVjxFXf8AKiPyNn/ew6w4jb7Pp6hAy7bGhKt+&#xA;vHiKuP5B/ki32dYlFNjS/t+o8aoceIq7/lQH5J/9Xmb/AKT7f/mjHiKu/wCVAfkn/wBXmb/pPt/+&#xA;aMeIqynyD5H/AC08jXl1d6Lq6tLeRrFL9YvIJBxVuQpxCd8BJKs6tta0e6lENtf288p3EccqOxp7&#xA;KSciqMxV2KuxV5h+av566F5LEmnWAXU/MVP95Qf3MBPQ3DKa178F38eOxyUY2r5X82edfM3mzUDf&#xA;a7fPdSAn0oj8MUSn9mKMfCo+W571y0CkJJhV2KuxV2KuxV2KuxV2Ks08gfm55w8lToun3JudLDEy&#xA;6VcEtA3LqV7xt7r9NciY2r6v/Lv8z/LXnvTTPpz+jfRKPrumSketEehP+XHU7OPpodsqIpLyz87P&#xA;yBiljuPMvk+24XC1kv8AR4h8Ljq0luo6N4xjr+zvsZxl3q+byKbHrliHYq7FXYq7FXYqyn8qlVvz&#xA;J8shgCP0lbGh33EgIP0HBLkr1D/nLR3Ov6AnI8BazMFrsCZACafRkIJeDZYh2KuxV2KuxV2KuxVU&#xA;trm4tbiK5tpGhuIXWSGVCVZXU1VlI3BBxV+h2Y6XYq8V/PP88B5cWXy15clDa9ItLy8WhForD7K/&#xA;8XEf8D8+k4xV8szTSzSvNM7SSyMXkkclmZmNSzE7kk5ahbiqraQie6hhJIErqhI6/EQNq0yMjQJS&#xA;HtUP5V+TkhWN7eSVx1laVwx+YUqv4ZoT2hlvm5PhRbufyt8oS2rRRWzQSlSEnWSRmU70NGYqevhj&#xA;HtDKDZKTii8QkQo7IaEqSCR022zfguIrWFqbu+t7UNwNxKkXLrTmwWv44Jy4QT3JAeyQ/lP5SjjC&#xA;uk8rAULtKQSfGihRmiPaOXycnwgtu/ym8rS28iW6ywTEH05BIWAam1Q1aiuGPaOQHfdTiDxbN84r&#xA;sVRelavqmkX0d/pd3LZXsVfTuIHKOK7EVXse4wK+x/yi/NjTvPmkcXAt9eskX9I2mwDdvWh3qY2P&#xA;/AnY9iapRpLy7/nIf8nUtfW85+X4OMDEvrVnGNkZj/vSg8Cf7wDp9rxpKEuivn7LEOxV2KuxV2Ks&#xA;q/Kn/wAmV5Z/7aNv/wAnBglyV6d/zlp/ykWg/wDMJL/ydyEEvB8sQ7FXYq7FXYq7FXYq7FX6JZjp&#xA;ebfnf+aSeSfLwgsXU+YNSDJYqd/SQbPcMP8AJ6KD1bxAOSjG1fHE00s0rzTO0ksjF5JHJZmZjUsx&#xA;O5JOXIW4qqfVbr/fL/8AAn+mR4gmkXo8bR61YerG1BcRMykdVDgnY/LIZTcD7kjm+js5ZzXYq+ZJ&#xA;QRK4IAIYig2A39860cnBRehMF1vT2PRbmEn6JBkM30H3FY830hnKuc7FXzFnXOA7FXYqmnlnzLq/&#xA;lrW7XWdJmMN7atyU9VZTsyOO6sNiMBFq+3fJXmvSfOvlS21e2CPDdxmO8tWo/py0pLC4PhXuN1oe&#xA;hykikvkv86Py7PknzfJb2yn9DX4Nzpjmp4oT8cJPjE23+rxPfLYm0MCySuxV2KuxVlf5UAn8yvLP&#xA;/bRt/wDk4MEuSvTP+csyP8R6Cu9RZyHoaby+P0ZCCXhGWIdir0D8nvyruPPutypNI9totgFe/uUA&#xA;5ktXhFHXbk1Dv2H0ZGUqV9Sab+Un5aadZraQ+W7CVFFPUuYEuZT7mSYO/wCOVcRS8y/OD/nHrRW0&#xA;i513yfbGzvrRDLcaYhLRTRqKuYlNSjgb8RselK5OM1fNGWIdiraryYLUCppUmg38Tir9C769tbGy&#xA;uL27kENraxvNPK3RY41LMx+QGY6Xwr+YHnO/84+arzXLuqrK3C0g7RW6VEcY+jc+LEnLwKQx3CrO&#xA;/wAn7a3m8xXEksavJBbl4Sd+LF1Uke9DTNd2lIiArqW7CN3sWaJyXYq7FXYq7iKg03HQ998KtFVJ&#xA;qQK4q3gV2KsU1D8sPKF2p4WzWkhqfUgdh/wrc0/DM2Gvyx621nFEvOfOP5fX/l9frcUn1rTSQvrU&#xA;o6E9A6+/iPwzaabWRy7cpNE8dMTzNa3Yq9V/5x5/MF/LXnFNKu5aaPrjLbyhj8MdxWkMu/SpPBvY&#xA;1P2chMWFfQH52eRl83eRbuCGPnqmng3mnECrGSMHlGKb/vEqtPGnhkImil8VZch2KuxV2Ksu/KJA&#xA;/wCZvloEMwF/C1FpX4TWu/YU39sEuSvRv+csmP8AinRF5AgWLkJ3BMx3PsafhkIJeF5Yh2Kvqr/n&#xA;FQ2f+AdQEdPrI1KT6wNuVDDFw/2NK0965VPml7RkFaYqFJYgKBVielPfFX57akbVtRumtBxtTNIb&#xA;dfCPkeA/4HMhCHxVdD/fJ0+0OpAHXuWqPvxV9V/85P8Am19K8mW+h278bjXJSstDQ/VoKPJ0/mdk&#xA;HuK5VAbpfKWWodirOfygubaLzJNHKwWWe3ZIK92DKxA9+IOa7tKJOMV3t2E7vZM0TkuxV2KuxVim&#xA;q/mX5c0zUJrC4E7T27cZCkYK167EsMzcehyTiJCt2s5QCoRfmz5Rc0Z54hXq8Vf+IlskezsvkjxQ&#xA;yHSfMeh6upOnXkdwQKsgJVwPEowDD7sxcmCcPqFMxIHkmOVMnYqh9Qsbe/sZ7K4XlBcI0bj2YUqP&#xA;cdsnCZiQR0QRb5wvbWS0vJ7ST+8t5Hift8SMVP6s6mEuIA97hEKOSQ4Eggg0I3BGKvub8q/N3+K/&#xA;Iml6vIwa7aP0b6na4hPCQnw5U5j2OUSFFL5P/Obyovln8xNVsYU9OzncXlkoFAIrj4+K+yPyT6Mt&#xA;ibCGE5JXYq7FWZfk4vL80PLYqV/0xDUewJp9ORlyV6B/zljX/FujfCAPqBo/c/vn2PywQS8NyaHY&#xA;qzj8pvzQv/IOuvciM3Ok3oWPUrMGjMqk8ZIyduacjSuxqR7iMo2r6g0z88Pyu1CzF0uvQW21Xguu&#xA;UMqnw4sN/wDY1yvhKXmP5v8A/ORGl3mkXGgeTpHna8VobzVSrRqsTDiyQBuLlmG3IjYdK9RKMO9X&#xA;zrliHYqr6eK39sOlZU3H+sMVelf85H+YDqv5mXVsrEwaTDFZoD05AerIQP8AWkpX2yMBsry7JK7F&#xA;XYqqC6uRSkrinSjHI8ITb6UtGLWsLHqY1Jr7gZysuZc0KuRS7FXz551NfNmqmpP+kuKn2NM6bS/3&#xA;Ufc4c+ZSXMhgitJu57PVLS6t2KTQyoyMPZhsfY9DkMkRKJBSDRfSeco5zsVdir5886oU82aqD1Ny&#xA;5+hjUfrzptKf3Ufc4c+ZSXMhg7FX0T/ziZ5hf/c75dkb4B6eoW6eBNIZj/yayuYS1/zlpoXx6Bry&#xA;L1EtjcNXwpLCAPpkrjAq+d8sQ7FXYqzP8mf/ACaPlv8A5i1/4i2RlyVnn/OWFP8AGWj+P6OH/J+T&#xA;BDkl4hk0OxV2KuxV2KuxV2KojTf+Oja/8Zo/+JDFUx866i2pecNcv2IP1q/uZQRSlGlYilPbAFSb&#xA;CrsVdirsVfS2nszWFszbM0SFh7lRnKT+oucOSvkEuxV4b5w8t+YpPMuoTJp1zLHPOzxvHG0oIb4g&#xA;AUDDpnQ6bPjGMCxycScTaTr5W8zMwUaTeVJpvBKN/pXL/wAxj/nD5seE9zKfKn5Za7JqdtdapCLW&#xA;yhdZXR2BkfiahQqk0qetaZh6jXw4SImy2QxG93sOaNyXYqtkkSONpJGCxoCzsegAFSThAtD5w1m/&#xA;/SGrXl9vS5meRQeoVmJUfQM6nFDhiB3BwpGyg8sQ7FXqH/ONuova/mrYwLWl/b3Nu/yWIz/rhGRn&#xA;yV7V/wA5N2CXP5YSTmlbG9t51r4sWh2/5G5CHNL5Fy1DsVdirMfycdE/NDy2XYKDeooJ8WBAH0k5&#xA;GXJXof8AzljbXA81aLdGNhbvYmJJafCXSZ2Za+IDg/Tggl4Xk0OxV2KuxV2KuxV2KozRbea51mwt&#xA;4FLzTXEUcaKCSWZwAABgVCyPzkZ6U5EmnWlThVbirsVdirsVfS9nT6nBSgHppQDp9kdM5OXMucFb&#xA;IpdirsVdirsVdirsVeYfmT59tpreXQ9Lk9TmeN7cqfh4jf00I61/aP0Zt9DoyDxy+Dj5MnQPMc27&#xA;Q7FXYqz38iGZfzZ8vFSQfVmFRtsbeQEfSMjLkr6V/P2L1fyj8wLWlEt3/wCAuom/hlceaXxblyHY&#xA;q7FVS2ubi1uYrq2kaK4gdZYZUNGV0PJWB8QRir6N8s/85SaDPpsVv5u0qY3sYAe4tEjlhkYCnMxy&#xA;MhQnwHLKzBKdf9DI/lJ/ywXn/SJD/wBVMHAVd/0Mj+Un/LBef9IkP/VTHgKu/wChkfyk/wCWC8/6&#xA;RIf+qmPAVd/0Mj+Un/LBef8ASJD/ANVMeAq7/oZH8pP+WC8/6RIf+qmPAVd/0Mj+Un/LBef9IkP/&#xA;AFUx4CrMvIHnryX56hvZdFs2VbBo0n+swRxmsoYrx4l6/YORIIVl8djZRuHjt40cdGVFBH0gYFfn&#xA;xd20lrdTW0n95BI0b/NCVP6syEKWKuxV2KuxV9LWBrY2x3NYk3PX7I65yk+Zc4K+QS7FXYq7FXYq&#xA;7FVk0STQvE9eEilGoaGjChoRhBo2h4h538h3Pl6QXMDGfTJW4xyH7cZ6hZKCnyPfOg0mrGXY7ScW&#xA;eOmKZmtbsVdirPvyGgln/Nny+sTBSsk0jMQSOKW8jMNvECg98jLkr6O/5yDvRa/lNrQoC1wbeFa/&#xA;5VxGT/woOVx5pfGeXIdirsVdirPfy/tvKsfk7zjq3mDSv0ibSG2t9NkEjRtHc3TSKvGhp+yHJoaB&#xA;ffIlWBZJXYq7FXYq7FXYq+kf+cSP+Od5l/4zWn/EZcrml9A5Wr4Z/NnR20j8yPMNmU4Kb2SeJewj&#xA;uD66U9uMgy+PJDE8KuxV2KuxV9L2IIsrcE8iI0HI9/hG+cnPmXOCtkUuxV435u89+abbzFf2lrfm&#xA;K2t5mSJESPYL4krU/Tm902kxmAJG5caeQ2lMf5i+c42LLqbknb4kiYda9GQ5edFiP8LDxJd6cab+&#xA;b/mCBgL6GG8jr8RA9KSnsV+H/hcoydmwPIkMxmL1PQ9as9Z0yHULQn0pQaq32lYGjK3uDmny4jjk&#xA;YlvjKxaPypkhdV0221PTriwuV5Q3CFG70r0Ye6ncZPHMwkJDogiw+c7+znsb2eznFJreRopB7qaH&#xA;OphISAI6uERShkkOxV7J/wA4s6S915/utQP91p9jIa/8WTOqKP8AgeeQnyS9F/5yq1T6v5G0/T1N&#xA;Hvr9WYeMcMbk/wDDsmRhzV85+ZfIvmzyzBYz67psljFqKGS0Zyh5AAEghGYow5CqvQ+2WA2hIsKu&#xA;xV2Ks11L/cb+Uuj2n+7de1O51F6dfRskFrED7eo8tMj1VhWSV2KuxV2KuxV2KvpL/nEgn9G+ZF2o&#xA;JrU9BXdJO/0ZXNL6AytXy/8A85V+XJLbzPpuvxr/AKPqNt9XlYDb1rdidz/lRutP9XLYFXhuTQ7F&#xA;VS2tbq6mWC1heeZvsxRKXY08FUE5GUgBZ2SAjT5a8xhSx0q8CqaMfq8tAff4ch4+P+cPmnhPc+hb&#xA;Hn9St+a8X9JOS+B4io3zmJ8y5gV8il2KvnzzqVPmzVeI4j6y+3vXc/Sc6bS/3Ufc4c+ZSXMhg7FX&#xA;sP5OpKPLl0zVEbXbenXptGlSM0faZHiD3OTh5M8zWtzsVeEfmRbCDzlqAXpIY5PpeNSfxzo9DK8Q&#xA;cTIPUxnMtrdir6r/AOcXPLDad5KutblFJdbuP3X/ABgtS0a/8lDJlUzul5//AM5U+YPrnnKw0WNw&#xA;0WlWvOVQfsz3TcmBH/GNIz9OSgNlY/qnmXWvzD8hSLqlwbrXvKJN1EaANPpswjimZgoHJ4HjRmY/&#xA;sscNUUPNMkrsVdirNfzVH1TWNM8vgU/w/pVnZSqOn1h4/rNwfn6s7A/LIxVhWSV2KvbfIn/OP2k+&#xA;Y/y2/wATXGrSwahcxzy2iRhDbxiFnSk1QWYkx70YU98gZbpeJZNDsVdir6R/5xI/453mX/jNaf8A&#xA;EZcrml9A5WrCfzi8lN5v8h32nQLy1C3peacO5nhB+Ae8iFk+nJRNFXxGysrFWBDA0IOxBGXIdir0&#xA;v8lY4jPq0hUGVVgVGpuFYyFgD7lRmp7UJqPxb8PV6lmnch2KuxV2KsG1v8qtP1TU7m/+vTQyXL+o&#xA;ycVcAnrStDTNji7QlCIjXJpliBNpafyVg9So1ZhH/L6Ar9/qfwy3+VD/ADftR4PmmFh+T/l+CQPd&#xA;zz3YFP3ZIjU+NePxfjlc+0pnkAEjCGbWlpa2dtHbWsSw28Q4xxoKKBmvlIyNnm2gUq5FLsVeC/mJ&#xA;fQXvm+/kgYPGhSIONwTGgVv+GBzo9FAxxC3EyG5MczLa0x8uaDf+YNdsdFsF5Xd/MsMfcCp+J2p+&#xA;yi1ZvYYCVfdFpb6P5P8AKUcJcQ6VolmA8h6+nAlWY+LNSvucp5pfDXmrXp/MHmTUtbnBWTULiScI&#xA;TXgrsSiV2+wtF+jLgEKvk/zHJ5d8xWmqiP14ImKXlqfszW0oMc8TA7fHGxG/zxIVE+e/KknlzXXh&#xA;hDyaReKt3ot6QQtxZzKJInVj1IVgG98QVY7hVkH5faMuted9E01xWGe7iNxXoIY29SU/RGrYDyVB&#xA;+a9ZbW/M2q6ux/3vu5rhR4LI5ZR9C0GIVK8KuxVnv5Ta3fyapP5PlvJU0jzLbXGn/VzI3opdXERE&#xA;EoSoXl6qote4ORkrBJYpIpXilUpJGxV0OxDKaEHJKtxV2KvpH/nEj/jneZf+M1p/xGXK5pfQOVq7&#xA;FXyX/wA5GflzJ5f8zt5hsYaaNrTl24iixXZFZEP/ABkoZF/2Q7ZbAq8hyaHof5Panp9pd6lBc3Cw&#xA;S3CRNCsjBVb0y/Lc7VHIbfPNX2njkQCBybsJD1NL+xkr6dzE9OvF1NPuOagwI6ORYXi5tiaCVK/6&#xA;wwcJW1TIpdirsVdirsVdiqT33nDyxYxs8+p29V2KRuJHqO3BOTfhl8NNklyiWBmAwPzZ+a4ubd7L&#xA;Q0eISArJeyUVqHYiNRWlf5jv7d82Wn7Oo3P5NU8vc82zatDsVfTX/OM35atYWD+c9Ti43V8hj0mN&#xA;huluftzb95aUX/J/1sqmeiXf85Q+fUs9Ig8nWcgNzqHG41KhqUgjYNGh8DI68vkvvjAdVfMuWodi&#xA;rO0/ODX7nTLHRtfsrHXdEsYVt4bK6hCOqIOAaOeLhLHIEHHkD8wcjwqp/oD8v/MPxaBqraBqL/8A&#xA;Sp1pgbcsf2Yb9AFA7D1kX3bGyrJfJX5aedvLtr5k8yX+lyRrp2k3cenyxsknqT3MfpepCY2bmiQy&#xA;O/NdsBIV5Hk1diqpbW1zdXEdtaxPPcSsEihiUu7MegVVqScVeieXvL+i+RNXsdc87XAOo2UqXNt5&#xA;XtOM13zX4o2um5CO3Cni3BiXP8oyJN8lV/OPnb8o/MvmK6v5PLOoWcdwQxvbO6hhlc03d7Zo5oQx&#xA;PWj79euIBCpL+h/ymvd7TzFqWknb4NRsFnWvf95ayk0/55/RjurI/I/5F2PmzUZY7Dzdp91YQR+p&#xA;K9qk5ul5GicredIKA9zy2wGVK9U/5xy8vN5fk846RJKlxPYaklrJcR/ZcRIwBp26mo7HbIzKXs2Q&#xA;V2KpZ5l8t6T5k0S60bVoRNZXa8XHRlYbq6HsyncHCCr4m/MLyBrXkjzBJpWor6kRq9leqpEc8XZl&#xA;r0I6MvY+1CbgbQxnCrsVR2hcf05p3KnH6zDWvSnqDK830H3FlHm+j85VzXYq+ZnkdJpCjMlWPQ79&#xA;fbOtA2cFG6FNMde0482LfWodyT3dRleYDgPuKY830ZnLOa7FXzEQQSD1GxzrnAdirsVen/kn+UV1&#xA;5z1dNR1KJo/LNk9biQ1X6xIu/oRnw/nI6DbqRkZSpX0/54846N5H8qzardKqxW6CKxs0onqy0pHD&#xA;GB0G29B8KgntlQFpfEGv67qOva1eaxqUnq3t9IZZm7VPRVHZVFFUdhlwCEBhV2KuxV2KvZh+Z3mH&#xA;yB+WmkeU7Xg+qanbT3krSg8rG2vXJgRApFZHUtL8f2eQ2yFWUvGkRndUQcnYhVA7k7DJoeuaz/zj&#xA;tqvl7SY9Z8x65Z2OlxhTqLxpNNLEWICpEiqBK7MePVR70yHGrGLrz9Y6PBJp/kSzfSIXUpPrU5D6&#xA;pOpFD+9X4bdT/JDT/WOGu9WFO7u7O7FnYksxNSSepJyStYq7FUTp2q6nplz9a028nsbniU9e2keK&#xA;Ti3UckKmhxV9Jf8AOJzu+geYHdizteRlmJqSTGaknKppe75BXYq7FUg87+R9B85aHJpOsRcoz8Vv&#xA;cJQSwyU2kjYg0Pj2PQ4QaV8dfmJ+WXmPyNqZt9RiMthIxFlqUYPozL28eD06ofxG+Wg2hiOSVysy&#xA;sGUkMDUEbEEYqye3/MvznDGIxf8AqKoABkjjZtv8orU/TmHLQ4j0bPFkvuPzN84T2z27XaoHFDKk&#xA;aq9D4EDb6MY6DEDdL4smK5mNbaO8bq6MVdSGVhsQRuCMBCsvt/zW83xKFaWGagpWSIVPv8HHfMI9&#xA;n4i2+LJ13+anmq5tZbctBEJVKGWNCHAOxKksaH6MY9n4wb3U5Sw/M5qdir1H8pPyP1jzjcQ6nqSP&#xA;Y+WVarzn4ZbgDqkAPY9C/QdqnISlSvqa+vvLHknywZpjFpmiaZEFjjUUAA+yiL1Z2P0k5XzS+O/z&#xA;T/MvU/PfmBr2UNBplvVNNsCaiNO7NTYyPSrH6Ogy2IpDDMkrsVdirsVZH5A8v2mteY4l1ElNFsEe&#xA;/wBZlH7NnbDnIPm+0a+7DASqNfTPNH5h+Y9T1yKBYbeSUyXd9OwgsrSIACNHmaiKI4wqqv2qDYYO&#xA;Sooax5K8okDQYl8ya+lD+mr2Mixgcd7W0feVgekk21RUJjuVQ/mv83fPnmrRodH1q/E1lEyyOqRp&#xA;E0rp9kylAOVK9Old+tMREBWG5JXYq7FXYqqW1tcXVxHbW0TzXEzBIoY1LOzMaBVUbkk4q+x/yI8g&#xA;X/k7yWYdUQR6rqMxu7mIGpiUoqxxMRtVQtT7kjKZGyl6PkVdirsVdiqF1XSdM1awl0/U7WO8spxx&#xA;lt5lDow+R7jse2Kvnr8xf+cYLiNnv/JEnqxbs2kXL0ce0EzbMPaQ1/yjlgn3q8H1XSNU0m9ksdUt&#xA;JbK8i+3BOjRuPejAbHscmhCYVdirsVdirsVdiqdeV/JfmjzTefVNB06W9kBHqOo4xR1/35K1ET6T&#xA;gJpX0P8Alv8A840aTpTQ6l5tkTVL9aOunJX6pGe3MmhmI8KBfZsrM0vcFVVUKoCqooqjYADsMgrm&#xA;RG48lDcTyWorQ+IxVQXTtPWVpltohMzc2kCKGL/zE0rX3xVa2k6U1w1y1nA1w/25jGhc/NqVPTFV&#xA;p0XRjKJjYW5mHSQxJyH00riq2XQtElfnLp9tI42DNDGTt7kY2q+XSNJlThLZW8ideLRIR9xGKrTo&#xA;eim2ktTp9sbWUUlg9GP02FQaMtKHcVxtW20bR3sf0e9jbtYf8shiQw9a/wB3Tj19sVQ48qeVxF6I&#xA;0exEVKen9Wh40PanGmG1aTyn5WSIxJo1isRqDGLaEKa9duNMbVyeUvKiRNEmi2CxPXnGLaEKaihq&#xA;ONDUY2qmPJXk0dNB04f9GkH/ADRjZVZ/gXyR6zzf4e0z1pTWST6nb8mJ3qx4VONlVq+QfIiymVfL&#xA;mliVvtSCytwx+Z4Vxsqj9P0DQdOcyafptrZu2xe3hjiJ+lFGC1R+KuxV2KuxV2KuxV2Kpbrvlry/&#xA;r9r9V1rT4L+D9lZ0Vyp8UY/Ep91OEFXlnmD/AJxb8i3xaTSbq70iQ/ZjDC4hH+xk/ef8lMkJlWB6&#xA;n/zif5uidv0ZrFhdxipBnE1u5/2KrOv/AA2S41SO7/5xn/NGBWaOC0uqCoWG4AJ9h6gjx4whbb/8&#xA;40/mlK6JJbWtvyDEtJcKQvGnX0xJ9qu2PGFZRo//ADiZrjyV1nXbW3iABpZxyTsT3FZPQA+dD8sH&#xA;Gl6H5d/5xt/LXSXWa6huNYmXcfXZP3YPtHEI1I9m5ZEzKvTbHT7HT7WO0sLeK0tYhSOCBFjjUeyq&#xA;ABkVV8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:dbf0ec67-f782-db41-bbf2-6efc4dafb8dd</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:dbf0ec67-f782-db41-bbf2-6efc4dafb8dd</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:7a7f242f-4bad-4922-9fb7-d9686c86aa85</stRef:instanceID>
            <stRef:documentID>xmp.did:fcc9ff7d-a9f0-e649-9b2e-119eb0a0ed3d</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fcc9ff7d-a9f0-e649-9b2e-119eb0a0ed3d</stEvt:instanceID>
                  <stEvt:when>2017-10-30T12:30:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dbf0ec67-f782-db41-bbf2-6efc4dafb8dd</stEvt:instanceID>
                  <stEvt:when>2017-10-30T12:54:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -815.334 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 815.334 li
905.963 815.334 li
905.963 0 li
cp
clp
253.066 92.4102 mo
254.631 92.4492 256.193 92.4873 257.757 92.4873 cv
260.011 92.4873 261.795 92.3994 263.385 92.2061 cv
263.919 92.1397 264.457 92.1104 264.992 92.1104 cv
266.174 92.1104 267.354 92.2656 268.5 92.5781 cv
269 92.7178 269.695 92.7822 270.568 92.7822 cv
272.053 92.7822 273.864 92.5879 275.775 92.3789 cv
276.783 92.2705 277.785 92.1621 278.784 92.0723 cv
279.966 91.9356 281.503 91.8633 282.992 91.8067 cv
284.161 91.8145 li
285.594 91.8838 287.048 91.9151 288.504 91.9151 cv
290.267 91.9151 292.038 91.8711 293.797 91.8067 cv
295.187 91.7989 li
296.446 91.8242 297.375 91.8369 298.31 91.8369 cv
300.802 91.8369 303.004 91.7442 305.041 91.5508 cv
305.457 91.5098 306.274 91.4629 306.695 91.4629 cv
308.767 91.4629 310.721 91.8789 312.484 92.6397 cv
313.531 92.6016 314.638 92.5781 315.811 92.5781 cv
317.73 92.5781 319.65 92.6348 321.569 92.6914 cv
323.219 92.7432 324.87 92.7969 326.528 92.7969 cv
327.978 92.7969 329.434 92.7559 330.893 92.6143 cv
335.504 92.1621 339.973 91.961 345.259 91.8008 cv
346.061 91.793 li
347.626 91.793 349.188 91.8965 350.756 92.0098 cv
351.682 92.0742 352.607 92.1543 353.532 92.1543 cv
354.513 92.1367 355.734 92.0489 356.958 91.9717 cv
358.274 91.8887 359.599 91.8067 360.915 91.7627 cv
360.932 91.7627 li
363.268 91.7627 365.439 92.2188 367.363 93.0401 cv
371.007 92.9082 374.568 92.9082 378.047 92.9053 cv
383.28 92.9004 388.226 92.8955 393.051 92.4746 cv
393.433 92.4414 393.815 92.4229 394.193 92.4229 cv
394.893 92.3223 395.583 92.2705 396.277 92.253 cv
397.762 92.1446 399.253 92.1006 400.737 92.1006 cv
402.527 92.1006 404.311 92.168 406.101 92.2324 cv
407.56 92.2891 409.019 92.3457 410.482 92.3457 cv
412.085 92.3457 413.357 92.2705 414.483 92.1104 cv
415.268 91.9893 416.089 91.9356 416.822 91.9356 cv
419.124 91.9356 421.283 92.4571 423.189 93.3906 cv
424.105 93.3858 425.035 93.3828 425.964 93.378 cv
430.194 93.3604 434.185 93.3467 438.107 93.1123 cv
438.375 93.0967 438.641 93.086 438.91 93.086 cv
439.383 93.0352 li
441.429 92.8926 li
444.157 92.6709 447.214 92.5655 451.13 92.5655 cv
452.716 92.5655 458.852 92.6319 460.338 92.6319 cv
463.781 92.6319 466.373 92.5371 468.706 92.3174 cv
469.4 92.2403 470.047 92.2061 470.647 92.2061 cv
471.58 92.2061 472.483 92.3223 473.372 92.4824 cv
473.519 92.2168 li
474.504 91.8887 475.49 91.5615 476.24 92.4512 cv
476.38 92.6377 476.334 93.0137 476.38 93.2959 cv
476.145 93.293 li
476.657 93.4551 li
478.138 93.3653 479.62 93.2901 481.083 93.2647 cv
481.125 93.2647 li
482.862 93.2647 484.401 93.3701 485.937 93.4815 cv
486.837 93.5489 487.731 93.626 488.631 93.626 cv
492.525 93.4912 496.486 93.2442 500.426 92.9961 cv
503.512 92.8047 li
504.924 92.71 506.418 92.666 507.916 92.666 cv
509.666 92.666 511.416 92.7227 513.162 92.7822 cv
514.613 92.8311 516.054 92.8828 517.505 92.8828 cv
519.308 92.8828 520.732 92.7969 521.978 92.6094 cv
522.625 92.5137 523.681 92.4307 524.34 92.4307 cv
526.643 92.4307 528.801 92.9571 530.707 93.8994 cv
537.963 93.8428 li
538.385 93.8428 538.742 93.8428 539.093 93.8223 cv
539.684 93.7989 li
541.446 93.7783 543.434 93.7188 545.467 93.626 cv
545.416 93.3887 li
545.275 92.0283 546.963 92.3565 547.761 92.2168 cv
548.651 92.0742 550.246 90.5752 550.481 92.5908 cv
550.517 93.0166 550.41 93.2364 550.229 93.3526 cv
553.354 93.1533 556.272 93.1172 558.531 93.1172 cv
566.604 93.166 li
569.279 93.166 572.433 93.1221 575.528 92.7998 cv
575.984 92.7539 576.827 92.7149 577.288 92.7149 cv
579.546 92.7149 581.67 93.2051 583.558 94.0908 cv
584.539 94.0567 585.542 94.0156 586.546 93.9766 cv
589.934 93.8428 593.321 93.7139 596.682 93.7139 cv
598.958 93.7139 601.224 93.7725 603.478 93.9199 cv
604.251 93.9639 605.129 93.9873 606.006 93.9873 cv
606.888 93.9873 607.765 93.9639 608.646 93.9121 cv
611.153 93.8379 613.267 93.708 615.377 93.5821 cv
617.416 93.461 619.518 93.3574 621.649 93.2822 cv
621.889 93.0762 622.124 92.875 622.377 92.7793 cv
622.751 92.6377 623.173 92.7324 623.549 92.7324 cv
623.083 93.2461 li
623.85 93.2285 624.599 93.1924 625.379 93.1924 cv
626.664 93.1924 627.949 93.2178 629.23 93.2822 cv
630.082 93.3213 630.938 93.3389 631.789 93.3389 cv
633.374 93.3389 634.946 93.2881 636.518 93.2383 cv
638.199 93.1875 639.875 93.1377 641.552 93.1299 cv
641.947 93.1045 642.351 93.0918 642.729 93.0918 cv
644.943 93.0918 647.058 93.5615 648.955 94.4541 cv
656.277 94.2686 663.755 94.0772 671.265 93.8477 cv
672.285 93.835 li
679.854 93.6592 687.381 93.4912 694.911 93.3604 cv
695.436 93.3526 li
697.69 93.3526 699.806 93.8164 701.695 94.6504 cv
703.145 94.625 704.673 94.6065 706.202 94.586 cv
710.57 94.5293 714.935 94.4727 719.304 94.2998 cv
719.942 94.2862 li
720.78 94.2862 721.557 94.3565 722.275 94.4649 cv
723.803 94.1416 725.148 94.0469 726.039 93.9873 cv
726.487 93.9561 li
728.433 93.7725 730.413 93.6211 732.28 93.6211 cv
732.797 93.6309 li
733.856 93.6719 734.916 93.7422 735.979 93.8164 cv
737.101 93.8916 738.225 93.9766 739.35 93.9766 cv
740.544 93.9766 741.751 93.8916 742.954 93.8115 cv
744.048 93.7393 745.148 93.6699 746.237 93.6309 cv
746.733 93.6211 li
748.705 93.6211 750.588 94.0078 752.296 94.7071 cv
753.781 94.5547 755.414 94.4209 757.176 94.4209 cv
759.001 94.4209 760.686 94.5674 762.319 94.8672 cv
762.484 94.8985 762.857 94.919 763.327 94.919 cv
764.252 94.919 765.172 94.8496 766.088 94.7901 cv
767.399 94.6992 768.706 94.6192 770.023 94.5987 cv
773.328 94.5987 776.594 94.3457 779.66 94.0723 cv
781.11 93.9512 782.495 93.9043 783.872 93.9043 cv
785.625 93.9043 787.372 93.9824 789.114 94.0694 cv
790.425 94.1338 791.732 94.2041 793.048 94.2041 cv
794.216 94.2041 795.128 94.1416 795.923 94.0127 cv
796.627 93.8994 797.673 93.8115 798.386 93.8115 cv
800.626 93.8115 802.728 94.3125 804.595 95.2158 cv
811.001 95.0684 817.429 94.919 823.826 94.7383 cv
824.091 94.7354 824.271 94.7354 824.46 94.7354 cv
820.62 72.9629 816.816 51.1905 812.926 29.418 cv
812.223 25.668 811.707 21.9151 810.252 18.2578 cv
808.376 13.4737 805.422 9.72073 801.764 6.4844 cv
797.075 2.35745 790.836 1.6553 785.021 .0605733 cv
784.693 -.0790752 784.224 .0605733 783.849 .106472 cv
778.362 1.18557 772.78 1.37405 767.388 3.10842 cv
766.027 3.57815 764.62 3.81253 763.213 4.14065 cv
755.1 5.78225 746.939 7.42385 738.78 9.01858 cv
738.31 9.11135 737.419 9.01858 737.372 8.8301 cv
737.138 7.89358 736.763 7.7051 735.871 7.98635 cv
730.056 10.002 723.959 9.72073 718.05 11.3155 cv
714.439 12.2549 710.827 13.1924 707.17 13.8477 cv
703.604 14.5059 700.181 15.7705 696.43 15.7705 cv
692.818 15.7705 689.113 17.3184 685.456 18.1631 cv
684.658 18.3516 683.72 18.7715 683.626 17.3653 cv
683.626 17.2256 682.922 17.0371 682.595 17.1309 cv
680.061 17.6934 677.53 18.3975 674.997 18.8672 cv
672.511 19.2881 670.026 19.4297 667.587 19.8047 cv
666.039 20.0391 664.444 20.4619 662.944 20.8828 cv
661.583 21.2569 659.99 21.4922 659.052 22.3848 cv
657.456 23.8379 656.191 22.4317 654.736 22.7129 cv
647.748 24.2588 640.761 25.5264 633.727 26.8858 cv
633.163 26.9795 632.6 27.1211 632.038 27.3096 cv
631.193 27.5908 630.771 27.4024 630.537 26.4658 cv
630.49 26.2774 629.599 26.1348 629.13 26.2305 cv
621.11 27.8233 613.091 29.418 605.071 31.0127 cv
604.649 31.1084 li
595.457 32.9824 586.311 34.8584 577.072 36.7354 cv
576.603 36.8282 575.619 36.7354 575.619 36.5957 cv
575.478 35.1866 574.586 35.6094 573.743 35.7979 cv
569.1 36.6416 564.503 37.8135 559.813 38.376 cv
550.809 39.502 542.086 42.7842 532.941 43.7705 cv
525.061 44.6612 517.276 46.7725 509.397 48.2715 cv
508.882 48.4131 507.85 48.4131 507.85 48.2715 cv
507.663 47.1465 507.052 47.0537 506.021 47.335 cv
496.829 49.9131 487.308 50.5244 478.068 52.9151 cv
470.096 54.9795 461.983 56.2442 453.963 57.793 cv
453.447 57.8858 452.556 57.7461 452.51 57.5576 cv
452.275 56.6211 451.805 56.4785 450.961 56.7598 cv
444.301 58.9639 437.408 59.0137 430.655 60.6055 cv
425.449 61.919 420.196 63.1866 414.943 64.3115 cv
412.269 64.875 409.503 64.875 406.831 65.3906 cv
403.875 65.9072 400.968 66.751 398.059 67.4063 cv
397.685 67.502 396.934 67.4063 396.888 67.2666 cv
396.747 66.0928 396.09 66.0459 395.058 66.3272 cv
385.584 69.001 375.782 69.6104 366.216 72.1446 cv
358.336 74.2071 350.224 75.3789 342.203 76.9737 cv
341.687 77.0694 340.797 76.9278 340.749 76.6924 cv
340.515 75.709 340.045 75.6133 339.155 75.8946 cv
332.26 78.1944 325.038 78.0059 318.144 79.9756 cv
307.217 83.0703 296.008 84.1026 284.987 86.8223 cv
284.096 87.0576 283.205 87.3848 283.111 85.9785 cv
283.111 85.8389 282.313 85.6973 281.938 85.7442 cv
279.266 86.3526 276.639 87.1035 273.919 87.5733 cv
271.199 88.0899 268.384 88.1358 265.664 88.6992 cv
261.021 89.6387 256.378 90.668 251.829 91.9356 cv
251.19 92.1133 250.541 92.2061 249.9 92.3584 cv
250.955 92.374 252.011 92.3848 253.066 92.4102 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.188235 .184314 .239216 rgb
f
866.43 144.377 mo
866.399 140.704 866.524 137.127 865.771 133.517 cv
864.83 128.716 862.664 124.759 859.776 121.12 cv
856.073 116.475 850.392 114.779 845.245 112.299 cv
844.931 112.175 844.46 112.206 844.115 112.206 cv
838.841 112.299 833.568 111.548 828.234 112.299 cv
827.574 112.395 826.915 112.425 826.192 112.487 cv
825.534 112.521 824.874 112.521 824.185 112.521 cv
816.338 112.74 808.397 112.929 800.551 113.083 cv
800.08 113.083 799.295 112.864 799.265 112.645 cv
799.201 111.798 798.888 111.483 798.039 111.641 cv
792.265 112.552 786.615 111.325 780.839 111.798 cv
777.326 112.11 773.778 112.395 770.201 112.395 cv
766.779 112.425 763.421 113.053 759.906 112.425 cv
756.516 111.798 752.812 112.645 749.266 112.833 cv
748.481 112.864 747.539 113.147 747.664 111.798 cv
747.664 111.672 747.099 111.421 746.724 111.421 cv
744.276 111.483 741.795 111.767 739.348 111.767 cv
736.994 111.767 734.64 111.483 732.286 111.421 cv
730.811 111.421 729.241 111.548 727.798 111.672 cv
726.448 111.798 724.91 111.767 723.906 112.425 cv
722.179 113.556 721.206 111.986 719.826 112.079 cv
713.078 112.332 706.298 112.332 699.55 112.487 cv
698.985 112.487 698.452 112.521 697.855 112.552 cv
697.071 112.709 696.662 112.487 696.6 111.578 cv
696.6 111.359 695.784 111.106 695.312 111.14 cv
687.591 111.264 679.839 111.452 672.056 111.641 cv
671.679 111.641 li
662.766 111.891 653.914 112.11 644.97 112.332 cv
644.53 112.332 643.651 112.079 643.651 111.986 cv
643.746 110.668 642.834 110.887 642.019 110.918 cv
637.562 110.918 633.104 111.264 628.585 111.044 cv
622.214 110.73 615.812 111.483 609.409 111.672 cv
607.15 111.798 604.858 111.798 602.598 111.672 cv
595.128 111.202 587.47 111.86 579.875 111.986 cv
579.404 111.986 578.462 111.86 578.462 111.736 cv
578.462 110.605 577.866 110.417 576.893 110.51 cv
567.885 111.452 558.94 110.48 549.869 111.202 cv
546.542 111.452 543.184 111.548 539.856 111.578 cv
539.103 111.641 538.351 111.641 537.534 111.641 cv
533.893 111.672 530.222 111.672 526.549 111.736 cv
526.079 111.767 525.263 111.483 525.23 111.264 cv
525.168 110.353 524.792 110.133 523.944 110.26 cv
517.353 111.232 510.918 110.133 504.328 110.574 cv
499.244 110.887 494.128 111.232 489.042 111.421 cv
486.437 111.452 483.864 111.044 481.29 111.044 cv
478.497 111.106 475.641 111.359 472.785 111.483 cv
472.409 111.548 471.686 111.325 471.718 111.202 cv
471.78 110.071 471.153 109.883 470.117 110.04 cv
460.827 110.918 451.631 109.883 442.278 110.668 cv
441.618 110.698 440.99 110.73 440.332 110.794 cv
439.892 110.825 439.39 110.887 438.919 110.887 cv
432.296 111.264 425.675 111.106 419.02 111.232 cv
418.581 111.232 417.733 110.951 417.733 110.73 cv
417.703 109.821 417.262 109.633 416.352 109.757 cv
409.824 110.698 403.39 109.506 396.894 110.04 cv
396.61 110.04 396.36 110.04 396.077 110.071 cv
395.45 110.133 394.852 110.198 394.225 110.198 cv
384.119 111.106 374.107 110.353 364.031 111.014 cv
363.122 111.106 362.212 111.232 362.369 109.883 cv
362.369 109.821 361.71 109.537 361.364 109.537 cv
358.727 109.633 356.122 109.883 353.518 109.945 cv
350.913 109.945 348.275 109.537 345.671 109.602 cv
341.183 109.726 336.662 109.883 332.175 110.353 cv
324.391 111.106 316.765 109.757 309.012 110.73 cv
308.573 110.794 307.693 110.48 307.693 110.26 cv
307.631 109.317 307.16 109.193 306.312 109.287 cv
302.61 109.633 298.874 109.663 295.17 109.602 cv
294.291 109.602 li
290.682 109.726 287.041 109.757 283.494 109.602 cv
282.334 109.633 281.141 109.663 279.98 109.821 cv
274.989 110.26 269.872 111.232 264.977 109.883 cv
258.763 110.668 252.642 110.04 246.458 110.133 cv
244.104 110.133 241.72 110.386 239.366 110.417 cv
239.02 110.417 238.675 109.945 238.299 109.663 cv
238.456 109.537 li
236.854 109.444 235.254 109.317 233.654 109.193 cv
233.151 109.099 li
230.17 109.225 227.157 109.349 224.113 108.972 cv
220.754 108.471 217.082 109.193 213.598 109.413 cv
210.019 109.602 206.472 109.537 202.958 110.04 cv
202.142 110.167 201.357 110.167 200.604 110.167 cv
197.936 110.133 195.363 109.444 192.694 109.663 cv
188.677 110.04 184.691 110.04 180.674 110.417 cv
178.131 110.668 175.464 110.951 173.172 111.891 cv
172.042 112.332 169.751 111.955 169.657 114.245 cv
169.594 114.402 li
169.374 114.748 168.401 115.218 167.899 115.218 cv
166.017 115.218 165.545 118.074 163.286 117.417 cv
163.067 117.417 162.188 118.891 161.779 119.739 cv
161.465 120.429 161.497 121.81 161.12 121.904 cv
158.892 122.563 158.577 124.259 157.981 125.951 cv
157.919 126.267 157.385 126.736 157.071 126.801 cv
156.098 126.832 155.942 127.239 155.785 128.086 cv
155.031 131.382 154.027 134.615 154.027 138.005 cv
154.027 297.981 li
156.166 297.032 158.268 296.022 160.541 295.432 cv
163.092 294.794 165.792 294.5 167.903 292.683 cv
172.074 292.683 175.706 290.819 179.633 289.738 cv
180.06 289.633 180.467 289.465 180.869 289.281 cv
180.799 289.191 li
180.643 288.564 180.893 287.779 180.705 287.152 cv
180.235 285.049 180.171 285.113 181.929 284.987 cv
182.337 284.925 182.776 284.925 183.216 284.892 cv
184.221 284.768 184.471 285.333 184.283 286.086 cv
184.145 286.814 183.964 287.534 183.752 288.241 cv
184.115 288.195 184.479 288.151 184.884 288.218 cv
186.798 288.513 188.516 287.679 190.185 286.794 cv
191.362 287.776 192.492 286.647 193.621 286.744 cv
194.799 286.794 195.781 285.911 197.007 285.96 cv
198.283 286.009 199.51 285.519 200.787 285.322 cv
201.13 285.225 201.622 285.371 201.818 285.175 cv
203.731 283.456 206.038 283.946 208.296 283.8 cv
209.523 283.701 210.798 283.31 212.026 283.064 cv
213.301 282.868 214.774 283.652 215.805 282.378 cv
216.148 282.328 li
219.24 282.083 222.381 282.083 225.424 281.544 cv
232.59 280.315 239.756 281.151 246.921 280.855 cv
247.265 280.806 247.559 280.364 247.903 280.119 cv
250.111 280.119 li
250.111 280.463 li
252.566 281.1 255.019 281.1 257.474 280.463 cv
257.474 280.119 li
259.683 280.119 li
259.879 280.364 260.075 280.855 260.271 280.855 cv
265.13 280.953 269.94 280.708 274.749 281.544 cv
277.646 282.083 280.687 281.691 283.683 282.133 cv
286.43 282.573 289.327 283.26 292.222 283.113 cv
293.204 283.064 294.235 283.506 295.215 283.849 cv
295.511 283.946 295.56 284.636 295.903 284.832 cv
296.197 285.077 296.933 285.273 297.032 285.175 cv
297.719 284.293 298.603 284.488 299.387 284.587 cv
301.989 284.93 304.541 285.567 307.192 285.322 cv
308.271 286.744 310.136 285.371 311.216 286.303 cv
312.737 287.679 314.505 287.434 316.271 287.531 cv
317.154 287.63 318.038 287.924 318.921 288.268 cv
320.081 288.75 321.321 289.023 322.56 289.323 cv
322.67 288.892 322.826 288.461 322.978 288.029 cv
323.386 288.406 323.795 288.752 324.17 289.099 cv
323.635 289.617 li
324.804 289.93 325.959 290.301 327.02 290.967 cv
327.265 291.114 327.706 291.212 328.002 291.212 cv
329.817 291.064 331.339 291.996 333.006 292.487 cv
336.05 293.421 339.044 294.647 342.087 295.48 cv
345.277 296.366 348.32 297.69 351.51 298.671 cv
354.602 299.703 357.547 301.224 360.687 302.305 cv
362.21 302.795 363.583 303.629 365.106 304.07 cv
366.873 304.561 368.688 305.054 370.014 306.573 cv
370.651 307.26 371.78 307.652 372.763 307.9 cv
375.166 308.488 377.08 309.96 379.191 311.09 cv
385.032 314.035 390.529 317.52 396.32 320.464 cv
397.449 321.003 398.529 321.739 399.658 322.278 cv
402.455 323.507 404.565 325.812 407.069 327.481 cv
408.934 328.71 410.798 329.936 412.516 331.358 cv
414.48 332.93 416.541 334.45 418.897 335.482 cv
419.388 335.728 419.977 335.973 420.37 336.365 cv
423.266 339.212 426.504 341.666 429.645 344.219 cv
433.375 347.213 437.155 350.206 440.492 353.642 cv
443.977 357.272 447.904 360.414 451.29 364.144 cv
456.149 369.542 461.204 374.696 465.866 380.292 cv
469.008 384.022 471.952 387.849 474.996 391.63 cv
478.088 395.605 481.425 399.432 484.076 403.752 cv
484.909 405.125 485.842 406.452 486.677 407.825 cv
487.903 409.789 488.836 412.047 490.406 413.616 cv
492.222 415.385 492.467 417.741 493.694 419.702 cv
495.412 422.402 497.13 425.15 498.651 427.997 cv
500.125 430.795 501.646 433.593 502.921 436.537 cv
504.492 439.924 506.113 443.31 507.781 446.696 cv
508.91 448.954 509.744 451.311 510.676 453.618 cv
511.904 456.563 513.179 459.458 514.357 462.452 cv
514.946 464.022 515.289 465.74 515.879 467.358 cv
516.418 468.931 516.713 470.892 517.841 472.022 cv
519.462 473.641 518.234 475.507 519.019 477.078 cv
519.266 477.372 li
520.051 480.611 522.554 483.409 521.768 487.041 cv
521.915 487.335 li
522.505 489.201 522.849 491.162 523.78 492.832 cv
524.86 494.747 524.664 496.709 524.713 498.722 cv
524.762 499.065 li
525.107 499.898 525.499 500.732 525.793 501.617 cv
526.087 502.354 526.137 503.383 526.627 503.775 cv
527.805 504.709 526.234 505.2 526.529 506.181 cv
527.217 508.145 527.903 510.207 527.707 512.413 cv
527.609 513.348 528.247 514.378 528.395 515.407 cv
528.493 516.488 528.05 517.764 528.444 518.695 cv
530.013 522.084 529.277 525.862 530.602 529.249 cv
530.063 535.188 531.683 541.077 531.339 547.016 cv
531.29 547.702 530.947 548.342 530.848 549.028 cv
530.751 549.421 530.898 549.862 530.947 550.255 cv
531.339 550.059 531.683 549.813 532.075 549.568 cv
532.075 552.513 li
531.83 552.709 531.585 552.905 531.339 553.102 cv
532.075 553.984 li
532.075 565.813 li
531.094 566.747 531.094 567.825 532.075 568.757 cv
532.075 570.967 li
531.045 572.538 531.045 574.598 532.075 576.17 cv
532.075 578.379 li
531.487 578.624 li
531.143 580.095 531.339 581.618 530.751 583.138 cv
530.21 584.514 530.701 586.279 530.602 587.851 cv
530.456 589.371 529.768 590.894 529.964 592.364 cv
530.259 594.966 529.032 597.273 529.13 599.826 cv
529.179 602.28 528.395 604.585 527.707 606.941 cv
527.167 608.856 527.217 610.919 526.921 612.93 cv
526.725 614.158 526.529 615.433 526.185 616.661 cv
525.646 618.476 525.499 620.342 525.352 622.254 cv
525.254 623.924 524.468 625.545 523.976 627.163 cv
522.849 630.794 521.964 634.478 520.934 638.108 cv
520.051 641.103 519.167 644.047 518.824 647.188 cv
518.676 647.482 li
516.37 650.967 515.339 654.99 513.965 658.82 cv
513.501 660.209 512.867 661.538 512.435 662.937 cv
512.677 663.053 512.92 663.167 513.148 663.316 cv
513.493 663.535 513.712 663.975 514.025 664.352 cv
513.618 664.478 513.273 664.666 512.456 664.979 cv
511.821 664.685 li
511.272 665.892 510.425 667.007 510.578 668.537 cv
510.626 669.469 509.303 670.403 508.811 671.434 cv
507.879 673.397 507.191 675.457 506.21 677.372 cv
505.769 678.156 505.916 679.581 504.393 679.581 cv
504.295 679.581 504.05 680.17 504.05 680.464 cv
504.05 683.311 504.198 683.458 502.676 684.831 cv
501.842 685.618 502.087 686.599 501.646 687.383 cv
500.076 690.279 498.406 693.126 496.737 696.021 cv
496.247 696.906 495.51 697.74 495.216 698.721 cv
493.842 702.943 490.995 706.134 488.394 709.568 cv
486.971 711.383 486.236 713.592 484.909 715.507 cv
482.161 719.678 479.265 723.803 476.173 727.728 cv
475.094 729.101 474.259 730.624 473.228 732.046 cv
472.198 733.471 470.677 734.451 469.793 736.121 cv
468.812 737.887 467.192 739.262 465.866 740.782 cv
462.774 744.269 460.32 748.292 456.835 751.482 cv
455.511 752.708 454.038 753.741 452.91 755.261 cv
451.83 756.734 450.21 757.862 448.64 759.091 cv
448.689 759.238 li
448.493 759.238 li
447.413 760.464 446.136 761.69 444.909 762.918 cv
444.355 763.471 443.795 764.005 443.234 764.542 cv
447.678 764.314 452.079 764.371 456.527 764.033 cv
456.998 764.002 457.908 764.19 457.908 764.349 cv
457.938 765.257 458.252 765.51 459.131 765.414 cv
462.207 765.102 465.188 764.88 468.203 765.164 cv
471.247 765.414 474.449 764.537 477.587 764.349 cv
480.758 764.19 483.864 764.222 487.035 764.19 cv
487.819 764.129 488.791 763.721 488.729 765.102 cv
488.729 765.29 489.325 765.571 489.639 765.51 cv
492.715 764.944 495.697 765.698 498.678 765.353 cv
504.83 764.567 510.856 764.88 517.008 764.41 cv
517.448 764.349 518.327 764.567 518.327 764.756 cv
518.389 765.634 518.734 765.887 519.581 765.791 cv
522.594 765.479 525.577 765.257 528.621 765.51 cv
531.571 765.791 534.805 764.88 537.849 764.725 cv
541.018 764.537 544.125 764.567 547.233 764.537 cv
548.048 764.506 549.022 764.129 548.896 765.51 cv
548.896 765.634 549.492 765.917 549.807 765.887 cv
552.882 765.29 555.832 765.729 558.751 765.729 cv
563.24 765.729 567.791 764.63 572.31 765.068 cv
576.579 765.51 581.036 764.849 585.398 764.66 cv
586.151 764.63 586.78 764.537 586.78 765.51 cv
586.78 765.729 587.313 766.105 587.564 766.041 cv
589.134 765.948 590.672 765.634 592.209 765.634 cv
593.622 765.603 595.034 766.041 596.477 765.948 cv
599.396 765.791 602.347 765.414 605.266 765.068 cv
607.023 764.818 608.719 765.194 610.446 765.29 cv
632.76 717.645 li
631.41 716.39 630.343 714.852 629.779 712.968 cv
629.37 711.587 629.245 710.175 629.402 708.825 cv
579.875 687.169 li
579.121 687.796 578.242 688.3 577.269 688.611 cv
573.377 689.773 569.329 687.577 568.168 683.716 cv
567.445 681.393 567.978 679.008 569.36 677.188 cv
546.417 631.615 li
542.587 631.898 538.947 629.512 537.785 625.685 cv
536.468 621.258 538.979 616.612 543.404 615.263 cv
547.829 613.946 552.505 616.455 553.824 620.881 cv
554.672 623.707 553.95 626.626 552.161 628.727 cv
575.104 674.331 li
578.274 674.301 581.192 676.309 582.165 679.512 cv
582.323 680.107 582.417 680.704 582.448 681.269 cv
632.006 702.956 li
633.262 701.514 634.894 700.383 636.872 699.787 cv
637.625 699.567 638.379 699.441 639.1 699.379 cv
666.406 583.656 li
664.491 581.964 663.519 579.326 664.146 576.657 cv
665.056 572.799 668.917 570.411 672.746 571.322 cv
676.607 572.233 678.992 576.092 678.082 579.953 cv
677.422 582.715 675.226 584.726 672.621 585.29 cv
653.287 667.178 li
653.914 667.428 li
654.291 667.897 li
653.568 668.274 li
653.036 668.243 li
645.346 700.884 li
647.511 702.203 649.268 704.244 650.053 706.879 cv
651.718 712.467 648.547 718.367 642.961 720.063 cv
641.486 720.501 640.011 720.563 638.567 720.406 cv
617.036 766.356 li
619.609 766.105 622.152 766.011 624.693 766.168 cv
625.887 766.264 627.11 766.229 628.366 766.105 cv
678.238 737.012 li
676.795 731.204 680.122 725.209 685.928 723.482 cv
689.945 722.259 694.058 723.42 696.914 726.089 cv
758.116 690.308 li
757.959 689.272 757.991 688.204 758.242 687.107 cv
758.682 685.254 759.686 683.716 761.067 682.555 cv
760.973 682.523 li
760.815 681.834 li
760.973 681.551 li
754.287 659.329 li
753.817 659.329 753.346 659.298 752.906 659.329 cv
753 659.017 753.033 658.575 753.22 658.482 cv
753.472 658.355 753.723 658.201 753.941 658.105 cv
753.346 656.159 li
748.356 656.19 743.71 653.021 742.205 647.999 cv
740.384 641.91 743.837 635.476 749.925 633.656 cv
756.014 631.804 762.448 635.257 764.268 641.376 cv
764.959 643.637 764.896 645.929 764.238 647.999 cv
764.74 648.125 765.147 648.533 765.619 648.814 cv
765.084 649.036 764.613 649.286 764.08 649.506 cv
763.671 649.537 li
763.609 649.537 li
762.73 651.452 761.317 653.114 759.467 654.309 cv
767.376 680.608 li
767.784 680.642 768.161 680.673 768.536 680.766 cv
771.832 681.52 774.187 684.123 774.908 687.2 cv
836.708 697.245 li
837.87 695.046 839.909 693.322 842.483 692.537 cv
847.662 690.999 853.122 693.918 854.661 699.096 cv
856.23 704.275 853.28 709.705 848.1 711.274 cv
842.922 712.811 837.493 709.894 835.922 704.714 cv
835.828 704.337 835.766 703.96 835.703 703.583 cv
773.872 693.541 li
771.989 696.615 768.317 698.311 764.613 697.434 cv
763.39 697.149 762.29 696.584 761.35 695.864 cv
700.177 731.644 li
701.59 737.45 698.263 743.445 692.456 745.17 cv
688.439 746.396 684.328 745.234 681.472 742.565 cv
642.396 765.383 li
643.055 765.383 643.713 765.29 644.373 765.102 cv
645.063 764.944 646.13 764.506 646.1 765.917 cv
646.1 766.105 646.664 766.452 646.947 766.418 cv
650.243 765.51 653.287 766.764 656.583 766.264 cv
657.524 766.105 658.497 766.137 659.47 765.917 cv
664.429 764.849 669.169 766.105 674.063 765.257 cv
674.409 765.194 675.1 765.383 675.1 765.51 cv
675.1 766.325 675.257 766.764 676.199 766.64 cv
677.454 766.452 678.74 766.264 679.934 766.264 cv
681.22 766.264 682.476 766.702 683.763 766.64 cv
687.059 766.418 690.385 766.041 693.681 765.603 cv
696.914 765.164 699.957 766.356 703.253 765.479 cv
703.944 765.257 704.98 764.88 704.98 766.264 cv
705.765 766.764 li
709.185 765.822 712.387 767.236 715.745 766.545 cv
721.175 765.414 726.511 766.418 731.878 765.698 cv
732.223 765.634 732.913 765.822 732.913 765.948 cv
732.852 766.764 733.039 767.236 734.011 767.079 cv
738.846 766.168 743.585 767.298 748.481 766.418 cv
751.306 765.917 754.193 765.729 757.143 766.137 cv
760.753 766.575 764.519 766.011 768.253 765.887 cv
769.007 765.887 769.949 765.479 769.855 766.795 cv
769.855 766.983 770.419 767.203 770.734 767.203 cv
774.626 767.109 778.424 767.329 782.252 766.764 cv
787.369 766.011 792.359 766.859 797.411 766.105 cv
797.726 766.041 798.039 766.575 798.416 766.859 cv
799.107 767.425 li
802.466 766.575 805.666 767.549 808.93 767.236 cv
811.912 766.952 814.894 766.64 817.875 766.325 cv
818.535 766.229 819.54 765.822 819.885 766.137 cv
821.517 767.486 823.494 766.168 825.251 766.325 cv
827.04 766.452 828.83 766.482 830.587 766.575 cv
834.072 766.764 837.366 764.818 840.787 764.66 cv
842.42 762.841 846.123 764.537 846.688 760.833 cv
847.441 760.769 li
849.577 759.703 852.023 758.98 852.746 756.188 cv
852.84 755.873 853.469 755.434 853.813 755.341 cv
855.288 755.119 855.696 754.368 856.041 752.923 cv
856.45 751.385 856.513 749.407 858.584 748.53 cv
858.897 748.403 858.961 747.649 859.18 747.149 cv
859.996 745.673 860.027 744.166 859.996 742.597 cv
859.996 742.127 860.216 741.185 860.31 741.153 cv
862.162 740.965 861.597 739.708 861.597 738.8 cv
861.628 730.921 861.597 723.044 861.597 715.167 cv
861.597 707.318 861.691 699.441 861.597 691.564 cv
861.503 683.78 862.57 675.996 862.476 668.212 cv
862.444 665.732 862.444 663.221 862.444 660.743 cv
862.32 642.821 862.444 624.899 862.382 607.009 cv
862.382 605.251 862.789 603.367 861.691 601.767 cv
861.251 601.14 861.251 599.697 861.691 599.067 cv
862.789 597.467 862.32 595.993 862.382 594.486 cv
862.476 592.979 862.382 591.536 862.382 590.091 cv
862.382 581.271 li
862.382 579.796 862.884 578.071 862.32 576.91 cv
861.597 575.496 862.476 574.399 862.476 573.142 cv
862.413 567.619 862.476 562.064 862.507 556.539 cv
803.282 556.57 li
802.026 556.539 li
800.111 556.57 li
673.625 556.57 li
670.957 556.57 668.792 556.162 667.348 555.881 cv
666.845 555.785 li
664.146 555.378 661.666 554.343 659.501 552.836 cv
659.187 552.678 658.905 552.492 658.622 552.335 cv
655.83 550.921 653.695 549.132 652.094 547.124 cv
649.928 545.082 648.234 542.447 647.261 539.436 cv
646.319 537.018 645.974 534.852 645.785 533.282 cv
645.692 532.529 645.628 531.525 645.566 530.521 cv
645.503 529.86 li
645.315 528.167 645.378 526.66 645.472 525.561 cv
645.409 524.776 645.378 524.087 645.346 523.553 cv
645.346 523.396 li
645.157 522.015 644.907 519.849 645.221 517.214 cv
645.188 516.772 645.188 516.334 645.221 515.896 cv
645.221 515.33 645.284 514.796 645.346 514.23 cv
645.378 513.729 li
645.409 513.195 645.472 512.692 645.566 512.191 cv
645.566 512.065 li
645.251 512.223 li
644.592 512.003 li
644.153 510.968 644.373 509.995 645.378 509.241 cv
645.566 509.115 li
645.44 507.892 645.472 506.668 645.598 505.442 cv
645.503 504.689 645.44 503.904 645.378 503.15 cv
645.346 502.462 645.346 501.739 645.409 501.05 cv
645.409 500.704 645.409 500.389 645.378 500.046 cv
645.378 499.135 li
645.378 497.847 li
645.157 495.87 645.251 493.831 645.659 491.854 cv
645.692 491.508 645.723 490.189 645.723 490.189 cv
645.534 488.559 645.44 486.955 645.378 485.355 cv
645.346 484.193 645.378 483.252 645.44 482.374 cv
645.409 481.84 645.378 481.433 645.378 481.024 cv
645.346 480.743 645.346 480.459 645.346 480.178 cv
645.346 478.859 645.503 477.571 645.785 476.317 cv
645.785 475.471 li
645.785 474.621 645.817 473.774 645.723 472.928 cv
645.628 472.141 li
645.598 471.733 li
645.409 469.663 645.472 467.968 645.534 466.807 cv
645.566 466.68 li
645.315 464.579 645.44 462.444 645.942 460.372 cv
645.942 460.122 645.879 459.525 645.879 459.494 cv
645.848 458.93 li
645.598 456.856 645.628 454.88 645.659 453.279 cv
645.659 452.715 645.723 452.149 645.659 451.615 cv
645.44 449.638 645.534 447.63 645.911 445.685 cv
645.942 445.057 645.974 444.554 646.005 444.051 cv
645.974 443.423 645.785 441.227 645.785 441.227 cv
645.628 439.374 645.692 437.712 645.755 436.644 cv
645.755 436.457 li
645.472 434.323 645.598 432.124 646.1 430.023 cv
646.1 429.613 646.1 429.205 646.068 428.797 cv
645.817 426.508 645.848 424.624 645.848 423.117 cv
645.879 422.583 645.911 422.051 645.848 421.548 cv
645.598 419.509 645.692 417.437 646.1 415.429 cv
646.068 414.109 646.036 412.633 646.163 411.002 cv
646.163 410.906 646.1 409.967 646.068 409.56 cv
645.942 408.022 645.785 405.948 645.942 403.502 cv
645.942 403.502 645.879 402.183 645.879 401.775 cv
645.723 400.018 645.879 398.26 646.257 396.596 cv
646.225 396.03 646.163 393.426 646.1 390.977 cv
646.005 388.53 645.942 386.238 645.942 386.238 cv
645.911 384.796 646.068 383.351 646.382 381.939 cv
646.351 381.216 646.288 379.304 646.288 379.051 cv
646.225 378.454 li
646.13 377.7 646.036 376.508 646.036 375.378 cv
646.036 375.065 646.036 374.751 646.068 374.436 cv
646.068 374.062 646.1 373.716 646.13 373.339 cv
646.1 372.866 646.068 372.523 646.068 372.178 cv
646.036 371.862 646.036 371.581 646.036 371.298 cv
646.036 370.17 646.13 369.101 646.351 368.035 cv
646.351 367.439 646.382 366.778 646.444 366.12 cv
646.413 365.712 646.413 365.336 646.413 364.959 cv
646.382 364.362 646.351 364.048 646.319 363.735 cv
646.068 361.506 646.13 359.748 646.225 358.617 cv
646.005 356.672 646.13 354.726 646.569 352.813 cv
646.476 350.363 li
646.13 348.01 646.257 345.782 646.319 344.433 cv
646.351 343.961 li
646.225 340.541 647.136 337.214 648.893 334.295 cv
649.268 333.665 li
650.462 331.626 652.878 327.389 658.12 324.189 cv
661.729 321.992 665.371 320.642 669.356 320.046 cv
671.648 319.669 673.751 319.669 675.257 319.669 cv
700.334 319.669 li
700.836 319.669 701.34 319.7 701.842 319.731 cv
703.505 319.857 705.355 319.919 707.836 319.919 cv
707.836 319.919 714.207 319.889 715.557 319.889 cv
715.557 319.889 721.552 319.919 723.654 319.919 cv
734.201 319.889 li
735.11 319.889 736.052 319.95 736.994 320.107 cv
740.257 320.077 li
741.513 320.077 742.768 320.139 744.024 320.234 cv
744.966 320.296 745.97 320.327 747.005 320.358 cv
760.721 320.358 li
763.296 320.358 768.726 320.327 768.882 320.327 cv
769.792 320.201 770.703 320.107 771.643 320.107 cv
772.555 320.107 773.464 320.201 774.375 320.327 cv
775.441 320.327 776.477 320.423 777.481 320.577 cv
812.32 320.577 li
814.393 320.577 816.244 320.642 818.063 320.735 cv
819.414 320.766 820.763 320.83 822.113 320.83 cv
822.898 320.83 li
824.467 320.8 826.036 320.766 827.638 320.766 cv
834.856 320.8 li
835.295 320.766 835.734 320.766 836.174 320.766 cv
836.676 320.766 837.21 320.766 837.743 320.8 cv
842.858 320.8 li
843.331 320.8 843.832 320.83 844.302 320.861 cv
844.837 320.8 845.37 320.8 845.935 320.8 cv
846.971 320.8 li
846.971 320.8 858.239 320.8 864.924 320.8 cv
865.112 314.585 864.328 308.37 865.645 302.06 cv
865.645 286.714 865.52 271.396 865.678 256.081 cv
865.897 240.825 864.767 225.667 866.43 210.35 cv
866.43 188.348 866.493 166.314 866.43 144.377 cv
cp
f
504.001 577.641 mo
503.019 577.592 503.315 576.807 503.315 576.268 cv
502.97 565.077 503.952 553.837 502.627 542.648 cv
502.087 538.23 502.087 533.766 501.842 529.298 cv
501.793 528.954 li
500.664 527.432 501.694 525.421 500.958 524.144 cv
499.927 522.428 500.713 520.807 500.321 519.188 cv
500.173 518.548 499.731 517.96 499.633 517.273 cv
499.535 516.391 497.965 515.505 499.535 514.573 cv
498.161 513.495 499.241 511.874 498.651 510.55 cv
497.425 507.654 496.296 504.709 496.639 501.421 cv
496.688 500.931 496.1 500.389 496.051 499.85 cv
495.806 497.396 493.989 495.336 494.431 492.734 cv
493.302 491.113 493.94 488.806 492.369 487.286 cv
491.928 486.845 491.487 486.06 491.536 485.469 cv
491.928 481.887 489.228 479.285 488.787 475.85 cv
488.394 472.807 486.529 469.96 485.303 467.016 cv
484.713 465.544 484.076 464.07 483.339 462.648 cv
481.67 459.508 480.788 456.069 479.314 452.88 cv
478.137 450.428 477.057 447.875 475.633 445.568 cv
474.063 443.163 473.032 440.463 471.56 438.009 cv
467.977 431.923 464.787 425.592 460.025 420.291 cv
459.339 419.506 458.701 418.623 458.308 417.691 cv
455.854 412.292 451.781 408.022 448.247 403.409 cv
446.626 401.298 444.664 399.53 443.093 397.421 cv
440.737 394.231 438.185 391.237 435.486 388.391 cv
433.817 386.721 431.904 385.25 430.234 383.58 cv
428.517 381.91 426.946 380.047 425.375 378.23 cv
425.032 377.887 424.787 377.445 424.738 376.71 cv
424.64 376.856 li
424.493 376.71 li
424.295 376.856 li
423.56 376.415 422.136 376.317 423.56 374.99 cv
423.805 374.745 424.05 374.5 424.295 374.206 cv
423.952 374.108 423.609 373.863 423.314 373.912 cv
420.958 374.157 419.241 373.026 417.719 371.359 cv
416.933 370.525 415.854 369.886 414.971 369.199 cv
412.712 367.287 409.573 366.254 408.197 363.31 cv
408.051 363.016 407.706 362.721 407.413 362.525 cv
404.222 360.315 401.13 358.009 398.087 355.557 cv
396.025 353.936 393.179 353.348 391.51 351.04 cv
388.026 349.814 385.866 346.131 381.891 345.837 cv
380.223 343.483 377.425 342.843 375.216 341.421 cv
372.418 339.653 369.571 337.789 366.528 336.561 cv
364.173 335.58 361.915 334.6 359.756 333.322 cv
358.087 332.341 356.468 331.015 354.652 330.524 cv
352.051 329.838 349.891 328.364 347.387 327.53 cv
345.326 326.893 343.413 325.615 341.301 325.321 cv
338.897 324.978 337.13 323.409 334.921 322.918 cv
333.792 322.673 332.86 321.935 331.78 321.592 cv
330.651 321.298 328.982 321.641 328.394 320.954 cv
327.461 319.925 326.087 320.415 325.253 319.529 cv
325.056 319.284 324.565 319.334 324.222 319.235 cv
321.081 318.598 317.989 317.765 314.848 316.98 cv
312.59 316.389 310.431 315.506 308.075 315.555 cv
307.388 315.555 306.749 315.212 306.063 315.064 cv
302.479 314.231 298.995 312.807 295.264 312.61 cv
293.4 312.562 291.437 312.904 289.817 311.434 cv
289.621 311.237 289.179 311.139 288.884 311.139 cv
286.626 311.09 284.418 310.992 282.112 310.499 cv
279.363 309.96 276.418 310.548 273.572 309.715 cv
272.247 309.322 270.529 309.861 269.351 309.224 cv
267.584 308.243 266.455 309.665 264.983 309.665 cv
264.541 309.665 263.853 309.715 263.608 309.47 cv
262.773 308.537 261.792 308.979 260.86 308.93 cv
257.817 308.881 254.725 308.93 251.633 308.93 cv
248.933 308.93 246.234 308.832 243.535 308.93 cv
241.032 309.077 238.528 308.733 235.927 309.273 cv
233.375 309.813 230.627 309.567 227.976 309.665 cv
227.584 309.665 227.045 309.519 226.896 309.665 cv
225.572 311.139 223.608 309.715 222.43 310.499 cv
220.859 311.58 219.387 310.894 217.866 311.139 cv
217.032 311.237 216.001 310.843 215.314 311.189 cv
211.976 312.758 208.247 312.316 204.761 313.198 cv
203.191 313.64 201.62 314.035 200 314.378 cv
198.332 314.673 196.565 314.918 194.995 315.605 cv
193.522 316.291 192.001 316.095 190.529 316.34 cv
188.958 316.634 187.388 317.127 185.964 317.814 cv
184.345 318.647 182.43 317.911 181.154 318.647 cv
178.111 320.268 174.283 320.022 171.731 322.673 cv
171.535 322.869 171.093 322.869 170.748 322.968 cv
168.05 323.556 165.351 323.997 162.749 325.076 cv
159.314 326.501 155.779 327.727 152.344 329.397 cv
150.479 330.328 148.566 331.358 146.406 331.949 cv
144.1 332.636 141.743 333.91 139.633 335.09 cv
137.375 336.414 135.069 337.74 132.663 338.868 cv
130.16 339.996 127.854 341.421 125.497 342.892 cv
121.866 345.102 118.038 347.114 114.651 349.618 cv
110.97 352.314 106.7 354.181 103.559 357.665 cv
99.6332 359.384 96.8354 362.672 93.35 364.98 cv
92.124 365.764 91.2402 367.039 90.1601 368.071 cv
89.2284 369.052 88.1484 369.935 87.3134 370.967 cv
86.4306 372.095 84.7621 371.801 83.976 373.125 cv
83.1913 374.304 82.1606 375.334 81.1293 376.366 cv
80.2958 377.2 79.559 378.033 78.3315 378.573 cv
77.351 379.015 76.663 380.243 75.8783 381.175 cv
75.436 381.714 75.1908 382.501 74.6513 382.845 cv
71.5102 384.609 69.4482 387.555 66.8969 389.911 cv
66.2094 390.549 65.768 391.385 65.3251 392.218 cv
64.2953 394.133 62.9213 395.702 61.0073 396.781 cv
60.4667 397.078 59.7802 397.471 59.6821 397.912 cv
59.4858 399.48 58.0136 399.925 57.2768 401.004 cv
56.4921 402.033 55.706 403.065 54.9203 404.096 cv
52.9086 406.599 50.8476 409.004 48.9325 411.555 cv
47.9521 412.832 47.2641 414.352 46.2831 415.63 cv
43.5346 419.261 41.0312 422.99 38.725 426.918 cv
37.0063 429.863 34.7983 432.561 33.4731 435.802 cv
33.1786 436.537 32.54 437.077 31.3139 438.205 cv
31.6083 438.106 li
30.6264 441.248 29.2031 444.241 27.4853 447.039 cv
25.7187 449.837 23.7548 452.487 23.0683 455.824 cv
23.0683 455.824 23.019 455.824 22.725 456.021 cv
22.725 457.2 21.9882 458.034 21.4487 458.966 cv
21.2861 459.211 20.5292 461.861 20.0741 462.697 cv
19.0434 464.414 18.7978 466.574 17.8661 468.391 cv
16.8354 470.304 16.0004 472.316 15.6572 474.428 cv
15.1176 477.274 12.4672 479.432 13.1044 482.622 cv
13.1537 482.818 12.7123 483.164 12.4672 483.409 cv
11.8774 483.899 11.7792 484.537 11.5829 485.272 cv
10.8964 487.776 10.1596 490.279 9.42424 492.832 cv
9.3261 493.273 9.12981 493.764 9.07952 494.205 cv
8.78557 497.886 8.68743 498.133 7.21477 500.095 cv
7.85344 500.634 li
7.21477 500.882 li
6.96965 501.617 6.52825 502.354 6.52825 503.089 cv
6.52825 504.563 6.08684 505.837 5.79143 507.213 cv
5.54631 508.586 5.20305 510.011 5.15422 511.285 cv
5.10491 513.25 4.12297 514.966 4.26995 516.832 cv
4.46624 518.796 3.92669 520.513 2.79778 522.084 cv
2.65081 522.329 2.79778 522.819 2.79778 523.163 cv
2.94475 526.893 1.57171 530.478 2.01311 534.207 cv
2.11126 534.942 1.52141 535.727 1.32512 536.465 cv
1.12932 537.396 1.08001 538.328 .933034 539.26 cv
.933034 539.26 .834889 539.26 .589772 539.26 cv
.834889 539.655 1.2763 540.047 1.2763 540.439 cv
1.2763 541.715 1.2763 542.894 .736745 544.218 cv
.24651 545.299 1.62102 547.163 1.17815 548.241 cv
.6386 549.568 .344655 550.843 .687916 552.022 cv
.933034 553.15 -.245189 553.739 .24651 554.869 cv
.687916 555.801 .540455 556.978 .589772 558.06 cv
.589772 559.678 .687916 561.298 .540455 562.867 cv
.442799 564.391 1.12932 566.009 .0502211 567.434 cv
.786061 568.855 .687916 570.378 .540455 571.849 cv
.295338 574.598 1.32512 577.444 -7.18698e-05 580.095 cv
.24651 580.536 li
1.42327 580.39 1.2763 581.177 1.32512 581.961 cv
1.57171 585.543 1.81682 589.126 2.06194 592.708 cv
2.06194 592.956 1.96428 593.348 2.06194 593.446 cv
3.28948 594.378 2.60149 595.702 2.79778 596.832 cv
2.99407 598.107 3.33831 599.336 3.5346 600.562 cv
3.87786 603.261 4.51506 605.862 4.90911 608.464 cv
5.54631 612.733 6.62639 616.857 8.00091 620.881 cv
8.98284 623.728 8.19671 627.016 10.1596 629.568 cv
10.5522 633.494 12.3198 637.076 13.2519 640.857 cv
13.7431 642.818 14.6259 644.685 15.3627 646.6 cv
16.0492 648.512 17.62 650.084 17.9633 652.192 cv
18.1113 653.176 18.3569 654.206 18.749 655.189 cv
19.5351 657.199 20.3193 659.213 21.3017 661.128 cv
22.2822 663.04 23.1659 665.004 24.0009 667.018 cv
24.933 669.077 25.8657 671.188 27.0439 673.152 cv
27.7797 674.28 28.7123 675.408 29.1049 676.686 cv
30.1357 679.974 31.9516 682.722 34.0615 685.373 cv
34.602 686.06 34.9452 686.941 35.2885 687.827 cv
35.5829 688.563 35.6332 689.396 36.0253 690.083 cv
37.9394 693.076 39.9023 696.07 41.915 699.064 cv
43.6327 701.567 45.5463 703.924 47.1171 706.525 cv
48.7363 709.274 51.6811 710.99 52.6142 714.181 cv
53.8906 714.968 54.3808 716.439 55.6572 717.373 cv
56.7372 718.207 57.1298 719.973 58.0624 721.103 cv
60.7118 724.097 63.3134 727.14 66.1601 729.888 cv
69.2519 732.882 71.9516 736.17 75.0927 739.065 cv
76.7612 740.635 78.2338 742.403 80.0492 743.923 cv
83.0922 746.524 85.6938 749.567 88.8837 752.021 cv
91.0932 753.643 92.9575 755.751 95.1669 757.421 cv
99.3378 760.563 103.657 763.604 107.976 766.55 cv
110.676 768.367 113.081 770.524 116.075 771.9 cv
118.332 772.979 119.951 775.286 122.749 775.482 cv
123.239 775.973 li
124.417 777.594 126.086 778.378 127.854 779.113 cv
128.492 779.358 129.179 779.705 129.621 780.195 cv
130.995 781.519 132.713 782.205 134.43 782.846 cv
135.166 783.14 136.148 783.14 136.687 783.63 cv
139.387 786.085 142.971 786.968 146.062 788.684 cv
149.596 790.647 153.424 792.269 157.252 793.642 cv
160.492 794.821 163.584 796.243 166.823 797.371 cv
169.572 798.354 172.663 798.501 175.117 800.463 cv
175.413 800.711 176.05 800.563 176.54 800.563 cv
178.111 800.515 179.436 801.299 180.81 801.789 cv
181.694 802.084 182.479 802.672 183.363 802.771 cv
185.915 803.016 188.123 804.587 190.823 804.489 cv
191.903 804.44 192.983 805.176 194.062 805.421 cv
196.909 806.059 199.706 806.895 202.602 807.14 cv
204.271 807.237 205.939 807.434 207.412 808.022 cv
209.374 808.855 211.486 808.855 213.449 809.397 cv
214.578 809.644 215.854 809.938 216.836 809.986 cv
217.866 809.986 218.897 810.035 219.928 810.084 cv
223.657 810.183 227.29 811.359 231.068 810.918 cv
232.639 810.771 234.258 810.869 235.829 810.918 cv
236.124 810.967 236.37 811.262 236.713 811.752 cv
236.811 811.653 li
238.528 811.653 240.246 811.604 241.963 811.653 cv
242.455 811.653 243.044 812.193 243.387 812.046 cv
245.008 811.212 246.726 811.703 248.394 811.703 cv
249.179 811.703 250.111 812.291 250.798 812.833 cv
251.191 813.177 250.308 814.451 251.437 814.55 cv
252.958 814.647 252.025 813.274 252.369 812.686 cv
252.909 812.144 li
253.89 811.212 255.903 811.457 255.952 812.588 cv
256.05 814.206 256.393 813.813 257.228 813.029 cv
258.897 811.408 259.534 811.114 260.418 812.144 cv
261.352 813.127 261.989 812.98 262.725 812.34 cv
263.657 811.556 264.688 811.752 265.72 811.604 cv
266.749 811.507 267.731 811.703 268.86 811.114 cv
270.48 810.231 271.363 810.918 272.345 812.833 cv
272.884 813.961 272.884 813.961 271.265 814.01 cv
270.235 814.059 270.97 814.893 270.774 815.334 cv
273.719 815.138 273.817 814.941 273.031 812.046 cv
272.835 811.311 273.031 810.869 273.915 810.918 cv
274.897 810.918 276.223 811.311 276.811 810.82 cv
277.94 809.839 278.725 811.457 279.56 810.869 cv
281.081 809.839 282.799 810.183 284.418 810.183 cv
286.087 810.183 287.51 809.003 289.326 809.347 cv
289.866 809.493 290.553 808.954 291.192 808.709 cv
292.37 808.219 293.547 807.434 294.529 809.102 cv
294.627 809.297 295.462 809.347 295.707 809.15 cv
297.817 807.482 298.307 807.14 300.026 807.237 cv
301.695 807.336 303.265 807.042 304.738 806.156 cv
305.179 805.862 305.867 805.715 306.406 805.764 cv
307.78 805.911 309.008 805.568 310.136 804.979 cv
311.953 804.048 314.161 804.734 315.78 803.509 cv
316.762 802.819 317.744 802.819 318.823 802.771 cv
319.658 802.721 320.442 802.476 321.179 802.329 cv
324.859 801.643 328.198 800.169 331.682 799.09 cv
335.265 797.962 338.946 796.93 342.283 795.312 cv
345.669 793.642 349.498 793.053 352.688 790.991 cv
353.376 790.55 354.111 790.256 354.849 789.961 cv
358.137 788.635 361.424 787.311 364.32 785.102 cv
365.352 784.316 366.775 783.974 368.1 783.63 cv
369.473 783.238 369.818 783.238 370.308 782.598 cv
371.878 780.538 374.48 780.097 376.492 778.722 cv
378.455 777.397 380.615 776.218 382.823 775.335 cv
385.13 774.403 386.112 771.459 388.91 771.36 cv
390.234 769.249 392.884 768.955 394.602 767.334 cv
395.437 766.599 396.075 765.569 397.007 765.177 cv
401.768 763.114 405.302 759.238 409.573 756.44 cv
413.645 753.79 417.18 750.207 420.762 746.868 cv
424.885 742.991 428.81 738.919 432.737 734.893 cv
434.357 733.274 435.682 731.408 437.204 729.741 cv
438.235 728.659 440.247 728.513 440.541 726.747 cv
440.836 724.979 442.799 724.734 443.289 723.508 cv
443.879 722.034 445.155 721.348 445.989 720.22 cv
446.873 719.09 447.609 717.814 448.64 716.88 cv
451.388 714.38 453.155 711.138 455.314 708.193 cv
456.884 705.938 458.406 703.581 459.731 701.176 cv
461.057 698.672 463.854 697.201 464.54 694.305 cv
467.044 691.654 468.565 688.416 470.087 685.177 cv
470.873 683.507 471.608 681.84 472.64 680.316 cv
474.455 677.666 476.026 674.868 477.449 671.973 cv
479.903 666.867 482.505 661.765 484.517 656.464 cv
485.695 653.176 487.952 650.133 487.805 646.354 cv
488.001 645.715 li
490.112 643.063 490.749 639.727 491.879 636.635 cv
492.81 633.936 493.547 631.138 494.235 628.392 cv
495.363 623.924 496.639 619.508 497.523 614.942 cv
497.817 613.371 497.965 611.752 498.406 610.181 cv
499.535 606.354 500.468 602.477 500.321 598.45 cv
500.223 596.391 500.664 594.476 501.302 592.561 cv
501.4 592.218 501.793 591.973 501.793 591.678 cv
502.087 588.685 502.333 585.739 502.529 582.746 cv
502.627 581.52 502.529 580.291 502.578 579.065 cv
502.578 578.28 502.872 578.428 503.413 578.771 cv
503.707 578.967 504.492 579.017 504.591 578.82 cv
504.935 578.28 504.935 577.689 504.001 577.641 cv
cp
f
103.067 472.456 mo
103.278 472.667 li
103.251 472.588 103.251 472.535 103.251 472.456 cv
103.067 472.456 li
cp
.721569 .666667 .427451 rgb
f
143.713 490.956 mo
143.502 491.167 li
143.581 491.114 143.661 491.114 143.767 491.088 cv
143.74 491.035 143.74 491.009 143.713 490.956 cv
cp
f
144.11 492.965 mo
144.163 493.018 li
144.189 492.991 144.216 492.965 144.242 492.938 cv
144.189 492.965 144.136 492.965 144.11 492.965 cv
cp
f
169.244 382.44 mo
168.979 382.546 168.768 382.652 168.715 382.758 cv
168.688 382.784 168.662 382.837 168.688 382.916 cv
168.953 382.863 169.349 382.784 169.904 382.731 cv
169.613 382.652 169.402 382.546 169.244 382.44 cv
cp
f
169.931 386.643 mo
169.931 386.695 169.904 386.749 169.904 386.801 cv
170.142 387.33 li
170.168 387.304 170.221 387.304 170.247 387.277 cv
170.327 387.039 170.38 386.774 170.486 386.511 cv
170.274 386.59 170.089 386.643 169.931 386.643 cv
cp
f
174.741 420.974 mo
174.714 421 174.661 421.026 174.635 421.053 cv
174.767 421.185 li
174.741 421.132 174.741 421.053 174.741 420.974 cv
cp
f
281.511 723.976 mo
281.643 723.922 281.802 723.896 281.987 723.87 cv
281.961 723.843 281.935 723.79 281.935 723.764 cv
281.511 723.976 li
cp
f
300.434 742.898 mo
300.408 742.846 300.408 742.739 300.381 742.66 cv
300.329 742.687 300.302 742.713 300.249 742.739 cv
300.434 742.898 li
cp
f
381.966 445.076 mo
381.913 445.076 li
381.913 445.129 381.939 445.155 381.966 445.208 cv
381.966 445.076 li
cp
f
400.228 511.939 mo
400.202 511.913 li
400.175 511.913 400.122 511.939 400.096 511.939 cv
400.228 511.939 li
cp
f
103.076 454.663 mo
102.684 454.48 li
102.49 454.655 li
102.869 454.864 li
103.076 454.663 li
cp
f
374.316 559.373 mo
373.727 559.365 li
373.727 559.94 li
374.316 559.373 li
cp
f
230.271 527.411 mo
229.962 527.292 229.575 527.375 229.083 527.37 cv
229.285 527.697 229.335 527.896 229.444 527.935 cv
229.89 528.09 230.354 528.198 230.815 528.312 cv
230.881 528.082 li
230.694 527.84 230.525 527.509 230.271 527.411 cv
cp
f
234.997 534.033 mo
235.443 534.308 li
235.695 534.302 235.942 534.186 236.253 534.099 cv
235.729 533.775 li
235.478 533.799 235.24 533.94 234.997 534.033 cv
cp
f
323.718 649.87 mo
323.691 649.896 323.638 649.896 323.612 649.923 cv
323.321 649.605 323.268 649.605 323.163 649.579 cv
322.502 649.395 321.735 648.893 321.207 649.077 cv
320.731 649.235 320.52 650.135 320.203 650.689 cv
320.282 650.769 320.361 650.821 320.414 650.874 cv
320.203 650.98 li
320.176 651.033 320.176 651.086 320.176 651.139 cv
319.304 651.165 319.145 651.535 318.96 652.037 cv
318.617 653.016 317.956 653.887 317.401 654.813 cv
317.216 654.997 li
314.6 655.05 313.358 657.666 310.9 658.116 cv
309.895 658.301 308.944 659.094 308.151 659.78 cv
307.147 660.626 306.063 661.022 304.795 660.838 cv
302.839 660.547 301.28 661.921 299.403 661.975 cv
299.034 662.582 li
298.954 663.189 299.351 664.168 298.108 663.11 cv
296.708 661.868 295.043 662.424 294.303 664.142 cv
294.197 664.405 293.88 664.617 293.589 664.723 cv
293.114 664.935 292.453 665.277 292.162 665.119 cv
291.66 664.802 292.109 664.353 292.426 663.982 cv
292.559 663.824 292.479 663.48 292.479 663.216 cv
291.872 663.401 li
290.735 664.194 289.572 664.379 287.986 664.115 cv
287.432 664.036 286.665 663.956 286.295 664.247 cv
285.185 665.146 283.731 664.115 282.674 665.014 cv
282.384 664.538 282.172 664.723 281.829 664.987 cv
281.564 665.225 280.983 666.546 280.745 664.882 cv
280.719 664.723 279.899 664.538 279.477 664.591 cv
277.574 664.908 275.697 665.277 273.821 665.674 cv
273.372 665.754 273.001 666.018 272.579 666.203 cv
272.39 665.734 li
271.997 666.204 li
271.997 666.203 li
271.495 666.018 270.808 665.516 270.517 665.674 cv
268.614 666.652 266.896 664.882 265.073 665.384 cv
262.536 664.458 259.893 665.146 257.303 664.908 cv
257.144 664.908 256.959 665.41 256.722 665.595 cv
256.457 665.779 256.114 665.991 255.796 665.991 cv
255.506 665.965 255.215 665.7 254.977 665.489 cv
255.347 664.882 li
255.559 664.723 255.85 664.696 256.114 664.617 cv
255.427 664.3 li
254.396 664.458 253.286 663.798 252.387 664.723 cv
251.568 664.802 li
249.559 663.719 247.419 664.405 245.331 664.168 cv
244.987 664.115 244.67 663.877 244.327 663.798 cv
243.983 663.745 243.586 663.666 243.322 663.771 cv
242.239 664.3 241.234 664.247 240.124 663.719 cv
239.517 663.454 238.644 663.612 237.984 663.771 cv
234.416 664.749 231.007 662.424 230.901 658.882 cv
230.874 658.036 230.901 657.217 230.293 656.529 cv
230.214 656.318 li
231.615 654.892 231.694 653.227 231.324 651.535 cv
231.086 650.504 230.637 649.5 230.319 648.496 cv
230.24 648.231 230.214 647.888 230.319 647.65 cv
231.43 644.743 230.663 641.704 230.901 638.743 cv
230.928 638.188 231.007 637.66 231.086 637.105 cv
231.218 636.523 li
230.081 635.176 230.267 633.986 231.377 632.744 cv
231.615 632.507 231.535 631.688 231.297 631.449 cv
230.689 630.868 230.795 630.181 230.928 629.6 cv
231.218 628.198 232.011 626.824 230.319 625.688 cv
230.399 624.631 li
231.588 623.838 230.319 623.178 230.24 622.49 cv
230.214 622.252 229.553 622.041 229.183 621.829 cv
229.553 621.645 230.161 621.512 230.24 621.222 cv
230.558 620.006 230.716 618.737 230.874 617.495 cv
231.059 615.963 230.452 614.297 231.482 612.87 cv
230.98 611.179 231.377 609.223 230.002 607.743 cv
229.553 607.215 229.976 607.268 230.319 607.135 cv
230.584 607.029 230.822 606.659 230.874 606.396 cv
231.086 605.418 230.452 604.308 231.403 603.436 cv
231.403 603.33 231.086 602.854 230.901 602.59 cv
230.874 602.537 li
231.43 602.431 231.826 602.352 232.169 602.193 cv
234.205 601.241 236.319 600.739 238.618 600.925 cv
239.86 601.03 241.155 601.188 241.975 599.946 cv
243.375 600.713 244.485 601.797 246.018 600.476 cv
246.229 600.29 246.785 600.476 247.154 600.476 cv
248.45 600.396 248.45 600.396 248.502 599.048 cv
248.502 598.176 li
249.612 598.335 248.767 599.313 249.216 599.735 cv
249.718 599.92 li
250.167 599.709 li
250.247 599.153 250.194 598.572 250.299 598.018 cv
250.907 597.674 li
251.41 598.176 li
251.436 598.731 li
251.304 599.286 251.171 599.841 251.039 600.396 cv
251.7 600.448 252.387 600.555 253.021 600.528 cv
254.237 600.448 255.427 600.767 256.616 600.079 cv
257.515 599.55 258.889 600.476 259.893 599.55 cv
260.421 599.471 li
260.924 599.788 261.373 600.29 261.928 600.396 cv
262.404 600.502 262.959 600.132 263.487 600.105 cv
264.174 600.026 264.861 600.105 265.522 600.105 cv
265.575 600.053 265.628 600 265.654 599.974 cv
265.787 600.105 li
266.051 599.762 li
267.267 601.083 268.482 600.819 269.671 599.418 cv
269.91 599.153 270.438 599.153 270.808 599.021 cv
270.861 598.969 270.887 598.916 270.94 598.916 cv
270.412 600.079 270.676 600.634 271.39 600.739 cv
271.865 600.793 272.367 600.713 272.843 600.767 cv
273.847 600.898 274.852 600.502 275.882 601.295 cv
276.384 601.665 277.521 601.269 278.367 601.188 cv
279.027 601.109 279.662 600.793 280.269 600.872 cv
282.938 601.241 285.634 601.585 288.224 602.272 cv
288.964 602.457 289.678 602.537 290.392 602.695 cv
291.105 602.854 291.818 603.303 292.479 603.224 cv
293.986 603.092 295.202 603.832 296.576 604.096 cv
296.813 604.148 297.078 604.492 297.289 604.466 cv
299.007 604.123 300.461 604.836 301.729 605.813 cv
302.575 606.448 303.394 606.315 304.187 606.236 cv
305.191 606.157 306.301 606.368 306.803 606.95 cv
308.336 608.642 310.292 609.303 312.353 609.963 cv
313.278 610.254 314.045 611.021 314.891 611.575 cv
314.891 611.549 314.917 611.522 314.917 611.522 cv
314.97 611.575 315.076 611.628 315.261 611.602 cv
315.34 612.156 315.446 612.315 315.472 612.5 cv
315.525 614.033 317.295 614.086 317.903 615.223 cv
318.432 616.227 318.538 617.442 319.595 618.314 cv
321.233 619.636 322 621.486 322 623.653 cv
322 624.604 322.29 625.688 322.793 626.454 cv
323.295 627.221 322.713 628.198 323.189 628.569 cv
324.246 629.388 322.581 629.838 323.136 630.472 cv
322.476 631.238 323.083 632.058 323.136 632.85 cv
323.242 634.885 322.925 636.92 323.638 638.955 cv
323.929 639.774 323.4 640.885 323.11 641.836 cv
322.713 643.263 322.476 644.689 322.132 646.117 cv
321.868 647.412 322 648.073 323.268 648.416 cv
323.982 648.628 323.638 649.183 323.718 649.579 cv
323.77 649.659 323.797 649.765 323.85 649.844 cv
323.718 649.87 li
cp
228.364 526.211 mo
228.893 526.291 li
229.659 527.083 230.372 527.083 231.112 526.317 cv
231.747 525.656 231.588 524.837 231.377 524.203 cv
231.112 523.437 230.267 523.225 229.421 523.357 cv
228.839 523.331 li
228.628 523.146 li
228.893 522.802 li
229.157 522.749 229.474 522.749 229.765 522.802 cv
230.637 522.907 230.954 522.617 230.901 521.719 cv
230.848 520.106 230.901 518.494 230.874 516.855 cv
230.874 516.406 230.795 515.931 230.743 515.481 cv
230.478 515.587 230.187 515.692 229.923 515.825 cv
229.844 515.35 229.844 514.9 229.712 514.451 cv
229.5 513.79 231.535 514.741 230.452 513.446 cv
229.897 512.813 230.743 512.521 230.901 512.046 cv
231.086 511.438 231.35 510.883 231.456 510.275 cv
231.588 509.562 231.007 509.641 230.531 509.562 cv
230.24 509.535 229.765 509.244 229.765 509.06 cv
229.738 508.663 229.923 508.24 230.135 507.87 cv
230.267 507.711 230.637 507.685 230.874 507.605 cv
230.135 507.156 230.504 506.786 230.874 506.337 cv
230.822 505.809 li
230.584 505.518 230.293 505.227 229.976 505.016 cv
229.738 504.805 229.394 504.698 229.157 504.487 cv
229.474 503.905 li
230.848 503.51 230.874 503.536 230.874 502.954 cv
230.901 501.633 230.848 500.285 230.901 498.964 cv
230.954 497.959 230.689 496.981 231.403 496.003 cv
231.799 495.448 231.615 494.392 230.901 493.678 cv
230.399 493.176 231.72 491.828 230.029 491.802 cv
230.055 491.22 li
230.663 491.3 230.954 491.088 230.901 490.454 cv
230.425 486.014 231.561 481.653 231.535 477.239 cv
231.535 476.076 230.558 475.02 230.98 474.068 cv
231.35 473.196 232.46 472.614 233.226 471.901 cv
233.464 471.689 233.623 471.425 233.834 471.161 cv
233.888 471.108 233.914 471.055 233.967 471.055 cv
234.072 471.161 li
234.125 471.108 li
234.072 471.53 234.205 471.742 234.284 471.716 cv
234.812 471.61 235.394 471.479 235.79 471.161 cv
236.715 470.447 237.561 470.368 238.644 471.002 cv
239.173 471.293 240.072 471.425 240.547 471.161 cv
241.393 470.738 241.789 469.602 243.137 470.606 cv
243.851 471.135 245.146 470.923 246.177 471.028 cv
246.837 471.108 247.868 471.505 248.053 471.267 cv
248.793 470.315 249.612 471.928 250.484 471.002 cv
250.934 470.526 252.308 470.791 253.26 470.791 cv
254.475 470.791 255.744 470.606 256.827 471.398 cv
258.915 471.028 260.977 471.24 263.091 471.372 cv
264.174 471.451 265.152 470.474 266.474 471.425 cv
267.372 472.06 268.747 471.372 270.041 471.98 cv
271.231 472.562 272.949 472.35 274.35 472.06 cv
275.089 471.928 275.644 472.165 276.226 472.112 cv
278.367 471.98 280.243 472.72 282.225 473.328 cv
282.833 473.513 283.6 474.306 284.366 473.434 cv
285.211 473.434 li
288.145 475.02 291.739 474.518 294.594 476.341 cv
295.043 476.632 295.624 477.002 296.1 476.922 cv
297.923 476.632 298.849 477.821 300.064 478.799 cv
301.016 479.565 302.284 479.935 303.447 480.49 cv
303.685 480.596 304.028 480.569 304.213 480.701 cv
304.663 481.071 305.086 481.494 305.482 481.943 cv
305.878 482.393 306.169 482.948 306.592 483.371 cv
306.962 483.768 307.517 483.979 307.808 484.401 cv
308.125 484.824 308.151 485.432 308.442 485.855 cv
308.838 486.41 309.102 486.939 309.05 487.652 cv
308.997 488.102 308.997 488.63 309.208 489 cv
309.658 489.898 310.372 490.665 310.741 491.564 cv
311.138 492.463 310.557 493.493 311.164 494.55 cv
311.613 495.369 311.666 496.717 311.296 497.59 cv
310.424 499.704 310.9 501.845 310.794 503.958 cv
310.715 505.967 310.741 507.976 310.794 509.984 cv
310.847 512.02 310.424 513.922 309.71 515.852 cv
309.077 517.622 308.838 519.499 307.412 520.926 cv
306.988 521.349 306.909 522.063 306.671 522.617 cv
306.486 523.014 306.381 523.489 306.116 523.807 cv
305.27 524.784 303.738 525.207 303.685 526.767 cv
302.575 527.427 301.518 528.088 300.381 528.695 cv
299.52 529.165 298.618 529.614 297.721 530.064 cv
294.697 530.388 291.481 531.216 288.08 532.381 cv
285.416 533.294 282.705 533.977 279.962 534.498 cv
279.651 534.258 li
278.948 534.352 278.251 534.553 277.588 534.803 cv
277.544 534.91 li
276.178 535.121 274.806 535.304 273.427 535.445 cv
272.907 535.347 272.392 535.213 271.865 535.25 cv
270.517 535.355 269.143 535.25 267.795 535.25 cv
266.526 535.224 265.258 535.276 264.016 535.197 cv
263.222 535.131 263.035 535.626 263.143 536.01 cv
262.935 536.014 262.727 536.019 262.519 536.021 cv
262.166 535.778 li
261.162 535.541 260.184 535.25 259.18 535.171 cv
257.726 535.064 256.246 535.117 254.792 535.117 cv
254.396 535.091 253.999 535.038 253.603 535.117 cv
253.312 535.171 253.048 535.355 252.757 535.514 cv
252.599 535.171 252.519 534.827 252.308 534.536 cv
251.753 534.51 li
250.538 535.224 249.216 534.985 247.894 535.064 cv
247.683 535.064 247.524 535.541 247.339 535.778 cv
247.283 535.848 247.235 535.882 247.184 535.936 cv
246.898 535.934 246.613 535.934 246.328 535.934 cv
246.261 535.855 246.197 535.789 246.124 535.673 cv
245.093 534.008 244.934 533.981 243.375 535.145 cv
242.82 535.567 242.503 535.699 241.922 535.171 cv
241.552 534.827 240.891 534.695 240.547 534.324 cv
239.834 533.532 238.962 533.717 238.169 533.876 cv
237.429 534.034 239.252 534.695 238.037 534.933 cv
237.323 535.064 236.134 534.298 236.107 535.831 cv
235.499 535.673 li
234.997 535.594 234.521 535.541 234.019 535.487 cv
233.993 534.906 234.072 534.536 234.257 534.192 cv
234.495 533.717 234.601 533.241 233.888 533.188 cv
231.879 533.029 231.403 531.497 230.901 530.018 cv
230.743 529.515 231.059 528.802 230.081 529.541 cv
229.394 530.044 228.654 529.567 228.1 528.96 cv
227.544 528.352 226.884 527.85 227.862 527.136 cv
227.359 526.502 227.28 526.079 228.364 526.211 cv
cp
174.714 423.564 mo
173.974 424.092 li
173.631 424.462 173.313 424.885 172.917 425.202 cv
172.838 425.202 172.468 424.858 172.23 424.647 cv
173.155 424.594 172.679 423.854 172.811 423.404 cv
173.022 422.638 173.736 421.74 174.635 421.053 cv
174.556 420.974 li
174.741 420.974 li
174.978 420.788 175.111 420.867 175.084 420.894 cv
174.82 421.237 li
174.767 421.185 li
174.82 421.714 175.031 422.057 175.137 422.4 cv
175.216 422.797 176.379 423.695 174.714 423.564 cv
cp
403.849 650.214 mo
403.399 647.598 404.034 644.822 403.637 642.206 cv
403.426 640.646 403.267 639.114 403.135 637.528 cv
403.029 636.101 402.58 634.727 401.998 633.405 cv
401.867 633.088 402.025 632.639 401.972 632.269 cv
401.893 631.079 402.342 629.838 401.417 628.754 cv
401.391 627.908 li
400.836 627.089 402.289 626.454 401.47 625.477 cv
400.968 624.842 401.021 623.759 400.81 622.887 cv
400.598 622.015 400.518 621.09 400.149 620.27 cv
399.409 618.658 398.959 616.913 398.22 615.275 cv
397.638 614.007 397.109 612.659 396.449 611.391 cv
396.105 610.677 li
396.237 609.117 395.788 607.77 394.572 606.687 cv
394.334 606.21 li
394.757 603.567 392.432 602.167 391.454 600.158 cv
390.423 597.991 388.679 596.273 387.278 594.37 cv
386.829 593.762 386.776 593.233 386.617 592.6 cv
386.538 592.229 385.877 591.992 385.507 591.648 cv
384.899 591.093 384.318 590.512 383.737 590.063 cv
383.737 590.067 383.733 590.071 383.733 590.076 cv
383.729 590.07 383.726 590.063 383.722 590.058 cv
383.737 590.063 li
383.816 589.349 383.314 588.899 383.235 588.477 cv
383.05 587.473 382.31 586.918 381.675 586.574 cv
380.988 586.204 380.512 585.966 380.143 585.199 cv
379.825 584.539 379.006 584.063 378.372 583.562 cv
377.526 582.874 376.971 583.165 376.68 584.116 cv
376.339 583.934 375.997 583.775 375.656 583.615 cv
375.604 583.569 375.549 583.526 375.497 583.479 cv
375.432 582.903 376.006 582.398 375.975 582.069 cv
375.833 580.57 372.899 578.374 371.214 578.304 cv
370.802 578.287 370.579 578.332 370.426 578.438 cv
370.22 578.226 370.016 578.013 369.809 577.801 cv
369.81 577.798 369.811 577.796 369.812 577.793 cv
369.947 577.218 li
369.033 576.3 368.162 575.302 366.871 574.958 cv
366.595 574.706 366.326 574.445 366.044 574.2 cv
366.04 573.783 366.036 573.359 365.712 572.91 cv
365.263 572.303 365.343 571.431 364.682 570.743 cv
363.942 569.977 365.607 569.845 365.475 569.104 cv
365.395 568.708 365.025 568.206 365.158 568.021 cv
365.369 567.704 365.977 567.651 366.294 567.36 cv
366.558 566.436 li
366.373 566.145 365.924 565.986 365.581 565.774 cv
366.056 565.722 366.558 565.748 366.955 565.59 cv
369.783 564.348 372.478 562.974 373.72 559.934 cv
373.324 559.802 372.901 559.723 372.584 559.484 cv
372.425 559.405 372.505 558.956 372.558 558.692 cv
372.716 558.137 372.081 557.344 373.033 557.08 cv
374.038 556.789 374.46 557.212 374.91 558.798 cv
377.05 557.899 379.006 556.842 380.143 554.675 cv
380.512 553.935 381.358 553.459 381.966 552.851 cv
383.023 551.794 383.948 550.657 384.926 549.521 cv
387.727 546.165 389.657 542.359 391.533 538.501 cv
391.93 537.708 392.141 536.545 393.515 536.439 cv
393.832 536.439 394.149 535.619 394.308 535.117 cv
395.127 532.687 395.894 530.255 396.686 527.797 cv
396.924 527.136 397.03 526.317 397.479 525.868 cv
398.457 524.837 398.722 523.886 398.563 522.405 cv
398.457 521.137 399.277 519.71 399.805 518.415 cv
400.387 516.935 400.122 516.248 398.563 515.957 cv
397.823 515.825 397.004 515.957 396.237 515.904 cv
395.682 515.904 395.233 514.953 395.55 514.451 cv
395.947 514.345 li
396.211 516.143 397.109 514.874 397.876 514.848 cv
398.431 514.82 399.012 515.35 399.567 515.613 cv
400.757 516.195 400.862 516.169 400.783 514.848 cv
400.73 513.869 400.413 512.918 400.096 511.939 cv
399.7 511.597 li
400.043 511.491 li
400.202 511.913 li
400.968 511.702 401.47 511.332 401.391 510.592 cv
401.259 509.482 401.787 508.319 401.047 507.288 cv
401.602 504.963 400.387 502.717 400.783 500.391 cv
400.915 499.492 400.651 498.541 400.545 497.616 cv
400.281 497.22 li
402.501 495.951 400.36 494.232 400.73 492.727 cv
401.1 491.167 401.153 489.397 400.704 487.89 cv
400.307 486.489 400.281 485.168 400.228 483.794 cv
400.202 483.213 li
398.563 480.807 399.25 477.9 398.352 475.337 cv
397.796 473.698 397.506 472.007 397.268 470.315 cv
397.215 469.866 397.374 469.258 397.109 468.967 cv
395.709 467.408 395.55 465.347 394.652 463.603 cv
393.991 462.334 393.331 461.092 392.934 459.69 cv
392.643 458.687 392.405 457.577 391.348 456.863 cv
390.872 456.52 390.45 455.858 390.317 455.277 cv
389.657 452.291 387.251 450.361 385.692 447.931 cv
385.534 447.666 385.084 447.561 384.768 447.401 cv
383.05 446.477 383.05 446.477 381.966 445.208 cv
381.834 445.499 381.702 445.631 381.57 445.736 cv
381.146 446.054 380.75 446.318 380.328 446.608 cv
380.195 446.371 li
380.222 445.631 380.697 445.234 381.385 445.076 cv
381.913 445.076 li
381.728 444.68 381.596 444.31 381.331 444.204 cv
379.376 443.49 378.001 441.931 376.284 440.9 cv
375.808 440.609 375.359 440.16 374.857 440.107 cv
373.139 439.922 371.844 439.13 370.813 437.809 cv
370.073 437.491 li
368.329 437.86 367.06 436.751 365.66 436.117 cv
364.55 435.588 363.572 435.033 362.25 435.06 cv
361.484 435.086 360.612 434.822 359.898 434.479 cv
356.568 432.919 356.568 432.919 353.872 432.707 cv
352.657 432.602 351.494 432.179 350.305 432.152 cv
349.115 432.126 348.19 431.545 347.16 431.201 cv
345.442 430.673 343.644 430.593 341.954 431.466 cv
341.874 431.888 342.244 432.575 341.425 432.866 cv
341.292 433.368 341.161 433.526 341.028 433.712 cv
340.79 432.998 li
341.081 432.602 li
341.425 432.866 li
341.451 432.179 341.081 431.492 341.954 431.466 cv
341.848 431.096 341.689 430.726 341.61 430.355 cv
341.663 429.747 li
341.187 429.747 340.685 429.695 340.209 429.721 cv
339.125 429.854 339.971 430.197 340.103 430.514 cv
340.183 430.752 340.077 431.042 340.05 431.307 cv
339.416 430.963 li
338.65 430.382 339.337 429.457 338.967 428.875 cv
338.57 428.268 338.253 427.977 338.809 427.21 cv
339.205 426.708 338.94 425.757 339.019 425.017 cv
339.152 423.748 338.623 422.4 339.548 421.211 cv
339.839 420.841 339.786 419.995 339.575 419.52 cv
338.703 417.828 338.914 416.005 339.099 414.287 cv
339.178 413.362 337.46 412.49 339.019 411.591 cv
339.019 408.737 li
339.019 407.68 338.94 406.622 339.019 405.565 cv
339.125 404.588 339.522 403.636 339.575 402.658 cv
339.601 401.574 339.918 400.439 339.046 399.407 cv
338.809 399.117 339.099 398.456 338.993 398.007 cv
338.65 396.659 340.156 395.602 339.39 394.017 cv
338.809 392.854 339.073 391.268 339.019 389.867 cv
338.967 388.439 338.967 386.986 339.019 385.56 cv
339.099 384.185 338.597 383.075 337.645 382.07 cv
336.985 381.41 336.298 380.828 335.874 379.903 cv
335.558 379.163 334.791 378.344 333.576 378.477 cv
333.1 378.529 332.492 378.212 332.069 377.921 cv
329.955 376.468 327.55 376.626 325.198 376.759 cv
323.427 376.864 321.524 376.045 319.832 377.234 cv
319.701 377.314 319.331 377.049 319.066 377.022 cv
318.247 376.891 317.243 376.415 316.608 376.706 cv
314.151 377.763 311.64 376.864 309.182 377.154 cv
307.966 376.362 306.619 376.494 305.297 376.573 cv
303.711 376.652 302.152 376.97 300.54 377.049 cv
298.901 377.128 297.184 376.864 295.571 377.102 cv
294.673 377.234 293.986 377.234 293.087 377.075 cv
291.237 376.759 289.387 377.075 287.828 378.37 cv
287.088 379.005 286.136 379.586 285.211 379.745 cv
283.229 380.063 282.648 381.251 281.829 382.89 cv
281.009 384.502 280.719 385.982 280.851 387.62 cv
280.956 389.286 280.243 391.029 281.3 392.615 cv
280.798 393.487 281.406 394.386 281.353 395.259 cv
281.3 396.131 281.194 397.108 280.745 397.849 cv
279.793 399.381 280.137 400.809 280.824 402.288 cv
281.115 402.923 281.696 403.319 280.93 404.191 cv
280.481 404.693 280.824 405.83 280.798 406.676 cv
280.798 408.42 280.983 410.164 280.771 411.855 cv
280.534 413.573 281.485 415.106 281.406 416.798 cv
281.327 418.516 281.406 420.233 281.406 421.951 cv
281.406 422.532 281.617 423.457 281.353 423.616 cv
280.455 424.145 281.194 425.229 280.56 425.599 cv
280.111 425.836 279.424 425.757 278.842 425.678 cv
277.653 425.492 276.384 426.127 275.222 425.176 cv
274.957 424.938 274.059 425.572 273.451 425.599 cv
272.103 425.678 270.623 425.889 269.381 425.492 cv
268.456 425.229 268.06 426.55 267.081 425.757 cv
266.606 425.387 265.602 425.572 264.835 425.545 cv
263.963 425.519 263.091 425.545 262.192 425.519 cv
261.822 425.519 261.267 425.625 261.082 425.413 cv
260.078 424.224 259.126 425.202 258.307 425.545 cv
257.567 425.862 257.224 426.206 256.378 425.519 cv
255.638 424.938 254.528 424.726 253.444 424.832 cv
252.176 424.938 250.881 424.858 249.612 424.832 cv
247.551 424.779 245.569 425.202 243.613 425.81 cv
243.084 425.968 242.265 426.127 241.922 425.862 cv
240.785 424.964 239.517 425.466 238.328 425.281 cv
237.508 425.176 236.663 425.519 235.843 424.779 cv
235.526 424.488 234.521 424.647 233.967 424.885 cv
232.645 425.439 231.456 425.439 230.161 424.832 cv
229.685 424.594 228.866 424.436 228.522 424.673 cv
227.783 425.229 227.254 424.779 226.62 424.62 cv
225.536 424.304 225.219 423.774 225.853 422.955 cv
226.329 422.348 227.227 421.792 226.725 421.079 cv
225.985 419.995 226.17 418.912 226.223 417.828 cv
226.303 416.744 225.694 415.582 226.699 414.551 cv
226.857 414.393 226.249 413.626 226.223 413.124 cv
226.144 411.803 226.118 410.455 226.223 409.134 cv
226.329 407.865 226.249 406.622 226.62 405.301 cv
227.069 403.821 226.937 402.051 226.434 400.333 cv
226.012 398.8 226.408 397.029 226.461 395.364 cv
226.514 394.73 226.937 394.017 226.725 393.514 cv
225.959 391.611 226.064 389.841 226.725 387.911 cv
227.254 386.404 226.276 384.872 225.959 383.365 cv
225.589 381.647 225.404 381.595 223.554 379.798 cv
223.052 379.322 222.655 378.688 222.074 378.423 cv
221.519 378.159 220.567 378.714 220.832 377.393 cv
220.885 377.128 219.959 376.468 219.405 376.389 cv
218.585 376.256 217.607 376.23 216.894 376.573 cv
215.942 377.075 216.312 376.389 216.207 376.071 cv
215.942 375.199 214.542 376.336 214.462 375.147 cv
213.854 375.12 li
214.119 375.596 212.824 375.78 213.669 376.468 cv
213.987 376.706 213.775 377.524 213.881 378.054 cv
214.039 378.899 213.538 379.11 212.851 379.296 cv
212.586 379.375 212.348 380.009 212.137 379.296 cv
212.401 378.608 li
213.115 378.556 213.643 378.397 212.745 377.815 cv
212.004 377.314 212.745 376.68 212.48 376.415 cv
212.11 376.098 211.476 376.071 210.948 375.966 cv
210.313 375.859 209.679 375.754 209.044 375.648 cv
208.622 375.596 208.014 375.859 207.988 375.066 cv
206.825 375.066 li
205.582 375.78 204.658 376.177 203.97 376.177 cv
201.75 376.177 199.504 376.071 197.258 376.15 cv
195.117 376.23 192.95 376.6 190.809 376.6 cv
188.827 376.6 186.633 376.706 184.968 375.887 cv
182.986 374.935 181.585 375.913 179.947 376.177 cv
179.497 376.23 179.075 376.521 178.652 376.521 cv
176.802 376.441 174.952 376.256 173.789 378.106 cv
171.331 378.238 170.538 380.511 168.926 381.727 cv
168.768 381.859 168.768 382.149 169.244 382.44 cv
169.772 382.23 170.538 382.098 170.776 382.23 cv
170.908 382.309 170.961 382.52 169.904 382.731 cv
170.882 383.075 170.538 383.445 170.486 383.841 cv
170.38 384.528 170.01 384.607 169.534 384.397 cv
169.059 384.211 168.609 383.339 168.688 382.916 cv
168.266 382.995 168.16 383.075 168.133 383.181 cv
168.08 383.841 168.16 384.502 168.107 385.136 cv
168.028 385.876 168.688 386.828 169.931 386.643 cv
169.983 386.299 170.089 385.929 170.301 385.665 cv
170.38 385.532 170.829 385.639 171.12 385.639 cv
171.12 385.639 171.12 385.665 170.486 386.511 cv
171.384 385.665 171.727 385.586 171.939 385.691 cv
172.204 386.378 li
171.569 386.695 170.935 387.013 170.247 387.277 cv
169.931 388.572 169.931 389.313 168.53 389.101 cv
168.16 389.894 li
169.006 390.845 168.873 391.717 168.266 392.669 cv
168.133 393.171 li
168.53 394.254 168.371 395.285 168.16 396.421 cv
167.948 397.505 167.922 398.721 168.16 399.804 cv
168.477 401.416 168.688 402.897 167.526 404.244 cv
167.526 411.644 li
168.503 412.357 168.028 413.388 168.107 414.287 cv
168.186 415 168.239 415.635 168.609 416.375 cv
168.926 417.035 169.059 418.172 168.318 419.044 cv
168.08 419.334 168.16 420.127 168.397 420.524 cv
168.794 421.185 168.794 421.66 168.477 422.321 cv
168.239 422.744 168.292 423.325 168.213 423.854 cv
168.662 423.722 169.27 423.722 169.587 423.431 cv
170.75 422.348 171.173 423.193 171.622 424.092 cv
171.067 424.541 li
171.014 425.572 171.12 426.629 171.014 427.687 cv
170.961 428.162 170.591 428.664 170.274 429.061 cv
169.534 429.14 li
169.323 428.399 li
169.587 427.845 170.036 427.369 170.301 426.787 cv
170.882 425.439 170.327 424.964 168.582 424.99 cv
167.816 425.017 167.023 424.752 166.257 424.594 cv
165.543 424.436 164.83 425.466 164.116 424.567 cv
162.663 424.779 161.024 423.959 159.756 425.413 cv
159.544 425.678 158.143 425.413 157.879 425.017 cv
156.928 423.537 155.712 424.33 154.813 424.699 cv
154.02 425.017 153.518 425.122 152.778 424.699 cv
152.409 424.488 151.853 424.62 151.431 424.436 cv
150.268 423.986 149.422 425.73 148.233 424.779 cv
147.308 424.013 146.198 424.515 145.167 424.409 cv
144.004 424.304 142.788 424.197 141.652 424.409 cv
140.516 424.62 139.538 423.827 138.296 424.25 cv
137.185 424.62 135.785 424.25 134.543 424.304 cv
133.724 424.356 132.931 424.33 132.085 424.699 cv
131.028 425.096 129.574 424.938 128.438 424.567 cv
127.777 424.356 127.169 424.25 126.535 424.224 cv
125.557 424.171 124.553 424.039 123.601 424.224 cv
122.703 424.409 122.042 423.643 121.091 423.959 cv
120.219 424.25 119.188 424.118 118.236 424.145 cv
117.259 424.145 116.281 424.013 115.303 424.145 cv
113.03 424.436 110.705 424.409 108.59 425.73 cv
105.868 427.396 104.705 428.215 103.648 429.906 cv
103.199 430.593 102.987 430.91 104.044 430.99 cv
104.123 431.017 104.177 431.492 104.256 431.73 cv
103.913 431.782 103.569 431.914 103.251 431.888 cv
102.987 431.835 102.643 431.122 102.538 431.835 cv
102.194 433.659 101.164 435.456 102.379 437.412 cv
102.643 437.888 102.433 438.681 102.353 439.314 cv
102.274 439.816 102.142 440.372 101.904 440.821 cv
101.217 442.143 103.701 442.936 102.458 444.415 cv
101.507 445.578 101.64 446.979 102.406 448.273 cv
101.771 448.829 101.904 449.568 101.904 450.282 cv
101.904 451.815 102.353 452.952 103.701 454.088 cv
104.441 454.723 104.203 455.463 104.229 456.176 cv
103.701 456.651 li
102.538 456.414 102.697 457.153 102.406 457.92 cv
101.851 459.374 101.692 460.59 102.379 462.096 cv
102.749 462.889 102.485 463.946 102.485 464.897 cv
100.978 465.399 102.776 466.51 102.009 467.408 cv
101.481 468.042 101.93 469.443 101.904 470.474 cv
101.877 471.451 102.247 472.191 103.251 472.456 cv
103.489 472.271 103.622 472.35 103.595 472.377 cv
103.331 472.72 li
103.278 472.667 li
103.41 475.971 105.049 478.297 107.454 480.12 cv
108.352 480.78 109.647 480.913 110.81 481.204 cv
112.079 481.494 113.373 481.759 114.563 480.913 cv
115.118 482.815 116.73 481.759 117.84 482.023 cv
118.289 481.468 li
118.078 480.992 li
117.338 480.755 li
117.179 480.596 117.206 480.252 117.179 479.988 cv
117.787 480.12 li
118.448 480.543 118.871 480.438 118.871 479.618 cv
118.897 478.429 119.267 477.028 117.364 476.816 cv
117.497 476.553 117.734 476.076 117.682 476.05 cv
116.994 475.601 117.179 474.887 117.074 474.253 cv
117.047 473.988 116.915 473.725 116.836 473.434 cv
117.126 473.592 117.682 473.725 117.682 473.883 cv
117.708 474.887 119.294 475.099 118.897 476.288 cv
119.082 476.764 li
121.435 477.318 120.007 478.667 119.769 479.75 cv
119.69 480.199 119.558 480.622 119.478 481.071 cv
119.373 481.732 119.558 482.023 120.377 482.102 cv
122.412 482.34 124.289 481.6 126.27 481.494 cv
126.747 480.622 127.169 481.415 127.566 481.573 cv
129.231 482.287 131.054 482.155 133.037 481.917 cv
135.283 481.627 137.582 481.838 139.881 481.891 cv
140.41 481.917 140.938 482.234 141.467 482.261 cv
143.476 482.393 143.529 482.366 143.476 484.217 cv
143.449 485.485 143.608 486.727 143 488.022 cv
142.683 488.735 143.238 489.846 143.713 490.956 cv
143.767 490.903 li
143.767 491.088 li
143.846 491.432 li
143.502 491.167 li
142.366 491.484 143.159 492.356 143 492.991 cv
143.344 493.07 143.661 493.123 144.11 492.965 cv
144.083 492.938 li
144.242 492.938 li
144.48 492.753 144.612 492.832 144.612 492.858 cv
144.348 493.202 li
144.163 493.018 li
143.713 493.572 145.696 494.339 143.872 494.339 cv
143.37 494.339 142.788 494.286 142.921 494.999 cv
143.105 496.003 142.471 497.061 143.37 498.012 cv
143.608 498.276 143.502 498.911 143.476 499.36 cv
143.423 500.576 143.608 501.924 143.105 502.928 cv
142.445 504.303 144.004 505.175 143.502 506.337 cv
143.344 506.76 143.211 507.183 143.132 507.632 cv
143.026 508.267 142.815 508.928 142.947 509.535 cv
143.529 512.23 143.423 512.204 142.974 515.376 cv
142.788 516.776 142.498 518.362 143.37 519.789 cv
143.634 520.212 143.502 520.899 143.502 521.454 cv
143.502 523.647 143.449 525.841 143.529 528.035 cv
143.555 528.934 143.581 529.806 143.898 530.757 cv
144.216 531.788 143.634 533.162 143.317 534.378 cv
142.815 536.254 142.762 537.259 143.344 539.188 cv
143.502 539.426 li
143.687 540.8 142.894 542.2 143.105 543.416 cv
143.344 544.817 143.713 546.006 143 547.354 cv
142.762 547.804 142.683 548.623 142.947 548.992 cv
144.004 550.394 143.423 551.927 143.449 553.38 cv
143.476 554.754 143.951 556.207 143.132 557.529 cv
143.317 558.137 li
143.476 559.3 143.846 560.489 143.08 561.625 cv
142.841 561.942 143 562.498 143 562.947 cv
143.529 562.974 144.083 563.105 144.559 562.947 cv
144.929 562.841 145.167 562.418 145.22 563.105 cv
144.876 563.714 li
143.661 563.528 143.396 564.057 143.476 565.141 cv
143.529 565.934 143.819 566.858 142.921 567.466 cv
143.846 568.048 143.502 568.655 143 569.264 cv
143.872 569.924 143.396 570.849 143.476 571.642 cv
143.555 572.408 143.502 573.175 143.502 573.94 cv
143.502 574.787 143.555 575.659 143.476 576.505 cv
143.423 577.324 143.555 578.063 143.053 578.937 cv
142.392 580.046 143.29 581.394 143.476 582.636 cv
143.661 583.825 142.154 584.936 143.29 586.257 cv
143.608 586.627 143.476 587.34 143.502 587.896 cv
143.502 589.428 143.581 590.961 143.476 592.494 cv
143.396 593.842 143.026 595.189 142.947 596.537 cv
142.894 597.33 142.63 598.176 143.37 598.969 cv
143.661 599.286 143.581 600.079 143.476 600.607 cv
142.841 603.699 143.053 603.673 143.396 606.448 cv
143.608 608.245 143.661 610.121 143.185 612.024 cv
142.762 613.769 143.105 615.725 143.159 617.574 cv
143.159 618.103 143.502 618.632 143.476 619.16 cv
143.37 620.402 142.63 621.829 143.026 622.887 cv
143.502 624.103 143.581 625.266 143.449 626.401 cv
143.238 628.251 142.524 630.075 142.947 631.898 cv
144.057 636.603 143.211 641.308 143.502 646.012 cv
143.529 646.487 143.634 647.016 143.449 647.438 cv
143.264 647.888 142.841 648.47 142.418 648.549 cv
141.229 648.76 140.014 648.442 138.824 649.051 cv
138.349 649.288 137.45 648.1 136.551 648.733 cv
135.732 649.314 135.177 648.152 134.305 648.47 cv
133.618 648.707 132.746 648.496 131.979 648.47 cv
131.134 648.442 130.288 648.602 129.548 647.914 cv
129.336 647.703 128.728 647.729 128.412 647.888 cv
126.905 648.681 125.267 648.284 123.681 648.391 cv
122.677 648.47 121.672 648.945 120.694 648.893 cv
118.818 648.76 116.994 648.046 115.092 648.284 cv
114.457 647.307 113.929 647.861 113.189 648.205 cv
112.501 648.575 111.762 648.998 110.731 648.311 cv
110.018 647.861 108.722 648.046 107.797 648.76 cv
107.216 649.183 106.529 649.421 105.868 649.738 cv
103.886 650.689 102.168 651.693 101.692 654.23 cv
101.455 655.605 100.45 656.927 99.8686 658.301 cv
99.5517 659.067 99.3403 660.019 99.6572 660.389 cv
100.265 661.129 100.133 661.815 100.133 662.529 cv
100.133 663.745 100.926 665.093 99.6044 666.15 cv
99.5781 666.969 li
100.794 669.612 99.8686 672.36 100.133 675.056 cv
100.212 675.902 100.212 676.774 100.133 677.62 cv
100.054 678.624 100.476 679.654 99.6308 680.58 cv
99.3403 680.897 99.6835 681.822 99.8158 682.456 cv
100.08 683.672 100.529 684.861 100.688 686.104 cv
100.768 686.658 100.476 687.372 100.106 687.848 cv
99.393 688.772 99.3139 689.592 99.895 690.623 cv
100.212 691.151 100.265 691.944 100.106 692.525 cv
99.2079 696.41 99.7099 698.313 102.274 700.982 cv
102.855 701.563 103.225 702.33 103.754 702.965 cv
104.044 703.309 104.467 703.679 104.89 703.731 cv
106.159 703.916 107.163 704.524 107.982 705.476 cv
108.722 706.348 109.7 706.374 110.546 705.925 cv
111.312 705.528 111.841 705.793 112.581 705.898 cv
114.431 706.162 116.36 706.004 118.263 705.978 cv
118.686 705.978 119.214 705.581 119.558 705.714 cv
121.857 706.559 124.077 706.374 126.429 705.846 cv
127.777 705.555 129.469 705.29 130.895 706.321 cv
131.213 706.559 131.821 706.4 132.323 706.4 cv
135.256 706.453 138.163 706.479 141.097 706.507 cv
141.837 706.507 142.498 706.427 143.264 706.057 cv
143.925 705.74 145.088 705.607 145.986 706.374 cv
146.277 706.612 146.964 706.691 147.334 706.559 cv
150.056 705.528 152.858 706.242 155.606 706.136 cv
157.641 706.057 159.703 706.136 161.764 706.216 cv
162.583 706.242 163.508 705.846 164.222 706.665 cv
164.962 706.691 li
165.781 705.819 166.812 706.4 167.737 706.269 cv
168.451 706.162 168.847 706.453 168.688 707.22 cv
168.503 708.277 168.318 709.334 168.107 710.418 cv
167.922 711.369 168.16 712.347 167.737 713.404 cv
167.235 714.672 167.182 716.312 167.869 717.765 cv
168.213 718.558 168.133 719.271 167.816 720.117 cv
167.499 720.91 167.473 721.993 167.79 722.786 cv
168.16 723.737 168.186 724.398 167.764 725.376 cv
167.42 726.09 167.737 727.146 167.79 728.045 cv
167.843 728.547 168.133 729.129 168.001 729.578 cv
167.341 731.983 167.314 733.489 168.133 735.842 cv
168.266 736.265 168.503 736.661 168.768 737.005 cv
169.428 737.797 170.195 738.458 170.697 739.409 cv
171.093 740.149 172.045 740.784 172.891 741.048 cv
174.793 741.656 176.591 742.528 178.731 742.687 cv
180.687 742.819 182.669 743.083 184.651 743.215 cv
185.656 743.295 186.633 743.585 187.638 743.797 cv
188.192 742.448 189.514 744.299 190.122 743.269 cv
191.628 744.352 193.135 742.925 194.641 743.321 cv
195.434 743.532 196.227 743.85 197.019 743.876 cv
197.733 743.902 198.42 743.479 199.134 743.4 cv
199.557 743.374 200.006 743.691 200.455 743.743 cv
201.354 743.797 202.385 744.034 203.178 743.743 cv
204.155 743.4 204.895 743.215 205.82 743.85 cv
206.138 744.088 206.746 743.981 207.195 744.062 cv
208.78 744.325 210.472 743.532 211.978 744.643 cv
213.141 744.167 li
214.304 745.065 215.546 744.404 216.445 744.062 cv
217.449 743.691 218.533 743.506 219.51 743.03 cv
221.281 742.158 222.893 741.233 224.268 739.753 cv
224.875 739.093 225.536 738.511 225.536 737.718 cv
225.562 736.899 226.144 736.317 226.144 735.656 cv
226.091 734.389 227.624 733.596 226.857 732.036 cv
226.329 730.953 227.148 729.446 226.197 728.283 cv
226.514 726.09 225.536 723.79 226.725 721.623 cv
226.963 721.174 226.99 720.381 226.752 719.958 cv
225.642 718.161 226.461 716.259 226.197 714.435 cv
227.465 713.51 225.456 712.029 226.778 711.131 cv
226.54 710.365 226.487 709.413 225.985 708.885 cv
225.219 708.065 226.725 707.854 226.223 707.246 cv
226.963 707.035 227.677 706.823 228.417 706.612 cv
228.47 707.431 228.919 707.669 229.712 707.643 cv
230.346 707.616 230.769 707.272 231.271 707.114 cv
231.799 706.929 232.619 707.088 233.174 707.352 cv
234.31 707.881 235.447 707.774 236.53 707.563 cv
239.067 707.088 239.041 707.035 241.684 707.669 cv
242.424 707.854 243.243 707.695 244.01 707.802 cv
245.014 707.907 246.124 707.404 247.049 708.33 cv
247.234 708.541 247.842 708.515 248.159 708.383 cv
248.819 708.092 249.401 707.669 250.009 707.325 cv
250.564 708.145 251.41 707.854 252.149 707.881 cv
254.581 707.934 257.039 707.907 259.47 707.986 cv
261.188 708.039 262.774 707.035 264.518 707.457 cv
265.337 707.643 266.157 707.272 267.002 707.934 cv
267.399 708.25 268.403 707.774 269.117 707.748 cv
270.041 707.695 271.046 707.511 271.865 707.774 cv
273.001 708.171 273.979 708.356 275.089 707.774 cv
275.327 707.643 275.75 707.748 276.067 707.854 cv
277.441 708.383 278.869 708.409 280.19 707.907 cv
280.798 707.669 280.798 707.881 280.798 708.277 cv
280.824 709.123 280.798 709.995 280.798 710.867 cv
280.824 711.237 280.745 711.634 280.851 711.977 cv
281.591 714.25 281.458 714.566 280.904 717.686 cv
280.534 719.642 280.639 721.676 281.935 723.764 cv
282.146 723.764 282.357 723.922 281.987 723.87 cv
282.251 724.346 282.014 724.583 281.749 724.848 cv
281.617 724.557 281.485 724.293 281.432 724.002 cv
281.009 724.107 280.824 724.293 280.824 724.478 cv
280.798 727.226 280.719 730.001 280.851 732.75 cv
280.93 734.282 281.485 735.789 281.458 737.375 cv
281.458 738.062 282.014 738.96 282.595 739.437 cv
283.679 740.281 283.705 741.894 285.344 742.422 cv
286.163 742.687 287.035 742.422 287.748 742.951 cv
288.356 743.374 288.964 743.771 289.572 744.193 cv
291.951 743.691 li
291.977 743.4 290.788 743.109 291.924 742.846 cv
292.638 742.687 292.479 743.374 292.638 743.771 cv
293.034 744.167 li
293.457 744.563 li
293.722 744.114 li
293.933 743.611 294.065 743.109 294.303 742.634 cv
294.884 742.581 li
295.069 742.793 295.202 743.109 295.254 743.374 cv
294.858 743.771 li
294.409 744.378 li
294.673 744.457 294.937 744.563 295.202 744.59 cv
295.968 744.616 296.761 744.59 297.527 744.643 cv
298.478 744.695 299.219 744.695 299.06 743.348 cv
298.981 742.713 299.668 742.951 300.249 742.739 cv
300.196 742.687 li
300.381 742.66 li
300.619 742.476 300.725 742.581 300.725 742.581 cv
300.461 742.925 li
300.566 743.269 300.751 743.453 300.963 743.479 cv
301.227 743.506 301.544 743.241 301.835 743.109 cv
301.782 743.611 301.809 744.167 301.65 744.643 cv
301.597 744.854 301.148 744.934 300.883 745.065 cv
301.253 745.118 301.703 745.356 301.967 745.224 cv
303.5 744.536 304.98 744.325 306.513 745.276 cv
306.856 745.488 307.491 745.409 307.966 745.33 cv
312.01 744.59 312.618 744.59 316.397 745.409 cv
316.952 745.541 317.56 745.462 318.168 745.462 cv
321.683 745.515 325.198 745.594 328.739 745.567 cv
330.034 745.541 331.303 745.25 332.598 745.065 cv
333.073 744.827 li
335.161 742.713 337.513 740.916 338.518 737.903 cv
339.046 736.212 339.363 734.441 340.13 732.829 cv
340.394 732.248 339.892 731.64 339.707 731.059 cv
339.443 730.239 338.359 729.499 339.39 728.283 cv
340.262 727.252 338.993 725.799 339.099 724.609 cv
339.205 723.394 339.654 722.337 339.337 720.963 cv
338.729 718.319 338.703 715.571 339.363 712.901 cv
339.496 712.399 339.575 711.766 339.363 711.369 cv
338.782 710.365 338.914 709.413 339.258 708.436 cv
339.337 708.197 339.601 707.96 339.575 707.722 cv
339.548 707.167 339.125 706.427 339.363 706.109 cv
340.05 705.158 341.345 705.158 342.376 705.026 cv
343.935 704.814 345.601 705.158 346.922 703.942 cv
347.133 703.758 347.741 704.021 348.032 703.863 cv
348.877 703.467 349.221 705.132 350.067 704.313 cv
350.833 703.572 351.758 704.181 352.551 703.916 cv
353.265 703.705 353.846 703.203 354.665 703.388 cv
355.432 703.15 li
356.198 701.723 357.784 702.172 358.894 701.987 cv
361.669 701.511 361.695 701.723 363.519 700.56 cv
363.81 700.349 364.18 700.058 364.47 700.084 cv
366.558 700.269 368.118 699 369.941 698.445 cv
371.765 697.864 373.641 697.494 375.491 697.019 cv
375.359 696.754 li
374.962 696.41 li
375.306 696.305 li
375.491 696.728 li
377.447 696.596 378.715 695.354 379.984 694.322 cv
381.094 693.45 382.336 692.711 383.552 692.367 cv
384.582 692.103 385.296 691.68 385.904 690.992 cv
386.987 689.751 387.992 688.429 388.706 687.24 cv
387.992 686.976 387.622 686.685 387.384 686.341 cv
387.41 685.601 li
388.124 685.442 li
388.626 686.156 388.943 685.839 389.393 685.39 cv
389.551 685.231 389.921 685.205 390.185 685.126 cv
390.132 685.39 390.159 685.681 390.027 685.865 cv
389.736 686.235 389.366 686.553 389.022 686.87 cv
388.706 687.24 li
389.472 687.028 390.132 687.028 390.291 686.737 cv
391.216 685.072 392.775 683.963 394.017 682.615 cv
394.757 681.796 395.497 680.95 396.052 680.025 cv
396.264 679.629 396.237 679.338 396.819 679.126 cv
397.294 678.968 397.532 678.201 397.902 677.726 cv
398.537 676.933 399.065 676.061 399.779 675.374 cv
401.206 674.052 401.655 672.334 401.946 670.59 cv
402.078 669.771 402.131 668.978 402.58 668.264 cv
403.003 667.63 403.267 667.022 403.188 666.229 cv
403.109 665.41 402.977 664.538 403.717 663.877 cv
403.162 663.296 li
402.818 663.692 li
402.712 663.349 li
403.162 663.163 li
403.162 663.296 li
403.426 662.529 404.113 661.921 403.69 661.154 cv
403.532 660.838 403.003 660.732 402.633 660.521 cv
403.003 660.31 403.69 660.019 403.69 659.886 cv
403.478 659.173 404.007 658.618 404.086 657.983 cv
404.404 655.367 404.325 652.83 403.849 650.214 cv
cp
f
373.193 559.02 mo
373.464 559.362 li
373.727 559.365 li
373.55 558.929 li
373.193 559.02 li
cp
f
823.374 439.474 mo
823.242 439.843 823.294 440.16 823.242 440.504 cv
823.215 440.953 li
823.004 441.244 823.004 441.588 822.925 441.904 cv
822.792 442.274 822.819 442.618 822.792 442.988 cv
822.713 443.411 li
822.766 443.622 li
822.845 443.887 823.083 444.151 822.925 444.389 cv
822.766 444.601 822.872 444.917 822.607 445.103 cv
822.422 445.234 822.37 445.473 822.475 445.763 cv
822.555 446.027 822.475 446.318 822.343 446.608 cv
822.132 447.138 821.92 447.666 822.026 448.247 cv
821.92 448.512 li
821.603 448.987 821.577 449.568 821.418 450.124 cv
821.18 450.891 820.89 452.08 820.255 452.925 cv
820.018 453.269 819.647 453.691 820.018 454.247 cv
820.15 454.432 819.991 454.644 819.727 454.723 cv
819.304 454.855 819.013 455.065 819.119 455.595 cv
819.013 455.832 li
818.908 456.07 818.749 456.281 818.669 456.546 cv
818.564 456.942 818.379 457.286 818.167 457.63 cv
817.665 458.422 817.084 459.136 816.661 459.981 cv
816.423 460.457 816 460.934 815.525 461.25 cv
815.26 461.462 815.075 461.673 815.022 461.964 cv
814.943 462.28 814.758 462.571 814.52 462.73 cv
814.177 462.968 813.886 463.232 813.675 463.603 cv
813.331 463.866 li
813.067 464.025 812.829 464.184 812.882 464.554 cv
812.538 464.897 812.591 465.584 811.877 465.584 cv
811.613 465.822 li
811.402 466.351 810.9 466.563 810.53 466.88 cv
809.922 467.355 809.367 467.884 808.891 468.491 cv
808.68 468.624 li
808.019 468.73 807.808 468.888 807.517 469.549 cv
807.147 469.84 li
806.698 469.76 806.354 469.919 806.09 470.262 cv
805.799 470.447 li
805.164 470.87 804.53 471.267 803.976 471.795 cv
803.632 472.112 803.235 472.297 802.812 472.456 cv
802.152 472.667 801.491 472.879 800.989 473.407 cv
800.804 473.486 li
800.46 473.539 800.223 473.725 799.985 473.937 cv
799.641 474.068 li
799.351 473.751 799.113 474.068 798.901 474.121 cv
798.399 474.332 797.923 474.597 797.421 474.808 cv
797.157 474.887 li
796.576 475.046 795.994 475.072 795.492 475.469 cv
795.175 475.706 794.752 475.865 794.329 475.786 cv
793.959 475.865 li
793.483 476.155 792.928 476.104 792.4 476.104 cv
791.871 476.076 791.395 476.262 790.973 476.553 cv
790.682 476.737 790.418 476.764 790.127 476.632 cv
789.493 476.632 li
788.885 476.658 li
788.621 476.869 788.303 476.843 787.96 476.869 cv
787.722 476.869 787.431 476.737 787.167 476.975 cv
786.982 476.975 li
786.295 476.685 785.581 476.948 784.894 476.869 cv
784.55 477.187 784.101 476.948 783.705 477.134 cv
783.335 477.292 782.859 477.16 782.436 477.16 cv
782.066 477.107 li
781.617 476.948 781.511 476.922 781.115 477.107 cv
780.639 477.081 li
780.137 476.764 779.582 476.658 778.974 476.685 cv
778.34 476.605 li
777.891 476.262 777.335 476.42 776.807 476.394 cv
776.569 476.737 776.358 476.394 776.12 476.367 cv
775.855 476.262 li
775.168 476.05 774.455 475.839 773.741 475.627 cv
773.081 475.442 772.367 475.31 771.759 474.913 cv
771.151 474.729 li
770.649 474.755 770.306 474.544 769.988 474.2 cv
769.407 473.937 li
769.011 473.883 768.614 473.777 768.244 473.646 cv
767.795 473.249 li
767.24 472.958 li
766.738 472.958 li
766.156 472.746 li
765.866 472.614 765.575 472.482 765.337 472.297 cv
764.94 471.901 764.332 471.769 764.016 471.267 cv
763.883 471.214 li
763.302 471.082 762.827 470.791 762.377 470.447 cv
761.98 470.104 761.505 469.893 761.187 469.39 cv
760.977 469.047 760.659 468.73 760.236 468.624 cv
759.655 468.439 759.232 468.016 758.862 467.593 cv
758.254 466.959 li
758.069 466.721 li
757.911 466.457 756.801 465.479 756.589 465.373 cv
756.193 465.215 755.929 464.897 755.796 464.501 cv
755.691 464.263 755.532 464.105 755.321 463.92 cv
755.109 463.734 754.818 463.629 754.66 463.312 cv
754.501 463.021 754.184 462.836 754.079 462.466 cv
753.708 462.043 li
753.286 461.673 752.995 461.224 752.731 460.748 cv
752.546 460.404 752.361 460.088 752.07 459.797 cv
751.832 459.532 li
751.885 459.109 751.541 458.978 751.33 458.739 cv
750.907 458.079 li
750.748 457.788 750.59 457.497 750.405 457.207 cv
750.22 456.942 749.903 456.784 749.797 456.387 cv
749.691 456.097 749.506 455.806 749.506 455.437 cv
749.268 454.855 li
748.898 454.458 748.872 453.903 748.608 453.454 cv
748.423 453.084 li
748.159 452.846 748.106 452.74 748 452.502 cv
747.815 452.159 747.815 451.789 747.868 451.419 cv
747.894 451.128 747.841 450.812 747.656 450.679 cv
746.969 450.098 747.26 449.066 746.626 448.485 cv
746.626 447.587 li
746.705 447.11 746.494 446.689 746.256 446.371 cv
745.991 446.054 746.044 445.789 746.071 445.42 cv
746.123 444.892 746.044 444.362 746.018 443.834 cv
745.886 443.675 li
745.701 443.278 745.384 442.936 745.674 442.459 cv
745.595 442.169 li
745.542 441.904 745.199 441.667 745.542 441.376 cv
745.516 440.98 745.674 440.583 745.463 440.187 cv
745.41 439.685 li
745.542 439.288 li
745.41 438.892 li
745.41 438.653 745.357 438.363 745.516 438.125 cv
745.278 437.755 745.436 437.306 745.41 436.884 cv
745.41 436.486 745.278 436.037 745.542 435.642 cv
745.463 435.324 li
745.41 435.112 li
745.753 434.875 745.463 434.479 745.674 434.161 cv
745.833 433.897 745.727 433.447 745.701 433.104 cv
745.886 432.654 li
746.176 432.47 746.15 432.205 746.176 431.914 cv
746.203 431.65 746.441 431.386 746.309 431.148 cv
746.097 430.831 746.176 430.593 746.256 430.25 cv
746.361 429.933 746.309 429.563 746.335 429.219 cv
746.388 429.087 li
747.022 428.506 746.811 427.58 747.233 426.92 cv
747.154 426.497 li
747.181 426.339 li
747.841 425.651 747.868 425.651 747.841 424.858 cv
747.841 424.488 747.894 424.171 748.106 423.827 cv
748.344 423.511 748.528 423.114 748.581 422.744 cv
748.661 422.321 748.872 421.978 749.11 421.66 cv
749.374 421.343 749.586 421.026 749.533 420.604 cv
749.744 420.074 li
750.273 419.467 li
750.378 419.229 750.432 418.965 750.432 418.7 cv
750.722 418.251 li
751.171 417.987 751.488 417.644 751.515 417.089 cv
751.673 416.771 li
752.097 416.349 li
752.414 415.846 752.784 415.37 753.18 414.974 cv
753.418 414.736 753.602 414.524 753.708 414.181 cv
753.788 413.917 754.158 413.705 754.369 413.468 cv
754.395 413.336 li
754.395 413.019 754.607 412.859 754.818 412.78 cv
755.215 412.596 755.532 412.278 755.691 411.961 cv
755.955 411.433 756.457 411.195 756.801 410.772 cv
757.144 410.455 li
757.276 410.164 757.54 410.032 757.805 409.899 cv
758.122 409.609 li
758.281 409.292 758.492 408.975 758.756 408.816 cv
759.047 408.631 759.153 408.287 759.47 408.155 cv
759.707 408.05 759.946 407.839 760.236 407.785 cv
760.606 407.706 760.633 407.336 760.871 407.151 cv
761.347 406.834 li
761.664 406.781 761.743 406.544 761.796 406.332 cv
761.875 406.041 762.06 406.015 762.298 406.041 cv
762.958 406.094 763.408 405.83 763.725 405.222 cv
763.91 404.904 764.227 404.72 764.544 404.509 cv
765.073 404.667 765.39 404.297 765.733 404.032 cv
766.024 403.821 766.341 403.716 766.685 403.583 cv
767.055 403.372 li
767.24 402.764 767.768 402.764 768.27 402.685 cv
768.667 402.632 769.116 402.553 769.328 402.288 cv
769.565 401.971 769.83 401.945 770.147 401.919 cv
770.781 401.76 li
771.151 401.601 771.495 401.39 771.838 401.205 cv
772.288 401.02 li
772.737 401.072 773.054 400.835 773.372 400.676 cv
774.005 400.544 li
774.296 400.57 774.534 400.465 774.798 400.386 cv
775.116 400.253 li
775.539 400.279 775.935 400.2 776.252 399.857 cv
776.437 399.777 li
777.045 399.777 li
777.6 399.619 li
778.207 399.619 li
778.789 399.566 li
779.318 399.646 li
779.899 399.566 780.48 399.593 781.088 399.513 cv
781.775 399.381 782.489 399.223 783.229 399.328 cv
783.52 399.275 li
783.996 399.037 784.445 399.17 784.92 399.381 cv
785.079 399.407 li
785.476 399.091 785.951 399.196 786.427 399.17 cv
786.612 399.011 li
786.77 399.011 li
786.929 399.381 li
787.246 399.513 787.59 399.672 787.907 399.593 cv
788.594 399.487 788.594 399.435 789.308 399.619 cv
789.968 399.619 li
790.391 399.355 790.602 399.619 790.84 399.804 cv
791.21 400.068 li
791.607 400.068 791.951 400.333 792.347 400.253 cv
792.955 400.253 li
793.536 400.465 794.144 400.544 794.752 400.544 cv
795.439 400.544 796.047 400.782 796.522 401.231 cv
796.893 401.574 797.394 401.601 797.791 401.865 cv
798.372 401.919 li
799.007 401.919 799.509 402.262 800.038 402.474 cv
800.354 402.632 800.566 403.028 800.989 402.976 cv
801.491 402.897 801.491 403.451 801.782 403.583 cv
802.099 403.583 li
802.443 403.636 li
802.971 403.98 803.605 404.112 804.055 404.614 cv
804.504 404.904 li
804.874 404.931 805.033 405.169 805.244 405.355 cv
805.587 405.697 805.905 406.015 806.407 406.094 cv
806.698 406.12 806.962 406.358 807.226 406.49 cv
807.358 406.622 li
807.305 406.887 807.649 407.019 807.649 407.178 cv
807.675 407.627 808.151 407.257 808.204 407.548 cv
808.759 407.785 809.208 408.208 809.684 408.578 cv
810.054 408.896 810.503 409.134 810.662 409.689 cv
811.217 410.164 li
811.666 410.534 812.195 410.798 812.459 411.354 cv
812.618 411.644 812.803 411.908 813.146 412.066 cv
813.331 412.119 813.463 412.305 813.49 412.596 cv
813.86 413.203 li
814.309 413.759 814.996 414.102 815.313 414.789 cv
815.525 415 li
815.842 415.186 816.053 415.503 816.212 415.794 cv
816.529 416.322 816.767 416.877 817.11 417.405 cv
817.48 417.802 li
817.85 418.013 818.062 418.41 818.247 418.832 cv
818.485 419.388 818.643 420.048 819.039 420.551 cv
819.304 420.867 819.383 421.264 819.568 421.634 cv
819.78 422.109 819.991 422.585 820.282 423.009 cv
820.44 423.272 820.757 423.511 820.652 423.934 cv
820.573 424.277 820.731 424.541 820.995 424.779 cv
821.233 424.99 821.392 425.36 821.233 425.651 cv
821.26 426.153 li
821.365 426.392 821.445 426.682 821.497 426.946 cv
821.603 427.554 821.947 428.082 822.079 428.717 cv
822.158 429.087 822.343 429.483 822.343 429.906 cv
822.475 430.224 li
822.607 430.487 822.66 430.778 822.634 431.069 cv
822.634 431.466 822.581 431.862 822.792 432.231 cv
822.977 432.522 822.872 432.866 822.951 433.157 cv
823.083 433.447 823.083 433.765 823.083 434.082 cv
823.083 434.372 823.057 434.637 822.977 434.928 cv
822.898 435.218 823.083 435.562 823.083 435.853 cv
823.083 436.144 823.189 436.381 823.242 436.646 cv
823.294 436.884 823.215 437.147 823.374 437.439 cv
823.559 437.729 823.268 438.072 823.268 438.416 cv
823.268 438.786 823.479 439.183 823.374 439.474 cv
cp
905.725 364.76 mo
905.883 364.495 li
905.857 363.412 905.936 362.328 905.725 361.245 cv
905.434 359.791 905.751 358.391 905.46 356.964 cv
905.751 356.673 li
905.963 356.488 li
905.645 355.536 906.016 354.638 905.883 353.713 cv
905.778 352.867 905.672 352.022 905.54 351.176 cv
905.487 350.62 li
905.989 350.145 905.514 349.59 905.54 349.088 cv
905.593 348.586 905.619 348.083 905.645 347.581 cv
905.725 346.604 904.985 345.679 904.932 344.7 cv
904.271 344.252 904.906 343.194 903.531 343.036 cv
903.505 342.824 li
903.108 342.217 902.844 341.529 901.813 341.318 cv
901.497 341.027 li
901.417 340.605 901.126 340.499 900.624 340.393 cv
900.043 340.287 899.303 340.261 898.986 339.68 cv
898.483 339.494 li
897.929 339.283 897.373 339.257 896.792 339.283 cv
896.264 339.178 li
896.184 338.648 895.735 338.834 895.392 338.834 cv
892.484 338.807 889.577 338.834 886.67 338.834 cv
883.763 338.834 880.856 338.807 877.949 338.834 cv
875.094 338.86 872.214 338.543 869.333 338.569 cv
868.435 338.596 867.509 338.596 866.584 338.596 cv
859.977 338.622 853.344 338.596 846.763 338.596 cv
846.102 338.596 845.415 338.49 844.834 338.807 cv
843.83 338.807 li
843.222 338.49 842.693 338.622 842.138 338.596 cv
841.583 338.569 841.055 338.596 840.499 338.596 cv
837.249 338.596 li
836.72 338.596 836.06 338.464 835.637 338.622 cv
835.108 338.834 834.711 338.569 834.262 338.569 cv
830.615 338.596 826.942 338.517 823.321 338.622 cv
819.674 338.701 816 338.358 812.327 338.358 cv
800.487 338.385 788.621 338.358 776.754 338.358 cv
776.331 338.358 775.829 338.464 775.459 338.331 cv
774.19 337.829 772.869 338.464 771.627 337.908 cv
770.702 338.411 769.565 338.12 768.535 338.12 cv
762.694 338.147 756.827 338.12 750.96 338.12 cv
750.167 338.12 749.401 338.147 748.608 338.147 cv
747.974 338.147 747.313 338.147 746.679 338.12 cv
745.278 338.12 743.904 338.067 742.503 337.962 cv
739.728 337.724 736.979 338.12 734.178 337.671 cv
728.522 337.671 722.893 337.724 717.211 337.671 cv
711.581 337.618 706.005 337.935 700.35 337.459 cv
692.209 337.459 684.096 337.433 675.982 337.459 cv
674.635 337.459 673.313 337.433 671.992 337.645 cv
670.221 337.908 668.741 338.517 667.393 339.336 cv
665.702 340.393 665.067 341.979 664.143 343.458 cv
664.116 343.776 li
664.143 345.256 663.878 346.735 664.143 348.242 cv
664.222 348.823 li
664.248 349.405 li
664.328 351.625 664.38 353.845 664.459 356.064 cv
664.274 356.435 li
663.984 356.461 663.852 356.541 663.905 356.778 cv
664.248 358.417 663.799 360.003 663.984 361.642 cv
664.09 362.646 664.195 363.649 664.195 364.654 cv
664.195 365.605 664.433 366.583 664.195 367.562 cv
663.984 368.513 664.274 369.57 664.354 370.574 cv
664.38 370.786 664.459 371.05 663.984 371.023 cv
663.825 371.288 li
663.852 371.975 663.957 372.689 663.957 373.376 cv
663.957 374.036 663.852 374.697 663.825 375.357 cv
663.825 375.78 663.878 376.23 663.931 376.626 cv
663.984 377.022 663.957 377.445 664.195 377.736 cv
664.618 378.212 664.037 378.503 664.063 378.899 cv
664.169 380.802 664.169 382.705 664.222 384.607 cv
664.248 385.083 li
664.301 385.321 664.222 385.427 663.905 385.453 cv
663.72 385.797 li
663.772 387.99 663.852 390.185 663.905 392.378 cv
663.905 392.51 li
664.01 395.021 664.09 397.505 664.169 400.042 cv
664.037 400.412 li
663.535 400.386 663.641 400.649 663.641 400.888 cv
663.641 402.13 663.772 403.398 663.693 404.667 cv
663.587 406.464 663.852 408.287 663.931 410.085 cv
663.984 410.719 663.984 411.38 663.931 412.014 cv
663.746 414.128 663.984 416.296 664.037 418.437 cv
663.931 418.832 li
663.535 418.832 663.456 418.991 663.508 419.282 cv
663.852 421.819 663.482 424.356 663.746 426.92 cv
663.852 427.871 663.878 428.796 663.905 429.747 cv
663.905 430.408 li
663.931 431.439 663.931 432.47 663.931 433.5 cv
663.772 433.87 li
663.429 433.897 663.35 434.002 663.402 434.24 cv
663.772 436.09 663.35 437.914 663.508 439.79 cv
663.641 441.218 663.772 442.671 663.825 444.099 cv
663.852 444.838 663.693 445.578 663.693 446.292 cv
663.72 447.084 663.799 447.877 663.852 448.696 cv
663.746 448.987 li
663.323 448.987 663.27 449.146 663.323 449.437 cv
663.641 452.08 663.27 454.67 663.535 457.313 cv
663.587 457.867 li
663.641 458.264 li
663.772 460.141 663.72 462.017 663.772 463.894 cv
663.587 464.263 li
663.244 464.263 663.164 464.396 663.218 464.633 cv
663.561 466.483 663.112 468.307 663.323 470.156 cv
663.323 470.368 li
663.376 470.897 li
663.72 473.751 663.429 476.579 663.667 479.433 cv
663.72 479.671 663.772 479.935 663.27 479.909 cv
663.138 480.173 li
663.164 480.939 663.27 481.68 663.297 482.393 cv
663.297 483.133 663.138 483.873 663.164 484.613 cv
663.191 485.882 663.27 487.15 663.429 488.419 cv
663.72 490.639 663.218 492.779 663.587 494.973 cv
663.402 495.343 li
663.059 495.369 663.006 495.501 663.033 495.739 cv
663.164 496.797 663.191 497.854 663.164 498.885 cv
663.164 499.122 li
663.191 500.153 663.218 501.184 663.164 502.188 cv
663.164 502.505 663.191 502.849 663.244 503.192 cv
663.402 504.593 663.772 506.046 663.27 507.421 cv
663.535 509.165 663.323 510.909 663.35 512.653 cv
663.35 513.314 663.456 514.001 663.456 514.662 cv
663.191 514.953 li
663.138 514.927 li
663.112 515.376 663.059 515.825 663.006 516.274 cv
662.979 516.406 li
663.033 517.252 663.059 518.124 662.927 518.97 cv
662.742 519.921 663.006 520.952 663.085 521.956 cv
663.164 522.961 663.138 523.965 663.323 524.942 cv
663.376 525.604 li
663.35 526.37 663.112 527.083 663.191 527.85 cv
663.323 528.986 663.323 530.123 663.456 531.232 cv
663.535 531.946 663.667 532.713 664.01 533.374 cv
664.169 533.69 664.01 534.324 664.883 534.352 cv
664.935 534.378 li
665.226 534.854 li
665.226 535.382 666.283 535.514 666.045 536.148 cv
666.045 536.228 666.574 536.466 666.891 536.571 cv
667.155 536.677 667.658 536.65 667.71 536.782 cv
667.948 537.391 668.556 537.496 669.19 537.654 cv
669.508 537.919 li
669.534 538.184 669.666 538.236 669.983 538.289 cv
671.199 538.501 672.388 538.765 673.63 538.765 cv
799.879 538.765 li
800.302 538.765 800.698 538.791 801.121 538.765 cv
801.518 538.659 li
801.888 538.104 li
802.231 538.104 802.443 538.368 802.522 538.659 cv
802.945 538.765 li
803.289 538.791 803.658 538.765 804.028 538.765 cv
895.629 538.765 li
896.66 538.765 897.691 538.606 898.722 538.501 cv
899.065 538.342 li
899.461 537.787 li
900.254 537.549 li
900.624 537.364 901.179 537.152 901.206 536.915 cv
901.206 536.307 901.893 536.624 902.131 536.413 cv
902.421 536.043 li
902.289 535.619 902.633 535.435 902.844 535.197 cv
903.849 534.061 904.536 532.845 904.298 531.339 cv
904.192 530.704 904.113 530.07 904.06 529.436 cv
903.98 528.96 904.351 528.563 904.192 528.035 cv
904.086 527.612 904.086 527.189 904.271 526.74 cv
904.456 526.317 904.165 525.762 904.113 525.26 cv
904.245 524.969 li
904.562 524.969 904.721 524.89 904.668 524.626 cv
904.588 524.203 904.509 523.779 904.509 523.357 cv
904.509 522.935 904.668 522.511 904.615 522.089 cv
904.536 521.084 904.403 520.106 904.245 519.102 cv
904.165 518.759 904.192 518.441 904.192 518.124 cv
904.245 517.728 li
904.298 517.357 li
904.324 516.961 904.298 516.591 904.165 516.195 cv
904.113 515.983 903.98 515.692 904.509 515.692 cv
904.668 515.296 li
904.588 514.557 904.615 513.79 904.615 513.05 cv
904.615 512.469 904.562 511.86 904.483 511.253 cv
904.43 510.988 904.403 510.725 904.377 510.434 cv
904.324 509.932 li
904.298 509.43 904.298 508.928 904.377 508.425 cv
904.43 507.976 903.875 507.368 904.8 507.156 cv
904.773 506.813 904.906 506.416 904.403 506.152 cv
903.98 505.94 904.086 505.809 904.324 505.624 cv
904.8 505.253 904.853 504.751 904.747 504.223 cv
904.298 502.294 904.456 500.391 904.298 498.488 cv
904.456 498.118 li
904.773 498.092 904.853 497.985 904.8 497.722 cv
904.747 497.325 904.668 496.902 904.668 496.506 cv
904.642 496.109 904.8 495.739 904.8 495.369 cv
904.721 494.497 904.615 493.625 904.456 492.779 cv
904.271 491.881 904.773 491.062 904.43 490.163 cv
904.324 489.925 904.298 489.635 904.8 489.688 cv
904.932 489.423 li
904.879 488.947 904.773 488.498 904.773 488.049 cv
904.773 487.626 904.906 487.23 904.879 486.807 cv
904.826 485.326 904.43 483.847 904.562 482.366 cv
904.642 481.257 904.509 480.12 904.773 479.01 cv
904.879 478.588 904.906 478.111 904.906 477.636 cv
904.853 476.473 904.509 475.284 904.694 474.068 cv
904.853 472.932 904.615 471.716 904.562 470.526 cv
904.694 470.13 li
905.011 470.13 905.117 470.024 905.064 469.786 cv
904.958 468.914 904.906 468.068 904.985 467.196 cv
905.064 466.298 904.8 465.32 904.642 464.396 cv
904.509 463.497 904.906 462.625 904.642 461.699 cv
904.562 461.488 904.298 461.092 904.932 461.118 cv
905.091 460.854 li
904.879 460.034 905.196 459.269 905.064 458.528 cv
904.773 456.758 904.879 455.039 904.721 453.295 cv
904.826 452.898 li
905.17 452.898 905.249 452.793 905.223 452.556 cv
905.117 451.684 905.038 450.838 905.117 449.992 cv
905.223 449.146 904.906 448.221 904.826 447.349 cv
904.773 446.45 904.773 445.578 904.773 444.68 cv
904.747 444.441 904.588 444.178 905.117 444.204 cv
905.249 443.939 li
905.038 443.067 905.329 442.222 905.196 441.376 cv
904.906 439.632 905.038 437.94 904.853 436.196 cv
904.985 435.826 li
905.302 435.8 905.381 435.721 905.355 435.482 cv
905.249 434.61 905.17 433.791 905.249 432.919 cv
905.355 432.073 905.038 431.175 904.958 430.303 cv
904.906 429.404 904.906 428.532 904.906 427.66 cv
904.879 427.422 904.747 427.157 905.249 427.184 cv
905.381 426.92 li
905.17 426.074 905.329 425.229 905.329 424.409 cv
905.329 423.141 904.932 421.846 905.091 420.577 cv
905.249 419.361 905.011 418.119 904.932 416.877 cv
904.932 416.665 904.906 416.48 905.249 416.48 cv
905.46 416.269 li
905.408 415.82 905.302 415.37 905.302 414.947 cv
905.276 414.551 905.46 414.154 905.408 413.759 cv
905.355 412.912 905.223 412.093 905.091 411.247 cv
904.932 410.455 905.381 409.689 905.064 408.869 cv
905.17 408.473 li
905.434 408.446 905.619 408.42 905.593 408.155 cv
905.46 407.362 905.434 406.57 905.514 405.777 cv
905.593 404.852 905.329 403.874 905.17 402.949 cv
904.985 402.024 905.434 401.152 905.117 400.2 cv
905.038 400.016 904.879 399.698 905.408 399.725 cv
905.593 399.487 li
905.249 398.563 905.725 397.689 905.54 396.765 cv
905.46 396.501 905.487 396.21 905.408 395.945 cv
905.011 394.545 905.46 393.197 905.17 391.822 cv
905.249 391.532 li
905.54 391.532 905.725 391.48 905.672 391.215 cv
905.593 390.871 905.54 390.501 905.54 390.157 cv
905.54 389.788 905.699 389.444 905.672 389.074 cv
905.593 388.149 905.46 387.197 905.276 386.272 cv
905.117 385.348 905.566 384.502 905.249 383.577 cv
905.17 383.365 905.038 383.075 905.54 383.075 cv
905.725 382.863 li
905.381 381.886 905.883 380.987 905.645 380.036 cv
905.223 378.503 905.593 376.996 905.329 375.49 cv
905.408 375.199 li
905.725 375.199 905.883 375.147 905.831 374.882 cv
905.514 373.508 905.91 372.187 905.593 370.786 cv
905.408 369.993 905.329 369.173 905.487 368.355 cv
905.645 367.323 905.434 366.267 905.381 365.209 cv
905.381 364.998 905.249 364.733 905.725 364.76 cv
cp
.188235 .184314 .239216 rgb
f
399.728 189.325 mo
399.592 189.189 399.05 189.46 399.321 189.731 cv
399.321 189.867 399.864 189.596 399.728 189.325 cv
cp
400.541 179.296 mo
400.541 178.889 399.186 179.431 399.321 179.296 cv
397.695 180.38 400.677 180.244 400.541 179.296 cv
cp
399.321 176.314 mo
399.186 176.179 398.643 176.449 398.779 176.721 cv
398.915 176.856 399.457 176.449 399.321 176.314 cv
cp
399.321 204.504 mo
398.372 204.368 397.966 204.64 397.966 205.317 cv
398.643 205.452 399.05 205.046 399.321 204.504 cv
399.864 204.232 399.186 203.962 399.321 204.504 cv
cp
398.372 198.405 mo
398.508 197.999 398.102 197.321 397.966 197.999 cv
397.831 198.405 398.237 199.083 398.372 198.405 cv
cp
398.372 184.987 mo
398.237 184.853 397.695 185.123 397.966 185.395 cv
398.102 185.53 398.643 185.259 398.372 184.987 cv
cp
398.372 174.959 mo
398.237 174.823 397.695 175.23 397.966 175.365 cv
398.102 175.501 398.643 175.23 398.372 174.959 cv
cp
398.372 187.97 mo
398.372 187.563 397.695 187.428 397.56 187.97 cv
397.56 188.512 397.966 188.24 398.372 187.97 cv
cp
397.153 195.83 mo
397.831 195.559 398.915 195.559 399.321 195.017 cv
398.643 194.204 397.424 195.017 397.153 195.83 cv
cp
397.966 221.852 mo
397.831 221.716 396.882 222.123 397.153 222.258 cv
397.153 222.394 398.102 222.123 397.966 221.852 cv
cp
397.56 185.801 mo
397.56 185.395 396.747 185.259 396.611 185.801 cv
397.153 185.801 397.289 186.479 397.56 185.801 cv
cp
397.153 181.871 mo
397.018 181.871 396.476 182.142 396.611 182.413 cv
396.747 182.548 397.289 182.142 397.153 181.871 cv
cp
397.153 174.552 mo
397.018 174.417 396.476 174.823 396.611 174.959 cv
396.747 175.094 397.289 174.823 397.153 174.552 cv
cp
397.153 190.545 mo
397.153 191.899 398.915 190.138 397.153 190.545 cv
397.018 189.325 395.255 191.087 397.153 190.545 cv
cp
396.611 197.999 mo
396.476 197.863 396.069 198.134 396.204 198.405 cv
396.34 198.541 396.882 198.27 396.611 197.999 cv
cp
396.611 178.076 mo
396.476 177.94 396.069 178.211 396.204 178.482 cv
396.34 178.618 396.882 178.211 396.611 178.076 cv
cp
396.204 211.416 mo
396.069 211.28 395.527 211.687 395.798 211.822 cv
395.933 211.958 396.476 211.687 396.204 211.416 cv
cp
396.204 204.098 mo
396.069 203.962 395.527 204.232 395.798 204.504 cv
395.933 204.64 396.476 204.232 396.204 204.098 cv
cp
396.204 194.475 mo
396.069 194.339 395.527 194.746 395.798 195.017 cv
395.933 195.017 396.476 194.746 396.204 194.475 cv
cp
396.204 181.871 mo
396.069 181.871 395.527 182.142 395.798 182.413 cv
395.933 182.548 396.476 182.142 396.204 181.871 cv
cp
395.798 225.782 mo
395.798 225.511 395.391 225.24 395.391 225.782 cv
395.391 226.053 395.798 226.324 395.798 225.782 cv
cp
396.204 188.918 mo
396.069 188.647 395.391 189.189 395.391 189.325 cv
395.391 190.273 396.747 189.325 396.204 188.918 cv
cp
396.204 221.445 mo
396.069 221.31 395.12 221.716 395.391 221.852 cv
395.527 221.987 396.476 221.58 396.204 221.445 cv
cp
396.204 208.841 mo
396.069 208.705 395.12 209.112 395.391 209.247 cv
395.527 209.383 396.476 209.112 396.204 208.841 cv
cp
396.204 184.581 mo
396.069 184.445 395.12 184.717 395.391 184.987 cv
395.527 185.123 396.476 184.717 396.204 184.581 cv
cp
396.204 216.701 mo
396.34 217.921 397.966 216.295 396.204 216.701 cv
396.069 214.939 394.307 216.701 396.204 216.701 cv
cp
395.798 224.427 mo
395.662 224.291 394.713 224.697 394.984 224.969 cv
394.984 224.969 395.933 224.697 395.798 224.427 cv
cp
395.391 199.354 mo
395.255 199.219 394.713 199.489 394.984 199.761 cv
394.984 199.896 395.527 199.489 395.391 199.354 cv
cp
395.798 218.328 mo
395.662 218.599 395.12 216.973 394.984 217.108 cv
393.629 218.057 395.391 219.548 395.798 218.328 cv
cp
395.391 223.207 mo
395.255 223.071 394.307 223.343 394.442 223.613 cv
394.578 223.749 395.527 223.343 395.391 223.207 cv
cp
395.391 197.186 mo
395.255 197.05 394.307 197.321 394.442 197.592 cv
394.578 197.728 395.527 197.321 395.391 197.186 cv
cp
395.391 186.75 mo
395.255 186.614 394.307 186.885 394.442 187.156 cv
394.578 187.292 395.527 186.885 395.391 186.75 cv
cp
394.984 182.819 mo
394.849 182.684 394.307 182.955 394.442 183.226 cv
394.578 183.361 395.12 182.955 394.984 182.819 cv
cp
396.204 230.525 mo
395.391 230.39 395.391 229.441 394.442 229.306 cv
393.9 230.525 395.662 231.745 396.204 230.525 cv
cp
394.442 203.69 mo
394.307 203.556 393.765 203.826 394.036 204.098 cv
394.171 204.232 394.713 203.826 394.442 203.69 cv
cp
394.984 212.364 mo
395.255 212.906 395.391 212.23 394.984 212.364 cv
394.442 211.009 392.681 212.772 394.984 212.364 cv
cp
394.036 206.266 mo
393.9 206.13 393.358 206.401 393.629 206.673 cv
393.765 206.808 394.307 206.401 394.036 206.266 cv
cp
394.036 178.889 mo
393.9 178.754 393.358 179.16 393.629 179.296 cv
393.765 179.431 394.307 179.16 394.036 178.889 cv
cp
393.629 209.654 mo
393.494 209.654 392.952 209.925 393.223 210.196 cv
393.358 210.332 393.9 209.925 393.629 209.654 cv
cp
393.629 186.208 mo
393.494 186.208 392.952 186.479 393.223 186.75 cv
393.358 186.885 393.9 186.479 393.629 186.208 cv
cp
393.629 213.178 mo
393.494 213.042 392.545 213.449 392.816 213.584 cv
392.816 213.72 393.765 213.449 393.629 213.178 cv
cp
393.223 236.218 mo
393.087 236.082 392.545 236.354 392.816 236.624 cv
392.816 236.76 393.358 236.354 393.223 236.218 cv
cp
393.223 188.918 mo
393.087 188.782 392.545 189.054 392.816 189.325 cv
392.816 189.46 393.358 189.054 393.223 188.918 cv
cp
393.223 223.207 mo
392.274 223.207 li
392.274 223.613 392.545 224.697 393.223 224.969 cv
394.171 224.155 393.9 223.613 394.036 221.445 cv
392.41 220.768 393.223 222.936 393.223 223.207 cv
cp
392.816 230.932 mo
392.681 230.932 392.139 231.203 392.274 231.474 cv
392.41 231.474 392.952 231.203 392.816 230.932 cv
cp
392.816 225.782 mo
392.681 225.647 392.139 226.053 392.274 226.189 cv
392.41 226.324 392.952 226.053 392.816 225.782 cv
cp
392.274 183.226 mo
392.139 183.091 391.596 183.497 391.867 183.633 cv
392.003 183.768 392.545 183.497 392.274 183.226 cv
cp
392.274 179.702 mo
392.139 179.702 391.596 179.974 391.867 180.244 cv
392.003 180.244 392.545 179.974 392.274 179.702 cv
cp
393.223 228.764 mo
390.241 229.034 392.681 231.881 393.629 230.119 cv
393.087 231.067 392.274 228.899 393.223 228.764 cv
395.933 228.764 395.527 225.511 393.223 225.375 cv
393.223 226.46 394.036 226.053 394.036 227.137 cv
394.036 228.086 393.629 227.95 393.223 228.764 cv
cp
391.461 234.049 mo
393.087 234.998 393.629 232.017 391.867 233.101 cv
392.545 232.829 391.732 234.185 391.461 234.049 cv
cp
391.867 206.266 mo
391.867 205.995 391.461 205.724 391.461 206.266 cv
391.461 206.537 391.867 206.673 391.867 206.266 cv
cp
392.274 226.595 mo
392.139 226.46 391.19 226.866 391.461 227.137 cv
391.596 227.137 392.545 226.866 392.274 226.595 cv
cp
392.274 217.108 mo
392.139 216.973 391.19 217.379 391.461 217.515 cv
391.596 217.65 392.545 217.243 392.274 217.108 cv
cp
391.867 208.841 mo
391.732 208.705 391.19 209.112 391.461 209.247 cv
391.596 209.383 392.139 209.112 391.867 208.841 cv
cp
391.867 190.545 mo
391.732 190.545 391.19 190.815 391.461 191.087 cv
391.596 191.222 392.139 190.815 391.867 190.545 cv
cp
391.461 215.753 mo
391.325 215.617 390.783 216.023 391.054 216.159 cv
391.19 216.295 391.732 216.023 391.461 215.753 cv
cp
391.461 202.742 mo
391.325 202.606 390.783 203.013 391.054 203.148 cv
391.19 203.284 391.732 203.013 391.461 202.742 cv
cp
391.461 237.98 mo
391.054 236.488 391.867 236.218 392.274 235.811 cv
390.647 235.269 389.97 237.844 391.461 237.98 cv
cp
391.054 196.236 mo
390.918 196.102 390.376 196.508 390.647 196.644 cv
390.647 196.778 391.19 196.508 391.054 196.236 cv
cp
390.647 233.101 mo
390.647 232.965 390.105 232.694 390.105 233.101 cv
390.105 233.371 390.647 233.643 390.647 233.101 cv
cp
390.647 211.009 mo
390.647 210.738 390.105 210.467 390.105 211.009 cv
390.105 211.28 390.647 211.552 390.647 211.009 cv
cp
390.647 237.98 mo
390.512 237.844 389.97 238.115 390.105 238.386 cv
390.241 238.522 390.783 238.115 390.647 237.98 cv
cp
389.699 222.8 mo
391.732 223.207 392.41 221.716 391.054 221.038 cv
391.461 222.394 389.563 221.58 389.699 222.8 cv
cp
390.105 224.021 mo
389.97 223.885 389.021 224.291 389.292 224.427 cv
389.428 224.563 390.376 224.291 390.105 224.021 cv
cp
389.699 213.178 mo
387.937 212.772 389.563 214.533 389.699 213.178 cv
390.376 212.906 389.699 212.636 389.699 213.178 cv
cp
389.699 217.921 mo
389.563 217.786 388.615 218.192 388.886 218.328 cv
389.021 218.463 389.97 218.192 389.699 217.921 cv
cp
389.292 237.438 mo
389.157 237.438 388.615 237.708 388.886 237.98 cv
389.021 238.115 389.563 237.708 389.292 237.438 cv
cp
389.292 211.822 mo
389.157 211.822 388.615 212.094 388.886 212.364 cv
389.021 212.5 389.563 212.094 389.292 211.822 cv
cp
389.699 226.595 mo
390.241 228.086 388.344 227.002 388.886 228.356 cv
390.105 227.272 391.732 229.712 392.274 227.95 cv
390.783 228.222 391.054 226.595 389.699 226.595 cv
389.834 225.917 389.428 225.782 388.886 225.782 cv
388.75 226.46 389.157 226.595 389.699 226.595 cv
cp
389.292 230.525 mo
389.157 230.661 387.937 230.525 387.937 230.525 cv
387.802 231.339 389.428 232.694 389.699 232.287 cv
389.834 232.151 390.241 229.983 390.105 229.712 cv
389.834 229.17 388.75 229.712 388.886 229.712 cv
388.75 229.712 389.292 230.525 389.292 230.525 cv
cp
388.479 238.386 mo
388.344 238.251 387.802 238.522 387.937 238.793 cv
388.073 238.928 388.615 238.657 388.479 238.386 cv
cp
387.937 209.654 mo
388.615 210.467 390.105 207.485 388.479 209.247 cv
388.344 209.383 387.666 209.383 387.937 209.654 cv
cp
387.937 244.892 mo
388.208 245.569 388.479 244.892 387.937 244.892 cv
387.666 244.214 387.395 244.892 387.937 244.892 cv
cp
388.479 226.189 mo
388.208 226.053 387.53 226.46 387.53 226.595 cv
387.53 227.544 388.886 226.73 388.479 226.189 cv
cp
387.937 243.13 mo
387.666 242.994 387.53 243.265 387.53 243.536 cv
386.853 243.808 387.53 244.078 387.53 243.536 cv
387.937 243.672 387.937 243.4 387.937 243.13 cv
390.376 242.452 388.886 238.251 387.124 240.961 cv
387.395 240.555 387.124 241.91 387.124 241.774 cv
387.259 242.181 389.021 242.181 387.937 243.13 cv
cp
387.124 237.98 mo
386.988 237.844 386.446 238.115 386.717 238.386 cv
386.853 238.522 387.395 238.115 387.124 237.98 cv
cp
386.717 231.474 mo
385.362 234.591 389.157 232.694 387.124 234.456 cv
386.853 234.727 386.581 234.862 386.717 235.269 cv
387.937 234.998 387.802 235.946 388.886 235.811 cv
389.021 237.438 390.783 235.676 388.886 235.811 cv
388.886 234.998 388.344 234.862 388.479 234.049 cv
389.021 234.185 389.563 234.727 390.105 234.862 cv
390.783 233.778 389.292 234.049 388.886 233.643 cv
388.75 233.507 389.021 232.829 388.886 232.694 cv
388.615 232.559 387.802 232.965 387.53 232.694 cv
387.124 232.423 387.802 230.932 386.717 231.474 cv
387.124 229.577 385.362 231.339 386.717 231.474 cv
cp
386.175 234.862 mo
386.175 234.727 385.633 235.134 385.768 235.269 cv
385.904 235.404 386.446 235.134 386.175 234.862 cv
cp
385.362 243.942 mo
385.227 243.942 384.685 244.214 384.956 244.484 cv
385.091 244.62 385.633 244.214 385.362 243.942 cv
cp
385.768 239.605 mo
386.175 237.844 383.193 241.774 386.175 241.368 cv
386.581 240.69 385.768 240.013 385.768 239.605 cv
cp
385.362 244.892 mo
385.227 244.756 384.278 245.162 384.549 245.298 cv
384.685 245.434 385.633 245.027 385.362 244.892 cv
cp
384.956 233.643 mo
384.82 233.507 383.871 233.778 384.007 234.049 cv
384.142 234.185 385.091 233.778 384.956 233.643 cv
cp
384.549 245.704 mo
384.413 245.569 383.871 245.976 384.007 246.247 cv
384.142 246.247 384.685 245.976 384.549 245.704 cv
cp
382.787 243.13 mo
383.871 243.265 383.871 242.181 384.007 241.368 cv
382.922 241.232 382.922 242.316 382.787 243.13 cv
cp
383.6 239.605 mo
383.6 239.199 382.922 239.064 382.787 239.605 cv
383.193 239.605 383.465 240.283 383.6 239.605 cv
cp
383.6 234.456 mo
383.6 234.049 382.922 233.914 382.787 234.456 cv
383.193 234.456 383.465 235.134 383.6 234.456 cv
cp
383.6 245.704 mo
383.465 245.569 382.516 245.976 382.787 246.247 cv
382.922 246.247 383.871 245.976 383.6 245.704 cv
cp
383.193 240.555 mo
383.058 240.419 382.516 240.69 382.787 240.961 cv
382.922 241.097 383.465 240.825 383.193 240.555 cv
cp
382.38 234.862 mo
382.245 234.727 381.703 235.134 381.838 235.269 cv
381.974 235.404 382.516 235.134 382.38 234.862 cv
cp
382.38 248.415 mo
382.245 248.279 381.296 248.551 381.432 248.821 cv
381.567 248.957 382.516 248.551 382.38 248.415 cv
cp
381.025 234.049 mo
380.348 234.32 381.025 234.591 381.025 234.049 cv
381.703 233.778 381.025 233.507 381.025 234.049 cv
cp
381.432 247.06 mo
381.296 246.789 380.619 247.331 380.619 247.467 cv
380.619 248.415 381.974 247.467 381.432 247.06 cv
cp
381.025 239.199 mo
380.754 239.064 380.212 239.471 380.212 239.605 cv
380.212 240.555 381.432 239.741 381.025 239.199 cv
cp
380.212 236.218 mo
380.619 236.218 381.025 236.218 381.432 236.218 cv
381.432 236.488 381.432 236.76 381.432 237.03 cv
380.348 237.166 380.076 237.844 379.67 236.624 cv
379.941 236.624 380.212 236.624 380.212 236.218 cv
cp
380.619 248.415 mo
380.483 248.279 379.534 248.551 379.67 248.821 cv
379.805 248.957 380.754 248.551 380.619 248.415 cv
cp
380.212 236.218 mo
379.805 236.082 379.805 236.354 379.67 236.624 cv
379.534 236.624 379.399 236.624 379.263 236.624 cv
378.992 237.302 379.805 237.438 379.67 237.98 cv
379.805 237.844 378.992 238.115 379.263 238.386 cv
380.754 239.471 382.651 237.844 384.007 237.438 cv
383.193 238.386 384.007 238.928 384.956 239.199 cv
384.956 238.115 385.227 238.657 385.768 238.793 cv
385.768 237.302 384.007 237.98 384.549 236.624 cv
384.549 236.354 386.175 236.488 385.768 235.811 cv
383.871 235.404 382.787 238.251 381.432 237.03 cv
381.567 237.03 381.703 237.03 381.838 237.03 cv
382.245 236.624 382.922 236.624 382.787 235.811 cv
382.109 235.676 381.974 236.218 381.432 236.218 cv
381.432 235.676 380.212 235.676 380.212 236.218 cv
cp
380.212 243.942 mo
380.619 244.35 380.348 245.569 381.432 245.298 cv
381.703 245.976 381.974 245.298 381.432 245.298 cv
381.567 244.35 381.161 243.942 380.212 243.942 cv
380.348 240.825 376.553 244.62 380.212 243.942 cv
cp
379.263 240.961 mo
379.263 240.555 378.585 240.419 378.45 240.961 cv
378.856 240.961 379.128 241.639 379.263 240.961 cv
cp
378.45 248.415 mo
378.179 248.145 377.501 248.551 377.501 248.821 cv
377.501 249.771 378.856 248.821 378.45 248.415 cv
cp
377.095 231.881 mo
377.366 232.423 377.637 231.745 377.095 231.881 cv
376.824 231.203 376.553 231.881 377.095 231.881 cv
cp
378.043 247.06 mo
378.314 247.737 378.45 247.06 378.043 247.06 cv
379.534 244.484 374.519 245.027 378.043 247.06 cv
cp
377.501 237.98 mo
378.45 236.354 377.23 236.896 376.282 236.218 cv
376.146 237.302 377.23 237.302 377.501 237.98 cv
cp
377.095 233.101 mo
376.959 233.101 376.011 233.371 376.282 233.643 cv
376.417 233.778 377.366 233.371 377.095 233.101 cv
cp
378.043 239.605 mo
376.688 240.013 377.095 240.013 375.875 239.605 cv
375.739 241.232 378.043 241.232 378.043 239.605 cv
cp
376.688 234.862 mo
376.553 234.727 375.604 235.134 375.875 235.269 cv
375.875 235.404 376.959 235.134 376.688 234.862 cv
cp
375.875 241.774 mo
375.739 241.774 375.197 242.045 375.333 242.316 cv
375.468 242.452 376.011 242.045 375.875 241.774 cv
cp
375.875 236.624 mo
375.739 236.488 375.197 236.896 375.333 237.03 cv
375.468 237.166 376.011 236.896 375.875 236.624 cv
cp
374.926 237.98 mo
373.706 237.98 375.333 239.741 374.926 237.98 cv
375.604 237.708 374.926 237.438 374.926 237.98 cv
cp
374.519 250.042 mo
374.384 249.906 373.842 250.313 374.113 250.584 cv
374.248 250.584 374.791 250.313 374.519 250.042 cv
cp
374.519 240.147 mo
374.384 240.013 373.842 240.283 374.113 240.555 cv
374.248 240.69 374.791 240.283 374.519 240.147 cv
cp
374.113 231.881 mo
373.977 231.745 373.435 232.017 373.706 232.287 cv
373.706 232.423 374.248 232.017 374.113 231.881 cv
cp
373.164 245.298 mo
373.164 245.704 373.435 245.704 373.706 245.704 cv
373.706 246.111 374.248 246.111 374.519 246.247 cv
374.519 246.382 374.519 246.518 374.519 246.653 cv
377.366 246.789 375.604 242.994 374.519 245.298 cv
376.011 245.027 375.197 246.111 374.519 246.247 cv
374.519 245.704 373.977 245.84 373.706 245.704 cv
373.706 245.434 373.435 245.298 373.164 245.298 cv
373.571 243.536 371.945 245.162 373.164 245.298 cv
cp
373.164 237.03 mo
373.029 236.896 372.351 237.302 372.351 237.438 cv
372.351 238.386 373.706 237.573 373.164 237.03 cv
cp
373.164 229.712 mo
373.164 229.306 372.487 229.17 372.351 229.712 cv
372.487 230.254 372.893 229.983 373.164 229.712 cv
cp
373.706 242.723 mo
373.3 242.316 372.351 242.994 372.351 243.13 cv
372.08 244.078 374.113 243.265 373.706 242.723 cv
cp
372.351 224.427 mo
372.216 224.291 371.674 224.697 371.945 224.969 cv
372.08 224.969 372.622 224.697 372.351 224.427 cv
cp
372.351 227.544 mo
372.622 228.086 372.893 227.408 372.351 227.544 cv
372.216 226.189 370.589 227.95 372.351 227.544 cv
cp
372.351 246.247 mo
372.216 246.111 371.267 246.382 371.538 246.653 cv
371.538 246.789 372.487 246.382 372.351 246.247 cv
cp
372.758 231.881 mo
370.86 231.203 372.487 232.829 372.351 233.101 cv
372.351 233.101 371.131 233.371 371.538 233.643 cv
372.622 234.185 373.435 233.643 373.706 233.101 cv
373.571 233.643 372.216 232.287 372.758 231.881 cv
373.435 231.609 372.758 231.339 372.758 231.881 cv
cp
371.538 230.932 mo
371.267 230.797 370.589 231.203 370.589 231.474 cv
370.589 232.287 371.945 231.474 371.538 230.932 cv
cp
370.996 237.438 mo
370.86 237.438 370.454 237.708 370.589 237.98 cv
370.725 238.115 371.267 237.708 370.996 237.438 cv
cp
370.589 235.269 mo
370.454 235.269 369.912 235.54 370.183 235.811 cv
370.318 235.946 370.86 235.54 370.589 235.269 cv
cp
370.589 233.101 mo
370.454 233.101 369.912 233.371 370.183 233.643 cv
370.318 233.778 370.86 233.371 370.589 233.101 cv
cp
369.37 237.98 mo
369.234 237.844 368.692 238.115 368.828 238.386 cv
368.963 238.522 369.505 238.115 369.37 237.98 cv
cp
369.37 190.545 mo
369.234 190.545 368.285 190.815 368.421 191.087 cv
368.557 191.222 369.505 190.815 369.37 190.545 cv
cp
368.828 230.525 mo
368.828 230.119 368.15 229.983 368.014 230.525 cv
368.557 230.525 368.692 231.203 368.828 230.525 cv
cp
368.421 235.811 mo
368.285 235.676 367.743 235.946 368.014 236.218 cv
368.15 236.354 368.692 235.946 368.421 235.811 cv
cp
368.014 191.899 mo
367.879 191.765 367.337 192.171 367.608 192.307 cv
367.743 192.441 368.285 192.171 368.014 191.899 cv
cp
367.608 221.038 mo
367.472 220.903 366.93 221.174 367.201 221.445 cv
367.201 221.58 367.743 221.174 367.608 221.038 cv
cp
367.608 213.991 mo
367.472 213.991 366.93 214.262 367.201 214.533 cv
367.201 214.669 367.743 214.262 367.608 213.991 cv
cp
367.608 184.039 mo
367.337 183.903 366.659 184.311 366.659 184.581 cv
366.659 185.53 368.014 184.581 367.608 184.039 cv
cp
367.201 230.119 mo
367.065 229.983 366.523 230.39 366.659 230.525 cv
366.794 230.661 367.337 230.39 367.201 230.119 cv
cp
367.201 197.186 mo
367.065 197.05 366.523 197.321 366.659 197.592 cv
366.794 197.728 367.337 197.321 367.201 197.186 cv
cp
365.846 191.899 mo
365.71 191.765 365.168 192.171 365.439 192.307 cv
365.575 192.441 366.117 192.171 365.846 191.899 cv
cp
365.439 190.545 mo
365.439 190.409 365.033 190.138 365.033 190.545 cv
365.033 190.815 365.439 191.087 365.439 190.545 cv
cp
365.033 197.999 mo
364.897 197.863 364.355 198.134 364.491 198.405 cv
364.626 198.541 365.168 198.27 365.033 197.999 cv
cp
363.677 180.651 mo
364.626 181.6 365.575 180.38 366.252 179.702 cv
365.168 179.838 364.22 179.974 363.677 180.651 cv
cp
364.084 186.208 mo
362.322 185.801 363.948 187.563 364.084 186.208 cv
367.608 186.479 365.033 183.633 364.084 186.208 cv
cp
363.677 207.485 mo
363.542 207.485 363 207.757 363.271 208.027 cv
363.406 208.163 363.948 207.757 363.677 207.485 cv
cp
363.677 178.076 mo
363.542 177.94 363 178.211 363.271 178.482 cv
363.406 178.618 363.948 178.211 363.677 178.076 cv
cp
363.271 188.376 mo
363.135 188.376 362.593 188.647 362.864 188.918 cv
362.864 189.054 363.406 188.647 363.271 188.376 cv
cp
363.271 182.819 mo
363.135 183.226 363.406 183.226 363.677 183.226 cv
363.948 183.903 364.22 183.226 363.677 183.226 cv
363.813 182.819 363.542 182.819 363.271 182.819 cv
363.135 181.464 361.373 183.226 363.271 182.819 cv
cp
362.864 184.039 mo
362.322 184.175 362.186 183.497 361.915 184.039 cv
361.915 184.581 362.728 184.581 362.864 184.039 cv
cp
362.322 174.552 mo
362.322 174.281 361.915 174.01 361.915 174.552 cv
361.915 174.823 362.322 175.094 362.322 174.552 cv
cp
362.322 172.79 mo
362.186 172.654 361.238 173.062 361.509 173.197 cv
361.644 173.332 362.593 173.062 362.322 172.79 cv
cp
361.509 193.661 mo
361.78 193.391 361.509 192.713 361.102 193.255 cv
360.831 193.391 361.102 194.068 361.509 193.661 cv
cp
360.56 179.702 mo
360.56 179.702 360.018 179.974 360.154 180.244 cv
360.289 180.244 360.831 179.974 360.56 179.702 cv
cp
361.915 177.534 mo
362.864 176.449 360.831 175.772 359.747 175.365 cv
359.747 176.856 361.644 176.449 361.915 177.534 cv
cp
360.154 186.75 mo
360.018 186.614 359.476 186.885 359.747 187.156 cv
359.883 187.292 360.425 186.885 360.154 186.75 cv
cp
359.747 182.819 mo
359.611 182.684 359.069 182.955 359.34 183.226 cv
359.476 183.361 360.018 182.955 359.747 182.819 cv
cp
359.34 171.028 mo
358.663 171.3 359.34 171.57 359.34 171.028 cv
360.154 170.622 360.831 172.384 361.102 171.028 cv
360.831 170.893 359.34 169.944 359.34 171.028 cv
cp
358.934 173.197 mo
359.069 173.062 357.985 170.622 357.985 172.384 cv
357.985 172.654 358.663 173.468 358.934 173.197 cv
cp
357.985 186.208 mo
357.443 186.479 358.121 186.75 357.985 186.208 cv
358.663 185.937 357.985 185.801 357.985 186.208 cv
cp
360.154 185.395 mo
360.425 185.259 360.289 184.039 360.56 184.039 cv
358.527 185.123 358.934 181.464 357.579 183.226 cv
358.934 183.497 358.392 186.072 360.154 185.395 cv
cp
357.985 179.702 mo
357.85 179.566 357.172 179.974 357.172 180.244 cv
357.172 181.058 358.527 180.244 357.985 179.702 cv
cp
357.985 174.959 mo
357.85 174.823 356.901 175.23 357.172 175.365 cv
357.308 175.501 358.256 175.23 357.985 174.959 cv
cp
357.985 177.127 mo
355.681 176.991 358.527 179.702 358.934 178.076 cv
358.527 177.805 358.121 177.669 357.985 177.127 cv
360.425 177.398 358.663 175.501 357.985 177.127 cv
cp
357.172 169.402 mo
357.037 169.267 356.495 169.537 356.766 169.809 cv
356.901 169.944 357.443 169.537 357.172 169.402 cv
cp
356.766 184.039 mo
357.037 183.633 357.714 182.548 356.223 182.819 cv
356.359 183.361 356.223 184.039 356.766 184.039 cv
cp
357.579 172.384 mo
357.308 171.978 356.359 172.654 356.223 172.79 cv
356.088 173.739 358.121 172.926 357.579 172.384 cv
cp
356.223 181.871 mo
356.223 181.871 355.274 182.142 355.41 182.413 cv
355.546 182.548 356.495 182.142 356.223 181.871 cv
cp
355.817 174.959 mo
356.088 174.688 355.817 174.146 355.41 174.552 cv
355.139 174.823 355.41 175.365 355.817 174.959 cv
cp
355.41 178.482 mo
355.681 179.024 355.952 178.347 355.41 178.482 cv
355.139 177.805 354.868 178.482 355.41 178.482 cv
cp
356.223 168.453 mo
355.817 168.047 354.597 168.86 354.597 168.86 cv
353.242 170.215 356.766 168.995 356.223 168.453 cv
cp
354.597 174.552 mo
354.461 174.417 353.919 174.823 354.055 174.959 cv
354.19 175.094 354.732 174.823 354.597 174.552 cv
cp
354.055 176.314 mo
354.732 176.991 356.359 174.146 354.597 175.907 cv
354.461 175.907 353.784 175.907 354.055 176.314 cv
cp
355.41 184.987 mo
355.546 185.665 355.003 185.665 355.003 186.208 cv
354.461 186.072 354.326 185.53 353.648 185.395 cv
353.242 186.343 354.868 187.292 355.003 186.208 cv
355.546 186.072 357.172 186.75 357.172 185.801 cv
356.495 185.665 356.766 184.445 355.41 184.987 cv
356.901 183.633 353.919 184.175 355.41 184.987 cv
cp
353.648 170.622 mo
353.648 170.351 353.242 170.215 353.242 170.622 cv
353.242 170.893 353.648 171.164 353.648 170.622 cv
cp
353.242 184.039 mo
353.106 184.039 352.564 184.311 352.835 184.581 cv
352.971 184.717 353.513 184.311 353.242 184.039 cv
cp
354.597 172.79 mo
353.784 172.112 353.648 173.332 352.429 173.197 cv
352.429 175.637 355.003 173.332 354.597 172.79 cv
cp
352.429 179.702 mo
353.242 180.651 353.919 178.889 354.597 178.076 cv
353.377 177.805 352.158 179.431 352.429 179.702 cv
cp
352.835 183.226 mo
352.7 183.091 351.751 183.497 351.886 183.633 cv
352.022 183.768 352.971 183.497 352.835 183.226 cv
cp
351.886 174.959 mo
351.886 174.823 351.344 175.23 351.48 175.365 cv
351.615 175.501 352.158 175.23 351.886 174.959 cv
cp
351.48 185.395 mo
351.209 185.53 350.937 186.343 351.48 186.208 cv
351.073 186.343 353.513 185.123 351.886 184.987 cv
351.886 184.987 352.022 185.395 351.886 185.395 cv
351.886 185.395 351.615 185.395 351.48 185.395 cv
cp
352.835 175.907 mo
352.158 175.23 349.989 176.721 351.886 177.127 cv
351.48 176.585 352.835 175.907 352.835 175.907 cv
cp
351.886 170.622 mo
351.886 170.486 350.937 170.893 351.073 171.028 cv
351.209 171.164 352.158 170.893 351.886 170.622 cv
cp
351.073 180.651 mo
351.073 180.651 350.666 182.006 350.666 181.871 cv
350.802 183.497 354.868 182.413 354.055 180.651 cv
354.19 183.226 352.429 179.702 351.073 180.651 cv
cp
351.073 190.138 mo
350.937 190.002 350.395 190.409 350.666 190.545 cv
350.802 190.68 351.344 190.409 351.073 190.138 cv
cp
351.073 183.633 mo
350.937 183.497 350.395 183.903 350.666 184.039 cv
350.802 184.175 351.344 183.903 351.073 183.633 cv
cp
351.886 172.79 mo
351.751 171.57 350.26 171.978 350.26 171.978 cv
349.718 172.654 350.26 173.739 351.073 174.552 cv
350.531 172.926 352.022 173.604 351.886 172.79 cv
cp
351.073 180.244 mo
352.835 179.296 351.209 176.449 349.718 178.076 cv
352.022 177.805 349.989 179.838 351.073 180.244 cv
cp
350.26 186.75 mo
350.124 186.614 349.176 186.885 349.311 187.156 cv
349.447 187.292 350.395 186.885 350.26 186.75 cv
cp
349.311 188.376 mo
349.447 189.731 351.209 187.97 349.311 188.376 cv
349.04 187.834 348.769 188.512 349.311 188.376 cv
cp
349.311 170.622 mo
349.582 171.3 349.853 170.622 349.311 170.622 cv
349.04 169.944 348.769 170.622 349.311 170.622 cv
cp
349.311 179.296 mo
349.176 179.16 348.634 179.566 348.905 179.702 cv
349.04 179.838 349.582 179.566 349.311 179.296 cv
cp
348.905 178.076 mo
348.363 178.076 348.634 178.482 348.905 178.482 cv
349.176 179.024 349.447 178.347 348.905 178.482 cv
348.905 178.347 348.905 178.211 348.905 178.076 cv
349.582 177.805 348.905 177.534 348.905 178.076 cv
cp
348.092 177.127 mo
347.956 176.991 347.414 177.398 347.549 177.534 cv
347.685 177.669 348.227 177.398 348.092 177.127 cv
cp
348.092 175.365 mo
348.227 175.23 347.143 172.79 347.143 174.552 cv
347.143 174.823 347.821 175.637 348.092 175.365 cv
cp
348.498 182.819 mo
344.975 181.193 349.176 185.801 349.311 183.633 cv
349.311 183.903 347.956 183.361 348.498 182.819 cv
349.176 182.955 349.311 182.413 349.311 181.871 cv
348.634 181.735 348.498 182.277 348.498 182.819 cv
cp
347.549 190.138 mo
347.549 190.002 346.465 190.409 346.736 190.545 cv
346.872 190.68 347.821 190.409 347.549 190.138 cv
cp
346.736 178.482 mo
346.601 178.347 345.652 178.618 345.923 178.889 cv
345.923 179.024 347.007 178.618 346.736 178.482 cv
cp
345.923 184.987 mo
346.465 185.801 348.092 182.819 346.33 184.581 cv
346.194 184.581 345.517 184.581 345.923 184.987 cv
cp
346.33 176.721 mo
346.194 176.585 345.246 176.991 345.381 177.127 cv
345.517 177.263 346.465 176.856 346.33 176.721 cv
cp
345.923 181.871 mo
345.923 181.735 344.433 181.193 344.568 181.871 cv
344.704 182.413 345.923 182.548 345.923 181.871 cv
cp
343.755 184.039 mo
343.619 184.039 343.077 184.311 343.212 184.581 cv
343.348 184.717 343.89 184.311 343.755 184.039 cv
cp
336.707 238.793 mo
336.572 238.657 336.03 239.064 336.301 239.199 cv
336.436 239.335 336.978 239.064 336.707 238.793 cv
cp
331.15 243.942 mo
331.015 243.942 330.066 244.214 330.202 244.484 cv
330.337 244.62 331.286 244.214 331.15 243.942 cv
cp
329.389 246.247 mo
329.253 246.111 328.305 246.382 328.44 246.653 cv
328.576 246.789 329.524 246.382 329.389 246.247 cv
cp
328.982 235.269 mo
329.253 233.778 330.337 232.829 330.202 231.474 cv
330.202 230.661 329.253 230.932 328.982 230.119 cv
328.711 229.577 329.253 228.492 328.44 228.356 cv
327.627 230.254 328.44 233.507 328.982 235.269 cv
cp
327.627 238.793 mo
327.491 238.657 326.542 239.064 326.813 239.199 cv
326.949 239.335 327.898 239.064 327.627 238.793 cv
cp
320.715 215.347 mo
320.579 215.211 320.037 215.617 320.308 215.753 cv
320.308 215.889 320.851 215.617 320.715 215.347 cv
cp
320.715 239.199 mo
320.851 239.064 319.766 236.624 319.766 238.386 cv
319.766 238.522 320.579 239.335 320.715 239.199 cv
cp
319.766 210.603 mo
320.037 211.145 320.308 210.603 319.766 210.603 cv
319.495 209.925 319.359 210.603 319.766 210.603 cv
cp
319.766 223.613 mo
319.766 223.207 319.088 223.071 318.953 223.613 cv
319.495 223.613 319.631 224.291 319.766 223.613 cv
cp
318.546 240.555 mo
318.411 240.419 317.869 240.69 318.14 240.961 cv
318.14 241.097 318.682 240.825 318.546 240.555 cv
cp
318.14 200.573 mo
318.004 200.439 317.462 200.845 317.598 200.98 cv
317.733 201.115 318.275 200.845 318.14 200.573 cv
cp
317.191 219.276 mo
317.056 219.141 316.514 219.412 316.785 219.683 cv
316.92 219.818 317.462 219.548 317.191 219.276 cv
cp
316.785 197.592 mo
316.649 197.456 316.107 197.728 316.378 197.999 cv
316.514 198.134 317.056 197.728 316.785 197.592 cv
cp
316.785 181.871 mo
316.649 181.871 316.107 182.142 316.378 182.413 cv
316.514 182.548 317.056 182.142 316.785 181.871 cv
cp
315.971 204.91 mo
316.785 204.91 317.327 204.64 317.598 204.098 cv
316.92 203.284 316.242 204.232 315.971 204.91 cv
cp
316.785 214.939 mo
316.649 214.804 315.7 215.211 315.971 215.347 cv
315.971 215.481 316.92 215.075 316.785 214.939 cv
cp
316.378 185.801 mo
314.48 185.395 316.242 187.156 316.378 185.801 cv
318.275 185.937 316.514 184.175 316.378 185.801 cv
cp
315.971 192.307 mo
315.836 192.171 315.294 192.577 315.429 192.849 cv
315.565 192.849 316.107 192.577 315.971 192.307 cv
cp
315.971 179.296 mo
315.971 178.889 315.158 178.754 315.022 179.296 cv
315.158 179.838 315.565 179.566 315.971 179.296 cv
cp
315.971 195.424 mo
315.836 195.288 314.887 195.559 315.022 195.83 cv
315.158 195.966 316.107 195.559 315.971 195.424 cv
cp
315.022 198.812 mo
314.887 198.676 313.938 199.083 314.209 199.354 cv
314.345 199.354 315.294 199.083 315.022 198.812 cv
cp
313.261 199.761 mo
313.125 199.625 312.583 199.896 312.854 200.167 cv
312.99 200.303 313.532 199.896 313.261 199.761 cv
cp
312.448 204.91 mo
312.448 204.504 311.634 204.368 311.634 204.91 cv
311.634 205.452 312.041 205.182 312.448 204.91 cv
cp
312.041 197.186 mo
311.905 197.05 311.363 197.321 311.634 197.592 cv
311.634 197.728 312.177 197.321 312.041 197.186 cv
cp
311.634 187.563 mo
313.125 189.054 312.041 184.445 311.634 186.75 cv
311.499 186.75 311.499 187.563 311.634 187.563 cv
cp
311.634 181.058 mo
310.957 181.328 311.634 181.6 311.634 181.058 cv
312.177 180.786 311.499 180.516 311.634 181.058 cv
cp
311.092 203.69 mo
310.957 203.556 310.414 203.826 310.685 204.098 cv
310.821 204.232 311.363 203.826 311.092 203.69 cv
cp
311.092 201.522 mo
310.957 201.387 310.414 201.658 310.685 201.929 cv
310.821 202.064 311.363 201.658 311.092 201.522 cv
cp
311.092 199.761 mo
310.957 199.625 310.414 199.896 310.685 200.167 cv
310.821 200.303 311.363 199.896 311.092 199.761 cv
cp
311.092 168.047 mo
310.957 167.911 310.414 168.183 310.685 168.453 cv
310.821 168.589 311.363 168.317 311.092 168.047 cv
cp
311.092 189.731 mo
311.092 189.325 310.414 189.189 310.279 189.731 cv
310.821 189.731 310.957 190.409 311.092 189.731 cv
cp
310.685 184.581 mo
310.55 184.445 309.602 184.717 309.872 184.987 cv
310.008 185.123 310.957 184.717 310.685 184.581 cv
cp
310.279 194.475 mo
310.143 194.339 309.602 194.746 309.872 195.017 cv
310.008 195.017 310.55 194.746 310.279 194.475 cv
cp
309.872 175.365 mo
309.737 175.23 308.789 175.637 308.924 175.907 cv
309.06 175.907 310.008 175.637 309.872 175.365 cv
cp
309.466 200.98 mo
309.331 200.845 308.789 201.251 308.924 201.522 cv
309.06 201.522 309.602 201.251 309.466 200.98 cv
cp
307.704 189.731 mo
307.568 189.596 307.026 190.002 307.162 190.138 cv
307.297 190.273 307.84 190.002 307.704 189.731 cv
cp
307.704 185.801 mo
307.568 185.665 306.62 186.072 306.755 186.208 cv
306.891 186.343 307.84 186.072 307.704 185.801 cv
cp
315.971 162.355 mo
316.649 162.355 317.327 162.355 318.14 162.355 cv
318.275 163.304 322.341 162.083 321.122 164.523 cv
321.122 164.658 320.308 165.065 320.308 165.065 cv
320.308 165.743 321.528 166.014 321.528 166.285 cv
321.664 167.233 320.579 168.453 320.715 169.402 cv
320.851 170.622 321.664 172.384 321.935 174.146 cv
322.341 175.637 322.748 177.263 322.883 178.889 cv
323.019 180.786 322.612 182.819 322.883 184.581 cv
323.154 186.614 324.239 188.647 324.645 190.545 cv
324.781 191.629 325.052 192.849 325.052 193.661 cv
324.916 194.475 324.103 195.559 324.103 196.236 cv
324.239 196.914 324.916 197.728 325.052 198.812 cv
325.187 200.031 324.51 201.522 324.645 201.929 cv
324.781 202.878 326.271 203.556 326.271 204.098 cv
326.407 205.588 325.187 204.91 325.052 206.673 cv
324.916 207.485 326 208.705 326.271 210.603 cv
327.356 215.481 326.407 220.226 327.627 224.427 cv
328.169 226.189 328.44 227.408 328.982 227.544 cv
330.066 227.68 332.235 219.412 331.557 216.701 cv
331.422 216.431 331.015 216.295 331.15 215.753 cv
331.286 214.397 332.777 213.449 333.319 211.822 cv
333.726 210.467 333.997 208.705 334.132 207.079 cv
334.539 203.42 333.861 198.947 334.539 194.475 cv
334.674 194.204 334.674 192.984 334.945 192.307 cv
335.623 190.951 336.165 191.629 335.894 189.731 cv
335.759 189.189 335.759 188.512 335.894 187.97 cv
336.03 186.614 337.52 185.665 337.656 185.395 cv
337.791 184.717 336.707 183.768 336.707 182.819 cv
336.707 182.548 337.52 182.006 337.656 181.871 cv
338.198 180.108 338.74 177.263 338.875 174.552 cv
339.147 171.028 338.74 168.047 339.824 165.472 cv
341.044 162.355 343.077 163.304 348.498 163.304 cv
354.19 163.304 355.681 163.304 362.322 163.304 cv
364.491 163.304 368.692 162.761 369.37 163.304 cv
370.047 163.846 369.099 164.794 369.37 166.285 cv
369.505 167.098 370.183 167.911 370.183 168.453 cv
370.183 169.537 369.641 170.757 369.776 171.57 cv
370.047 174.146 370.725 177.127 371.538 180.244 cv
372.08 183.091 373.435 186.343 373.706 188.376 cv
373.842 189.867 373.164 191.493 373.164 192.849 cv
373.3 193.391 373.842 194.068 374.113 195.017 cv
374.519 196.508 373.977 200.167 374.519 202.335 cv
374.926 203.962 376.688 205.452 377.095 207.079 cv
377.908 210.467 377.095 215.075 377.501 218.87 cv
377.637 219.548 378.314 220.632 378.45 221.445 cv
378.856 224.563 378.585 227.272 380.212 229.712 cv
381.567 221.852 384.956 210.603 384.956 199.354 cv
384.956 197.186 384.413 195.83 384.956 193.255 cv
385.091 192.307 385.227 190.951 385.362 190.138 cv
385.362 190.138 385.633 188.782 385.768 188.376 cv
386.039 188.105 386.581 188.24 386.717 187.563 cv
386.717 186.614 385.904 185.395 385.768 184.039 cv
385.768 183.768 386.039 182.413 386.175 181.464 cv
386.581 179.838 386.988 178.347 387.124 176.314 cv
387.124 176.179 387.666 175.907 387.53 175.365 cv
387.53 175.23 386.988 175.094 387.124 174.552 cv
387.259 173.874 387.802 172.384 387.937 171.57 cv
388.479 168.453 388.208 163.846 388.886 163.304 cv
389.834 162.355 397.018 163.032 399.728 163.304 cv
403.252 163.439 406.233 163.168 409.215 162.355 cv
409.486 162.355 409.893 162.355 410.164 162.355 cv
410.57 168.995 409.486 173.739 408.402 178.482 cv
407.995 180.38 407.182 182.142 407.046 184.039 cv
407.046 185.259 407.589 186.479 407.453 187.563 cv
407.453 188.512 406.911 189.189 406.64 190.138 cv
405.827 193.255 406.504 197.321 405.827 200.167 cv
405.42 201.522 403.658 202.335 403.658 203.148 cv
403.658 204.368 405.149 203.962 404.878 205.317 cv
404.878 205.995 404.201 205.859 404.065 206.266 cv
403.387 208.163 403.116 210.332 403.116 212.772 cv
403.252 214.397 403.794 216.701 403.658 218.328 cv
403.523 219.276 402.574 219.818 402.303 221.038 cv
402.167 221.58 401.761 221.445 401.49 221.852 cv
400.948 222.665 402.167 227.002 401.896 229.306 cv
401.761 230.119 400.812 230.797 400.541 231.881 cv
400.135 233.507 400.135 235.811 399.728 237.98 cv
399.592 238.522 399.864 239.199 399.728 239.605 cv
399.592 239.877 398.915 240.283 398.779 240.555 cv
398.508 241.774 398.643 242.994 398.372 243.942 cv
398.102 245.704 398.915 247.331 397.56 248.415 cv
396.882 248.821 397.966 251.126 397.966 251.804 cv
397.56 255.869 393.494 255.599 389.699 255.733 cv
386.988 255.733 384.007 255.599 381.432 255.733 cv
378.043 255.869 369.37 256.953 366.659 254.921 cv
365.439 253.836 365.575 251.126 365.033 249.635 cv
364.626 248.687 363.677 248.551 363.677 248.415 cv
363.406 246.925 364.626 245.976 364.491 244.892 cv
364.491 242.452 362.322 241.91 361.915 240.555 cv
361.373 238.251 363 237.98 363.271 237.438 cv
363.406 236.896 362.864 236.354 362.864 235.269 cv
362.728 234.32 362.186 232.965 361.915 231.881 cv
360.56 225.375 359.747 217.921 358.392 211.822 cv
357.985 209.789 357.308 208.299 357.172 206.673 cv
357.037 205.995 357.714 205.317 357.579 204.504 cv
357.579 203.826 357.714 203.826 357.579 203.148 cv
357.308 202.064 356.495 200.845 356.223 200.167 cv
355.41 196.102 356.495 192.713 355.003 189.325 cv
353.919 192.171 353.242 194.61 352.835 197.592 cv
352.429 200.439 353.106 203.69 352.429 206.673 cv
352.293 207.079 351.209 207.757 351.073 208.027 cv
349.718 209.925 351.209 211.145 351.073 213.991 cv
351.073 215.075 351.48 214.804 351.073 215.753 cv
350.802 216.431 350.531 216.566 350.26 217.515 cv
349.447 219.818 349.176 222.394 348.498 225.375 cv
348.498 225.375 347.685 225.647 347.549 225.782 cv
347.549 226.189 348.092 226.324 348.092 226.595 cv
347.956 229.441 348.092 231.609 347.549 234.049 cv
347.414 235.404 347.007 236.896 346.736 238.386 cv
346.465 239.605 345.923 240.961 345.923 241.368 cv
345.923 241.774 346.33 242.045 346.33 242.316 cv
346.194 242.723 345.652 243.4 345.381 243.942 cv
344.839 245.976 344.161 248.415 344.161 250.584 cv
344.026 253.023 345.11 253.972 344.161 254.921 cv
344.161 254.921 341.586 254.921 339.824 255.327 cv
336.572 255.869 336.03 256.275 334.132 255.733 cv
332.37 255.327 330.337 256.141 328.033 256.141 cv
325.323 256.141 323.154 255.463 319.359 255.327 cv
318.004 255.191 315.7 254.785 315.022 254.921 cv
313.938 254.921 313.532 256.411 312.448 255.327 cv
312.041 254.921 311.77 251.532 311.634 249.635 cv
310.957 245.298 310.55 241.097 309.872 237.438 cv
309.602 236.354 309.195 235.811 308.924 234.862 cv
308.653 233.643 309.06 232.559 308.924 232.287 cv
308.653 229.983 308.382 227.95 308.111 226.189 cv
308.111 226.189 308.653 225.511 308.517 224.969 cv
308.517 224.833 307.704 224.291 307.704 224.021 cv
306.891 221.58 307.975 220.09 307.162 218.328 cv
307.162 218.057 306.078 218.192 305.942 217.921 cv
304.994 216.566 306.755 214.804 306.755 213.584 cv
306.891 211.416 305.671 209.654 305.536 208.435 cv
305.129 206.266 305.265 203.826 304.994 201.929 cv
304.994 200.98 304.316 200.167 304.18 199.354 cv
303.367 194.61 302.418 188.376 301.605 184.581 cv
301.334 183.497 301.334 182.548 301.199 181.464 cv
300.386 176.856 300.115 174.417 299.437 169.402 cv
299.301 168.047 298.488 163.304 298.488 163.304 cv
298.894 162.897 300.792 163.574 302.825 163.71 cv
307.704 163.846 312.719 163.168 315.971 162.355 cv
cp
1 1 1 rgb
f
480.097 246.382 mo
479.554 246.518 479.419 245.84 479.148 246.382 cv
479.283 246.925 479.961 246.925 480.097 246.382 cv
cp
480.097 239.471 mo
479.961 239.199 478.605 238.793 478.741 239.471 cv
478.876 239.605 480.232 240.013 480.097 239.471 cv
cp
479.148 238.115 mo
479.148 237.98 478.063 238.386 478.334 238.522 cv
478.47 238.657 479.419 238.251 479.148 238.115 cv
cp
477.928 223.613 mo
477.792 223.478 477.25 223.885 477.521 224.021 cv
477.521 224.155 478.063 223.885 477.928 223.613 cv
cp
477.928 239.877 mo
477.928 239.471 477.115 239.335 476.979 239.877 cv
477.521 239.741 477.657 240.555 477.928 239.877 cv
cp
476.979 246.789 mo
476.437 247.06 477.115 247.331 476.979 246.789 cv
478.876 247.331 477.115 245.569 476.979 246.789 cv
cp
476.979 245.162 mo
476.979 244.892 476.573 244.62 476.573 245.162 cv
476.573 245.298 476.979 245.569 476.979 245.162 cv
cp
476.573 244.214 mo
477.657 244.35 478.334 243.942 478.741 243.4 cv
477.657 243.265 476.708 243.265 476.573 244.214 cv
cp
476.573 234.591 mo
477.25 235.404 478.741 232.423 476.979 234.185 cv
476.979 234.185 476.302 234.185 476.573 234.591 cv
cp
476.979 219.683 mo
476.844 219.548 476.302 219.954 476.573 220.09 cv
476.708 220.226 477.25 219.954 476.979 219.683 cv
cp
476.573 214.397 mo
476.437 214.397 475.895 214.669 476.166 214.939 cv
476.302 215.075 476.844 214.669 476.573 214.397 cv
cp
475.76 220.09 mo
475.895 219.954 475.76 219.276 475.217 219.683 cv
475.082 219.954 475.217 220.632 475.76 220.09 cv
cp
476.166 240.69 mo
475.76 240.283 476.166 240.69 475.76 240.69 cv
473.32 241.232 477.792 242.316 476.166 240.69 cv
cp
475.76 242.452 mo
474.946 242.316 474.946 242.858 474.811 243.4 cv
475.624 243.536 475.624 242.994 475.76 242.452 cv
478.47 242.994 476.708 241.097 475.76 242.452 cv
cp
475.217 245.569 mo
475.082 245.434 474.539 245.704 474.811 245.976 cv
474.946 246.111 475.488 245.704 475.217 245.569 cv
cp
474.811 238.928 mo
474.675 238.793 473.727 239.199 473.997 239.471 cv
474.133 239.471 475.082 239.199 474.811 238.928 cv
cp
474.811 223.207 mo
474.675 223.071 473.727 223.478 473.997 223.613 cv
474.133 223.749 475.082 223.478 474.811 223.207 cv
cp
474.404 247.737 mo
474.268 247.602 473.727 248.009 473.997 248.145 cv
474.133 248.279 474.675 248.009 474.404 247.737 cv
cp
473.456 219.276 mo
473.727 219.954 473.997 219.276 473.456 219.276 cv
473.591 217.379 471.829 219.141 473.456 219.276 cv
cp
472.236 233.236 mo
472.507 233.371 472.778 233.371 472.643 233.778 cv
472.371 233.643 472.1 233.643 472.236 233.236 cv
cp
473.049 246.382 mo
472.914 246.247 471.965 246.653 472.236 246.789 cv
472.371 246.925 473.32 246.653 473.049 246.382 cv
cp
473.049 243.808 mo
472.914 243.672 471.965 244.078 472.236 244.214 cv
472.371 244.35 473.32 243.942 473.049 243.808 cv
cp
472.643 209.247 mo
472.507 209.112 471.965 209.383 472.236 209.654 cv
472.371 209.789 472.914 209.383 472.643 209.247 cv
cp
472.643 196.508 mo
472.507 196.372 471.965 196.778 472.236 196.914 cv
472.371 197.05 472.914 196.778 472.643 196.508 cv
cp
472.643 174.552 mo
472.507 174.552 471.965 174.823 472.236 175.094 cv
472.371 175.23 472.914 174.823 472.643 174.552 cv
cp
472.643 214.397 mo
472.507 214.397 471.558 214.669 471.829 214.939 cv
471.829 215.075 472.914 214.669 472.643 214.397 cv
cp
472.643 205.317 mo
472.507 205.182 471.558 205.452 471.829 205.724 cv
471.829 205.859 472.914 205.452 472.643 205.317 cv
cp
472.643 199.083 mo
472.507 198.947 471.558 199.354 471.829 199.625 cv
471.829 199.625 472.914 199.354 472.643 199.083 cv
cp
472.643 185.937 mo
472.507 185.937 471.558 186.208 471.829 186.479 cv
471.829 186.614 472.914 186.208 472.643 185.937 cv
cp
472.236 219.683 mo
472.1 219.548 471.558 219.954 471.829 220.09 cv
471.829 220.226 472.371 219.954 472.236 219.683 cv
cp
471.829 236.76 mo
472.914 237.844 473.727 234.727 472.236 236.354 cv
472.236 236.354 471.423 236.488 471.829 236.76 cv
cp
472.236 218.87 mo
472.1 218.734 471.151 219.006 471.287 219.276 cv
471.423 219.412 472.371 219.006 472.236 218.87 cv
cp
471.829 187.698 mo
471.694 187.563 471.151 187.97 471.287 188.24 cv
471.423 188.24 471.965 187.97 471.829 187.698 cv
cp
471.829 177.263 mo
471.694 177.127 471.151 177.398 471.287 177.669 cv
471.423 177.805 471.965 177.398 471.829 177.263 cv
cp
471.829 221.445 mo
471.965 221.174 471.829 220.632 471.287 221.038 cv
471.151 221.31 471.287 221.852 471.829 221.445 cv
cp
471.287 222.8 mo
473.049 224.427 473.862 220.226 471.829 222.394 cv
471.694 222.394 471.016 222.394 471.287 222.8 cv
cp
471.287 245.162 mo
471.151 245.027 470.609 245.298 470.88 245.569 cv
471.016 245.704 471.558 245.298 471.287 245.162 cv
cp
471.287 196.914 mo
471.151 196.778 470.609 197.186 470.88 197.321 cv
471.016 197.456 471.558 197.186 471.287 196.914 cv
cp
471.287 184.311 mo
471.151 184.175 470.609 184.445 470.88 184.717 cv
471.016 184.853 471.558 184.445 471.287 184.311 cv
cp
471.829 217.108 mo
472.1 217.786 472.236 216.973 471.829 217.108 cv
471.287 215.753 469.39 217.515 471.829 217.108 cv
cp
470.88 203.556 mo
471.151 204.098 471.423 203.42 470.88 203.556 cv
470.338 202.2 468.577 203.962 470.88 203.556 cv
cp
470.474 240.283 mo
470.474 240.419 470.474 240.555 470.474 240.69 cv
471.016 240.69 471.694 240.69 471.829 241.232 cv
470.338 240.825 471.151 242.588 470.474 242.858 cv
471.829 243.265 471.016 241.503 471.829 241.232 cv
473.185 240.69 471.287 239.877 470.474 240.283 cv
470.88 238.251 468.441 240.825 470.474 240.283 cv
cp
470.474 177.263 mo
470.338 177.127 469.39 177.534 469.525 177.669 cv
469.661 177.805 470.609 177.398 470.474 177.263 cv
cp
470.067 210.061 mo
469.932 209.925 469.39 210.332 469.525 210.467 cv
469.661 210.603 470.203 210.332 470.067 210.061 cv
cp
473.456 227.544 mo
472.236 227.002 472.236 229.034 473.456 228.492 cv
474.268 230.254 471.694 228.628 471.829 229.712 cv
472.643 230.119 475.488 230.797 475.76 228.492 cv
474.946 228.492 474.268 228.492 473.456 228.492 cv
473.456 228.222 473.456 227.814 473.456 227.544 cv
474.675 226.46 475.488 228.764 476.573 228.086 cv
476.844 227.95 476.166 226.595 476.166 226.324 cv
476.166 226.595 478.063 225.105 476.166 224.969 cv
475.76 226.189 475.488 226.053 475.217 226.73 cv
474.133 227.002 475.624 224.697 474.404 224.969 cv
473.997 226.595 471.016 225.782 470.88 224.563 cv
470.88 224.427 472.236 223.885 471.829 223.207 cv
470.067 222.665 468.441 227.272 470.067 228.086 cv
471.016 228.492 471.558 226.866 472.236 226.73 cv
473.185 226.46 474.811 226.595 473.456 227.544 cv
cp
470.474 212.23 mo
470.474 213.449 471.151 213.178 470.474 213.991 cv
468.17 213.991 469.932 215.889 470.474 213.991 cv
471.694 214.126 471.558 212.772 472.236 212.23 cv
471.558 212.23 471.016 212.23 470.474 212.23 cv
470.203 211.687 469.932 212.364 470.474 212.23 cv
cp
470.067 238.115 mo
469.796 237.844 469.119 238.386 469.119 238.522 cv
469.119 239.471 470.474 238.522 470.067 238.115 cv
cp
470.067 201.251 mo
470.067 200.845 469.254 200.709 469.119 201.251 cv
469.254 201.793 469.661 201.522 470.067 201.251 cv
cp
469.525 207.893 mo
469.39 207.757 468.848 208.163 469.119 208.299 cv
469.254 208.435 469.796 208.163 469.525 207.893 cv
cp
470.067 217.921 mo
469.661 217.65 468.712 218.192 468.712 218.328 cv
468.034 219.954 471.016 218.87 470.067 217.921 cv
cp
469.525 190.002 mo
468.712 190.273 467.628 191.357 469.119 191.629 cv
469.119 190.951 469.661 190.815 469.525 190.002 cv
470.88 189.867 469.119 188.105 469.525 190.002 cv
cp
470.067 215.753 mo
468.306 215.211 467.628 217.243 469.119 217.515 cv
468.848 216.295 470.067 216.701 470.067 215.753 cv
470.609 215.753 471.287 215.889 471.287 215.347 cv
470.745 214.804 470.203 214.804 470.067 215.753 cv
cp
468.712 192.577 mo
468.577 192.441 468.034 192.713 468.306 192.984 cv
468.441 193.119 468.983 192.849 468.712 192.577 cv
cp
468.712 174.552 mo
468.712 174.688 468.712 174.959 468.712 175.094 cv
469.119 175.365 469.932 175.772 470.067 175.094 cv
469.661 174.823 469.254 174.552 468.712 174.552 cv
468.577 172.926 466.814 174.688 468.712 174.552 cv
cp
468.306 180.786 mo
468.306 180.516 467.763 180.244 467.763 180.786 cv
467.763 180.922 468.306 181.193 468.306 180.786 cv
cp
468.712 171.164 mo
468.441 170.893 467.763 171.435 467.763 171.57 cv
467.763 172.52 469.119 171.57 468.712 171.164 cv
cp
468.712 211.416 mo
468.577 211.28 467.628 211.687 467.763 211.822 cv
467.899 211.958 468.848 211.552 468.712 211.416 cv
cp
468.712 205.724 mo
468.577 205.588 467.628 205.995 467.763 206.13 cv
467.899 206.266 468.848 205.859 468.712 205.724 cv
cp
468.306 219.276 mo
468.17 219.141 467.628 219.548 467.763 219.683 cv
467.899 219.818 468.441 219.548 468.306 219.276 cv
cp
468.306 237.166 mo
468.17 237.166 467.221 237.438 467.357 237.708 cv
467.492 237.844 468.441 237.438 468.306 237.166 cv
cp
467.763 203.556 mo
467.763 203.013 467.086 203.013 466.95 203.556 cv
467.086 204.098 467.492 203.826 467.763 203.556 cv
cp
467.357 170.215 mo
467.221 170.08 466.679 170.486 466.95 170.622 cv
467.086 170.757 467.628 170.486 467.357 170.215 cv
cp
467.357 196.508 mo
465.73 196.644 467.492 198.405 467.357 196.508 cv
468.034 196.508 468.577 196.508 468.712 196.102 cv
468.034 195.559 467.628 195.559 467.357 196.508 cv
cp
467.357 223.613 mo
467.221 223.478 466.543 223.885 466.543 224.021 cv
466.543 224.969 467.899 224.155 467.357 223.613 cv
cp
467.357 213.991 mo
467.221 213.855 466.543 214.262 466.543 214.397 cv
466.543 215.347 467.899 214.533 467.357 213.991 cv
cp
466.95 217.108 mo
466.814 216.973 466.272 217.243 466.543 217.515 cv
466.679 217.65 467.221 217.243 466.95 217.108 cv
cp
466.95 182.548 mo
466.814 182.955 467.086 183.768 466.543 183.768 cv
466.001 183.226 466.001 182.684 466.95 182.548 cv
cp
466.95 189.054 mo
466.95 188.647 466.137 188.512 466.137 189.054 cv
466.137 189.596 466.543 189.325 466.95 189.054 cv
cp
466.95 218.328 mo
466.814 218.328 465.866 218.599 466.137 218.87 cv
466.137 219.006 467.221 218.599 466.95 218.328 cv
cp
466.543 201.793 mo
466.408 201.658 465.866 201.929 466.137 202.2 cv
466.137 202.335 466.679 201.929 466.543 201.793 cv
cp
468.306 220.09 mo
467.763 220.226 467.763 221.174 467.357 221.445 cv
466.679 222.123 465.188 221.852 466.137 222.8 cv
467.763 222.8 467.899 222.936 468.712 222.394 cv
468.441 222.529 467.763 222.123 467.763 221.852 cv
467.899 221.31 469.39 221.174 470.474 220.632 cv
469.796 220.09 469.119 219.954 468.306 220.09 cv
cp
466.137 193.933 mo
466.001 193.797 465.459 194.068 465.595 194.339 cv
465.73 194.475 466.272 194.068 466.137 193.933 cv
cp
467.357 211.009 mo
469.254 211.416 467.492 209.654 467.357 211.009 cv
465.595 211.687 466.137 208.705 465.595 211.416 cv
465.595 211.822 465.053 212.906 466.95 211.822 cv
467.221 211.687 467.357 211.416 467.357 211.009 cv
cp
465.188 177.669 mo
465.324 176.585 466.95 177.669 466.543 178.482 cv
465.595 178.754 465.866 177.669 465.188 177.669 cv
cp
466.137 171.57 mo
466.001 171.435 465.053 171.842 465.188 171.978 cv
465.324 172.112 466.272 171.706 466.137 171.57 cv
cp
465.595 220.09 mo
465.459 220.09 464.917 220.36 465.188 220.632 cv
465.324 220.768 465.866 220.36 465.595 220.09 cv
cp
465.595 200.845 mo
465.459 200.709 464.917 201.115 465.188 201.251 cv
465.324 201.387 465.866 201.115 465.595 200.845 cv
cp
468.306 185.937 mo
468.306 183.226 463.426 187.156 465.595 187.698 cv
465.053 186.479 467.492 185.801 467.763 186.885 cv
467.763 187.698 466.408 187.156 466.543 188.24 cv
467.357 187.428 468.577 188.24 468.712 188.24 cv
468.712 188.24 469.39 185.801 469.119 185.937 cv
469.254 185.937 470.067 186.072 470.067 185.937 cv
470.067 184.717 469.119 184.311 468.306 184.311 cv
467.899 185.123 469.525 185.665 468.306 185.937 cv
cp
465.188 204.775 mo
465.188 204.64 464.782 204.368 464.782 204.775 cv
464.782 205.046 465.188 205.317 465.188 204.775 cv
cp
464.782 230.661 mo
464.782 230.39 466.137 229.848 466.543 230.254 cv
467.221 230.932 464.646 231.474 464.782 230.661 cv
cp
465.188 221.852 mo
465.053 221.716 464.511 222.123 464.782 222.394 cv
464.917 222.394 465.459 222.123 465.188 221.852 cv
cp
465.188 170.215 mo
465.053 170.08 464.511 170.486 464.782 170.622 cv
464.917 170.757 465.459 170.486 465.188 170.215 cv
cp
468.712 232.423 mo
467.221 231.339 466.272 234.049 464.375 232.829 cv
464.511 234.862 466.408 233.101 467.357 233.236 cv
468.306 233.371 468.17 234.591 469.119 234.185 cv
468.712 235.134 466.679 234.591 466.137 235.54 cv
467.086 237.302 468.712 234.727 469.525 234.998 cv
468.983 234.862 470.474 237.03 470.474 236.76 cv
470.474 236.76 469.796 236.896 470.067 237.166 cv
470.203 237.573 471.016 238.251 471.287 238.522 cv
471.287 238.522 472.507 240.419 472.643 238.928 cv
470.88 237.98 471.965 234.185 469.119 234.185 cv
468.577 232.694 470.88 233.236 471.287 233.778 cv
471.558 233.914 471.558 234.862 471.829 234.998 cv
472.643 235.676 474.268 234.998 474.404 235.946 cv
474.404 238.251 476.302 236.354 474.404 235.946 cv
474.404 235.134 475.895 235.54 475.76 234.591 cv
474.811 234.727 474.539 234.32 473.997 234.185 cv
473.997 234.049 473.997 233.914 473.997 233.778 cv
477.386 234.185 477.928 229.712 474.404 231.474 cv
475.217 231.609 475.895 231.881 476.166 232.423 cv
475.082 232.559 474.268 232.829 473.997 233.778 cv
473.456 233.778 473.727 234.185 473.997 234.185 cv
474.133 234.998 471.965 234.862 472.643 233.778 cv
473.456 234.32 473.591 231.203 473.456 231.067 cv
472.1 230.119 469.932 233.778 468.712 232.423 cv
cp
464.375 181.193 mo
464.375 181.058 464.917 180.516 465.188 180.786 cv
464.782 180.38 464.782 182.548 465.188 182.006 cv
464.375 183.361 464.24 181.328 464.375 181.193 cv
cp
465.595 191.222 mo
465.595 189.596 464.646 190.409 464.375 190.002 cv
464.104 189.596 465.188 188.918 463.833 189.054 cv
462.884 190.68 464.104 190.951 465.595 191.222 cv
cp
464.375 192.577 mo
464.104 192.307 463.426 192.849 463.426 192.984 cv
463.426 193.933 464.782 192.984 464.375 192.577 cv
cp
464.375 172.384 mo
464.375 171.978 463.562 171.842 463.426 172.384 cv
463.969 172.384 464.104 173.062 464.375 172.384 cv
cp
463.833 229.306 mo
463.697 229.17 463.155 229.577 463.426 229.712 cv
463.562 229.848 464.104 229.577 463.833 229.306 cv
cp
463.833 233.236 mo
464.24 232.965 463.155 231.203 463.02 232.423 cv
463.02 232.694 463.291 233.778 463.833 233.236 cv
cp
463.833 187.698 mo
463.697 187.563 463.02 187.97 463.02 188.24 cv
463.02 189.189 464.375 188.24 463.833 187.698 cv
cp
465.188 185.123 mo
464.104 184.987 464.375 183.633 463.02 183.768 cv
463.02 184.717 464.782 186.072 465.188 185.123 cv
cp
465.188 196.102 mo
464.375 195.424 464.646 193.661 463.02 193.933 cv
462.884 195.152 464.646 196.914 465.188 196.102 cv
cp
464.375 186.479 mo
464.24 186.208 462.749 185.801 463.02 186.479 cv
463.02 186.614 464.511 187.021 464.375 186.479 cv
cp
463.426 170.622 mo
463.291 170.486 462.749 170.893 463.02 171.164 cv
463.155 171.164 463.697 170.893 463.426 170.622 cv
cp
463.426 169.809 mo
463.291 169.673 462.749 169.944 463.02 170.215 cv
463.155 170.351 463.697 170.08 463.426 169.809 cv
cp
463.02 228.086 mo
462.884 227.95 462.342 228.222 462.613 228.492 cv
462.749 228.628 463.291 228.222 463.02 228.086 cv
cp
464.375 225.782 mo
464.104 225.647 462.206 224.833 462.071 225.782 cv
463.426 225.917 463.426 227.137 463.426 227.137 cv
464.104 227.544 464.375 226.866 464.782 227.544 cv
464.782 227.814 464.24 228.086 464.375 228.492 cv
464.375 228.356 465.053 229.577 464.375 230.254 cv
464.24 230.254 463.02 230.254 463.02 230.254 cv
463.697 231.609 465.053 232.559 467.357 231.067 cv
467.492 232.423 469.254 230.661 467.357 231.067 cv
467.492 229.306 470.474 232.423 471.287 230.661 cv
471.423 230.525 471.287 228.628 470.067 228.492 cv
470.474 229.712 470.745 230.525 468.712 230.254 cv
467.357 228.356 469.932 225.105 467.357 224.969 cv
467.221 226.053 468.17 227.137 467.763 228.086 cv
467.763 228.086 465.866 228.899 466.137 229.712 cv
464.917 227.95 467.086 228.222 466.543 225.782 cv
467.086 225.511 466.408 225.375 466.543 225.782 cv
466.137 226.053 464.24 227.814 464.375 225.782 cv
465.459 225.917 465.73 225.105 466.137 224.563 cv
464.917 224.427 464.24 224.697 464.375 225.782 cv
cp
462.613 229.306 mo
462.477 229.17 461.935 229.577 462.071 229.712 cv
462.206 229.848 462.749 229.577 462.613 229.306 cv
cp
462.613 234.591 mo
462.477 234.456 461.529 234.862 461.664 234.998 cv
461.8 235.134 462.749 234.862 462.613 234.591 cv
cp
462.071 224.563 mo
462.071 224.427 461.529 224.697 461.664 224.969 cv
461.8 225.105 462.342 224.697 462.071 224.563 cv
cp
462.071 194.339 mo
462.071 194.204 461.529 194.475 461.664 194.746 cv
461.8 194.882 462.342 194.475 462.071 194.339 cv
cp
462.071 188.647 mo
462.071 188.512 461.529 188.782 461.664 189.054 cv
461.8 189.189 462.342 188.782 462.071 188.647 cv
cp
463.833 175.501 mo
462.884 174.823 463.02 174.552 461.664 175.094 cv
461.258 173.604 464.917 173.739 463.833 175.501 cv
cp
462.071 171.164 mo
462.071 170.622 461.393 170.622 461.258 171.164 cv
461.8 171.028 461.935 171.706 462.071 171.164 cv
cp
461.664 230.661 mo
461.529 230.525 460.987 230.932 461.258 231.067 cv
461.393 231.203 461.935 230.932 461.664 230.661 cv
cp
461.258 194.746 mo
461.122 194.61 460.58 195.017 460.852 195.152 cv
460.987 195.288 461.529 195.017 461.258 194.746 cv
cp
459.496 227.544 mo
459.632 228.899 461.258 227.137 459.496 227.544 cv
459.225 227.002 458.954 227.68 459.496 227.544 cv
cp
463.02 177.263 mo
461.393 176.314 460.716 176.314 459.089 177.263 cv
459.903 177.127 459.496 175.365 459.903 175.094 cv
460.716 174.688 463.02 176.043 463.02 177.263 cv
cp
459.089 179.431 mo
460.309 179.16 460.174 177.534 461.258 178.076 cv
461.529 178.211 460.716 179.566 460.852 179.838 cv
460.852 179.974 461.664 180.244 461.258 180.786 cv
460.58 181.6 458.412 180.922 459.089 179.431 cv
cp
459.903 232.423 mo
459.903 232.151 458.412 231.745 458.683 232.423 cv
458.683 232.559 460.174 232.965 459.903 232.423 cv
cp
459.496 173.332 mo
460.987 174.01 458.954 175.094 458.683 175.501 cv
457.328 174.823 459.496 174.146 459.496 173.332 cv
cp
457.734 234.591 mo
458.547 235.404 459.089 234.456 459.496 233.778 cv
458.683 233.778 458.005 234.049 457.734 234.591 cv
cp
459.089 228.492 mo
458.954 228.222 457.599 227.814 457.734 228.492 cv
457.87 228.628 459.225 229.034 459.089 228.492 cv
cp
457.328 184.717 mo
457.328 184.445 456.921 184.175 456.921 184.717 cv
456.921 184.987 457.328 185.123 457.328 184.717 cv
cp
459.089 230.254 mo
458.683 230.119 458.683 230.39 458.683 230.661 cv
456.379 229.712 458.547 230.932 456.379 231.474 cv
456.921 231.609 456.786 232.287 456.921 232.829 cv
455.159 232.965 456.921 234.727 456.921 232.829 cv
457.463 232.151 458.276 231.609 458.683 230.661 cv
458.954 230.797 459.089 230.525 459.089 230.254 cv
460.174 230.932 460.309 228.764 459.496 228.899 cv
459.225 229.306 459.089 229.577 459.089 230.254 cv
cp
455.972 184.311 mo
455.837 184.175 455.295 184.445 455.566 184.717 cv
455.701 184.853 456.243 184.445 455.972 184.311 cv
cp
455.972 227.544 mo
455.837 227.408 454.888 227.814 455.159 228.086 cv
455.295 228.086 456.243 227.814 455.972 227.544 cv
cp
455.566 226.73 mo
455.43 226.595 454.888 226.866 455.159 227.137 cv
455.295 227.272 455.837 227.002 455.566 226.73 cv
cp
456.379 235.54 mo
456.786 234.456 454.888 233.643 454.752 234.591 cv
455.295 234.862 455.837 235.269 456.379 235.54 cv
cp
455.159 233.236 mo
455.023 233.101 454.481 233.507 454.752 233.778 cv
454.752 233.778 455.295 233.507 455.159 233.236 cv
cp
454.752 231.474 mo
454.617 231.474 454.075 231.745 454.21 232.017 cv
454.346 232.151 454.888 231.745 454.752 231.474 cv
cp
455.566 169.402 mo
455.701 170.893 456.921 170.08 455.566 171.164 cv
456.379 171.978 457.734 170.757 458.141 169.809 cv
458.818 169.537 458.141 169.267 458.141 169.809 cv
456.243 170.622 457.463 168.183 456.379 168.047 cv
456.515 168.725 456.108 169.131 455.566 169.402 cv
455.972 167.098 453.939 168.453 453.804 169.402 cv
454.346 169.402 455.023 169.402 455.566 169.402 cv
cp
454.752 182.955 mo
454.617 182.819 453.668 183.226 453.804 183.361 cv
453.939 183.497 454.888 183.091 454.752 182.955 cv
cp
455.972 175.094 mo
456.379 175.094 456.921 175.094 457.328 175.094 cv
456.379 176.585 459.36 177.263 459.089 179.431 cv
457.057 179.702 458.276 177.534 457.328 177.669 cv
457.192 177.669 457.057 179.296 456.379 179.024 cv
456.786 177.805 455.566 178.076 455.566 177.263 cv
457.87 177.669 456.108 175.907 455.566 177.263 cv
453.668 176.314 455.972 180.516 453.804 179.024 cv
453.804 179.024 453.533 176.991 453.397 177.263 cv
453.533 176.991 454.617 176.991 454.752 176.856 cv
455.023 175.907 453.939 175.907 454.752 175.501 cv
455.837 174.823 455.837 177.398 455.972 175.094 cv
cp
453.804 181.6 mo
453.668 181.464 452.72 181.871 452.991 182.006 cv
453.126 182.142 454.075 181.871 453.804 181.6 cv
cp
453.397 229.306 mo
453.262 229.17 452.72 229.577 452.991 229.712 cv
453.126 229.848 453.668 229.577 453.397 229.306 cv
cp
452.042 177.263 mo
451.906 176.991 452.855 176.721 452.991 176.856 cv
453.126 176.991 452.178 177.398 452.042 177.263 cv
cp
451.635 168.047 mo
451.5 167.911 450.958 168.317 451.229 168.453 cv
451.364 168.589 451.906 168.317 451.635 168.047 cv
cp
451.229 228.899 mo
451.093 228.764 450.551 229.17 450.686 229.306 cv
450.822 229.441 451.364 229.17 451.229 228.899 cv
cp
452.042 180.244 mo
451.5 179.974 450.822 179.702 449.873 179.838 cv
450.009 177.94 452.178 178.618 452.042 180.244 cv
cp
450.28 185.937 mo
450.144 185.937 449.602 186.208 449.873 186.479 cv
450.009 186.614 450.551 186.208 450.28 185.937 cv
cp
452.991 196.102 mo
452.449 198.676 452.584 201.387 452.042 203.962 cv
451.906 204.504 451.364 204.775 451.229 205.317 cv
450.958 205.995 451.364 207.215 451.229 207.893 cv
450.144 213.042 449.738 219.006 449.467 224.021 cv
451.229 223.478 453.397 223.071 455.566 222.394 cv
456.921 221.852 460.309 220.903 460.852 219.683 cv
460.987 219.412 460.716 217.108 460.445 215.753 cv
459.903 213.584 459.089 212.772 459.496 211.009 cv
459.767 209.925 458.818 207.621 458.683 206.13 cv
458.547 204.91 458.818 203.69 458.683 203.013 cv
458.412 202.471 458.005 202.606 457.734 202.2 cv
456.65 200.709 457.87 198.812 457.734 197.321 cv
457.734 196.778 457.057 196.644 456.921 196.102 cv
455.295 192.307 458.005 185.665 454.752 185.123 cv
455.023 189.867 453.533 192.577 452.991 196.102 cv
cp
449.873 230.661 mo
449.738 230.525 449.196 230.932 449.467 231.067 cv
449.602 231.203 450.144 230.932 449.873 230.661 cv
cp
449.873 167.098 mo
449.738 167.098 449.196 167.369 449.467 167.64 cv
449.602 167.775 450.144 167.369 449.873 167.098 cv
cp
449.06 233.236 mo
448.789 233.101 448.112 233.507 448.112 233.778 cv
448.112 234.727 449.467 233.778 449.06 233.236 cv
cp
448.518 186.885 mo
448.383 186.75 447.841 187.021 448.112 187.292 cv
448.247 187.428 448.789 187.156 448.518 186.885 cv
cp
448.518 171.57 mo
448.383 171.435 447.841 171.706 448.112 171.978 cv
448.247 172.112 448.789 171.706 448.518 171.57 cv
cp
448.112 172.384 mo
447.976 172.248 447.027 172.654 447.298 172.79 cv
447.434 172.926 448.383 172.654 448.112 172.384 cv
cp
447.705 192.984 mo
447.569 192.849 447.027 193.255 447.298 193.391 cv
447.434 193.526 447.976 193.255 447.705 192.984 cv
cp
447.298 230.254 mo
446.621 230.525 447.298 230.797 447.298 230.254 cv
447.841 229.983 447.163 229.712 447.298 230.254 cv
cp
447.705 190.002 mo
447.705 189.46 446.892 189.325 446.756 190.002 cv
447.298 189.867 447.434 190.545 447.705 190.002 cv
cp
447.298 174.552 mo
447.434 174.417 447.298 173.739 446.756 174.146 cv
446.621 174.417 446.756 175.094 447.298 174.552 cv
cp
447.298 227.544 mo
445.401 227.137 447.163 228.899 447.298 227.544 cv
449.06 227.95 447.298 226.324 447.298 227.544 cv
cp
447.298 186.885 mo
447.569 186.479 446.485 184.717 446.35 185.937 cv
446.35 186.208 446.756 187.428 447.298 186.885 cv
cp
446.35 184.717 mo
446.214 184.581 445.672 184.853 445.943 185.123 cv
446.079 185.259 446.621 184.853 446.35 184.717 cv
cp
445.943 182.548 mo
445.672 182.819 445.537 183.226 445.537 183.768 cv
446.079 183.768 446.621 183.768 447.298 183.768 cv
447.569 182.684 446.35 182.955 445.943 182.548 cv
445.672 181.871 445.401 182.548 445.943 182.548 cv
cp
445.943 237.166 mo
445.808 237.166 445.266 237.438 445.537 237.708 cv
445.672 237.844 446.214 237.438 445.943 237.166 cv
cp
445.943 175.907 mo
445.672 175.772 444.995 176.179 444.995 176.314 cv
444.995 177.263 446.35 176.449 445.943 175.907 cv
cp
445.537 238.115 mo
445.401 237.98 444.859 238.251 444.995 238.522 cv
445.13 238.657 445.672 238.386 445.537 238.115 cv
cp
445.537 186.479 mo
445.266 186.208 444.588 186.75 444.588 186.885 cv
444.588 187.834 445.943 186.885 445.537 186.479 cv
cp
444.995 197.863 mo
444.995 197.728 444.453 197.999 444.588 198.27 cv
444.724 198.405 445.266 197.999 444.995 197.863 cv
cp
445.537 175.094 mo
445.266 175.094 444.859 174.823 444.995 174.552 cv
445.266 174.281 446.35 174.688 445.943 173.739 cv
443.639 173.332 443.91 175.907 445.537 175.094 cv
cp
444.588 172.384 mo
445.943 172.384 444.995 170.622 444.181 171.978 cv
444.046 172.248 444.317 172.384 444.588 172.384 cv
cp
449.873 170.622 mo
448.112 170.215 449.738 171.978 449.873 170.622 cv
450.144 170.622 450.415 170.622 450.686 170.622 cv
452.449 173.739 448.789 171.3 448.112 174.146 cv
449.06 174.417 450.551 171.978 450.686 174.146 cv
450.28 174.146 450.009 174.281 449.873 174.552 cv
447.434 175.094 450.958 177.127 451.229 176.856 cv
452.313 175.365 450.009 175.907 449.873 174.552 cv
450.415 174.688 450.686 174.552 450.686 174.146 cv
451.229 174.688 452.449 174.959 452.449 175.501 cv
452.584 175.637 451.635 177.398 451.229 177.669 cv
449.06 179.431 449.602 175.094 447.298 175.094 cv
447.976 177.805 445.401 177.263 445.537 179.431 cv
445.808 179.566 447.163 180.516 447.298 179.431 cv
445.808 179.16 446.892 179.296 447.298 179.024 cv
447.705 178.618 446.892 177.805 447.705 177.669 cv
449.873 177.534 448.112 179.16 449.06 180.244 cv
447.027 181.193 442.961 179.296 443.775 181.6 cv
444.859 180.786 448.112 181.058 448.518 182.006 cv
448.112 181.193 446.892 183.361 448.112 183.361 cv
449.06 181.871 449.738 183.226 451.229 183.361 cv
451.229 183.633 451.229 183.903 451.229 184.311 cv
450.551 184.445 451.229 184.717 451.229 184.311 cv
452.584 184.581 451.906 183.361 451.229 183.361 cv
451.229 182.142 450.415 182.548 451.229 181.6 cv
450.009 182.006 448.518 182.548 449.06 180.244 cv
450.958 180.244 454.21 182.548 455.159 180.786 cv
452.313 179.702 457.192 178.076 457.328 180.244 cv
457.057 180.244 456.786 180.244 456.379 180.244 cv
456.379 179.024 454.617 180.786 456.379 180.244 cv
456.108 181.735 457.328 180.922 457.328 180.244 cv
460.309 181.193 455.837 181.058 457.328 182.548 cv
456.921 182.548 456.379 182.548 455.972 182.548 cv
455.972 181.193 454.21 182.955 455.972 182.548 cv
456.108 182.955 456.786 182.819 457.328 182.955 cv
457.463 184.175 459.089 182.548 457.328 182.955 cv
457.328 182.819 457.328 182.684 457.328 182.548 cv
459.632 182.548 460.445 181.193 463.02 182.006 cv
463.155 182.142 463.291 182.819 463.426 182.955 cv
463.697 183.091 464.104 182.819 464.375 182.955 cv
465.866 184.175 465.595 184.987 467.357 183.768 cv
467.763 183.497 469.525 183.903 469.525 183.768 cv
469.796 183.633 469.932 182.142 470.474 181.6 cv
470.203 181.6 469.932 181.6 469.525 181.6 cv
469.525 180.244 467.763 182.006 469.525 181.6 cv
468.983 182.819 468.17 182.955 466.95 182.548 cv
468.306 181.058 465.73 181.193 465.595 179.838 cv
466.679 180.516 468.306 178.754 467.763 177.669 cv
467.628 177.263 466.543 177.534 466.543 176.856 cv
466.543 175.637 468.577 177.398 467.763 175.501 cv
466.137 175.637 465.324 176.721 464.375 177.669 cv
463.426 175.094 465.73 176.043 466.543 175.094 cv
466.408 175.23 466.001 174.281 466.137 174.146 cv
466.137 173.874 467.357 174.146 466.543 173.332 cv
465.053 172.52 466.137 174.552 465.188 174.552 cv
463.833 174.688 465.053 173.197 463.02 172.79 cv
463.291 172.926 461.664 173.739 460.852 173.332 cv
460.852 173.332 461.258 172.654 461.258 172.384 cv
461.393 172.926 459.903 171.435 460.445 171.57 cv
459.36 171.3 459.903 172.52 458.683 172.384 cv
457.734 172.384 458.005 170.486 456.921 171.57 cv
456.108 173.062 458.141 172.654 458.141 173.332 cv
458.276 174.417 457.057 174.146 455.972 175.094 cv
453.668 175.094 456.786 173.062 456.379 172.384 cv
456.379 172.248 455.701 172.52 455.566 172.384 cv
455.295 172.248 455.295 171.57 454.752 171.57 cv
454.617 171.57 453.804 172.384 453.804 172.384 cv
454.075 172.384 454.888 173.062 454.752 173.332 cv
454.481 173.739 451.771 173.468 452.042 173.739 cv
451.093 172.79 453.397 171.435 451.229 170.215 cv
451.229 170.622 450.958 170.622 450.686 170.622 cv
450.686 170.08 449.873 170.215 449.873 170.622 cv
cp
444.181 238.522 mo
444.181 238.115 443.368 237.98 443.368 238.522 cv
443.775 238.522 444.046 239.199 444.181 238.522 cv
cp
444.181 200.845 mo
444.181 200.439 443.368 200.303 443.368 200.845 cv
443.775 200.845 444.046 201.522 444.181 200.845 cv
cp
444.181 182.955 mo
443.639 182.955 443.504 182.277 443.368 182.955 cv
443.368 183.361 444.046 183.497 444.181 182.955 cv
cp
443.775 175.094 mo
443.639 174.959 443.097 175.23 443.368 175.501 cv
443.368 175.637 443.91 175.23 443.775 175.094 cv
cp
443.775 204.775 mo
441.877 204.368 443.639 206.13 443.775 204.775 cv
444.317 204.504 443.639 204.232 443.775 204.775 cv
cp
444.181 224.021 mo
444.181 223.613 444.181 223.207 444.181 222.8 cv
443.639 222.8 442.961 222.665 442.826 223.207 cv
443.504 223.207 443.232 224.291 444.181 224.021 cv
cp
442.826 214.397 mo
442.284 214.669 442.961 214.939 442.826 214.397 cv
443.504 214.126 442.826 213.991 442.826 214.397 cv
cp
444.995 235.946 mo
444.317 234.727 442.826 234.185 442.419 236.354 cv
442.826 236.488 442.826 236.76 443.368 236.76 cv
443.639 237.438 443.775 236.76 443.368 236.76 cv
442.961 235.54 445.401 237.166 444.995 235.946 cv
446.214 236.624 446.214 234.049 445.537 234.185 cv
445.13 234.591 444.995 235.134 444.995 235.946 cv
cp
443.368 243.4 mo
443.232 243.265 442.284 243.536 442.419 243.808 cv
442.555 243.942 443.504 243.536 443.368 243.4 cv
cp
442.826 229.306 mo
442.69 229.17 442.148 229.577 442.419 229.712 cv
442.555 229.848 443.097 229.577 442.826 229.306 cv
cp
442.826 226.324 mo
443.097 226.866 443.368 226.189 442.826 226.324 cv
442.961 224.291 441.2 226.189 442.826 226.324 cv
cp
442.419 238.115 mo
442.419 237.844 442.013 237.573 442.013 238.115 cv
442.013 238.386 442.419 238.657 442.419 238.115 cv
cp
444.588 230.661 mo
443.639 230.932 442.826 231.067 442.419 231.474 cv
440.658 233.778 444.995 234.591 444.995 233.236 cv
444.995 233.507 443.232 232.965 443.775 232.017 cv
444.453 231.881 445.401 232.151 445.537 231.474 cv
444.724 231.745 444.724 231.203 444.588 230.661 cv
444.724 230.661 444.859 230.661 444.995 230.661 cv
444.995 228.492 443.504 229.034 444.588 230.661 cv
cp
442.013 207.893 mo
442.555 208.705 444.181 205.724 442.419 207.485 cv
442.419 207.485 441.742 207.485 442.013 207.893 cv
cp
442.419 245.162 mo
442.284 245.027 441.742 245.298 442.013 245.569 cv
442.148 245.704 442.69 245.298 442.419 245.162 cv
cp
442.013 193.391 mo
441.335 193.661 442.013 193.933 442.013 193.391 cv
442.69 193.119 442.013 192.849 442.013 193.391 cv
cp
442.826 240.283 mo
442.419 240.283 442.013 240.283 441.606 240.283 cv
441.606 242.181 442.69 241.503 442.826 240.283 cv
cp
442.013 196.914 mo
441.877 196.778 441.335 197.186 441.606 197.321 cv
441.742 197.456 442.284 197.186 442.013 196.914 cv
cp
442.013 171.978 mo
441.877 171.842 441.335 172.248 441.606 172.384 cv
441.742 172.52 442.284 172.248 442.013 171.978 cv
cp
441.606 227.137 mo
441.471 227.002 440.929 227.408 441.064 227.544 cv
441.2 227.68 441.742 227.408 441.606 227.137 cv
cp
441.606 188.24 mo
441.471 188.105 440.929 188.376 441.064 188.647 cv
441.2 188.782 441.742 188.376 441.606 188.24 cv
cp
441.064 225.782 mo
441.064 225.647 440.658 225.375 440.658 225.782 cv
440.658 226.053 441.064 226.324 441.064 225.782 cv
cp
441.606 209.247 mo
441.471 209.112 440.522 209.383 440.658 209.654 cv
440.793 209.789 441.742 209.383 441.606 209.247 cv
cp
441.606 181.6 mo
441.471 181.464 440.522 181.871 440.658 182.006 cv
440.793 182.142 441.742 181.871 441.606 181.6 cv
cp
440.658 187.292 mo
440.658 187.021 440.251 186.75 440.251 187.292 cv
440.251 187.563 440.658 187.834 440.658 187.292 cv
cp
441.064 178.482 mo
440.929 178.482 439.98 178.754 440.251 179.024 cv
440.387 179.16 441.335 178.754 441.064 178.482 cv
cp
440.658 239.877 mo
440.522 238.522 441.742 238.115 440.251 237.708 cv
440.522 238.251 439.709 239.877 440.658 239.877 cv
cp
440.658 207.485 mo
440.522 207.35 439.98 207.621 440.251 207.893 cv
440.387 208.027 440.929 207.621 440.658 207.485 cv
cp
440.658 196.508 mo
440.522 196.372 439.98 196.778 440.251 196.914 cv
440.387 197.05 440.929 196.778 440.658 196.508 cv
cp
440.251 214.397 mo
440.387 216.159 442.148 214.397 440.251 214.397 cv
439.98 213.855 439.709 214.533 440.251 214.397 cv
cp
441.606 184.717 mo
441.606 184.581 439.844 182.548 439.844 183.768 cv
439.844 185.259 441.471 185.53 441.606 184.717 cv
cp
440.251 177.263 mo
440.251 176.991 439.844 176.721 439.844 177.263 cv
439.844 177.534 440.251 177.669 440.251 177.263 cv
cp
440.658 193.391 mo
440.522 193.255 439.573 193.661 439.844 193.933 cv
439.98 193.933 440.929 193.661 440.658 193.391 cv
cp
440.251 232.423 mo
439.98 232.151 439.302 232.694 439.302 232.829 cv
439.302 233.778 440.658 232.829 440.251 232.423 cv
cp
441.606 223.207 mo
441.471 221.445 440.929 220.09 439.302 219.683 cv
439.844 221.038 440.387 222.394 441.606 223.207 cv
cp
439.844 216.159 mo
439.844 216.023 439.302 215.753 439.302 216.159 cv
439.302 216.431 439.844 216.701 439.844 216.159 cv
cp
439.844 244.62 mo
439.709 244.484 439.167 244.892 439.302 245.162 cv
439.438 245.162 439.98 244.892 439.844 244.62 cv
cp
439.844 185.53 mo
439.709 185.395 439.167 185.801 439.302 185.937 cv
439.438 186.072 439.98 185.801 439.844 185.53 cv
cp
440.658 242.858 mo
440.658 242.588 441.471 242.045 441.064 241.639 cv
440.658 240.825 438.76 240.147 438.489 240.69 cv
438.353 242.045 439.709 241.639 440.251 242.452 cv
440.658 243.13 439.98 245.162 441.606 245.162 cv
442.013 244.214 440.658 244.214 440.658 242.858 cv
cp
438.895 224.021 mo
437.405 224.833 438.489 227.002 440.251 224.969 cv
439.302 225.917 440.522 223.478 440.658 223.613 cv
440.251 223.207 439.573 224.427 438.895 224.021 cv
438.624 223.478 438.353 224.155 438.895 224.021 cv
cp
438.082 234.591 mo
438.082 235.811 441.2 236.082 441.606 235.54 cv
440.116 234.998 439.709 233.643 438.082 234.591 cv
cp
438.895 214.939 mo
438.76 214.804 437.811 215.075 438.082 215.347 cv
438.218 215.481 439.167 215.075 438.895 214.939 cv
cp
438.895 184.717 mo
438.76 184.581 437.811 184.853 438.082 185.123 cv
438.218 185.259 439.167 184.853 438.895 184.717 cv
cp
438.082 203.962 mo
437.947 203.826 437.405 204.098 437.676 204.368 cv
437.676 204.504 438.218 204.232 438.082 203.962 cv
cp
438.082 203.013 mo
437.947 203.013 437.405 203.284 437.676 203.556 cv
437.676 203.69 438.218 203.284 438.082 203.013 cv
cp
437.676 208.299 mo
438.76 209.383 439.573 206.266 438.082 207.893 cv
438.082 207.893 437.269 208.027 437.676 208.299 cv
cp
439.302 230.661 mo
439.438 230.661 439.302 229.848 439.302 229.712 cv
439.438 229.712 440.251 229.848 440.251 229.712 cv
440.522 228.899 439.98 228.086 439.302 228.086 cv
439.709 228.086 438.895 228.899 438.895 228.899 cv
438.353 229.306 437.134 229.306 437.676 230.254 cv
438.218 229.848 439.167 230.797 439.302 230.661 cv
cp
437.676 227.137 mo
436.998 227.408 437.676 227.68 437.676 227.137 cv
439.438 227.544 437.676 225.782 437.676 227.137 cv
cp
437.134 242.858 mo
438.218 242.316 439.031 244.214 439.302 242.858 cv
438.489 242.588 437.54 241.368 437.134 242.858 cv
cp
437.676 217.108 mo
437.676 216.837 437.134 216.566 437.134 217.108 cv
437.134 217.379 437.676 217.515 437.676 217.108 cv
cp
438.082 233.778 mo
437.947 233.643 436.998 233.914 437.134 234.185 cv
437.269 234.32 438.218 233.914 438.082 233.778 cv
cp
437.676 212.636 mo
437.54 212.636 436.998 212.906 437.134 213.178 cv
437.269 213.314 437.811 212.906 437.676 212.636 cv
cp
437.676 223.207 mo
437.405 222.936 436.727 223.478 436.727 223.613 cv
436.727 224.563 438.082 223.613 437.676 223.207 cv
cp
438.489 221.038 mo
438.082 220.632 436.727 221.174 436.727 221.445 cv
436.727 222.394 439.302 221.852 438.489 221.038 cv
cp
437.676 192.171 mo
437.54 192.035 436.592 192.307 436.727 192.577 cv
436.863 192.713 437.811 192.307 437.676 192.171 cv
cp
438.082 228.086 mo
437.676 227.68 436.727 228.356 436.727 228.492 cv
436.456 229.306 438.624 228.492 438.082 228.086 cv
cp
437.134 246.789 mo
436.998 246.789 436.456 247.06 436.727 247.331 cv
436.863 247.467 437.405 247.06 437.134 246.789 cv
cp
437.134 224.969 mo
436.998 224.833 436.05 225.24 436.321 225.375 cv
436.456 225.511 437.405 225.105 437.134 224.969 cv
cp
436.727 215.753 mo
436.592 215.617 436.05 216.023 436.321 216.159 cv
436.456 216.295 436.998 216.023 436.727 215.753 cv
cp
436.727 213.991 mo
436.592 213.855 436.05 214.262 436.321 214.397 cv
436.456 214.533 436.998 214.262 436.727 213.991 cv
cp
436.727 238.522 mo
436.592 238.386 435.643 238.793 435.914 238.928 cv
436.05 239.064 436.998 238.793 436.727 238.522 cv
cp
436.321 222.8 mo
436.185 222.665 435.643 222.936 435.914 223.207 cv
436.05 223.343 436.592 222.936 436.321 222.8 cv
cp
436.321 205.724 mo
436.185 205.588 435.643 205.859 435.914 206.13 cv
436.05 206.266 436.592 205.859 436.321 205.724 cv
cp
436.727 233.236 mo
436.727 233.101 435.236 232.559 435.372 233.236 cv
435.507 233.778 436.727 233.914 436.727 233.236 cv
cp
436.321 227.137 mo
436.185 227.002 435.236 227.408 435.372 227.544 cv
435.507 227.68 436.456 227.408 436.321 227.137 cv
cp
436.321 211.822 mo
436.185 211.687 435.236 212.094 435.372 212.23 cv
435.507 212.364 436.456 212.094 436.321 211.822 cv
cp
435.914 242.045 mo
435.779 241.91 435.236 242.316 435.372 242.452 cv
435.507 242.588 436.05 242.316 435.914 242.045 cv
cp
435.372 210.061 mo
435.236 209.925 434.694 210.332 434.965 210.467 cv
435.101 210.603 435.643 210.332 435.372 210.061 cv
cp
436.727 236.354 mo
436.456 236.76 436.321 237.302 436.321 238.115 cv
437.947 238.115 436.727 237.03 437.676 236.76 cv
438.353 236.624 438.353 238.251 439.844 237.708 cv
440.116 235.946 438.082 236.354 436.727 236.354 cv
436.727 234.862 435.779 234.591 434.965 234.998 cv
434.83 235.134 435.507 236.488 435.372 236.76 cv
435.372 236.896 433.61 237.844 435.372 238.115 cv
435.643 237.302 435.643 236.218 436.727 236.354 cv
cp
434.965 249.093 mo
434.965 248.821 434.559 248.551 434.559 249.093 cv
434.559 249.229 434.965 249.499 434.965 249.093 cv
cp
435.372 247.737 mo
435.236 247.602 434.288 248.009 434.559 248.145 cv
434.694 248.279 435.643 247.873 435.372 247.737 cv
cp
434.152 233.236 mo
434.423 233.914 434.694 233.236 434.152 233.236 cv
433.881 232.694 433.61 233.371 434.152 233.236 cv
cp
435.914 244.214 mo
434.288 244.214 434.423 245.704 433.61 246.382 cv
435.101 246.382 435.236 245.162 435.914 244.214 cv
437.676 244.62 435.914 242.858 435.914 244.214 cv
cp
434.152 234.998 mo
434.152 234.727 433.61 234.591 433.61 234.998 cv
433.61 235.269 434.152 235.54 434.152 234.998 cv
cp
434.152 240.69 mo
434.017 240.555 433.475 240.961 433.61 241.232 cv
433.746 241.232 434.288 240.961 434.152 240.69 cv
cp
434.152 220.09 mo
434.017 220.09 433.475 220.36 433.61 220.632 cv
433.746 220.768 434.288 220.36 434.152 220.09 cv
cp
436.321 240.283 mo
436.592 240.961 436.863 240.283 436.321 240.283 cv
436.456 239.471 434.017 238.386 433.61 238.522 cv
433.339 238.657 433.339 239.877 433.204 240.283 cv
434.559 239.741 434.694 240.147 436.321 240.283 cv
cp
434.152 226.73 mo
433.881 226.46 433.204 227.002 433.204 227.137 cv
433.204 228.086 434.559 227.137 434.152 226.73 cv
cp
433.204 207.893 mo
433.068 207.757 432.526 208.163 432.797 208.299 cv
432.933 208.435 433.475 208.163 433.204 207.893 cv
cp
433.204 245.162 mo
433.068 245.027 432.119 245.298 432.391 245.569 cv
432.526 245.704 433.475 245.298 433.204 245.162 cv
cp
432.797 233.236 mo
432.662 233.101 432.119 233.507 432.391 233.778 cv
432.526 233.778 433.068 233.507 432.797 233.236 cv
cp
432.391 246.789 mo
432.255 246.789 431.713 247.06 431.984 247.331 cv
431.984 247.467 432.526 247.06 432.391 246.789 cv
cp
431.984 238.522 mo
431.984 238.251 431.442 237.98 431.442 238.522 cv
431.442 238.793 431.984 239.064 431.984 238.522 cv
cp
431.984 244.214 mo
431.848 244.078 430.899 244.484 431.035 244.62 cv
431.17 244.756 432.119 244.484 431.984 244.214 cv
cp
431.442 242.858 mo
431.306 242.858 430.764 243.13 431.035 243.4 cv
431.17 243.536 431.713 243.13 431.442 242.858 cv
cp
431.442 224.021 mo
431.306 224.021 430.764 224.291 431.035 224.563 cv
431.17 224.697 431.713 224.291 431.442 224.021 cv
cp
429.68 237.166 mo
429.68 236.76 429.002 236.624 428.867 237.166 cv
429.409 237.166 429.544 237.844 429.68 237.166 cv
cp
438.082 162.761 mo
438.218 162.626 437.947 162.219 438.489 162.355 cv
446.079 163.439 459.767 162.897 470.067 162.355 cv
470.474 162.355 470.338 162.761 470.474 162.761 cv
473.591 163.032 471.423 161.948 472.236 167.64 cv
472.236 167.911 474.675 173.062 474.811 174.146 cv
475.082 175.907 474.268 178.482 474.404 179.431 cv
474.404 179.702 476.031 179.974 476.166 180.244 cv
476.979 181.871 476.031 187.563 476.573 190.002 cv
476.844 190.815 477.115 191.493 477.521 192.577 cv
477.657 193.255 477.657 194.339 477.928 195.152 cv
477.928 195.424 478.741 195.966 478.741 196.102 cv
478.876 196.644 478.605 197.321 478.741 197.863 cv
478.876 198.541 479.69 199.625 479.69 200.031 cv
479.69 201.115 479.012 201.793 479.148 202.606 cv
479.419 203.69 480.368 205.317 480.503 206.537 cv
480.639 207.35 479.961 208.705 480.097 209.247 cv
480.368 210.196 480.232 209.519 480.91 210.061 cv
482.671 211.28 480.91 211.552 481.452 214.397 cv
481.587 215.347 482.4 215.075 482.671 215.753 cv
482.942 216.566 482.671 218.734 482.671 220.09 cv
483.213 226.73 486.195 238.657 487.55 246.789 cv
487.822 248.551 487.686 250.177 487.957 251.668 cv
488.228 253.158 487.822 250.313 488.364 253.836 cv
488.499 254.243 489.041 255.327 488.906 255.599 cv
488.364 256.141 480.91 256.547 479.69 256.547 cv
476.708 256.547 471.829 255.191 467.763 256.005 cv
467.763 256.005 466.95 256.818 466.543 256.547 cv
465.866 255.869 466.679 252.21 466.543 251.262 cv
466.408 250.719 465.866 249.364 465.595 248.145 cv
465.324 246.382 464.24 239.335 463.833 238.928 cv
463.02 238.251 458.683 240.419 456.921 241.232 cv
456.65 241.232 456.108 242.045 455.972 242.045 cv
454.752 242.452 454.346 241.91 453.397 242.858 cv
452.991 243.265 453.126 243.672 452.449 243.808 cv
451.364 244.078 449.873 243.4 449.06 243.808 cv
448.112 244.214 447.705 244.892 446.756 245.569 cv
445.943 246.247 444.724 246.653 444.588 246.789 cv
444.453 247.195 444.181 252.074 443.775 253.836 cv
443.232 256.547 443.504 255.869 440.251 256.005 cv
437.134 256.275 433.339 256.275 428.46 256.005 cv
426.156 256.005 422.632 256.005 422.226 255.599 cv
421.548 254.785 422.497 252.346 422.768 250.313 cv
423.039 247.602 423.039 244.892 423.174 244.214 cv
423.445 242.858 424.123 241.097 424.53 239.471 cv
425.478 234.591 426.427 229.712 427.511 224.563 cv
427.647 224.155 427.918 223.071 427.918 223.207 cv
427.918 222.936 427.511 222.8 427.511 222.394 cv
427.647 221.58 428.325 220.903 428.46 220.09 cv
428.731 218.599 429.002 216.973 429.273 215.347 cv
429.951 211.28 429.68 207.215 430.222 204.368 cv
430.222 204.232 430.764 203.962 430.628 203.556 cv
430.628 203.42 429.951 203.42 430.222 203.013 cv
430.357 202.606 431.306 202.878 431.442 202.2 cv
431.577 201.522 431.035 200.439 431.035 199.625 cv
431.17 197.999 431.442 196.236 432.391 195.152 cv
432.933 194.61 433.61 194.204 433.61 193.933 cv
433.746 193.391 433.204 192.713 433.204 191.629 cv
433.204 191.493 433.61 190.545 433.61 190.002 cv
434.017 187.021 434.559 184.987 434.965 182.006 cv
435.236 180.786 435.101 179.431 435.372 178.076 cv
435.643 176.721 436.456 175.637 436.727 174.552 cv
436.998 173.604 436.592 172.654 436.727 171.57 cv
436.863 170.757 437.54 170.08 437.676 169.402 cv
437.811 167.775 437.811 165.878 438.082 163.71 cv
438.082 163.574 437.947 162.897 438.082 162.761 cv
cp
f
539.185 250.855 mo
538.643 251.126 539.321 251.397 539.185 250.855 cv
541.083 251.262 539.321 249.499 539.185 250.855 cv
cp
539.185 248.687 mo
539.185 248.551 538.643 248.957 538.779 249.093 cv
538.914 249.229 539.456 248.957 539.185 248.687 cv
cp
536.611 244.35 mo
536.475 244.214 535.933 244.484 536.204 244.756 cv
536.339 244.892 536.882 244.484 536.611 244.35 cv
cp
533.629 249.499 mo
533.765 249.364 533.629 248.687 533.087 249.093 cv
532.951 249.364 533.087 250.042 533.629 249.499 cv
cp
532.68 236.896 mo
532.545 236.76 532.002 237.03 532.274 237.302 cv
532.409 237.438 532.951 237.166 532.68 236.896 cv
cp
531.325 220.226 mo
530.918 220.36 530.647 219.683 530.512 220.226 cv
530.512 220.768 531.325 220.768 531.325 220.226 cv
cp
530.918 241.639 mo
530.783 241.503 530.241 241.91 530.512 242.181 cv
530.647 242.181 531.189 241.91 530.918 241.639 cv
cp
530.512 221.987 mo
530.647 223.343 532.274 221.58 530.512 221.987 cv
530.241 221.445 529.97 222.123 530.512 221.987 cv
cp
528.343 237.302 mo
528.886 237.302 529.563 237.438 529.563 236.896 cv
529.021 236.896 529.292 236.082 528.75 235.946 cv
528.75 236.624 528.614 237.03 528.343 237.302 cv
cp
528.343 246.518 mo
527.665 246.789 528.343 247.06 528.343 246.518 cv
529.021 246.247 528.208 245.976 528.343 246.518 cv
cp
528.343 216.295 mo
528.208 216.159 527.665 216.566 527.937 216.837 cv
527.937 216.837 528.479 216.566 528.343 216.295 cv
cp
530.105 241.639 mo
530.783 240.961 528.072 240.013 527.394 240.825 cv
528.343 240.961 529.563 242.181 530.105 241.639 cv
cp
527.937 239.471 mo
527.801 239.335 527.259 239.741 527.394 239.877 cv
527.53 240.013 528.072 239.741 527.937 239.471 cv
cp
527.394 225.105 mo
527.665 224.833 527.394 224.155 526.988 224.697 cv
526.717 224.833 526.988 225.511 527.394 225.105 cv
cp
526.988 241.232 mo
526.988 240.961 526.581 240.69 526.581 241.232 cv
526.581 241.503 526.988 241.774 526.988 241.232 cv
cp
526.988 213.314 mo
526.852 213.178 526.31 213.449 526.581 213.72 cv
526.717 213.855 527.259 213.449 526.988 213.314 cv
cp
526.988 235.946 mo
527.259 236.624 527.53 235.946 526.988 235.946 cv
526.852 234.32 525.091 236.082 526.988 235.946 cv
cp
526.988 246.925 mo
526.988 246.653 525.497 246.382 525.633 246.925 cv
525.768 247.195 527.259 247.602 526.988 246.925 cv
cp
526.175 221.58 mo
526.039 221.445 525.497 221.852 525.633 221.987 cv
525.768 222.123 526.31 221.852 526.175 221.58 cv
cp
526.175 241.639 mo
526.039 241.503 525.091 241.91 525.226 242.181 cv
525.362 242.181 526.31 241.91 526.175 241.639 cv
cp
525.633 239.877 mo
525.633 239.877 525.091 240.147 525.226 240.419 cv
525.362 240.555 525.904 240.147 525.633 239.877 cv
cp
525.633 179.16 mo
525.633 179.024 525.091 179.431 525.226 179.566 cv
525.362 179.702 525.904 179.431 525.633 179.16 cv
cp
525.226 184.445 mo
525.091 184.311 524.549 184.581 524.82 184.853 cv
524.955 184.987 525.497 184.717 525.226 184.445 cv
cp
524.82 235.54 mo
524.82 235.269 524.413 235.134 524.413 235.54 cv
524.413 235.811 524.82 236.082 524.82 235.54 cv
cp
525.226 233.371 mo
525.091 233.101 524.413 233.643 524.413 233.778 cv
524.413 234.727 525.768 233.778 525.226 233.371 cv
cp
525.226 232.559 mo
525.497 232.287 524.413 229.848 524.413 231.609 cv
524.413 231.881 525.091 232.694 525.226 232.559 cv
cp
524.82 215.481 mo
524.82 215.211 524.413 214.939 524.413 215.481 cv
524.413 215.753 524.82 216.023 524.82 215.481 cv
cp
525.226 227.68 mo
525.091 227.544 524.142 227.95 524.413 228.086 cv
524.549 228.222 525.497 227.95 525.226 227.68 cv
cp
525.226 194.475 mo
525.091 194.339 524.142 194.746 524.413 194.882 cv
524.549 195.017 525.497 194.746 525.226 194.475 cv
cp
524.82 239.064 mo
524.684 238.928 524.142 239.335 524.413 239.471 cv
524.549 239.605 525.091 239.335 524.82 239.064 cv
cp
524.82 205.452 mo
524.684 205.317 524.142 205.588 524.413 205.859 cv
524.549 205.995 525.091 205.588 524.82 205.452 cv
cp
524.82 246.111 mo
525.091 245.84 524.82 245.162 524.413 245.569 cv
524.142 245.84 524.413 246.518 524.82 246.111 cv
cp
524.413 243.808 mo
523.871 243.942 523.735 243.265 523.464 243.808 cv
523.464 244.35 524.277 244.484 524.413 243.808 cv
cp
524.006 242.181 mo
523.871 242.045 523.329 242.316 523.464 242.588 cv
523.6 242.723 524.142 242.316 524.006 242.181 cv
cp
523.464 239.877 mo
523.329 239.877 522.787 240.147 523.058 240.419 cv
523.193 240.555 523.735 240.147 523.464 239.877 cv
cp
523.464 200.573 mo
523.329 200.439 522.787 200.845 523.058 200.98 cv
523.193 201.115 523.735 200.845 523.464 200.573 cv
cp
523.464 229.034 mo
523.735 228.764 523.464 228.086 523.058 228.628 cv
522.787 228.764 523.058 229.441 523.464 229.034 cv
cp
523.464 237.302 mo
523.329 237.166 522.38 237.573 522.651 237.708 cv
522.787 237.844 523.735 237.573 523.464 237.302 cv
cp
523.464 223.343 mo
523.329 223.207 522.38 223.613 522.651 223.749 cv
522.787 223.885 523.735 223.478 523.464 223.343 cv
cp
523.058 241.232 mo
522.922 241.097 522.38 241.503 522.651 241.639 cv
522.787 241.774 523.329 241.503 523.058 241.232 cv
cp
522.651 184.445 mo
522.516 184.311 521.974 184.581 522.245 184.853 cv
522.38 184.987 522.922 184.717 522.651 184.445 cv
cp
523.058 194.882 mo
523.058 194.746 521.567 194.339 521.703 194.882 cv
521.838 195.152 523.329 195.559 523.058 194.882 cv
cp
521.703 243.808 mo
521.703 243.672 521.296 243.4 521.296 243.808 cv
521.296 244.078 521.703 244.35 521.703 243.808 cv
cp
521.703 240.825 mo
521.703 240.69 521.16 240.961 521.296 241.232 cv
521.432 241.368 521.974 241.097 521.703 240.825 cv
cp
521.703 224.697 mo
521.703 224.563 521.16 224.833 521.296 225.105 cv
521.432 225.24 521.974 224.833 521.703 224.697 cv
cp
521.296 233.778 mo
521.16 233.643 520.618 234.049 520.889 234.32 cv
521.025 234.32 521.567 234.049 521.296 233.778 cv
cp
521.296 244.756 mo
521.16 244.62 520.212 245.027 520.483 245.162 cv
520.618 245.298 521.567 244.892 521.296 244.756 cv
cp
532.274 163.439 mo
532.274 163.439 532.274 162.897 532.68 163.032 cv
532.68 163.032 533.358 163.574 534.849 163.439 cv
537.017 163.304 536.339 162.219 536.204 165.607 cv
536.204 166.691 536.611 167.64 536.611 168.317 cv
536.611 171.57 536.611 174.552 536.611 177.398 cv
536.746 182.006 536.204 185.259 536.204 192.307 cv
536.204 201.929 537.153 212.23 536.611 223.343 cv
536.475 226.189 535.12 236.218 536.204 237.302 cv
536.611 237.708 545.42 237.573 547.588 237.708 cv
548.944 237.844 550.164 237.708 551.112 237.708 cv
552.874 237.708 558.973 237.302 559.379 237.708 cv
559.786 238.251 559.921 240.825 559.786 242.181 cv
559.65 244.078 558.837 245.027 558.973 246.111 cv
558.973 247.331 560.057 249.093 560.192 250.855 cv
560.464 254.378 560.192 255.869 557.211 256.547 cv
556.398 256.683 556.127 256.547 555.449 256.547 cv
553.823 256.683 551.925 257.089 551.112 256.953 cv
549.893 256.953 548.808 256.275 547.588 256.141 cv
545.013 255.733 542.303 255.869 540.134 256.141 cv
538.643 256.275 537.424 256.953 536.204 256.953 cv
534.171 256.953 531.596 256.141 530.105 256.141 cv
527.665 256.005 521.838 256.818 517.772 256.547 cv
516.959 256.411 514.248 256.005 514.384 256.141 cv
513.977 255.733 515.197 250.99 515.197 250.042 cv
515.197 248.279 514.384 244.484 514.384 240.825 cv
514.384 239.605 514.79 238.522 514.79 237.302 cv
514.79 235.811 514.248 234.456 514.384 233.371 cv
514.519 231.339 515.603 228.764 515.603 227.272 cv
515.603 225.105 513.842 222.529 514.79 219.818 cv
515.468 217.786 515.468 211.958 515.197 208.435 cv
515.197 208.027 514.79 207.757 514.79 207.215 cv
514.926 204.368 515.197 199.219 515.197 194.882 cv
515.197 190.951 514.79 184.987 515.197 180.516 cv
515.468 177.94 515.332 174.417 515.197 171.3 cv
515.197 170.757 514.655 170.08 514.79 169.131 cv
514.79 169.131 514.926 163.304 514.79 163.439 cv
514.79 163.439 521.296 163.574 523.058 163.439 cv
527.123 163.304 530.647 163.439 532.274 163.439 cv
cp
f
608.575 250.855 mo
608.033 251.126 608.711 251.397 608.575 250.855 cv
610.473 251.262 608.711 249.499 608.575 250.855 cv
cp
608.575 248.687 mo
608.575 248.551 608.033 248.957 608.169 249.093 cv
608.304 249.229 608.846 248.957 608.575 248.687 cv
cp
606 244.35 mo
605.865 244.214 605.323 244.484 605.594 244.756 cv
605.729 244.892 606.271 244.484 606 244.35 cv
cp
603.018 249.499 mo
603.154 249.364 603.018 248.687 602.477 249.093 cv
602.341 249.364 602.477 250.042 603.018 249.499 cv
cp
602.07 236.896 mo
601.935 236.76 601.392 237.03 601.664 237.302 cv
601.799 237.438 602.341 237.166 602.07 236.896 cv
cp
600.715 220.226 mo
600.308 220.36 600.037 219.683 599.901 220.226 cv
599.901 220.768 600.715 220.768 600.715 220.226 cv
cp
600.308 241.639 mo
600.172 241.503 599.63 241.91 599.901 242.181 cv
600.037 242.181 600.579 241.91 600.308 241.639 cv
cp
599.901 221.987 mo
600.037 223.343 601.664 221.58 599.901 221.987 cv
599.63 221.445 599.359 222.123 599.901 221.987 cv
cp
597.733 237.302 mo
598.275 237.302 598.953 237.438 598.953 236.896 cv
598.411 236.896 598.682 236.082 598.14 235.946 cv
598.14 236.624 598.004 237.03 597.733 237.302 cv
cp
597.733 246.518 mo
597.055 246.789 597.733 247.06 597.733 246.518 cv
598.411 246.247 597.598 245.976 597.733 246.518 cv
cp
597.733 216.295 mo
597.598 216.159 597.055 216.566 597.327 216.837 cv
597.327 216.837 597.869 216.566 597.733 216.295 cv
cp
599.495 241.639 mo
600.172 240.961 597.462 240.013 596.784 240.825 cv
597.733 240.961 598.953 242.181 599.495 241.639 cv
cp
597.327 239.471 mo
597.191 239.335 596.649 239.741 596.784 239.877 cv
596.92 240.013 597.462 239.741 597.327 239.471 cv
cp
596.784 225.105 mo
597.055 224.833 596.784 224.155 596.378 224.697 cv
596.106 224.833 596.378 225.511 596.784 225.105 cv
cp
596.378 241.232 mo
596.378 240.961 595.971 240.69 595.971 241.232 cv
595.971 241.503 596.378 241.774 596.378 241.232 cv
cp
596.378 213.314 mo
596.242 213.178 595.7 213.449 595.971 213.72 cv
596.106 213.855 596.649 213.449 596.378 213.314 cv
cp
596.378 235.946 mo
596.649 236.624 596.92 235.946 596.378 235.946 cv
596.242 234.32 594.48 236.082 596.378 235.946 cv
cp
596.378 246.925 mo
596.378 246.653 594.887 246.382 595.022 246.925 cv
595.158 247.195 596.649 247.602 596.378 246.925 cv
cp
595.564 221.58 mo
595.429 221.445 594.887 221.852 595.022 221.987 cv
595.158 222.123 595.7 221.852 595.564 221.58 cv
cp
595.564 241.639 mo
595.429 241.503 594.48 241.91 594.616 242.181 cv
594.751 242.181 595.7 241.91 595.564 241.639 cv
cp
595.022 239.877 mo
595.022 239.877 594.48 240.147 594.616 240.419 cv
594.751 240.555 595.293 240.147 595.022 239.877 cv
cp
595.022 179.16 mo
595.022 179.024 594.48 179.431 594.616 179.566 cv
594.751 179.702 595.293 179.431 595.022 179.16 cv
cp
594.616 184.445 mo
594.48 184.311 593.938 184.581 594.209 184.853 cv
594.345 184.987 594.887 184.717 594.616 184.445 cv
cp
594.209 235.54 mo
594.209 235.269 593.803 235.134 593.803 235.54 cv
593.803 235.811 594.209 236.082 594.209 235.54 cv
cp
594.616 233.371 mo
594.48 233.101 593.803 233.643 593.803 233.778 cv
593.803 234.727 595.158 233.778 594.616 233.371 cv
cp
594.616 232.559 mo
594.887 232.287 593.803 229.848 593.803 231.609 cv
593.803 231.881 594.48 232.694 594.616 232.559 cv
cp
594.209 215.481 mo
594.209 215.211 593.803 214.939 593.803 215.481 cv
593.803 215.753 594.209 216.023 594.209 215.481 cv
cp
594.616 227.68 mo
594.48 227.544 593.532 227.95 593.803 228.086 cv
593.938 228.222 594.887 227.95 594.616 227.68 cv
cp
594.616 194.475 mo
594.48 194.339 593.532 194.746 593.803 194.882 cv
593.938 195.017 594.887 194.746 594.616 194.475 cv
cp
594.209 239.064 mo
594.074 238.928 593.532 239.335 593.803 239.471 cv
593.938 239.605 594.48 239.335 594.209 239.064 cv
cp
594.209 205.452 mo
594.074 205.317 593.532 205.588 593.803 205.859 cv
593.938 205.995 594.48 205.588 594.209 205.452 cv
cp
594.209 246.111 mo
594.48 245.84 594.209 245.162 593.803 245.569 cv
593.532 245.84 593.803 246.518 594.209 246.111 cv
cp
593.803 243.808 mo
593.261 243.942 593.125 243.265 592.854 243.808 cv
592.854 244.35 593.667 244.484 593.803 243.808 cv
cp
593.396 242.181 mo
593.261 242.045 592.718 242.316 592.854 242.588 cv
592.99 242.723 593.532 242.316 593.396 242.181 cv
cp
592.854 239.877 mo
592.718 239.877 592.176 240.147 592.447 240.419 cv
592.583 240.555 593.125 240.147 592.854 239.877 cv
cp
592.854 200.573 mo
592.718 200.439 592.176 200.845 592.447 200.98 cv
592.583 201.115 593.125 200.845 592.854 200.573 cv
cp
592.854 229.034 mo
593.125 228.764 592.854 228.086 592.447 228.628 cv
592.176 228.764 592.447 229.441 592.854 229.034 cv
cp
592.854 237.302 mo
592.718 237.166 591.769 237.573 592.041 237.708 cv
592.176 237.844 593.125 237.573 592.854 237.302 cv
cp
592.854 223.343 mo
592.718 223.207 591.769 223.613 592.041 223.749 cv
592.176 223.885 593.125 223.478 592.854 223.343 cv
cp
592.447 241.232 mo
592.312 241.097 591.769 241.503 592.041 241.639 cv
592.176 241.774 592.718 241.503 592.447 241.232 cv
cp
592.041 184.445 mo
591.905 184.311 591.363 184.581 591.634 184.853 cv
591.769 184.987 592.312 184.717 592.041 184.445 cv
cp
592.447 194.882 mo
592.447 194.746 590.956 194.339 591.092 194.882 cv
591.227 195.152 592.718 195.559 592.447 194.882 cv
cp
591.092 243.808 mo
591.092 243.672 590.685 243.4 590.685 243.808 cv
590.685 244.078 591.092 244.35 591.092 243.808 cv
cp
591.092 240.825 mo
591.092 240.69 590.55 240.961 590.685 241.232 cv
590.821 241.368 591.363 241.097 591.092 240.825 cv
cp
591.092 224.697 mo
591.092 224.563 590.55 224.833 590.685 225.105 cv
590.821 225.24 591.363 224.833 591.092 224.697 cv
cp
590.685 233.778 mo
590.55 233.643 590.008 234.049 590.279 234.32 cv
590.414 234.32 590.956 234.049 590.685 233.778 cv
cp
590.685 244.756 mo
590.55 244.62 589.602 245.027 589.872 245.162 cv
590.008 245.298 590.956 244.892 590.685 244.756 cv
cp
601.664 163.439 mo
601.664 163.439 601.664 162.897 602.07 163.032 cv
602.07 163.032 602.747 163.574 604.238 163.439 cv
606.407 163.304 605.729 162.219 605.594 165.607 cv
605.594 166.691 606 167.64 606 168.317 cv
606 171.57 606 174.552 606 177.398 cv
606.136 182.006 605.594 185.259 605.594 192.307 cv
605.594 201.929 606.542 212.23 606 223.343 cv
605.865 226.189 604.509 236.218 605.594 237.302 cv
606 237.708 614.81 237.573 616.978 237.708 cv
618.333 237.844 619.553 237.708 620.502 237.708 cv
622.264 237.708 628.362 237.302 628.769 237.708 cv
629.176 238.251 629.311 240.825 629.176 242.181 cv
629.04 244.078 628.227 245.027 628.362 246.111 cv
628.362 247.331 629.447 249.093 629.582 250.855 cv
629.853 254.378 629.582 255.869 626.601 256.547 cv
625.788 256.683 625.517 256.547 624.839 256.547 cv
623.212 256.683 621.315 257.089 620.502 256.953 cv
619.282 256.953 618.198 256.275 616.978 256.141 cv
614.403 255.733 611.692 255.869 609.524 256.141 cv
608.033 256.275 606.813 256.953 605.594 256.953 cv
603.56 256.953 600.986 256.141 599.495 256.141 cv
597.055 256.005 591.227 256.818 587.162 256.547 cv
586.349 256.411 583.638 256.005 583.773 256.141 cv
583.367 255.733 584.587 250.99 584.587 250.042 cv
584.587 248.279 583.773 244.484 583.773 240.825 cv
583.773 239.605 584.18 238.522 584.18 237.302 cv
584.18 235.811 583.638 234.456 583.773 233.371 cv
583.909 231.339 584.993 228.764 584.993 227.272 cv
584.993 225.105 583.231 222.529 584.18 219.818 cv
584.858 217.786 584.858 211.958 584.587 208.435 cv
584.587 208.027 584.18 207.757 584.18 207.215 cv
584.316 204.368 584.587 199.219 584.587 194.882 cv
584.587 190.951 584.18 184.987 584.587 180.516 cv
584.858 177.94 584.722 174.417 584.587 171.3 cv
584.587 170.757 584.044 170.08 584.18 169.131 cv
584.18 169.131 584.316 163.304 584.18 163.439 cv
584.18 163.439 590.685 163.574 592.447 163.439 cv
596.513 163.304 600.037 163.439 601.664 163.439 cv
cp
f
685.826 169.809 mo
685.69 169.673 685.148 170.08 685.419 170.215 cv
685.555 170.351 686.097 170.08 685.826 169.809 cv
cp
680.54 168.047 mo
680.404 167.911 679.862 168.317 680.133 168.589 cv
680.269 168.589 680.811 168.317 680.54 168.047 cv
cp
680.133 245.84 mo
679.998 245.704 679.456 245.976 679.727 246.247 cv
679.862 246.382 680.404 246.111 680.133 245.84 cv
cp
676.61 171.57 mo
676.61 171.164 675.932 171.028 675.796 171.57 cv
676.203 171.57 676.474 172.248 676.61 171.57 cv
cp
676.203 208.705 mo
676.067 208.569 675.119 208.977 675.39 209.112 cv
675.39 209.247 676.474 208.977 676.203 208.705 cv
cp
674.848 169.402 mo
674.712 169.267 674.17 169.673 674.441 169.809 cv
674.577 169.944 675.119 169.673 674.848 169.402 cv
cp
670.511 171.57 mo
670.375 171.435 669.833 171.842 670.104 171.978 cv
670.24 172.112 670.782 171.842 670.511 171.57 cv
cp
670.511 170.757 mo
670.511 170.215 669.698 170.215 669.698 170.757 cv
670.104 170.622 670.375 171.3 670.511 170.757 cv
cp
670.104 210.874 mo
669.427 209.112 671.188 209.925 671.459 209.112 cv
669.562 208.569 668.342 210.467 670.104 210.874 cv
cp
669.698 172.926 mo
669.562 172.79 669.02 173.062 669.156 173.332 cv
669.291 173.468 669.833 173.062 669.698 172.926 cv
cp
669.156 213.991 mo
669.427 213.72 668.342 211.28 668.342 213.042 cv
668.342 213.314 669.02 214.126 669.156 213.991 cv
cp
668.749 170.757 mo
668.613 170.622 668.071 170.893 668.342 171.164 cv
668.478 171.3 669.02 170.893 668.749 170.757 cv
cp
668.342 179.838 mo
668.342 179.702 667.936 179.431 667.936 179.838 cv
667.936 180.108 668.342 180.38 668.342 179.838 cv
cp
667.936 197.728 mo
667.8 197.728 667.258 197.999 667.529 198.27 cv
667.529 198.405 668.071 197.999 667.936 197.728 cv
cp
669.156 205.588 mo
669.156 205.182 668.207 205.046 666.987 204.775 cv
666.987 206.266 669.291 206.13 669.156 205.588 cv
cp
667.529 209.112 mo
667.393 208.977 666.445 209.383 666.581 209.519 cv
666.716 209.654 667.665 209.383 667.529 209.112 cv
cp
666.987 170.215 mo
666.852 170.215 666.31 170.486 666.581 170.757 cv
666.716 170.893 667.258 170.486 666.987 170.215 cv
cp
666.581 172.52 mo
665.903 172.79 666.581 172.926 666.581 172.52 cv
668.342 172.384 666.581 170.486 666.581 172.52 cv
cp
666.581 221.31 mo
666.445 221.31 665.903 221.58 666.174 221.852 cv
666.31 221.987 666.852 221.58 666.581 221.31 cv
cp
666.581 190.815 mo
666.852 190.545 666.581 189.867 666.174 190.409 cv
665.903 190.545 666.174 191.222 666.581 190.815 cv
cp
666.581 175.094 mo
666.852 175.772 667.122 175.094 666.581 175.094 cv
666.987 173.604 665.09 174.281 665.225 175.094 cv
665.768 175.094 666.174 175.094 666.581 175.094 cv
cp
665.768 172.52 mo
665.903 172.248 665.768 171.57 665.225 171.978 cv
665.09 172.248 665.225 172.926 665.768 172.52 cv
cp
665.768 213.991 mo
665.496 213.72 664.819 214.262 664.819 214.397 cv
664.819 215.347 666.174 214.397 665.768 213.991 cv
cp
665.768 209.112 mo
665.632 208.977 664.683 209.383 664.819 209.519 cv
664.954 209.654 665.903 209.383 665.768 209.112 cv
cp
665.768 181.6 mo
665.632 181.464 664.683 181.871 664.819 182.006 cv
664.954 182.142 665.903 181.871 665.768 181.6 cv
cp
664.819 212.23 mo
665.361 212.772 666.852 210.874 665.225 210.874 cv
665.225 210.874 665.361 211.28 665.225 211.28 cv
665.225 211.416 664.548 211.822 664.819 212.23 cv
cp
664.819 204.368 mo
664.683 204.232 663.734 204.504 664.005 204.775 cv
664.141 204.91 665.09 204.504 664.819 204.368 cv
cp
664.819 170.757 mo
664.683 170.622 663.734 170.893 664.005 171.164 cv
664.141 171.3 665.09 170.893 664.819 170.757 cv
cp
664.412 187.292 mo
664.276 187.156 663.734 187.563 664.005 187.698 cv
664.141 187.834 664.683 187.563 664.412 187.292 cv
cp
664.412 217.379 mo
662.65 216.973 664.276 218.734 664.412 217.379 cv
665.09 217.108 664.412 216.973 664.412 217.379 cv
cp
664.005 214.804 mo
663.87 214.669 663.328 215.075 663.599 215.211 cv
663.599 215.347 664.141 215.075 664.005 214.804 cv
cp
664.005 199.083 mo
663.87 198.947 663.328 199.354 663.599 199.489 cv
663.599 199.625 664.141 199.354 664.005 199.083 cv
cp
664.005 208.705 mo
664.005 208.299 663.192 208.163 663.057 208.705 cv
663.192 209.247 663.599 208.977 664.005 208.705 cv
cp
664.005 203.013 mo
663.87 202.878 662.921 203.284 663.057 203.42 cv
663.192 203.556 664.141 203.284 664.005 203.013 cv
cp
664.005 171.57 mo
663.87 171.435 662.921 171.842 663.057 171.978 cv
663.192 172.112 664.141 171.842 664.005 171.57 cv
cp
663.599 213.042 mo
663.463 212.906 662.921 213.314 663.057 213.449 cv
663.192 213.584 663.734 213.314 663.599 213.042 cv
cp
663.599 188.647 mo
663.463 188.512 662.921 188.782 663.057 189.054 cv
663.192 189.189 663.734 188.782 663.599 188.647 cv
cp
663.057 216.159 mo
663.057 215.889 662.65 215.617 662.65 216.159 cv
662.65 216.431 663.057 216.566 663.057 216.159 cv
cp
663.599 205.182 mo
663.463 205.046 662.515 205.452 662.65 205.588 cv
662.786 205.724 663.734 205.452 663.599 205.182 cv
cp
663.057 214.804 mo
662.921 214.669 662.379 215.075 662.65 215.211 cv
662.786 215.347 663.328 215.075 663.057 214.804 cv
cp
663.057 206.13 mo
662.921 205.995 662.379 206.266 662.65 206.537 cv
662.786 206.673 663.328 206.266 663.057 206.13 cv
cp
663.057 200.845 mo
662.921 200.709 662.379 201.115 662.65 201.251 cv
662.786 201.387 663.328 201.115 663.057 200.845 cv
cp
663.057 198.27 mo
662.921 198.134 662.379 198.405 662.65 198.676 cv
662.786 198.812 663.328 198.405 663.057 198.27 cv
cp
663.057 190.409 mo
662.921 190.273 661.973 190.545 662.244 190.815 cv
662.379 190.951 663.328 190.545 663.057 190.409 cv
cp
662.65 216.973 mo
662.515 216.837 661.973 217.243 662.244 217.379 cv
662.379 217.515 662.921 217.243 662.65 216.973 cv
cp
662.65 177.669 mo
662.65 177.263 661.837 177.127 661.837 177.669 cv
661.837 178.211 662.244 177.94 662.65 177.669 cv
cp
662.65 238.386 mo
662.515 238.251 661.566 238.657 661.837 238.793 cv
661.973 238.928 662.921 238.657 662.65 238.386 cv
cp
662.65 210.874 mo
662.515 210.738 661.566 211.145 661.837 211.28 cv
661.973 211.416 662.921 211.145 662.65 210.874 cv
cp
662.244 228.764 mo
662.108 228.628 661.566 229.034 661.837 229.17 cv
661.973 229.306 662.515 229.034 662.244 228.764 cv
cp
662.244 186.479 mo
662.108 186.343 661.566 186.614 661.837 186.885 cv
661.973 187.021 662.515 186.614 662.244 186.479 cv
cp
662.244 194.339 mo
662.108 194.204 661.159 194.475 661.295 194.746 cv
661.431 194.882 662.379 194.475 662.244 194.339 cv
cp
662.244 181.193 mo
662.108 181.058 661.159 181.464 661.295 181.6 cv
661.431 181.735 662.379 181.464 662.244 181.193 cv
cp
662.65 189.054 mo
662.65 188.647 660.753 188.24 660.888 189.054 cv
661.159 190.273 662.65 189.189 662.65 189.054 cv
cp
661.295 220.09 mo
661.295 219.954 660.753 220.226 660.888 220.496 cv
661.024 220.632 661.566 220.226 661.295 220.09 cv
cp
661.295 213.449 mo
661.295 213.449 660.753 213.72 660.888 213.991 cv
661.024 214.126 661.566 213.72 661.295 213.449 cv
cp
661.295 179.838 mo
661.295 179.702 660.753 180.108 660.888 180.38 cv
661.024 180.38 661.566 180.108 661.295 179.838 cv
cp
661.295 198.27 mo
661.295 198.134 660.211 198.405 660.482 198.676 cv
660.617 198.812 661.566 198.405 661.295 198.27 cv
cp
660.888 234.862 mo
660.753 234.727 660.211 235.134 660.482 235.404 cv
660.617 235.404 661.159 235.134 660.888 234.862 cv
cp
660.888 190.815 mo
660.753 190.68 660.211 190.951 660.482 191.222 cv
660.617 191.357 661.159 191.087 660.888 190.815 cv
cp
661.295 208.299 mo
661.431 208.163 661.837 207.35 661.837 207.35 cv
660.482 206.537 659.397 209.925 661.837 210.061 cv
661.973 209.247 661.295 208.977 661.295 208.299 cv
cp
660.888 195.152 mo
661.024 196.508 662.786 194.746 660.888 195.152 cv
660.888 193.797 659.126 195.559 660.888 195.152 cv
cp
660.482 200.845 mo
660.482 200.573 660.075 200.303 660.075 200.845 cv
660.075 201.115 660.482 201.387 660.482 200.845 cv
cp
660.888 193.391 mo
660.482 193.526 660.211 192.849 660.075 193.391 cv
660.075 193.797 660.753 193.933 660.888 193.391 cv
cp
660.888 226.595 mo
660.753 226.46 659.804 226.866 660.075 227.002 cv
660.211 227.137 661.159 226.866 660.888 226.595 cv
cp
660.888 178.618 mo
660.753 178.482 659.804 178.754 660.075 179.024 cv
660.211 179.16 661.159 178.754 660.888 178.618 cv
cp
660.075 206.537 mo
660.075 206.266 659.668 205.995 659.668 206.537 cv
659.668 206.808 660.075 207.079 660.075 206.537 cv
cp
660.075 176.856 mo
659.939 176.721 659.397 176.991 659.668 177.263 cv
659.668 177.398 660.211 176.991 660.075 176.856 cv
cp
660.075 220.903 mo
659.533 221.038 659.397 220.36 659.126 220.903 cv
659.126 221.31 659.939 221.445 660.075 220.903 cv
cp
659.668 181.6 mo
659.668 181.328 659.126 181.193 659.126 181.6 cv
659.126 181.871 659.668 182.142 659.668 181.6 cv
cp
659.668 211.28 mo
659.533 211.145 658.991 211.552 659.126 211.822 cv
659.262 211.822 659.804 211.552 659.668 211.28 cv
cp
659.668 199.489 mo
659.533 199.354 658.991 199.761 659.126 200.031 cv
659.262 200.031 659.804 199.761 659.668 199.489 cv
cp
659.126 173.739 mo
659.397 174.417 659.668 173.739 659.126 173.739 cv
658.855 173.197 658.584 173.874 659.126 173.739 cv
cp
660.075 179.838 mo
660.617 179.566 659.939 179.296 660.075 179.838 cv
659.397 179.296 658.72 179.566 658.72 180.786 cv
659.533 180.786 659.804 180.38 660.075 179.838 cv
cp
659.668 196.508 mo
659.533 196.372 658.584 196.644 658.72 196.914 cv
658.855 197.05 659.804 196.644 659.668 196.508 cv
cp
658.72 210.874 mo
658.584 210.738 658.042 211.145 658.313 211.28 cv
658.449 211.416 658.991 211.145 658.72 210.874 cv
cp
658.72 182.548 mo
658.584 182.413 658.042 182.684 658.313 182.955 cv
658.449 183.091 658.991 182.684 658.72 182.548 cv
cp
658.72 176.449 mo
658.584 176.314 658.042 176.585 658.313 176.856 cv
658.449 176.991 658.991 176.585 658.72 176.449 cv
cp
657.907 191.629 mo
657.771 191.493 657.229 191.899 657.365 192.171 cv
657.5 192.171 658.042 191.899 657.907 191.629 cv
cp
657.907 171.164 mo
657.771 171.028 657.229 171.3 657.365 171.57 cv
657.5 171.706 658.042 171.435 657.907 171.164 cv
cp
657.907 216.973 mo
657.771 216.837 656.822 217.243 656.958 217.379 cv
657.094 217.515 658.042 217.243 657.907 216.973 cv
cp
656.958 184.311 mo
656.822 184.175 656.28 184.445 656.551 184.717 cv
656.687 184.853 657.229 184.445 656.958 184.311 cv
cp
656.958 183.361 mo
656.822 183.226 656.28 183.633 656.551 183.768 cv
656.687 183.903 657.229 183.633 656.958 183.361 cv
cp
697.617 162.355 mo
696.126 166.42 697.075 169.809 697.617 175.094 cv
697.752 176.991 698.43 181.735 698.023 182.006 cv
697.752 182.277 692.331 182.277 691.924 182.006 cv
691.924 182.006 690.163 180.38 689.756 180.38 cv
689.078 180.244 688.672 180.786 687.587 181.193 cv
685.69 181.735 683.386 181.6 680.54 181.193 cv
679.32 181.058 677.83 180.244 676.61 180.38 cv
675.796 180.38 672.273 181.193 672.273 181.193 cv
671.324 182.277 673.086 184.987 672.679 187.292 cv
672.815 186.885 672.408 189.054 672.273 189.46 cv
671.73 190.815 671.053 189.867 670.917 190.815 cv
670.917 191.493 672.679 194.339 672.273 197.321 cv
672.273 197.728 671.595 198.812 671.866 199.083 cv
672.273 199.489 675.796 199.083 677.965 199.083 cv
680.133 199.219 681.353 199.489 682.302 199.489 cv
682.844 199.489 683.657 199.083 684.877 199.083 cv
685.013 199.083 692.873 199.219 693.28 199.489 cv
694.364 200.303 694.228 208.027 694.093 210.061 cv
693.822 213.178 693.28 214.804 694.093 218.734 cv
692.331 219.006 690.569 217.921 688.401 217.921 cv
687.181 217.786 685.826 218.599 684.064 218.734 cv
681.489 218.87 677.152 217.108 674.441 217.921 cv
673.086 218.192 671.595 219.818 671.459 220.496 cv
671.053 221.852 672.002 222.665 672.273 224.427 cv
672.408 225.647 672.137 227.137 672.273 228.356 cv
672.408 229.983 673.493 231.609 672.679 233.101 cv
672.408 233.778 672.137 233.507 671.866 234.862 cv
671.73 235.134 671.324 235.54 671.459 235.811 cv
671.595 236.082 677.287 236.624 678.778 236.624 cv
686.232 237.166 691.518 236.354 698.023 236.218 cv
697.752 239.741 696.803 243.13 697.21 247.602 cv
697.21 248.687 697.617 249.771 697.617 250.584 cv
697.617 251.262 697.075 252.074 696.668 253.294 cv
696.397 254.378 696.668 255.599 696.261 255.869 cv
695.312 256.411 691.789 255.463 690.569 255.463 cv
689.35 255.463 686.91 255.599 684.877 255.463 cv
680.54 255.056 674.577 255.327 669.156 255.463 cv
666.852 255.463 664.819 255.869 662.65 255.869 cv
660.346 255.733 658.042 255.056 656.145 255.056 cv
653.57 254.921 650.182 255.191 650.046 255.056 cv
649.911 254.921 650.588 253.294 650.453 251.126 cv
650.317 248.957 649.369 247.737 650.046 245.434 cv
650.182 245.027 650.859 244.62 650.859 244.078 cv
650.859 241.774 649.911 238.657 650.046 235.404 cv
650.046 232.017 650.046 228.628 650.046 225.24 cv
650.046 223.207 650.453 220.903 650.453 219.141 cv
650.317 216.837 649.504 214.804 650.046 211.822 cv
650.453 209.112 651.401 206.401 651.266 204.368 cv
651.266 203.013 650.317 201.658 650.046 200.031 cv
649.233 195.017 650.046 187.834 650.046 181.193 cv
650.046 177.94 649.911 174.552 650.046 171.57 cv
650.046 168.453 650.453 165.743 650.453 163.71 cv
650.453 163.032 650.859 162.49 651.808 162.355 cv
659.126 161.541 667.122 162.355 674.848 162.355 cv
682.302 162.355 689.756 162.355 697.617 162.355 cv
cp
f
757.926 170.215 mo
757.79 170.08 757.248 170.351 757.519 170.622 cv
757.655 170.757 758.197 170.351 757.926 170.215 cv
cp
753.589 172.384 mo
753.454 172.248 752.911 172.52 753.183 172.79 cv
753.318 172.926 753.86 172.52 753.589 172.384 cv
cp
753.183 174.146 mo
753.047 174.01 752.505 174.281 752.776 174.552 cv
752.911 174.688 753.454 174.281 753.183 174.146 cv
cp
753.183 167.098 mo
753.047 166.963 752.505 167.369 752.776 167.505 cv
752.911 167.64 753.454 167.369 753.183 167.098 cv
cp
752.776 169.267 mo
752.776 169.131 752.234 168.86 752.234 169.267 cv
752.234 169.537 752.776 169.809 752.776 169.267 cv
cp
752.776 171.978 mo
752.64 171.842 752.098 172.112 752.234 172.384 cv
752.369 172.52 752.911 172.112 752.776 171.978 cv
cp
752.776 170.215 mo
752.64 170.08 751.691 170.351 751.827 170.622 cv
751.962 170.757 752.911 170.351 752.776 170.215 cv
cp
751.42 175.772 mo
751.285 175.772 750.336 176.043 750.607 176.314 cv
750.743 176.449 751.691 176.043 751.42 175.772 cv
cp
751.014 224.969 mo
750.878 224.833 750.336 225.105 750.607 225.375 cv
750.743 225.511 751.285 225.105 751.014 224.969 cv
cp
750.607 186.208 mo
750.607 186.072 750.065 185.801 750.065 186.208 cv
750.065 186.479 750.607 186.75 750.607 186.208 cv
cp
751.014 229.712 mo
750.878 229.577 749.93 229.983 750.065 230.119 cv
750.201 230.254 751.149 229.983 751.014 229.712 cv
cp
750.607 249.229 mo
750.472 249.093 749.93 249.499 750.065 249.771 cv
750.201 249.771 750.743 249.499 750.607 249.229 cv
cp
750.065 208.027 mo
750.065 207.893 749.523 208.163 749.659 208.435 cv
749.794 208.569 750.336 208.163 750.065 208.027 cv
cp
750.065 174.552 mo
748.303 174.146 750.065 175.772 750.065 174.552 cv
750.336 174.552 750.472 174.552 750.607 174.552 cv
751.149 173.874 750.878 173.197 749.659 173.197 cv
749.523 173.874 750.065 174.01 750.065 174.552 cv
cp
750.065 226.73 mo
750.065 226.189 749.388 226.189 749.252 226.73 cv
749.388 227.137 749.794 227.002 750.065 226.73 cv
cp
751.014 219.683 mo
750.743 219.548 749.388 218.599 749.252 219.683 cv
749.523 219.818 750.878 220.768 751.014 219.683 cv
cp
749.659 181.871 mo
749.659 181.735 749.252 181.464 749.252 181.871 cv
749.252 182.142 749.659 182.413 749.659 181.871 cv
cp
749.659 242.723 mo
749.523 242.588 748.981 242.994 749.252 243.13 cv
749.388 243.265 749.93 242.994 749.659 242.723 cv
cp
749.659 234.998 mo
749.523 234.862 748.981 235.134 749.252 235.404 cv
749.388 235.54 749.93 235.134 749.659 234.998 cv
cp
749.252 187.97 mo
749.117 187.834 748.574 188.24 748.846 188.376 cv
748.981 188.512 749.523 188.24 749.252 187.97 cv
cp
749.252 174.146 mo
749.252 173.604 748.439 173.604 748.439 174.146 cv
748.439 174.552 748.846 174.417 749.252 174.146 cv
cp
748.846 214.939 mo
748.71 214.804 748.168 215.211 748.439 215.347 cv
748.439 215.481 748.981 215.211 748.846 214.939 cv
cp
748.846 203.69 mo
748.71 203.556 748.168 203.826 748.439 204.098 cv
748.439 204.232 748.981 203.826 748.846 203.69 cv
cp
748.846 182.819 mo
748.71 182.684 747.761 182.955 747.897 183.226 cv
748.032 183.361 748.981 182.955 748.846 182.819 cv
cp
748.439 233.643 mo
748.303 233.507 747.761 233.778 747.897 234.049 cv
748.032 234.185 748.574 233.914 748.439 233.643 cv
cp
748.439 231.881 mo
748.303 231.745 747.761 232.151 747.897 232.287 cv
748.032 232.423 748.574 232.151 748.439 231.881 cv
cp
748.439 195.83 mo
746.677 195.966 748.439 197.728 748.439 195.83 cv
748.981 195.559 748.303 195.288 748.439 195.83 cv
cp
748.439 228.899 mo
748.303 228.764 747.354 229.034 747.49 229.306 cv
747.625 229.441 748.574 229.034 748.439 228.899 cv
cp
747.897 242.316 mo
747.897 242.181 747.354 242.588 747.49 242.723 cv
747.625 242.858 748.168 242.588 747.897 242.316 cv
cp
747.897 212.772 mo
747.49 212.772 747.219 212.094 747.083 212.772 cv
747.083 213.178 747.897 213.314 747.897 212.772 cv
cp
747.897 194.475 mo
747.897 194.068 747.219 193.933 747.083 194.475 cv
747.219 195.017 747.625 194.746 747.897 194.475 cv
cp
747.897 234.998 mo
747.897 234.862 746.812 235.134 747.083 235.404 cv
747.219 235.54 748.168 235.134 747.897 234.998 cv
cp
747.49 229.712 mo
747.354 229.577 746.812 229.983 747.083 230.119 cv
747.219 230.254 747.761 229.983 747.49 229.712 cv
cp
747.49 216.701 mo
747.354 216.566 746.812 216.837 747.083 217.108 cv
747.219 217.243 747.761 216.973 747.49 216.701 cv
cp
747.49 184.039 mo
747.354 183.903 746.406 184.311 746.677 184.581 cv
746.812 184.581 747.761 184.311 747.49 184.039 cv
cp
747.083 249.229 mo
746.948 249.093 746.406 249.499 746.677 249.771 cv
746.812 249.771 747.354 249.499 747.083 249.229 cv
cp
747.083 186.208 mo
746.948 186.072 746.406 186.479 746.677 186.75 cv
746.812 186.75 747.354 186.479 747.083 186.208 cv
cp
747.49 177.127 mo
745.864 176.856 746.677 179.431 747.897 178.889 cv
747.625 179.702 748.303 181.6 748.846 180.108 cv
748.168 180.108 748.71 178.889 747.897 178.889 cv
748.846 177.94 747.761 178.076 747.49 177.127 cv
748.168 176.856 747.49 176.585 747.49 177.127 cv
cp
747.083 219.276 mo
745.322 218.87 746.948 220.632 747.083 219.276 cv
748.439 219.141 746.677 217.515 747.083 219.276 cv
cp
746.677 241.91 mo
746.541 241.774 745.999 242.045 746.27 242.316 cv
746.27 242.452 746.812 242.181 746.677 241.91 cv
cp
746.677 231.474 mo
746.541 231.339 745.999 231.609 746.27 231.881 cv
746.27 232.017 746.812 231.745 746.677 231.474 cv
cp
746.677 170.215 mo
746.541 170.08 745.999 170.351 746.27 170.622 cv
746.27 170.757 746.812 170.351 746.677 170.215 cv
cp
748.439 237.166 mo
748.439 237.03 746.812 236.76 746.677 236.624 cv
746.406 236.488 746.541 236.082 746.27 236.624 cv
745.186 238.522 748.439 237.844 748.439 237.166 cv
cp
746.677 221.445 mo
744.78 221.445 746.541 223.207 746.677 221.445 cv
747.083 221.445 747.49 221.445 747.897 221.445 cv
746.541 222.8 749.523 222.258 747.897 221.445 cv
747.897 220.903 746.677 220.903 746.677 221.445 cv
cp
747.083 244.484 mo
746.948 244.484 747.354 245.298 747.49 244.892 cv
748.439 243.265 745.593 243.4 745.728 244.892 cv
746.27 245.162 746.812 244.484 747.083 244.484 cv
cp
746.677 204.91 mo
746.541 204.775 745.593 205.182 745.728 205.317 cv
745.864 205.452 746.812 205.182 746.677 204.91 cv
cp
746.677 204.098 mo
746.541 203.962 745.593 204.368 745.728 204.504 cv
745.864 204.64 746.812 204.232 746.677 204.098 cv
cp
746.677 179.296 mo
746.541 179.16 745.593 179.566 745.728 179.702 cv
745.864 179.838 746.812 179.566 746.677 179.296 cv
cp
746.27 246.247 mo
746.135 246.111 745.593 246.382 745.728 246.653 cv
745.864 246.789 746.406 246.518 746.27 246.247 cv
cp
746.27 174.959 mo
746.135 174.823 745.593 175.23 745.728 175.365 cv
745.864 175.501 746.406 175.23 746.27 174.959 cv
cp
746.27 208.027 mo
746.27 207.485 745.457 207.485 745.322 208.027 cv
745.864 207.893 745.999 208.569 746.27 208.027 cv
cp
746.677 240.147 mo
746.541 239.877 745.186 239.605 745.322 240.147 cv
745.457 240.419 746.812 240.69 746.677 240.147 cv
cp
746.27 206.673 mo
746.135 206.537 745.186 206.943 745.322 207.079 cv
745.457 207.215 746.406 206.943 746.27 206.673 cv
cp
745.728 228.899 mo
745.593 228.764 745.186 229.034 745.322 229.306 cv
745.457 229.441 745.999 229.034 745.728 228.899 cv
cp
745.322 171.435 mo
745.457 173.197 747.219 171.435 745.322 171.435 cv
745.051 170.893 744.78 171.57 745.322 171.435 cv
cp
745.728 185.395 mo
745.593 185.123 744.915 185.665 744.915 185.801 cv
744.915 186.75 746.27 185.801 745.728 185.395 cv
cp
745.728 233.643 mo
745.593 233.507 744.644 233.914 744.915 234.049 cv
745.051 234.185 745.999 233.778 745.728 233.643 cv
cp
745.728 192.307 mo
744.373 193.661 747.354 193.119 745.728 192.307 cv
745.593 190.68 743.831 192.441 745.728 192.307 cv
cp
745.322 226.73 mo
745.186 226.595 744.644 226.866 744.915 227.137 cv
745.051 227.272 745.593 226.866 745.322 226.73 cv
cp
745.322 225.782 mo
745.186 225.647 744.644 226.053 744.915 226.189 cv
745.051 226.324 745.593 226.053 745.322 225.782 cv
cp
745.322 202.742 mo
745.186 202.606 744.644 203.013 744.915 203.148 cv
745.051 203.284 745.593 203.013 745.322 202.742 cv
cp
745.322 180.651 mo
745.186 180.516 744.644 180.786 744.915 181.058 cv
745.051 181.193 745.593 180.786 745.322 180.651 cv
cp
745.322 231.881 mo
745.186 231.745 744.237 232.151 744.509 232.287 cv
744.644 232.423 745.593 232.151 745.322 231.881 cv
cp
744.509 221.445 mo
744.509 221.174 744.102 220.903 744.102 221.445 cv
744.102 221.716 744.509 221.987 744.509 221.445 cv
cp
745.322 211.958 mo
745.322 211.687 743.966 210.467 744.102 211.416 cv
744.102 212.5 745.457 212.636 745.322 211.958 cv
cp
745.322 217.108 mo
745.051 216.837 744.102 217.379 744.102 217.515 cv
743.831 218.463 745.864 217.65 745.322 217.108 cv
cp
744.509 224.969 mo
744.102 224.833 744.102 225.105 744.102 225.375 cv
743.424 225.647 744.102 225.917 744.102 225.375 cv
744.373 225.511 744.509 225.24 744.509 224.969 cv
745.051 224.697 744.373 224.427 744.509 224.969 cv
cp
744.509 239.741 mo
742.611 239.335 744.373 240.961 744.509 239.741 cv
745.051 239.471 744.373 239.199 744.509 239.741 cv
cp
744.915 190.138 mo
744.78 190.002 744.102 191.087 744.915 191.087 cv
746.27 190.002 745.322 189.054 743.56 188.918 cv
743.424 190.409 744.509 189.189 744.915 190.138 cv
cp
744.509 235.811 mo
744.373 235.676 743.424 236.082 743.56 236.218 cv
743.695 236.354 744.644 235.946 744.509 235.811 cv
cp
744.102 184.581 mo
743.966 184.445 743.424 184.717 743.56 184.987 cv
743.695 185.123 744.237 184.717 744.102 184.581 cv
cp
744.102 167.505 mo
743.966 167.505 743.424 167.775 743.56 168.047 cv
743.695 168.183 744.237 167.775 744.102 167.505 cv
cp
743.56 181.464 mo
743.153 181.6 743.424 181.871 743.56 181.871 cv
743.831 182.548 744.102 181.871 743.56 181.871 cv
743.56 181.735 743.56 181.6 743.56 181.464 cv
744.237 181.193 743.56 180.922 743.56 181.464 cv
cp
743.153 231.474 mo
743.695 232.017 744.915 231.745 744.915 230.525 cv
744.102 230.661 743.424 230.932 743.153 231.474 cv
cp
744.102 204.098 mo
744.102 203.69 743.289 203.556 743.153 204.098 cv
743.695 204.098 743.831 204.775 744.102 204.098 cv
cp
745.322 199.761 mo
745.322 199.489 745.728 198.405 745.728 198.405 cv
745.186 197.999 743.695 198.134 743.153 199.354 cv
745.457 198.541 744.509 200.845 745.728 200.98 cv
745.999 200.439 745.322 200.031 745.322 199.761 cv
cp
743.56 245.434 mo
743.424 245.298 742.882 245.569 743.153 245.84 cv
743.289 245.976 743.831 245.569 743.56 245.434 cv
cp
743.56 232.829 mo
743.424 232.694 742.882 232.965 743.153 233.236 cv
743.289 233.371 743.831 232.965 743.56 232.829 cv
cp
743.56 228.899 mo
743.424 228.764 742.882 229.034 743.153 229.306 cv
743.289 229.441 743.831 229.034 743.56 228.899 cv
cp
744.102 223.613 mo
741.798 223.207 743.56 224.969 744.102 223.613 cv
744.644 223.343 743.966 223.071 744.102 223.613 cv
cp
743.153 237.98 mo
742.476 238.251 743.153 238.522 743.153 237.98 cv
743.831 237.708 743.153 237.438 743.153 237.98 cv
cp
743.56 210.603 mo
743.424 210.467 742.476 210.874 742.747 211.009 cv
742.882 211.145 743.831 210.738 743.56 210.603 cv
cp
743.153 211.416 mo
743.018 211.28 742.476 211.687 742.747 211.958 cv
742.882 211.958 743.424 211.687 743.153 211.416 cv
cp
742.747 199.761 mo
742.747 199.489 742.34 199.219 742.34 199.761 cv
742.34 200.031 742.747 200.167 742.747 199.761 cv
cp
743.56 173.197 mo
743.966 172.384 742.476 171.3 742.34 172.384 cv
742.882 172.52 743.018 173.062 743.56 173.197 cv
cp
743.153 239.741 mo
743.018 239.605 742.069 240.013 742.34 240.147 cv
742.476 240.283 743.424 239.877 743.153 239.741 cv
cp
743.153 192.713 mo
743.018 192.713 742.069 192.984 742.34 193.255 cv
742.476 193.391 743.424 192.984 743.153 192.713 cv
cp
743.153 190.545 mo
743.018 190.545 742.069 190.815 742.34 191.087 cv
742.476 191.222 743.424 190.815 743.153 190.545 cv
cp
742.747 228.356 mo
742.611 228.356 742.069 228.628 742.34 228.899 cv
742.476 229.034 743.018 228.628 742.747 228.356 cv
cp
742.34 221.445 mo
743.289 222.394 744.373 218.87 742.747 220.632 cv
742.747 220.632 741.934 221.038 742.34 221.445 cv
cp
742.34 186.75 mo
741.663 187.021 742.34 187.156 742.34 186.75 cv
744.102 187.156 742.34 185.395 742.34 186.75 cv
cp
742.747 218.87 mo
742.611 218.734 741.663 219.141 741.934 219.276 cv
741.934 219.412 742.882 219.006 742.747 218.87 cv
cp
741.934 235.811 mo
743.424 237.302 742.34 232.694 741.934 234.998 cv
741.798 234.998 741.798 235.676 741.934 235.811 cv
cp
742.34 231.881 mo
741.934 233.643 743.56 232.017 742.34 231.881 cv
742.747 230.119 740.985 231.745 742.34 231.881 cv
cp
741.934 243.13 mo
742.476 243.942 744.102 240.961 742.34 242.723 cv
742.205 242.858 741.527 242.858 741.934 243.13 cv
cp
741.934 184.987 mo
741.256 185.259 741.934 185.53 741.934 184.987 cv
742.476 184.717 741.798 184.445 741.934 184.987 cv
cp
742.34 175.365 mo
740.443 174.959 742.205 176.721 742.34 175.365 cv
742.882 175.094 742.205 174.823 742.34 175.365 cv
cp
741.934 211.958 mo
741.798 211.822 741.256 212.094 741.392 212.364 cv
741.527 212.5 742.069 212.094 741.934 211.958 cv
cp
741.934 209.247 mo
741.798 209.112 741.256 209.519 741.392 209.789 cv
741.527 209.789 742.069 209.519 741.934 209.247 cv
cp
745.322 176.721 mo
744.78 177.263 744.237 177.669 743.153 177.127 cv
742.882 176.991 743.153 175.907 742.34 176.314 cv
742.069 176.314 742.747 177.398 742.747 177.534 cv
742.34 179.16 740.849 177.805 741.392 179.296 cv
741.527 179.702 742.34 180.516 743.153 179.702 cv
742.205 179.566 742.205 178.618 743.153 178.482 cv
743.018 179.16 743.56 179.296 744.102 179.296 cv
744.237 178.618 743.695 178.482 743.153 178.482 cv
742.611 176.585 744.509 178.211 745.322 177.94 cv
745.322 177.94 747.083 176.314 745.322 176.721 cv
745.457 175.772 745.051 175.365 744.102 175.365 cv
743.966 176.314 744.373 176.721 745.322 176.721 cv
cp
741.392 195.83 mo
741.256 195.694 740.714 195.966 740.985 196.236 cv
741.12 196.372 741.663 196.102 741.392 195.83 cv
cp
741.392 195.017 mo
741.256 194.882 740.714 195.152 740.985 195.424 cv
741.12 195.559 741.663 195.152 741.392 195.017 cv
cp
741.392 174.146 mo
741.256 174.01 740.714 174.281 740.985 174.552 cv
741.12 174.688 741.663 174.281 741.392 174.146 cv
cp
741.934 229.712 mo
741.934 229.577 740.578 227.272 740.578 228.899 cv
740.578 229.712 741.798 230.797 741.934 229.712 cv
cp
740.578 173.197 mo
741.392 173.604 742.476 172.112 741.392 171.978 cv
741.392 172.52 740.714 172.654 740.578 173.197 cv
cp
741.934 240.961 mo
741.798 240.825 740.307 240.419 740.578 240.961 cv
740.578 241.232 742.069 241.639 741.934 240.961 cv
cp
741.392 221.038 mo
741.256 220.903 740.307 221.31 740.578 221.445 cv
740.714 221.58 741.663 221.174 741.392 221.038 cv
cp
740.985 239.335 mo
741.256 239.064 740.985 238.386 740.578 238.793 cv
740.307 239.064 740.578 239.741 740.985 239.335 cv
cp
740.985 165.336 mo
740.849 165.336 739.9 165.607 740.172 165.878 cv
740.307 166.014 741.256 165.607 740.985 165.336 cv
cp
740.578 211.009 mo
740.443 210.874 739.9 211.28 740.172 211.416 cv
740.307 211.552 740.849 211.28 740.578 211.009 cv
cp
740.578 197.999 mo
740.443 197.863 739.9 198.27 740.172 198.405 cv
740.307 198.541 740.849 198.27 740.578 197.999 cv
cp
740.172 176.721 mo
740.443 177.263 740.714 176.585 740.172 176.721 cv
739.9 176.043 739.629 176.721 740.172 176.721 cv
cp
740.578 168.047 mo
739.223 170.08 741.527 171.435 743.153 170.215 cv
742.069 169.537 741.663 169.809 740.985 168.86 cv
741.12 168.995 741.798 167.505 740.578 168.047 cv
740.443 166.691 738.816 168.453 740.578 168.047 cv
cp
740.985 200.98 mo
740.985 200.845 739.494 200.439 739.629 200.98 cv
739.765 201.251 741.256 201.658 740.985 200.98 cv
cp
740.578 166.691 mo
740.443 166.556 739.494 166.963 739.629 167.098 cv
739.765 167.233 740.714 166.963 740.578 166.691 cv
cp
740.172 193.661 mo
740.036 193.526 739.494 193.797 739.629 194.068 cv
739.765 194.204 740.307 193.933 740.172 193.661 cv
cp
740.578 223.207 mo
739.9 223.207 739.358 223.071 739.223 223.613 cv
739.629 223.885 740.849 224.697 740.578 223.207 cv
742.34 223.613 740.714 221.852 740.578 223.207 cv
cp
739.629 229.712 mo
739.629 229.577 739.087 229.983 739.223 230.119 cv
739.358 230.254 739.9 229.983 739.629 229.712 cv
cp
739.629 201.929 mo
739.629 201.793 739.087 202.064 739.223 202.335 cv
739.358 202.471 739.9 202.064 739.629 201.929 cv
cp
739.629 195.424 mo
739.629 195.288 739.087 195.559 739.223 195.83 cv
739.358 195.966 739.9 195.559 739.629 195.424 cv
cp
739.629 208.027 mo
740.578 207.893 739.358 205.182 738.816 206.673 cv
738.681 206.943 739.494 208.027 739.629 208.027 cv
cp
739.223 171.978 mo
739.223 172.112 738.816 172.79 738.816 172.79 cv
739.9 173.468 741.392 170.622 738.816 170.622 cv
738.816 171.028 li
738.681 171.3 739.223 171.706 739.223 171.978 cv
cp
739.223 174.959 mo
739.087 174.823 738.545 175.23 738.816 175.365 cv
738.952 175.501 739.494 175.23 739.223 174.959 cv
cp
739.223 213.584 mo
739.223 213.991 739.494 213.991 739.629 214.126 cv
739.494 215.889 741.798 213.855 741.934 214.939 cv
741.934 216.159 739.223 214.939 740.578 216.295 cv
740.849 216.566 741.663 216.295 742.747 215.753 cv
744.237 215.075 743.018 216.159 742.747 214.939 cv
742.747 214.804 742.882 214.126 742.747 214.126 cv
742.069 213.584 740.578 214.126 739.629 214.126 cv
739.765 213.72 739.494 213.72 739.223 213.584 cv
739.358 211.687 737.597 213.584 739.223 213.584 cv
cp
738.816 211.416 mo
738.816 211.28 738.41 211.009 738.41 211.416 cv
738.41 211.687 738.816 211.958 738.816 211.416 cv
cp
738.816 197.999 mo
738.681 197.863 738.139 198.27 738.41 198.405 cv
738.545 198.541 739.087 198.27 738.816 197.999 cv
cp
738.816 181.464 mo
738.681 181.328 738.139 181.735 738.41 181.871 cv
738.545 182.006 739.087 181.735 738.816 181.464 cv
cp
738.41 177.94 mo
738.681 178.347 738.274 178.754 738.816 178.889 cv
739.223 178.889 739.629 178.211 739.629 177.94 cv
739.765 177.805 738.41 177.534 738.41 177.127 cv
738.41 177.398 739.087 176.721 738.816 176.721 cv
738.41 176.585 738.003 176.856 738.003 177.127 cv
737.597 178.076 737.597 177.263 738.41 177.94 cv
cp
738.003 167.505 mo
737.868 167.505 737.326 167.775 737.461 168.047 cv
737.597 168.183 738.139 167.775 738.003 167.505 cv
cp
738.003 170.215 mo
738.139 169.944 737.055 167.505 737.055 169.267 cv
737.055 169.537 737.732 170.351 738.003 170.215 cv
cp
737.461 165.878 mo
737.461 165.743 736.919 166.014 737.055 166.285 cv
737.19 166.42 737.732 166.014 737.461 165.878 cv
cp
736.648 171.435 mo
736.512 171.842 736.783 171.842 737.055 171.978 cv
737.326 172.52 737.597 171.842 737.055 171.978 cv
737.19 171.57 736.919 171.57 736.648 171.435 cv
736.377 170.893 736.106 171.57 736.648 171.435 cv
cp
736.648 168.047 mo
735.699 167.233 735.835 168.317 734.886 167.505 cv
734.208 168.725 736.783 168.725 736.648 168.047 cv
cp
736.241 173.197 mo
734.75 173.468 735.563 172.384 735.835 171.978 cv
733.531 172.112 735.292 175.637 736.241 173.197 cv
cp
736.648 175.365 mo
736.512 177.805 738.274 176.043 736.648 175.365 cv
736.648 175.23 736.648 175.094 736.648 174.959 cv
734.344 174.01 733.666 175.637 736.648 175.365 cv
cp
735.292 170.215 mo
733.531 169.809 735.292 171.435 735.292 170.215 cv
735.97 169.944 735.292 169.673 735.292 170.215 cv
cp
734.479 167.098 mo
734.344 166.963 733.802 167.369 734.073 167.505 cv
734.208 167.64 734.75 167.369 734.479 167.098 cv
cp
733.666 170.622 mo
733.666 170.351 733.124 170.08 733.124 170.622 cv
733.124 170.893 733.666 171.164 733.666 170.622 cv
cp
732.718 173.604 mo
732.582 173.468 732.04 173.874 732.311 174.146 cv
732.446 174.146 732.989 173.874 732.718 173.604 cv
cp
732.311 169.809 mo
732.175 169.673 731.227 169.944 731.498 170.215 cv
731.498 170.351 732.446 169.944 732.311 169.809 cv
cp
730.956 171.978 mo
730.82 171.842 730.278 172.112 730.549 172.384 cv
730.685 172.52 731.227 172.112 730.956 171.978 cv
cp
727.567 162.355 mo
728.245 162.355 731.362 161.813 734.073 161.948 cv
735.563 161.948 737.461 162.355 739.223 162.355 cv
741.934 162.355 744.509 162.083 747.49 162.355 cv
752.098 162.761 756.977 161.948 761.043 161.948 cv
762.805 161.948 764.16 162.761 766.6 162.761 cv
769.175 162.897 774.054 160.863 773.105 164.523 cv
772.698 166.285 772.427 171.3 772.292 174.146 cv
772.292 175.365 772.97 179.296 772.292 180.108 cv
771.478 181.193 766.329 181.058 764.431 181.058 cv
763.753 181.058 756.164 180.244 755.351 181.058 cv
755.08 181.193 755.622 184.175 755.757 186.208 cv
755.893 187.834 755.893 190.273 755.757 192.307 cv
755.757 194.339 755.351 196.372 755.351 197.592 cv
755.486 200.709 757.113 203.148 756.164 206.266 cv
755.893 207.485 754.944 207.079 754.944 207.621 cv
754.809 208.569 755.486 208.299 755.757 208.841 cv
756.842 210.332 755.486 211.416 755.351 214.939 cv
755.215 216.973 756.299 220.36 756.164 222.394 cv
756.164 223.343 755.351 224.833 755.351 227.544 cv
755.351 230.119 756.028 233.778 755.757 237.573 cv
755.622 239.741 755.215 241.91 755.351 245.434 cv
755.486 249.499 756.164 255.463 756.164 255.327 cv
756.164 255.327 755.486 254.921 755.351 254.921 cv
752.505 254.378 746.948 255.733 744.915 254.921 cv
744.644 254.785 743.424 254.107 743.56 254.107 cv
743.018 254.107 740.849 255.327 739.223 255.327 cv
739.629 255.327 734.75 255.327 734.479 254.921 cv
734.073 254.514 734.615 250.855 734.479 248.821 cv
734.208 243.4 733.395 239.471 734.073 234.456 cv
734.208 233.371 734.886 231.881 734.886 231.474 cv
734.886 230.797 734.208 229.848 734.073 228.899 cv
733.26 225.375 734.073 219.006 734.073 214.939 cv
734.073 208.163 733.802 198.405 734.073 191.493 cv
734.208 188.376 735.428 182.142 734.886 181.464 cv
734.344 180.651 730.549 180.651 725.806 181.058 cv
723.095 181.328 718.081 182.413 717.132 181.058 cv
716.047 179.566 717.539 174.281 717.539 173.604 cv
717.674 171.57 716.725 163.574 717.539 162.761 cv
717.81 162.49 726.348 162.355 727.567 162.355 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.0
%%For: ( ) ()
%%Title: (10.eps)
%%CreationDate: 10/30/2017 12:54 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3QS5f'*&pcSPS%`.SCs%UpP2MMd!G(/R7f5p9Z_\j*jBrN<OY:`r;ScL_A`:7ps*`S+b^YW'PD9#Bf$.U&m=0`Kr&d@BD.
%F##';BSpH],pb?srirbLW*Q@X;9T;79*.Bq,D%&t&1/So1hVi,YUk]B;b"=T<*R%`a!e"EDUQmk:3YHZr2I&N-V=h3;1,jQXrBTQ
%$!eu=?q`]+5A)fYbo!"KddmbWM?)=B1AJ-_UL4.N:#P#P[L&UYg?ZTK?uAA>\N!-iQNS`4Z[RCtf!K=uU\$C<ob^*HGZHMr/uWX+
%quA&G,2pj/I-=5&<McnnbVaeN/9ohUqJ_=Rn#VM1/f>tN64=`,=at,VO5p<-5@GK15<sSq$=>SQf#O3EjRXg*K/!r@b/a&A0k1Zc
%h^uVdd:AH^_4oY"lUjr!651gt_Lo4?o&$-b2EFB[TJA9[<K[NX9VKgIMR-+`nl>_<e0!GZ6WL+a*D;@]:9U>h!ccTr7?N)$%kd^i
%g:;$64lD\m@'V56';M;eJ3TDDUFSa4/cs/0(.M0ceC5NfW1ir_"PZ,^=lm$JbUGbV<&iT8jK,JlMT-CaC7#f'iE8a8I8iTKI'b;[
%4rH30&sNZV^t:.MEE_tn,WLK@\VRQ5K+abu[$oS"AnW5Rb=Fa,C$7iQWsf],o1A!rR5uP&rlXqACUZQUYG\hqmF0:#o#.Bg<90j*
%9;c!ZUsVRbFRa2L<4iCgY8]@be%m!o),/Fr>I4sWo;M`mZkcF7k9$VaB@:j-n&'nc*M_N;[]7?>J#p[@7S38YWTB`!!PqfaB;J[S
%'D/C?,P2^48f?cApC9qddFuDc'*=^FeRs=<A'%sP^L"p4Kn?WJ9OL39XhRikBY,TLn\!)5f9MZMnW=?P$$4g-n;.3o)GH!DC@B0k
%S=hEM?jiBVi/Gn[!J9V^02(E6f"3@:9^21u(nCj<9\90[&K73rqR8M&`^3&[Q0Y2d>1!:[eo%\K;[]#kjT3ZU<m%'>R]aOIE!3`V
%:8C_SBI-I8k*96nieQ6fF<+t^D[1k\iL)AQ1F<jh6`m,jlWVu.kk)K0?dUQLBD+'P4"Ij+,9Pl808gTp2G8e-FdpZ3DFbhYXHdq9
%n?^kJV^X@ZmWICIm^6'rrY0ZNZYdJS'Q8>5VfgQGRJ`Wk(;_I9^ic,V5/i,'G;X$_\<Z!iH!7%@-Cbs_`pcLD3YlrE=0[ILY%Z`a
%-900ZE=+oEE(i9o1r\12buLkLhSrX\CHZfJi't&4.BfpO=5#,Y59$p_R$)rRkj"2"iUG@,8lOl-KrY;pGWe`d[[bs`D0U8GOun@[
%LqHJsAP?m(cHdp]7=FKO2t[r6(^A99Fb9brDn$+0nP2Rl`@9Cr^!]b^"G?5]AKe!4+6#MuT1JZ&as?j(f@tH0R1B)%$8?V'2N7L!
%UA$6EXYKpTV)1m\fE3=7IM"<ab&ej,p-?OQZVA;4%j_)N3YH,K$P@M]X4;P<.'X@sS"(Q;GWel5iI)Fq#"e&bp&9'UWl0+DHHlV@
%6eImb8=;?-fJ3ds%3j#<hK0&FQI9)a1PG^,)UReo9%++4W852U`B%kSY9^"VR=AA1:6[bR.S7qH?U>;[SW6acGuj>^IsFpQ2tE:=
%[0X`I-`a%beP&J]l[q%-KX_VAO3V>M"nY;!9QuY7ELJ)_[f3NO^-k?mUYdN$#A.E1+Veg=8Hi>)mcLn-,]ap%KD@Pp-?@g/L='$n
%=2k=o"4T!4(K,m.8QFoh>^k-S8?t"!"'[4^lANq^.E=#4\O@sV.-:G,EYbM,U6JlHErS<`eW']bMLK;Rh="7cH&0C[=Nl&('ea=4
%74l!IjVG8ZU6b\;CUo,pQ`:ke9#^Sq/Ips\bVuKb]Fcma<?:hIW]Er:I(lVMa*Pc7rM0np%0F;"oXW_WUt!.9EbF!&h<%3,._85u
%Io<*=0+57mbQ89=I^c@,Xi+c8Aijr)TPbJtY.aC[^>0/+?=Ia4$\PN>o9aglAQ5^9[J,50bd":B&_cBqauu7_GPdr2;H=0:7JG5?
%)Fj`VFji&Q_cr"0nth]qouZmZ;#L7UNCFS"i=c,?1@Ub4=auUjb[],Q6Y2-CpN<<r1g8_,ddf`Tq]T<9+6B'/o\XM\V1+<;_2pZ/
%31qCKs%V\(0+UbPon@NOmtlp)mnV6dK]0U/nWc+(hU#H>S@9i`k3q%o_(sQ2'jp,Zl1#a<Aj1lsZGZ2sI3pZ&W]"cQcf\%`B$CF&
%#RcV`adcQPLc!#kAqTbC"8d3tG`fn>-I*/3ghb0MMrSZ%U#5fdLZG(`n1u."Q&aFr2q=K9_9>nqe?p?C`5!QVr`@=9[Fk>D:@Dg8
%a]AiA7.&K'jQ'QX45LG6HckBXmUC1ZkF]BJP;E\2d8AG$*d[LcJ&R1MRK"=sVqWJT)a=9O3V;<X)uj."g[NYGRrrX?7m)0c];&?4
%^)*d&LgO@>J!ZX9'b)7Mps#g3%t^4YZLYrt[-RL76Os3A#0RQ2?X$XBYo0m1L%Ca1;cu)`IodiOi`defiDQkWDnjQ,e+05-o4Hp%
%HjdCD+fN`"EI77QZYgW;q@Nm;e80$j\phO%'R7+r5DKatn=Xl]#8DPsn<nAiB:a^9#9(0[^Hh@th]2G-@FS4B1](6\]U6^o"O%5a
%Vh)t$dV>b-6.O)<MKh-$HoL,ek_jdI./Z2UmtZ:1Zq4uf[]Yipr"5A2V*1Fok?C%_dJ<#Shn,6Id*([lP*]KQ3ZE()4lYfu-P,K$
%2f?=.^iUWXXZp"jIAMu\J"Z-Q_IhT<H)Te9hS4>Vd^*iV?G7"5QOb\<TOGU9JNIYuVJ@b`nSm.tlFJbMlCeHC$rF]2_#1!E^jT2A
%jj>\-edU;?[:;&,>biQW?U]aEs%n/j&.+_%:[**\3YV,.1sA>4@!Kd1N3B"MUQSeo3[ICpU>\m/HD"o$qGgKp4^LFWP$`5$EWo>?
%3au8^bDUbjjaOQ9_+fe1$+Z/4MC]9@K:=uMnP_coF:*fn^T>BHi:0ESbu5BkiI,EOTsV2(-PbD6>s%fc%q[>AMjl-Ci[2fA'PLg[
%BlOgJh\4%S\;B4e6d<2NI-[7M?IWe/3j@N2-An,pXj,g)Pf4.Tc?f9]%X1c4Um?(B(Zej(;GSadm,(8%@N';$1)G.3(3`Vf-00Hs
%].!=O^g.XMahl7lVo;r+kr$iI0$8[;@,KoqMC0c7l_aYen"P'SY^($Crfa6:o6@1QPLoS__0r.2kPO4`T'd4D,VadEX-atpr75/$
%jUT#Zo*\LX=X;>nE"d@8j-Q*Eft9EnkIWksqfb7Zk=Zi]kFOH8n8"ZdCVmrlH!nJ*Y:]\+_QV4<?V>SCZ:NR_l.R]#2&2BuiRJ]M
%m;lTNOfU-t[=q[dGd[#"e_DN=ci<L*Oa2%d*a%phSn?9u!T:hR5&WpM_MgU]?suM41E&-G]_8h7kB5nLo69sf-;XG^%lY.r.:.81
%SERig.]O9!/`_IS>-"Au[FXErWZ8T<e5hi@b0s9b>e",es)&dJ9J`6@\U#k;mH'`9F7<S+DtlSan+eZ%NnQ<:DKYJ'PaQb5b-\ss
%GS80o-_YpI#PZVCL@W_Sr(HkDD\QNqJ"uLan+V2mjQe:WcTL`/el&9+\"Bmrp#Q+!rDqml:p83LZMcF`j.Bbbbe2JRqXeI`^Q(I>
%jo<-TdFWd+_e?K<0%AimrCI2Wa,V9V;`C%L^dE%A0rY]I('Yt2=k`+kL.U!IL1ju0YR9kb_k_@Y+W@lDQ@g"Bg\Ap(@=64!bt3$L
%S0?4+CfEH!YMN6*?:+VG`lN)ngqnOl8C$6]`$]-.pnls.Rsm/5rqd]WfXX!A*MRLmr];R#cIMaZ\,9Np`VJs-8_i>'pNKHA3<*9S
%s";THs4Loj:Oj<4l7qg4SGCI_H-`Q>oSYN_`L60rFZegcbdX<HX*lWc,r"q.^dB3g+uX/B+FA!O;6tHkAsbX.,RPTbp-+0.<E/or
%FkugISMXWQeU)fX0&m%34]"'ui61[5&)OtVWBqom<Go_<ZgH"M51k2TIfCo_DnG4pbuohgS,@BsU-lBQO=`M(s-T_UO=`'<A2D^^
%1\9O<XeVnu.-+ED'EYO?1STA5L9C6E*OQM;3_F2I\b;bIp(`YDn^,N[Fa3)S;<,OlZ@#"05a1b3C\E+=IOoN\;qRIEgnmYWUjUL^
%A,Oce.4MU]aB9R10%D#5d5S5\ks`]Xdj9@MXd1-FlMS)/%XcYu#7k!N;>uFGjng2WD-#5*dsnhM1&hr=K-?/mbG+O4BY5l708min
%U@IgCHb)Z+A\K'9<h%'E]NAGVdXPCV?=p\KeN^"mkNU.+U4K[b+FS8T"fpRLlOM@@CA=4c8:7mbe:,$-:&O^Nd8tXkq0ptLQNmZ;
%qSOYm4K)]YY_h&+@FcMYn_JZi_Ya#cfoM'Kp.5q/f#oSt`.%S-36n`qS+Y^LGS8JA"NU!#,UVu/C?FR9-S++DD#A%=><IK$HTcrE
%'67A@I;/6DV6<eGGkS[E=";4NDt2:<Mh`!lD?5-OYHrS#@bB]+lnah<bl-/H4oA,e`PX?o&u;^//MAqSnsi'(r&sB.1%X8FW)gNF
%&$;P#<]mtSH*d<&6KA)T%Ifu\pNmYXZR2*tGRQ>l6<R9$o2VK4LPOoEBmsVS).'V002+RB&`G#Fr5("HAgn6Ye5^EGdN$1Y,DYkW
%c4@&:kusa6\*.>GE-CofqA@)DO"j-^c.r%JUi4W#n3Y$eO"mu+m_%6NU5uSCA'CBP(4D-1+(L?-(d5je"eM.N@P$e#%nnI&LON8!
%+25M]7GihQoX%qM;WD8c`'h84VL/02nIYD\8]ZOQc-9aEWZ@qk;tO!UoCAFVF50`hSEX\[a[<1Zo*jj^bELMfOhZc%.cTE,6RAS0
%Aif3]?Yu(AeC#T:F6`H8%iUn?#7Z*Fk6uXAaD/b/HHEl,g/h/B%A0"U76LM59[E2@bD`X"@e&5$DjAN*\PN6MQe4YPnW,m-l0Fd&
%T6Y8"mqVb7qjgVl#@>_h;p\J%4mOukih7_AdPCI6[BFDsIdTj8MalrQ9o3MT#7fsCdW_&@WJTd!B$Q?Bq=6khXC(as^=S&l:ZO&Z
%HoYp:g`IqllS`ns>lHZsAG;std.>i.p2J\u%_LBCbd=Vk[G68j()GHUU7,:cF)t1&H#U6NC2Pq#=B'@J8'[it>?#[%C@9t,k8R`#
%o'd3L3NVC+:ph_7(?O>GS/\><;9gc93R?gB[:*$L*Q<r^b^:uYVS>DSkDb:#YNP]L<R5q7B2R!'T6efC2jn=7,C[*DaRE"</=n@H
%1Z'pZqr^Qg++6_0T)?C`6(a&?A1Sd`nHBHEpmN_^hL87Gk.OeqLZ6h]Fm/4UY*9l&T*[:,8m1KYh"K5Am.Pnn?95S3hH(<T;/#Q5
%7Muom>Zt!k4Jst19l.qP:\]sDkC:-W4#_2K2r?ON^R+-^a!PHT[s<4uM+)7/BTZXKpJN>sNgO8?9RA1P'i0\3&GB1&oqUs>R0pOu
%_sQEDig6.Ed/dTCT81$uh0u9%PZ=nr)b+16YlBaTqctpjetN2MS+#j*/&B+:H;kpAH#+&(E5*q*YTCH6nk3cl4e4etQsZ@IV)/ff
%F5@B-2h1![Lbm+TTjo^]\OAVd`7$A];4m]=hRU0Gl65i/$3*D)nUAQGdH;ZRg:L)Zh)8I%V[+7NRHLAZOV9<eUAqosW*n<J>UMt4
%r8%,cO0OUiatqoGrp<;(U=oJa1V(LN*4IU5l)W=W6P+00HGIr?%I@o[0^28\L^%b*C%1,0)dhfU^Y?_(mtY&P*uC3&euL`0:HpHd
%=7K/>H?hrK=@+Wlis\#V=V$O!!rO6%cA!<N4ZIc^;_oL35?S"?@cQh@h#D2,SAu-1il;792<jp":4@ZQnQU2lQQ#D-IY.H$5ETXE
%K2^q&[.tY)QfqZQ>h\0tZa9)ABcgpb)>D:)9U?rKks[7B`-H<X1EX1<@!)-q>?pd`gm\XEkM]8WT69I,>M871kN!l)B%p%-YCuAV
%4r`O/Itqk.T90`ZO:9D3ZR*KGiSbEaYKQPajIH/ZI"QO$+#<AC,jeg9g)M)uI(Kc0Ga*_V.fQj];LaUWOu\WKbe"#3b:dh\ANoJs
%P_Uo>cC5QnI7!n'!\<Qi9i^Rk[*ET)k02kZ0]VcO(@N[u?+og_IiQ?).VY)@I'4;eVV`k1bbZ88Ld&tj:p]spZ\/'Q1OA$(k"3`/
%?[=_cPW8H'i*o2jFfSht8RVgGrc;5ebU7+sr[u9dnaR>4B8Yqh1[.?oA"7Y^Q++9+0.NLl<*pGC/:Yt\bMT[Z:]:XJ8j#aFcfnKL
%q(X,rit:p2C:*Oc$[K`gfRbL#RauM/o&h*mD=X**I[8U_nF%7j,nnp-]OI+)?_Z$<epSo<9<"m2hcZiYH^sf'choW!kdjeN,G9`o
%1^nd?rp?'<@m8`VqBFLFJ;E1Or!(RrljkP4[)8PZ%uT=n1e!PApkLRW5Q13.Qd*k9SR)==UtrG/0[VRfb1q82=*m+'cTcB<q%ETa
%,'(!1!%ALGP\HO10.;@e$^m_L?F9-AXl!L$%,G6F1ftiPjO2Z)0Asah#Cl`80:N?:(W5agN<4@Vj<7^Xa.Cm/6PK6Bo)EOi`@g76
%JA6qHb*jHF(pM.kaQN>j"+&j_^k)J4&dB:%*u9;`988I*rBIc.O$G(p@-oa]Pl"0'"B%i&Gd-bOAHU;-j4g7u"TVU@)tWU\TE*&.
%=STA&q1i"=jLnWd5E*<,cg.X6mdjdXV]20FH3"mJQs,e;]BKg?SU4DFTH<dC-/Bt.e>Wt),!3&,2eR`XP1IJlqO2lf'lZHO$>T$o
%:ud+'2u5b<'`U<p5"oorT"VBq_\S=]bO?_?03<hQ4,*(:]Xn?cSIL9C3m7J>cY1USqtmKF]%pATD-b*t$?kW=;u[<=.87M.oPa3]
%H^So`qI9a%HO`/`=4bUPa,L0c&lAFQ5]=d.Ja^d]e_XG!X%dN7ONkE[1_\0)k/7No97h*J6<-2nHKsTsEt^>r<g]("0d6n_<4\s`
%S0klC3?rW;1`p./DCSZCIef=H`:_m"?Vd:fnI\o3VMi^JDZQ&]%"8Y1L:jA9]-Y3(r/Wk`mntk%:Ce9p@s"0^oOeC/H<&GE&$^o?
%_2UVl.Sl'"G_j/,d]'3/8?]8>e'4aPOnjIQGA8U$O3p*Qs)'>-0Ad6t))a<Z<]":nQ!15dG''SIZ#AVkT*YkV!u^Yo06Rg@gJ^?5
%[D63Sh<6X\lZ?jLN0DT83':SDW&,$o4DO3_H"Q(1o^MMAf&+B:IO;L6[!PtTqaF84AnkgPda,iqRVGWt.(r40K)3]'jSsN^JVnS*
%jN/TOfUHAVN8jrMD50&T'q.b(@DQ'Dk%lQ5asa!YCURYm(56<e\%NbSfi_7MX[NG`Me@J.Ia@Lh-s^d2g95^,.A!AMT1sl4lPd@_
%;gfrt,qXKP>Msdm\)r`aAY7E8PmjKfnWBI-n^5(%6fJuDOX?hY^04$L6oB*n2tGId5I$'n5hbiu4Kk5r9ua^4h"_TpU/cTsWVg\A
%N,li"pAj+7\)65g^:)Hj4"sU>Y7J@tj3%DCI//fV<BG]0^7tIJc^1eJ4f+t=>0kLSBRuFNB<1_dBMrRCV0!)4Rl'dmTrVo34#L(l
%1O5Sp&'(/kWZN]RQop9u<]8JS+-2IW%W9Q?.lna?$t6b&MV)+OV;KCUAtBB<@HK?iN66Ap&u=jSVSgY>d9#P@gVCM*O.=GkcMg^'
%m>g<G2s1fm7`Sc/L$mp4Y981?3V>%*+!Y7;=#H++Fs(*sCT5$cY@BDZ@(f<V&LueSf\D9q1OWQ<V/rJV\emSVSMB^DY5+>`:\2DG
%Pci&doKYua_iYpVj^Gj2$53>24TOSl7e*DVmLB*L#IkT&5T)n3Qs=;RD.'J@IKaNF@GZK_@f-BO5IZna]fQfTePUd?R&$e6OG/n]
%Z1*uY\ScN[L,QgfQS:HZ$/hR1r5kWB\[igMG1Bpn=T(6LZ.s_FgX^)kb2neNXip,5*TF`LIfY>@iKP$^+]$qi:q1(BCP.DZ_j\?V
%1Y.)0mT>)i)Jur@%"CeNl2I'Z5<dF'fZ8d#md&\[)]EBCnO(S2$cmViD;/H+GJlf?I'.NqB3hmG'=D%g65FQ^^'bZB;r?^,L'F1@
%HYr8@dtcTBICH\Ud]2u*Rd/'8D9)7^GB'C.JbLU(Y'l)EPFTtEmsN+(20R[`h<dVq"8kJ)$IMU-h/)h7-<4?\ji)U$-JO2:T."RK
%S)_E&Qnb_KhQPiH=LV.(*t:4aEa[XH`tDE%l(af<Z.+jC=@8(EO3h`1MM"T^S'J'%"/Ke@HA_-=$ol\,<d$r+QSC9YB`ZtR^'o5q
%U;&nT)[8L]]C1<F3'23N2@amg'Q^skALiT/aUL#6R`M*@8D>YDQ6lHY3fnLIZ6-DmP!FfiVkB]`T=h&G)qj8M+mB<*>0>D0LAKCR
%H@kdd$tCZ@@*11>*qhTP9)mRZPOrD.0_&F(k[bJ$::DQCH)u:gqJFSK/=6W/&o&G!0uda<35Y7"^71>aGZUFmg-9ulV;/inTN)kj
%FP0YgLC*3[WG:XA[Fe(r2$CO<$eDo,f^?gB/uH/qEu:VCI+MQ&@f1J;8%hF*Ch\B[kC=N;6n+1S_"Frj<3nP$K[lBa#/-8c0asG8
%//1Qd)oA#]O\p"Z5m&95gs%@pZ.bSP^kGN5'F9dmDbLr0$lB71hAr@'JgcKbbth\[/B'6;&`OfnGCoGfPKj$W=#>:,mZ-Qhk+[A;
%[jl$'--5#e7]2t]`phfnF_^Q'5H!=kE6B*ZcT\I"Ea@u=4f0O\T;WL,hfP]GO$dMF1VS*W>#+@_YcsCEV,\L.X$P,fI3%%.c5/ZL
%BXi@YCr3KRQ+gT6V=1cQMacF-d5&RE''$FX+h.h70s"9W3%+sfn&\$K$l,r;kZf3JIJg[o;bkeo!I)!W:%,3-XkANC)Ps%VH^CD>
%_c'cAYuRZpOVU_al+AO;gmI1u-%`.q/+#m`/)jpbQ7cVE2%?OC8bP!:NpE_O;[Mk/:>757nDgGiGSRWDJob9F(cNg?%#Ac!WdfGM
%VK[R@/RV9`H_f-$h5PhD5SHWik;?3Q;%k<&:HriP2\j_HS"HoCEC:mi]A.:J,,@[&+gHi'2lpZ#9u6]]MDpjIbqYcopIgOI=l!1f
%B+a-$%(nbX"gOeF[9Ca*MX_I@\?-qK4*b,.>LIgl`E$%%,M\H)X(4!5",d7&7Wc''J_Mg-s1feGf7I:%U;uW-g?M*VqD?;&DmJDd
%O>%9[WH9%a7.2"1037b>ru0b0d#;I7c&'amnl;O.a<plQ:=U3"-kA/Fj>:0Eh4AKjT\Zbu^jj9)O/DRBh>hQdP^nCld\l:YC5KLt
%#>6;)[Ib/gf$fBNV.5Y!j`7C`D5M3]XZL_f-HW%;06KLQ?Z("V`o7K=G2_LX.22'[<_HXu>"(<W:(0\l<Hf?=7"V,u.S11V.F\UN
%17)d9kr"J.JeV#09P&b<dQ^T@-K,I1;LtEqkB86qTUAHbg&8b@-F.pGf&eoq)^9LF=8M/SFgSo<^/d<VI[Z"d$FF4JX]75B;Y"_$
%UgZ=YJ[[6j,:FqAooU!jP2/8S2h0O6A\EG1ORQi18V*02+j<@<8Xb:Lh%=Eb>,Tg5::FJqbiQ)oQq;#"$l;e0,t5')epVbLeaOWd
%h^VF>):!/ue0sb4J%+6#+"&JPkZWaP5OaWu__;)37_@*@L/Bk+@<=`^6bpK904hXK)^dJXZkH/3E_JcQeFb'Zmm_E19R7EqA&4<k
%ntj+CDL%o-7^&t<VTm^<r1B/!G9\]IVVnGDKuK'JC]UeF="7rTrCHYo9C8FA\s.<<5.=7'G+jcQ11ak_n6+?#'#OuYV_`X`6h:sf
%C[Y(I+BiO<3rEM9Lj8\gGAN^^k+^n%SsDeSq.:.WFpNT!Y8s(Ghc3TER@N@J20d1g!UQ>pm?'TaR6!41p3/A"`'Nk6/EY4+\#h1P
%QngBA=uW`Ij%%b>N>KMSf6Ne8-C?&0bTDRCDe$%5+SJQ32*.!5XV"FB%BU'gDQE;Y=9aJ;DCa2s,07K-!p*kXirDHD`<T)H0W-L@
%cTYYYNf6jOU:FJK=SmIp#;WWTGg6b5G>j8=F:Iiqhl<8L4&r[Np1DekJZ[gBFhLRS'qc1?>55'JE#e+5><\<t[P,V0f"db00QC!)
%S+gDLog=N-M.?>f)e!\1k$^.(MJ;bSAibMhj:,C9ZL[OgcmIkmBGooXa(U'Es(Ig-aaA<drQuAf4f)-rFCN;e.=3f4o$>AJEenN.
%RL]hHhEnKB[+j%`aTb9P4#(EcI3dn$q`5hXRY5CWO"+'I2Zp@?qW(7IJ(Qb]Yn$Wk;`^oh!k-FTD1#Xd\D]q`D>Cd*0nn'HU"0Cl
%AC]+HPe0`UieQY@=(!'3-<Pr.s*J:5XuUB5ih&]tf*6s#)(hIqC,+Cr3GD48>!B'"Nq9dqIa\N03tnuOIUCF:M9;ho,AhPAV^po>
%T6LkUA402&n308W+8_ejrIGYskR8do=16Z^4bBWm1TH':BjG)\eS'N:7OD6DXVEO2\YHR1`R#b??;)e2#C9om:#NiM8GkfVSRBh;
%]T%S+1/CCnI[E&U:()GrG#2FlKNd_U:%s[gV)*!iN#o3O`&`94oYAusCP-,q&,fJ$?NPSq5k]PU.V'>1]J*nGr2n!oG9Y$U%%%?X
%>=Ea[j?lQurHIf1[p)%,!.'#`)N+3:Zd_l0h:8D!OHefK<Hk]b_?QoDj80t-OWFab^Gtk^TS\%@:,PU`@,0L5n/7^M3ZaSDR55D%
%^lEj\SORL#(X?@8H6gqbWEgI01B>ImG`2*e,DIWCGTAR_"#DDo?2Frk+/AOQmI'F^A*XbOg`Dgp3S]U\N5*#9019.,9ou"*CqST!
%qa>@1`.[&io-i'6S<(n1;Rpf@0YX%rmsVhq3Z`3,IS)K''o:+<<HCcac^B[b82\U?l[#i'5FDi"knn$GdkT-H=uel@*jY*V\RUkg
%?;C<qG!9a(:Lqlr0Rc^ZLdetOe;I_l-/fnmN.juDo"9%7*cuE"rU1'h5NTWQa.\`:BI&mm:)8\#h1c60DHL<p[%4j:h#1pJEOCm@
%cSD4^mhUZ+(skr0QZNR0]:;T/Ft"@`,dUX1:I.!F;9>`krn6RbB]j\c/ZRTB*jMbYiC'bgd&_0;>5k:UIrg#iW@<ttZ>b)V('<6q
%bCdJADLXbBY]^ZFoZL\jc(%<T1rfbJWge</eMaDg=S+&J&_kuTG@TH=Adao]7<AHgNHN`De.0fGYoQRk,dlIAE[h])X1_^f=1O"g
%`DgG\>J*&]V-Y5Wgg,.\hDB9/Gdbu"L\?Bd5Ek)mY7n,9g,1FFW_u?`Z*Q$?E`Kb5^OM%UPEDofX1Ii0+(IBlb[YJ$)ek%)Rk+H]
%qE^qbb7K,6?GJO!e]2G[TuZepm:rBP9@h'DHAEe!X/RkFH].:XY?dV2_5=idVqR=8Y?'OYfh0hf#YVAEnNo4^1,j3J<;NhXr43q!
%Vp##6HEtgZ7sErCltRqg](ltr-.ab*8[Z=<GBFUu8'>J?JZlFW\sf[h9@MCV,'L?TQYl-SW05M/p=I0PcpL$h/$-H.!Pqn1W6W78
%6M0Ot(2oJiR\AQ$ka'kKf[WB0X'9/qST:#+27@43b&ZdGHNfoQf2V:/V(15'E_?EVdjMcniCu2'Mts5A_ej9;QH\b"Y1&jqNt8`o
%Aab>gSsV@+69A86qe`2EGU2nK[8qgR4^fRc@_!;XL%?(cC+ms?$=QRnY:;PiILMaB[Zm?5N'DF9_.<cIi/,ZE:gb0@[$9[nS'YJR
%a*P.7SN\t%PFLeQF#N0Haas`S:nbS9oHodUYO,L,?172L/$GjH7%2D]@D9&ND_D2pM'HX@O+T%2lamshV/c^Yq\,rA_J[Hjp,V),
%GV-soWRjtH\omq:<g:#RKM]6Bh`4@nn&:4XE\F"k/t^(?%#ZSH(E[Pt0W9#Y^3SE#4'XP+G=Yr1)M?]g4jl?tKm%7-WeGPKYS?5"
%Jt]kCo\,NBc4%mlTBX^&K"F%c`&aIc-+A;C]hbFLnQJE_$#XR6&r-<@b0=ACh5n(gAI96OJn:[Mh>V^IV:,b9Lu3r:%OfSlBMU#o
%Z"UDO'JCO#qX:sT,#&m>D<]r"r!4gI:OA"5nPN?[04ZrH^=j&Dlb^VH\jYq%Usr.PP>_"a;.h7'7iZ^5%cYf)1srk)n4Ns[p,J5X
%^5@g0"\bmfKt$2ar9PkPP"A]8,`4c<<AMZgo9OXL0lf6Ekecc\?uhs-gV$6"('D/nRt,'X+6m"oTWt6.>3A!2Cfm^KI;QXSmjMK[
%?>]BGg.N_p%RmqW&Y;Cs?)*k<\sblhBD=[:"9[>p!F8QFHaO/<I1\jn3sk9qh&Y1LefMW)Z1.!MDW@Da>\V1c01VunD0J-Q:/G4X
%']R(FUDCHkAsH%n3kp5WG!]1)_;RpH]kNulR8m\m"pEhMe)eU(WkAHg'O<HLo]lBY%XdC+>5U^*Dn,>_Ps]MECRfWHhh]43D[S.!
%`oYTbK]cH7>WkaBhMUr%#h`<S<T@jj6QtD4PBdZ7l\#gg^b$9pM_C';C9%=Y1km38C\S*eeH7&0=Y0"C,L<R0`,Cr/Hb0>P5)g@:
%A$)Q(SQCn45GAija2`tobYFT;P"uBA[>gK/?Ta1I,kN<2K(?Jp(of"OCE$OFWjF)7%o4hAdaMct?1fkKRGdX7P!2G!@ea[K1nEL"
%eC+%S]t'`iG@5d%bjZ_gQ,)m+!^1(WN$N=q6B4(H:Nsp"B8%VJ''<0`ST%'Z_l4%+q6$8XPTBDCLl[X^ZW7.4:'VH#bM[uiF2XU9
%ml;Ve"9l8u-[R&,5\a]$\@EKQe>*tkKa]FT/4sLn/48P:jUuHWgoBG;bqtrr0[*?K.#OW06M:Z>1m)d%-6la&kdeTa!b&(7b`80]
%JHY^2Pcn_.N(=#9)%hT`#l-?FS.J"h29_1g6J(-IREA\/@'Br>Alt^QitUrLZ'_"-Y8k-t<<mFo9cL,S*cqLHEt2IXI2UR?MjfM#
%g,3Rj(1_JsG<e#0T8hmsLrmLh%NBU^.!=1J4Zpdan90tIZ/jAr<GgCt%+(h06_`BU-ndkUB#M`W9[qa)hJjd;W`mn_#VX<4?J4`"
%`.prP\;i%h]Q>LX)s7Y:EK6$-:)Sm^/>heo/!+%C#SJ.?,HjcQ34+R[<MTuir0=YkTcA!i0<2Ei82u[b,Om!b]K0qA@PlnkAI_`N
%Sq/Kk]&:_5qWB@jRHImr,8R-Hr_WIVk0T-*iFQ)NiQ;j(b:#:j.Q#]cAl8_.3TM[HBGh/Gj+OW@3FVE+@_!dSmrFgUgK6W`<PgF]
%+]:M>16QWFM<XMAPtN.d^N&[Q'$k=jU/e^^(OFbH3gAB&+9#6c`8m2l?#s6R#N_Aa6MA.g(-bG=ng(QHZEE=$DkKeClti%i<sBj<
%bEj#bn_r[UFk#)h))jjO5CC\pO0?kaLUQo"\^EJ$SuE_\-d2l'#iuR/VmM8->ZuM[=-/Za/hM$#;7q9UO&OU#DIH2]ha:#,IS6-O
%36Nl/Ip=R"/<sT\GI98(<$]a?`,FXJRFLQqF&I?"[\D=78e"\U%3!m)pEGJ2'a&Xr*i)M2L0N"H#?.<_>I/a]_F)sp)@(Vg=ua$1
%Y&M\S]g)XC[[+"MDNe;YhX7fuY@1H@Pq!6ir^^Wt/Yc*_b9;@+6ia9n!UMT&9\m1"e?tK3295!RWU9jMa<0\LGRV`IiS))T<OneE
%-\8'c..d#B-`7Gl`@=jSBng(,\<G<cci(\8OW)6f['[O9bB^+6)*.c$SOkQP9%l*j;U/`BOA.+r['SJRA7&g.l#@r08[nOLb_k2?
%C_bUU>i*&Y`,b8oELr3l27Lh/WtE^n?&>2G(9TEl@)`+QT_$/Q,rYUr4I%u\[0MuhBQJd9CS5L,o`tM?B^amTg"*@I#`(3US7nFG
%+S!cZ#KFB8?(%TYKA#o.5&_DEe97[f;]&G.Ol:M:^'GL.@oiW-QaRO*;n!@J,Nkd!/*5#^Td[pTa1"]<@b1LqPFof%#F/APc#/;n
%?2A+V#9niWoff.Fi`4)*kgT7kh*-t.Hk%bEQ?cA9NaasGgnm`LkiH!dePp%'I48@ek?m8g9B?pif[d%G6]?`d*/5J@4kf2:I[Zi_
%Wg!(0G#4+*)7sPQBZBC8'CoX+VALJjROW;l@B(3WG(O=26\Wego6N6WipW8]hX0@Cq^F[M"'kH[>\9MI4kC!5;)Wd<;*Pf+W.\[8
%VlpOWAeg#r9Ijh"'0uf>m5IC*D;@Ti2G;ZOXh+B$Jh6:m]/rRN>42$/QcI1n,ar@m(tOGiO]*lPen=H%h&"mhBLA`06J+R#:n`R(
%^mc%m^4+P*e\b9:[XF?Z:M'B@Zc&2'fS@Hp^9`)8*0SELn_?I-etJW&PsL.Kd?N?KbE3c3#irJq_O/hmnRQ@<^3HL;M@fUWQda8[
%lS2BkVQ`@VhDA"(EBY/Q:RC[!E$U@I\s]sk#'a3p8aL>c?H%i5(tt`)I_YiPoiNRmpZ)(-XiG;G8ZIBlY;]99Y,o[&:V0i(2n9Ag
%>95CQcdDU?kc2k`>8&8fo>f_]bNe!fPZL(%Q.iVOI<`/6_*H53V\PQU_O5O6%ZYp+QZ?5@0S^<^ERUiEK\iN)TJVWi@;l&02AU/Q
%oR#RK4<b_0'r>t]@j2[Sfre:HDspQk_C8*k>K\9lTb/rT'KVp\!Jt8DhmD&0fssk2k&rZOFGZN*m$;SX_0Aj*nV^lCmCe)S\k-c5
%U`8(6X=1s"E-%+'9j[3KBqo(V)f\@uhl!dAMgU,gApWpArtOri0VQcJlUUh4q=#QVZP$eAO:b<u@j-02*3Z5SJO`JjDF]kO,\\3M
%WQ]GqB</$:lJDJ7E-^O_Q$arbg:D&1Vrd'tUuLZ[+nH[U/HCKuL\0&2Y>!Z9moat`9:$81l`eV,8Vk'@(Q5?n+dLa,3qML8VO"%t
%3R];/D]^<>a^H<UN'BYs(s?B40U(3AnkP\%gooLhVi,Ol^8T0/9;2`'-E)bL(`*mfV1R[WB$j3)TM@"Dm5JK9HYkkl9'@jAFj(h?
%U9W928oV74Q\W0`gmTToXo**NQM&<$=f.<EL%6L+\.)8j)&OHVYX&U!o5"CVLc]l9a#5OF:G]iAHnTqr935B!mN/!$;O+,l3HX6]
%HWp`QJ(CP-]Wp^aNL)]p10Nf,_fWYe;r]`8Q&kQ:BgZ*eF"a)T9O)KfOWNeDd\$s*J`-69EpFlkI(Zdsk&AOi+e2-Qeb..0r*md6
%lLd1@K&W*#Ru-S[KU"Hfat!814'/6@K>=%u$ZrJ4e8]X<)dO\S['SH3he$=smhl8c.V8MsRl&X*QT.NJ^k12TYfD162(uSH*]+7$
%Yp_fha'Z*:OWuuH&(/UI[MbFt&#XtP.Xt@;XL("W1Y6@n`[:,`JPfV(&\K%C?0!+^/f"N13;bpum=Z_#n]N'+l2`f2*rmh9^,NJc
%,L3D=0%9.BdNeT&HB_c9GOph#!A$3X4*d5\0#7[k`NaL2CI]*jXH2C2rG9AW>('qe7/NOLn3[:sqY'[E"9IW'Um/a4_njL3UBF3<
%kduq'\]c:s5\ukL-fh4ijNp6[,S`>?n$nU+:Y7KZ)o55LZ6O5j.ZKfjc7G`j>e[MhnV!Z12m)LS`BKKBDCuC`r:cZB%d!(M27%aZ
%+M/po<;-55J04"F6E+6J$VEljW[4*,d]4mLMB0._*:k/g)m[[F];(20o<WhWd(a,J#8k1=au6X[`3D]D[\sS%Q]i/0E`R.f]n;<I
%j@LX6(b]qld?%mKX.1d[LZ'\,`RX:p[.9Ac8i/o9Y*eTiRO]c=5J7);CT`!a,I=ohn/\VJ@&hNqaMWur8B8'7:66gJoX2#KP?I:^
%eHFK"5Ucg>\Z9g".*Zl@ghA%9-XL0OYuJ/PhFelkY@m>e2/AdG`HA"K18]/32=%`<5/Q@10mRVR>]OUk\=Gkg[;RjM^@;UdZeVA4
%cM=ErUU'V!4!S?G;Zg`,\[[(a<9e+&SsUj>)XEp<hmjJ:=&$3!!F!.XM&!%1&$b,+4]Pd)#DCrRD`@9h8%+/=d@N73+Hc)H\G[*k
%i/(?F<&SQs`Boa'.<06Bc&h2Uj/oh5d-]dT"A&0jb"\rV]NIiI+$I?7e=EM6J^DVui.Zff?#>3AH.Wb<94t;3LZ;JSWis=Xb]E5-
%S;FAI`ShInJ_5nBD!\_V&(*ERY"Q"Wk/"m)<.%6'MXg"3NF14*4IP6JD#`T"DUW0"@S%5Qi9^b3b"UCTGMY+FI&t#0dd8!kh*aPR
%UZID53N4i5)qn=qggSZHqQ?8]4"X0Y;?5H)A2%%5E@Dl1_QLu]nR*]mnonR5j_u`6lGq$:juK4\CZ/6i'gI8*=pu_rd@IM,[Z!m_
%"(t^!(Ft-]+JreY-9Y^.nA,OiZUn6,;`0p-Zk/)qMpiI=0&ma;mR>cT$T?do26o6I[Za@&4sp1]Q>$h4\qFE%N?9ufg>:T(;6"`5
%?@^_r*?O!"[pOs/FNeD"pDj9;S]+lRkM]*"kaWa_6UJ-j%f?#Q62'BH<13@N*bs5cE1*nGJ]V59Ale,<W34H"2H*-F.cmPD6uLJj
%eQXn+,"-#h-Z4u=mNA:%AQJ87X]3hq%$=$.fZ(D^q%FBaQ&>nG8GaibHl&"O.Y(S-f$`[ZdZ\cra;/?1o-g&QhRqP`V8eq%Qo7E#
%q=$d*a]^j6L1f_ud&*??g;6/2GjB8+Q'&E&UNRRn3r0o-K'afEl=@\^Tjmm=EoWA-g;-DDYj'Y3:dJA?7oDjN!:O5tmk(H\V9K@X
%Q>k+8>N"Yl.SB^Y'=j[-*r2QJM`ujlnR>CDL<?k)L%n\NM&UFl1YA6Y$bII@`hJN\$*faId](:@,D1DqJf`[PB*6bJYCId24$`C6
%QC?+#*ou%-X%j9,WdH)u7p8V8L2ZOJZp1)5WjaJ#Z<Y$0^h+,I_4_/rWVQ#7cu)/hjgPr3*,^n#chinF1mAEn,q&sM9*a*e?(osO
%g\]Iq*ZB[g5kCP/YCL_C.Ip1%iU<1o5&D(-ibEs[99`]mq&H!KFU<):n:_hQDBD&$a>!-RT+U1V@a\3(4F[*&CGka%02a_)XcIDE
%>DV*UVqQD8q3G?qeaVO9hG3j[AjQ5c4mD8qXf\YoOY?RA^8].L++@/7rD;jC#GnkoQLf7O%rX`0rVgnGc6"@(rO7-#Chi;&:l].P
%Q-O9A:d#-Gf]]<lhmoW^X5)Z&D#5d7PI8WV__:9@[U1CspZpEa^H_LVo(tAsQMgaTUEs`Fn@A2EYJL6H)*\f#S7cP\Z/!1):pN:9
%FEk'2%f\(O#Dngo@.%^9NX1%!lL?G30@n^qg[n-!H\?=4jDBL6UAO`ZbX=)?Q+-:#RCnMPkA2)DX=rPn4)l_L>(p%o?$qQmmpI^[
%hh3p-Lp_=*8q+q"X3FQ_Sqc%&\:nkC<dAYri@_bKe)XHK:-3Chp(H8;dk?&dlhEetIq1aZe4UhQetbci]a9(-J,m^;j6eQ+K'bT%
%Eb[&0"$nZYk4Uad`)\i>0>;R11?l^]"8lJT9UD'Smn('[3ps=MKPQ75/90MhJP\JeY;<./HbuSEn$f9_/,J8WYLW>e-hbgl2"s>F
%9OKjZLBneeGZhFB\C%fBJZ_e842@E&'(S*U9Ro)Bi($&tg@5il)k)c![#H7jH\P>%(P<0T6tm:sKmef+3/u8iM;,Y#pdJbD23H`&
%E+DK)OkSPg.(.[Z9s5Ho)[D3)i?cn(Y&),7DRG-jUB]2=Tt]L0/f%De)qZF:oeS[tm$St9QgrYmiH?VtP,#;X-\g'[bc/B1pWL=#
%D)I?6+l`5WU?sFk[]R/5[0lme[b,u[MdT+(6KXJ'OIUU^\/OAFjun,QZCd=o[X36'EGVrlDE:StH+o"G@JTgBYIgs"ejrJI'0<m+
%)S0W45GFi&SKG]%3<N/#LolLj;a#rcSM8oH/_QQB".MoQSEu4Bero5MU<LCMJKQ!,#I_cLs&.tJeaH:>F.g1:Uu/q:eAIh0=TStK
%4>-G^V`/PnNGWrn.(^p65d@D7r=RpQkVXXNQZ*tr6]gE\,lB'L9($'Z0<IEUqZE=e;u\Td.f!.6Yi=3h1[K&Wf=%X\s8'HYmgl9'
%L4A5C)Y&S*EV"*T4^Im$&*[/FU_F=8[qaX"T5*N7rH)+?rG8.9lt?3^JtHE+3V!QIJLA3'5Bm$'m"G&T)=GkdIHc7P8'Bs0lM\>q
%f:mb5n*&!1J$iMPa'*T+T@i!kq31Q(B7G68Zg?$!hdZT&Q1fhpHe&]%O!-X_F3;Y3s)^I>o]K;0XT,pIfDL?h$0T(!DD(lhrRW@q
%NNnoFh`^F;($L.W\J5!<kPBi2V9!TO932o5J*!Q@m&sI`ErNYDo_a\KlHnGD^4#SlB9<;r>P\-?hqMZOQi(!_^D(?/:6nooJ^pUi
%qT\,".(N,*KtAig9@Se2?"3&^-7lLA^MY,F8Z-@i9@<.X_p[D1ZEk82gqG?dlPG8ObgS;UP^Ud@9=]hqZ_b"N$+G#MT=:+=HWS1_
%>7)^'M!I],cNX@?;Q0sq=//o18\9W^RXt1m;EHO?>@XYAFt!Q[$D$:o.^raq"LZ[#+C#Hf"#P?T"o)(U'TebU2mDldXTi5NYBPQI
%l-WYlYWub$\a.7Q+THE+"cBLqiP9:Q\/'=RgIhPnYB0h\Xj@Kh1<6T&9V?NjX9Z>;n_3Q^fm\'hD)5=!%Qti^Q`93=lS@qDCbEmA
%cYq!Ra)1is1.AAu+0tG+nk&&6?bY1ZmOhj:[L\ZG[]]2Eb')]l\U&:$?Z*MuqoeB`6"IqVmGg'tQ.;AQge+N["tB>HdTR6/n^,G(
%l0@+tJuTSe%dN6MQ':7ai(?:o`)^cBH8d?MHK/k=nu<!HYKnltQ$0Rj>kM/4DKW'Y3F@cI2VY:&\.i6)cI;Ng0eJD[RahN!l?N!_
%VU8R!Y&<[1hOPaQ<Y\6e<bj17^Y2:c7ooNGi:Yf=pH#r&<jutt\?!Zk>4arRYa.7,\@([+TsBu6f\9cFf%/Sk:]:.3>#i'AXYk1Q
%kI"V@[ZB9aD/\%@*i[:@l[g[(YOB1t^%HIoHF&&%5'"?h.]fd;4=K=ab#(70XsYW+]pC]b$Eb])Ec<NHap5mjDD/O"e;XSAhGW0;
%516A4DiU"4_&("=*7X\>\4lBdQhZQ*e6?T2Z?dVF&0=bg)uGCqA)iYV<]A<*%;"SN:nKX<](3)QclVX7HH,Q)-lB$KL)A$W%Rgnp
%8tj`B<=PL:VY&7.a\=.Y/9P#\Y:!3ne6BKq@@>C5k<NL?a^e1+GJ_AuB"FJZ2UBP%^uk#oT%ts4Yj'DEWGrqbC)%]HnB,&c/8g7'
%iV;ZlFnf(B)W<4GJIT@V>b?ZgOc+Oq?b<'WTu?n$6s)&*O]];Vb=%Aoeup<"\Xhi<EdW-Ld>qK-f$Y/BZPC3a-uDP@!5Ffc+$OP4
%D>2\b]??tI/PnrdlRi-9U=RrV3u!#ZBMeT=P+dn^q#GP;93kJmF-`_-YV<bR?,oD79qMX!khSS0:1k=,KYB92L+^kFK5M^lYF(S6
%/^?&^CE[<98F+K>o')INfn^V%'t#/>Dn3Y%)b^uMXM>!HfHgK;al^R\&c3t0a4T!K:#_JAcgVL7gZg(Ph!U34arT;mQFNEDjW:>V
%/pFiY]A2L8NK"u4?].ST5r-!f?Z)D<q/Wu7nSam9U9LnbfG>h0j\X#D[L,@kU@9^uoQ=GaPAaOAN<`2ij^<et8N_5Y^(IRBR"e`-
%(`QqnK#-U1lrr+'4D[[2aTO!Im6sesm5Xeh#L6e;bc&R-3O*n\QI"%Q*Vi-0#0W?V2RbWPg[jh"b`X('fD`V[X]gM6Upuo2>8>?%
%\e4%e#FT6T[FU<Q;ieJ&jn`XBg/Fs9*GRaQn&1Bmg.o@gcL*+/6ZD4jHM=]ahS2eQmVPpT];J97]_d)aI(\2tin;#iKB(86DQ<?=
%GC$oah0Zjt5o&$fC[K[NE&cP'h`L3fm[pn.q0aQqRG.,:'fi^FG-D^>MsOWKYeK+X<LSnjh#I$!LpP7;(/J"LC[p`EFZ'00VUQ8p
%4,qjFI,8cgNn[M\nWZ!=,hef0#`HsKkm!W91V(20U";@u<_E[!WTBUu,pf.RG#LnDO\"d-\fOYT?VUsmXjoQdSWGa]l,s<]4KWHW
%D_l1\YMDloX"J$[e])0tFOob!ppYmf#CKX"3lhM$ELDI"Q1E&5>:A,aUu^Rs@4L/K*8]2oH\]iT]p@J**q*\#_;K,&o"LX<^<-\O
%UL9]S4k`g:TqarZrchDW;YQ4'cgJEc]6@%P`tta"KCdT=\TOlmS(i@'n02MJYSQ-;eZ\CJ:P,tRl=<[`,Ys;a)KYJ<M#'n7@]b(t
%(Xi&Uf6lNK[(5di3fBM=U1^GQME/:Ul>N9-V&O2qVQL'mg&6\TrjhdQ481s?qr^ks=?8[1f2l@Jo4gf%?EA),WJc2u<P5i)[e;AC
%VjBo-/Tp`lE3OI^.Qj7*gI;.j6`;CJpNMMjmIdepX]I)[DNq=+Q\kV"mE<+.m/4.fN&Ij6Vd9/aUqV%n<F&>6?3_,I%[OYcf;b1h
%GLFX^Ff2g;^(Chs?Z44Vld;2*j.q&AH<D#%;id9AgW+Y1](7FUokqC5gV57VDB!fEF>.o7=1]FGa)(/-^@G7WHO0&*r=@!bmI&r,
%eD>QE5=Y.Ji+)D$]C^>n?H>8J79t<#'Husfk.dr\C#[.oF6)mIrL@/k`TQed4nKBJZMg,#Mf-0ih=o(7EjkV5m)Q93Q+L/4T_,Sd
%o2>3)T.aJMY4AF77d6WuSbDP2;Rt/Nn&r^j<iH@o[F`QHRHdb?=8,"G4/-sW^O);Dojm]har\9^X(U$CrG&)G@r!X5Anu%5e`U,2
%C\[5^Gq3(ED`+``HDAs:\;+Hk429Rbf35(49MAfIHo_(-GR-06gU6Bc6XJ:nNN6#`Cij%=MS>9<Qh9#rXYuM`RX<<3:8-?g@PUHU
%[<6bsQ!U4->3.>Nf@Uc^4lbaf]f,/P]q%&KSH[aC_XgFT#l0NhR5aAAO+4de.SCdH)c8]%aQ$:`Gsa^X#$7hqE1^Q8!1Vm0F>k.@
%RcE1_KQjr/DSjo\[MaHYgO<,M5t@p4j(Wp6X($KMHh=@oXtNN'UN6.s:FPMM..Yh^n%U;3[$LN`V,&aV%eHpYVghMh3i5gg`GSXU
%ISR@%c4B5k+>DgW&=JJbnBVEKVR=K(MuW^-p6gCYpk/U(ZB&TC+2d^>L.>p[o]I=^"<2hF+kInI$_V.f:UaYB;nd+@M>[k8VM\3r
%J:9NH5tA'_T:7?9BjLXBPRejg4u?XQ&R"W$k9#pANrRo4q"'RGT7:\LOieA)TFReBU.B8\l[ou^7nEcpi+[`CRc+Ff5qIa,Zm7@W
%:L8"5_XN.cAVLtJ2[[i?Z3s_.M=6J_eLSFaph7foik']9I$HqT_i$bZi$^'A8Nc#@F"gN\jB0FR6nfVn38"=*[-Zg$2T!g!87EtJ
%5k(0i\3X[G/4M$WVM?n&Ld\S44X&"aKJXEp8aYJ!/$ibGJ7TM7Ck=[0@/uRI(H*V\_*f9f6n"L5h(UUQNR0Gu%\n%V<b1S,nZjDA
%N!HfFMo_RBA?^SK$-s23+/*qH*ap70K4p^kq8<Ol$*5(87`uB9UkKskL5LM[m%m!90I+J'7%(Hl.+1@'%VOFM7+!om5iL!+i#h'b
%NK\Vt?p)4ALD^eEm[Xq6ZG_S8Qk:TK8HP0ND,a[C6*M'/c(:%eVC,e/91NYm[eW5,4?>fsLd4&GKUI@1//P#LkN+94-R&tdaUIYM
%L0J-+#UAlWR(sqQYa8u.OW<kHk/G_"E=@6?o+%/MadtIM_?g^:(P,6ij=>:0k@ftZNT'X<b?1LG@(7LX7"o0,:jHFTj/<2/iflQ=
%(GD8q5q\=s>lY'lA8Es@!`6]cA8=.4Oqe6n['e]mOhj.^&jM$sK#p%.V/\7N_GcE<$X!To_4^q_4t#+>Q<=^+/V&iO%OY),3Iq4r
%A2f;Q7`0CO@3Q$j6',p%O9H>X!6QLB]WM)?a-4mpqA.2-M?8_PC#FeXA'uosM9*OD/[_fjA2ML?<",N/&R_CjV$*qd'Zn(jmD&d6
%Yf)&q3J&un?NN*O*Q)Gbm,4fdbeOb:/AP)5A/6L6aI3]#U-LIN(MJpMbfKqMRV8nC0IRnYKHo3`AC33mSn'8o;O$PQ_:J_NA2thf
%Ni$h0^j'h"4AUfO(_#TDZ1=j8()TYa5QuW;k$tTJc5&MQ#[agXA1>StaDcU$CUd/l$F6Iu]bC!gKgA:4>N?K=/r@IHbWD:A@,M;$
%*g`#-+YXGp("C^h5EG^%BsKg)E3,n+4=s!<Ig"NDfEG"T4X;rp"'H#E"(NX@,N+Y#=^i@)"9b=80q>@R%,*EH?@ie0h3KIIT`F5"
%LS:FJQ@U`(5eY6kcLMrl>*o[eL=7co'6p;mr/O%ip1WH@Gn+\]G=%S59BKoHNRT(MM)ZJS8T]]./;.^Y]T1))6SL88N#d;b&1UIG
%SBq7."O$jY6IW7-1;VtpSb)>S[%RQK"<PDrl_pm-!f)&?0eeURL69l("G3O2KF1J/Ff`Z[)gi'mltDLB_9]V*L;i>bn,dEiEl'_k
%57!H4C'[:`$P6_N>&9p*T]LfZ6\bQ4kFl^/'-Y18K>IB1$tnma#al63U:4`;#6l4f@A$Z6"#IIlNWtX`>?M-:'oBpi,hjGt_#ORE
%`UGc(W$3sF"LGD9_&S)s`$)d0O+nX),;>OJ=>pYj%pTnr<]2E89_[W[/AVCJMZd?Y`$f2UaLhtZE/,!d^d+DL/'3k\68eqiPU&0r
%[gG;jA@Wkf!8^'U*HB.%bV"E=@!R<C_dKtS/cjB$H3b6`.orNaSWO$t?_C7Oc8#H>\pXUB-6V'b\Bn0)O$`^c9(rlDN53MR$+$uN
%</ccrj!U]R5^(*VbSQEJ*Z9rFSs=,\^rurBW.7X"@@Z*T9a:0'QrOddJ<&SVJ4'g!i4'-9%"nmu>q?S=<!)(t46j'f\;'K<3RE$t
%c/H%fkUj^\)5WC%60'':`NVu.$4=j9iD^rZK+(NUs6InEiW_[E'Q%VG08gSN:anBX%48F(&@dLg![N4;.;+&9-\\p'[WMXN#&KPY
%J-?/IN`!S[+9<7!$V1/,:hG7J=?LP?(`A@jcET/38f=6$I[-fjHZ`YJbYS:PaURsh@O6RNnL.AZ*_mq)O<j=^1?TK2KeEW!R%33k
%A5)_@mQa$Zl5TlC4b:Wf*(aA%@#cdNY6,(Z0M0&HbAfso_Co:$`mRU&!#,Ja,TWVCgb:Q&c=%d3\7&pX!7V=mQl%5"VhDj-$1bGh
%$AHS6/XrLYknm5G6'g[I^gd_WP9u0[/HCER_FpUBL;P0A"1$ur<"ue-ls6K-9%X`e,_QKfI8"LtSQHXSTV!tk%)!\#\Y09A"c=1P
%_$c]T@$]?[91[)D-qfK\S<B*)P@7i)1<+^b%78.r!E4LgOHTgVcJb9!AN<s07><,q%tYsaZ?a=HY:r3i!/d:M8V!mAO>3FGGVRLf
%iun^0f#`OG9Z6$9XpCO("7)X+L;:S]S@mS`?jMJia#7's201at3/&_5aL!rR-ecu[,h"P:nqk>e'3lg@NJOFAj)L``i;ge,.L$7b
%%"YD]*!bMSEI0`u6+!r=\\TIL>f`uN1Vf;FFI/Lg48NZ'J.S1n5Ri[6lj:j<c>dY7<dtZ0+NOq.&/d&"`S:`r";Ep@PXfL*+]ALS
%@>c/kAWd]o@1VV%A:n"jFashr'PJH(JVaKP,.s[@i(,,70U*551Sh<#UlR&WgF>ubYllb(OS2m4*"GsqV!7e2WW[?P*0#Y-dK_ZN
%5ri.=`"RVMK'QkKbBG01"[ln*pia*f5V`Dg!V5P"&/brR8ib\20JQh;ddW3oXh;>gL9h\O#U.Wt6TF@i5WSKu&jmn"JRIVn!h&1E
%JI@jJo!TTq1*l62\20]sA6*5-OJ4F*@E\0a=Jd&l,`&[IE+_#j6rF4R7MmZIK8'_CDB6Nei:JKi+;Vfb6,)=-Pi0Le$plB*L7nnr
%W[hV;Q3dOn''ooiH#QY".k:kE!#J'9)<,1B"GV7iG<3f'/Q>VN42ZVT:o&[GA7h&Li+-QEM/<g*E,hu0"FET=lj7&4'L%-8L>d(X
%di`6./4*AfgC=OR"Xlf*2,HW"QP!r\r^cYnAS:J18Y?'F%+uRgPD@WjL/<nkJ98RH/R`th\-]6$+FOKmlB'+rW(35rM6%YN_e%W$
%,<-?:`\*2p$eP^2,GV(qWX\V.=^<5CcO!CCDNcbu'lB/s^]4B<2CYo>6QiWR;uqRkGQMMU=o]n".S/KZ,ggUpZ4-^u@^3s!gYs@/
%MhK%oj7l`mls!%$<mFJ19)LSBMRDG/`!D'aN>(!GF5V'aE#rDP[^F8@l/O&Y+-9g]%R^L[k``f15b&C%(g%-\J/rgX">F#Bc/I<Z
%ZlP,/M6Kd-gdSYE-@eDX">KHmN4k*V`Hh[1K+JNL3(YGCbZ,YO7A(:%O@7rV8Y?,]-=Ep_(D=PiOtEB<0hr4//e;'E,-XA7LbjWg
%;7pQU8\?$\$+inGDmPJ?KlB[/`[TX#.(W^km"cVANAA'n8X/$o#6H-Vb(E//O6/eV"m_=>a+7-A;eTGfB5`]['Gt3dk%V,*S4G(%
%AF'F<[Rq6hoL'[jOC0?m$bI]D#Z-ZeU(`n+<!a'Aki!t%lkVX^baIT>JU(+E837bZ<L/cnK!T`=2bGjV4@>nh6NASG;?4Q]jG6LP
%EI*G;OKAeQ3!d'fKG)e-jEqDF;#G<F%p#PuD/$$g:al3O$55;:*Y-"\";nSK3S=id_m)cd$cAp9Mj/i$.nBYmeQL)S5Uo4UX-4#D
%DhD3>6%jfF*>f=d8-U`aEgG?0(_3GeB\Qk?5m<"cPW^!!5aW21+XkNh!=\9h1)p@nm;%8!/8R^$2)K7#%d=89OC(b-Q<A!G/9j1+
%EJ%i(+DF>5+Q*5])=kZ7JWq&EALn3,`t;^r$2uFV'"5?mT_k#ud?8<l//XDedf>D<L/H>M3kbVVRue"c@d'V%W*X!kQ?B:8,rB_3
%Pm6=[aW=jUUsCF0DAWl(rZ01=_l+h`Z5JE]"@9?"7?F-!(g(>3U/hjNK0L.<N577dR3VA4j+`]T+qi01ULH3(1-[P+N#pYiqh*R2
%4bCQpeT)@)`"ipN',)ch**+;+M0@i.i_bl<Yh8GcJES-f!`EQ!@GF,O"D_`@d/n)!If`YmO;#giPd>*K/AE&6^<D6(0LHUCUWM!I
%`aruBP0qqB"cn;CLfURG`\SW7+c%b0BY&4<)BMl8*)2l5A4tR"_H^*\o+R<SMR;`3OYEOuC'X6Fi."1ZC(;31`5b^,Ya6NT6PYd*
%g(Z!e,Qojc=',OAbfiaQ?m'Xj(^nPQUd,KejcURH.(U:9-rMM:QBf;3-&SrC!nk@I+]U4k*J-]#VMH["Jr,1E6CK\^SAdO>[_OX6
%XQVJDZQVcZW'CE(0Aq0[$Nu<KjkN+tC!#KA9k0WB`1!fQ$G1Vs?q(^TMI7,6ppB;R8]/J?i;q/B,Vic1DK^GE<.qN^Gr,RV81bZ+
%<`u>Ai1q5Q)NjNj8i!6$LW->_+s"T@h?'shfsS^g$^"8kUl4&FN:O9>MqJ/eiXke3KV;\?Weq+>IGdA!M]Hu"Gmi,`P,1M/(aUSM
%BZU[H'ZoE\4$aL\O9AsiJM94h^MBZ^'Xl+KiY%h(EYdO`(_11%!3j<O=<`4<FMSM1">iu4`Uc=><cq.qcN,/p"F"X)lMq@3J^cro
%+C?uX"^$`2$"<PT'2BuLf'5V1*`FqQ6&VNj&1_3&$QsCA2B!k!Ao>\GGg&T\MaJ?lN+9(t+kc`,Z06q@"E)9h1Dn%YarHFi<Q:!;
%W2:!eX$i\C\KQK3bq7=f,[e2[%!SdeV@mW*D^lQR!K*XdgmefenMj*l%Ehcj6fU<2oCrL[E1#/aqZ,bU,pg2f5ahHL0F8u!KJ?gj
%op*NAF3,>\LG%/TY_WH?,o$G,4/c6`!I#_gGc.g_?q(;N1INbNK[DoR.RIEl/K]%RoJTg?637FH^:?i)LpYCY<>TKi#1aCE3MA]*
%&Xh?Eg*`BsUNeRDVQjdS=>c^]?`*n&N(9sOnqf8ra9(*-_Xh@P!Zi10hPh=YXu1_5RPIN/_=?%q'Vbe!>>6j=W!fJ`_=F)(RSAl>
%d+Bb_dN=]g-j!d0Js&f6?r%`4>1.4k#Zb*QTJb+B.29&RZ'^LLP6S:"c\5q)eR[#D!>TrHPa,L(6=Ym`FcZa4pBNr%)jAoiJfSnb
%`$(4qB.RX($"-Ldh%hQZj*;"\,3l34P-M>9!jSJ-L/L]u=>S*.mu'*q!1X_G<uMSVbROZ@-FdhnRWoRe!^S!MftBMP58-_#=;?6\
%ojHlI5hNGoiW\U>nDIm_J6mpbci4,1[^%G#qbT'4+-T'/Z5o6)7/O2]c-`DW6Zs_OAm-BDJ<_Q>($-i")o4_I,ae9b!B(dT>u%^[
%Js@I(?jS=8R:*j54Mo'T3lRPf!AHen]6;i<Q`N8/GZ+^P"&B#$`q4l`PL,l\8VX(A**,47q1f2>1i4")i24>8?m5"OPgu/[Y`OOS
%&7/nh/Ej;@Aus9<J2s[."^hP7&0Ds<nQ,:u$Q[m/,r"X-%e;KuBgqo8$qaEE+fJ`nEf;>JpDc.d6h!2QU^I?sA.8dA@\*Wf9uU:Q
%Ebs^V+s%q[-Xt:"Jg\(ds*T(B-s3$D0I>C9n-5jZp.Ip]Fu.d!j97Z31u1;j/g^ncm+(C6i@+qCG2D`HQB=keNd2Eeo&STXf%0p2
%`FGeAGftbKX`IiCm7f>ZQ"*oeC%-4J[LVV3G"TW87Lnm5R*h9kB4U9h3Uin>cLD`,3LQCsPFBIE8mnM7!D"o"669PUs5O\!"2uV(
%+PuZ)N("K"j*,Oe`.SGKH)ZbCie'"5>QPt/6NYG`h+NuX`r_[JiV>K'(TT;-aH=,O?^tMLdt_G*&s@3S_8A<)``<<?!+6Y8$PN/@
%o?m,(*#@=o=WIS]8fAIA7;N_n(5r:#+u"g$]EP&]F[\"1RO;J#H_J5_#V%,[X35a1L*M[[;`K;?Q&H\@.n!=!f[44pFZ=F"D)Ql4
%d]LOd5^3ECG&OTVM'3RgUQ/KZ>&96B&+L,Ej9asf!B[hW%qa7SR;9Wr1iMb%08<Vu.:P@Sai#\KN7j0l(dqkg^hE'!&O\PHXlc1P
%@5(D.o.a@71DYcj=+\fj>0Tfq@4kP<n$Fg4aZ'kC"F.Ql#EaTs_^$eY@3LH9lt#GI!kMRXm*9\)oqSW!!-eo_.,Oj]/3Q<:Ft)r2
%TcdLY(GtL"4CQ,hMmhZ`ILgVFnId)t$hbl!$Ld;ckW1]dWf2AL!Po0j3L<,&J<%UT++A0q!tVhK3c*;+pJ#1^F"D;pc5d[:Xam\9
%`Cg$c8Yk>*E>LSX86>ihA)e3jI]!,B"0r#lo\s+Pls]ArnWKdVVaV8Z:*.t/5i+V"AJe*L^dA)5o/Mn_0mNYY1K,EHe*(?[!XI$0
%4ToS3,<M$,"qsQGA.Clkr=SeJi3GI\blA0KA<I0PGXiHrQ].hN1pLicAU*>B[6BmrAl?`9egFki"E_f=53@Z[&Bs1>!Q$hfU)efY
%haJB!R\0c#EXQ*^VECAOAP`d+]Tf,Zjr];r2333TFeb)A*&!L2p7rlH_19\fbq"-\&T_H81$5$"KLnQu1>"!n?6(.R;@DO(3jVmK
%"Ciim&HX2B4l/:49JH<X/?\NG$-ufuVus9IJaGh!1'lq0ArP9fTO`n'K>@_Bfs:=1ZqNM3_uQpIA^S.r5bPK#Dk4o9.^i)_ZPk0,
%_ZV&i'Q4H$qeW@a8&>hW$8t<cQG]AF!bi,fVSH]\c!^N&b3i8#EK6CU3"*m&^115<PQbJd%Q$XSR<-9Il<KQBH:U/#afuU2<rUao
%!Hj[Pi8EOUnf1G%*&-%ZFu^l?<7>9=,a7Yb4XD\I'aHWl3S@:hMoCccK-#h,N0?fm'N6g=]aF#D\tP5\nH=uOXhiYj"\2:U[N*2p
%@9+bCOZCuE+D`<mfbIZ1l9Pg'H`JGXd1#'P_/#s7lIb]9A=to%F@d(N@sJ>2i<^>S4*lM@-&Hkj8)W3fQ-CX?BAPHd0O)I?(WWsu
%ZbsRtr.q$8e:EoS>FETM<JeXnc;l@A[_T3YX62t%aZ<mqTH'\:_(g2Y2=YJd%"B,6iR,'>*QbC>3Gb]+X;K@S#`Tb.CHN+/_X3VF
%'dV%6,"e#8bJ\!<p+-?'ina37bL_l-9[hSF+g?KW(JgeOb*G)D!=(neQ.]X*nC.G.ZWQ20Z3>u'7J)_+0XJD>&sTU9-eI-6)b-ot
%S>AN%QGk"WcXDY_isdJBIi,g$+^nF?n;!Ab3<k]ng!*dfFHAF7[lIiP6P2g;Lqn`f7''Lfb#n%N[\?W\gQ43^@(s<sn..:*;.f5]
%@(^2i,.Zi-EGdJ0ps".J%YqjRZ(eNhX=-,"e-p-a!o0MqOtO#H]f*,7&IU\?EH/GHj"W_\@fKPQ9;5o@-B,i[KCEb<Bo<A-)XqtZ
%:h9)+ZGU#fUDD^uE((_XNJCo%@>;QA6Tc#D4F@E($.`)f(R,UsB#tS[9j9:`D]iQ+:O8c_%)9bj(?===c$QFM_VnK1fa]6WMN&AW
%Bm=SB\nNG_3,@@IE(8l!+i_/RkVsQpC*\YKUV`>qOF'Q2*Ta6(5]1<trlThT$dk_h%;[k1B/5c0nFdR63O-DPi>s9]gQL]A/8>_n
%IFoHGCtEK;$\<<gOSU9J/colr`^TU:L';V^9;4#G`,ZOH(1%K'H;^tTi.K98?GJ5738jq%E4c:.f>k!Vg;D1@et*LHBsWp$s*VMj
%c6YObUo?:,muVPl<T(U4fj`*X*c^\m--lC3HtLY`&a/$*g7OtQ6O&1$0BVE\!r'++*Aq#4rQWqI?@$8\I$hDd5SQ+$$:!FK.V%VK
%UOY.$qt-Jl%+dg1$;VXZ!'7=<p2mGn&Er=MF[%7;M8M\^Aq$ij]POR\'G8IPGceC2#-#lgMII`H<:sprZ%<=M53#sjm:Z5%]1)<J
%%mK8B?uSGkUWl:"N_-h&)3N4LhaS'93mKf5,&bP#]$GjH4-q:@l&#-<OT!S=^]>N+C6mi#\$i/0.3ru*0,^<V"a9'M-0!Lc[U4B1
%%"R36h?21uT_AK^FK_UPPGHXqFbK2T(?o]")eh=q7db`.fTC;nFMK:laR_IafbAI:b5K/!?e0#D^h0E#UA8A<B)=6%l!N<VnL/08
%`Q7=Lj]e$o+4$c,(C5A%]lk\.#]$$`l'Krg</"B);b#qPiqLRYq(6"5qcSO)qE8>Dh30?be8OMpjHfA;H/b.$=+S*gd=u_H`Y,*C
%>HDO7KE>Ysn.O[A03MR8D^#!pn&oOPrQc9hh4:>2XEB\<lF>Gq3,`ccm!@P(&mr6R+'s<f6ls]Wqi"&GNUYehF>luDYAHk/HM*;n
%-1C]!:&/-O&@L-.?]tiDm^9]rZ7kV`ep@:7elUc'8^7OY,r9Uk?"dS#S^,";]a65IY;F<K6?_Vkk;@Us%VdcE/tME(r4k@gF#8O_
%M_c]Obdb((4\L#UaL02AoW4E?H>e$hT>Eh<lC7%03_uZ:!n2K[J8=:$E$)iOpSXAJ)A;K5^0`*/ST1k+=E&#6PA7Ph/<QSScgG9X
%P:sNAaNr1*F4T<m0:`ZPMO]WdrHis%demGGT3O-f\,)=i4G3=X9d[-=.MQVZX'"WsXd9O8nJ#'@`nG3>,HH+(^<^_d@mdUZSQbN4
%&77BJXQSh.-bmf"h&fCMVCluOZCd%E^C%2]T3lHR48DkVM/+-:m*e!uG5Y`V.pp$u2PK9^HVJZ]=8]$RB'QtQZ"!!@9';G2rR]68
%)L7iZB!ZQQG(;=5[>c\urdCF/HMcEH4O*&EUNKN5kY.u"mH_d+rkJ3:C_AHT:RRYY$>@1=Sj+t7do"-1**4,PT@M1fU,fap]>#tY
%$5h`801T'?Fd'!dU9p!5ng(ZOb&*_h0ik#lqt;D&!1$[pZZ.MV16sECbN!bbPtMRQCs9D[#&tDq9Sq*d*lK/6^b0Vd_(3l[X\aDD
%,pXN/:.9$GlRC84\75?eP9@3f>5@(-#HU1m;Y,Ehea+."mFo4lPq+@f)^:)tO]ArJlmaS4Khif'Lmu6-M!)8p(0MI;U1CR"Md'hl
%Rj0H8?*;I-3c[9B?5EA0hI$m'2D#CUo8D[hfYJnrWD>O2_l?Zke+TOgq9%-`iiG[+pK,FVXjbP:q&?ef>l270FUt*c`9]-M9<q3s
%[Jr+HaQ(j%@Q^MS-M"";?5F9+Dp,;Y[B97f<MBc*\bRh[4'Bu.'4^UrW5A9ecU_2"X#LE$n+:`!\?"U42U2#c[eHfkE*":8_Qof#
%_f8s$`@K%B(f%^X]"6Jdei(%WClMS,5U`nhDQEiqH>tmF"_3\IDJ<uQW_97*$b"Sua<jC`1*:k!7W(D9Olgm]cE?<#_&aZN5>#&&
%mC0DqFg;Y26l'IX9#-$-N#sWWX+A`#H*pX<Ea>H])S0-!1u^>'4VoSmeMX@Z#&uq]7lKboqoFTDe;p[fIq-i%<D0,+I,9!@aZG5f
%E/c'@NlYP]_KfV<302eRN<I(mT=rASR8?o)k.E(?cVNHM6=35f1edb;1LpV=&8aMCoiQamC6\r]cE(C,cnA/ME6BH;F?RW=,da+V
%cR#aAMM@SG#6IZD;;Q^YnWk-h7jV""@uo2T`n!CZGJrSA;/V/'Qk@T>\T<\)dbBn$kK-[o$'IOlLb&A1i^,IKPBgNr135CVeFWJO
%]gqN`ofPmE_gR&OZud@Sm><IA9[uZGJ$tqDY24:=P%36gY9n11*4(hd$uR`=M@l*%LH.Z_(2EqF7^qqNNa$sPkWC/EglA>mCT$W`
%]Q>_X,WjMlXt)A?)e`RnK0ei21udTVPiQ;cJe8O=Ed$BVRCl"F)rB8JUlkEl7n1S5(&oc[P'p>X_I8@h-\bYBOCBHIGdMI^UCQ]J
%`uK\N7?EM@C-CSB"T3tTRl*Gq$(M.OFk,Z:.<Fmc"+7YVQh\m6`"Q]KibO[ZQrg@#@Zfbs/jCOn'$@8[o\Pr0FOdn`S_a5r?Mj[2
%icNjr4Jr0^n_J?2'QqCn\B_IGKkZgg2=E>RWF<es1E,l^UHj)[7Vg?=f/Q+Gq95hj\@@9"c;O]N'Q-sIo6gJ,6s(WUn;(Z,6#f.W
%;U-'^]4j5C9I/_IWE?gc5c*'FZ:gm)17*lnM:s.(LU@:m`GX#X,hZF8gMHEfO^2=(T#9/-'1$nb[HQu'+u'+%Oj>18JC$W+P'T1P
%`S'%&B:Ysh;8Ua#,p1g7bNi/ZK:ek+Cpb'H0r9/&-U_-B^[AZhSrL]:/4!$$G0VC-gp6W6'm3VFD3B6mSP)\5PLs)[?[:3gNV%\F
%I\#>WRg>GKT:?"IE00B![j+sJ(mGjQ[VQLn+:qp(JnBb0/-JS-D27^o$q3?F)m!l5KEV=c_k9>Q$p\@Td<?%KTQ@7,h!!$16QCr?
%L^Uc_aHlAUoJH(e+PV75Q`MFuqhYg<cCcNE6aj;(=,dL>'+D#)%CBZDQ.(-QqpDO@6M)g(j,kVnlk7+T2FRtY_;^0<,un;"MlD]4
%0\Zo[,/+hO+.Wn4+i?KY'98I0*[2%!4`9>B<^LbbX0-edM(JdL'gB!M"->N^L/Z+FD<Q5N6ZRh,4KMR3+,X?4JDCW6;RB?m&s:Z_
%@U`1rb=bfOF/-m8jTc!V?:'s7e="beS$pCj;E"h2*"khj)u@'4(-pYsV4%h9^]GKb(Q_!&qh@06Ad4pD?EO:E!GB9LP2ir9I@Deh
%bgNeT#jK4.eO^*f4q0H&OE`o=A&Q]U6Ks,tMaYC^Q!4=9Sp]!K,b'U5#?*+k#KTH8Njf"^b,ZWSiW/71BM'N.MCCMf3_15T<QVnu
%#EtFC^;6@;8Y><KM%:42Cb'\+<hnQAE$RX2_3-[Js,_D(&efheFf2u@g3(+/(88m<;YZ?5SAUa%B!FtNZ$a5LgaV'a7\Dugdsrbk
%fl7<_f?-CT"*W+<^J2M/Z:1%a9Vd<5WGkf=\*HdN&b'HQKE*p6g%Q!t=(+&JEpa-Wik1^&@.88"7B_u,Mu>R68b3S3o9G+R+q'H3
%;m\neCd.c3+WEMID"+/YS-D$TlSW<<'Ed-AS&O9q#=^g7:nWfD;mrXMN$_.$I(A7ROt*479AX)RCQ9PqV)^WKfWT_1[k85;(P.Nf
%CH.cC??"t!`A4IP:O#@`oO0tg,3,^7*')AjUiihGS]9U,#.C5u*R:fblrepB,S_?d*&Y,oct,;MhMfRJ$3R-kk1?T<LTtrqeZeoN
%!8ckT,e2?mk@8/ZX0?%YqrOK*8ui1!#3Z.B-88$p,pCH62Ts&K[B>&nf,FA_j3gtQ7EoDu>0K9/`0IUoDW7n"6r!uT;T5AJFOQ<8
%1J1S13eFS&OL:p'_-rPC%Lum]=lq'/NVkGeduiPIk.otBDI-MtdF:-CY.q,bD^%-eF!R4YNu+T3g"BRM,*P>`TJL^<5jbq86O[4?
%^,W;@(,qf)cGjt9M)1og_#g\tgSs(!(rB)."F"HcLFB;bI8rPq,%%Q`,6U*E7*hP9XJj@N_A0KfD^l"6mO=U.ZT:16&U/mF4gscG
%:5t)\#<Io=`D\]fUlUQh*3SWO_FKlp2+WY7]%"ji\u&E3AH2k2`kh12#gs\UjO>SFO&dY?Me(A2']Q@.PR(o-2H]T7N!Mc*,PjN?
%0H(276=guD[.ss128L1+gWbX:!>3Xg>6:+Q1h>C!-&D_78A3D>gG'0mj^9.?1`h'R,(A!TZ6CRa;OH57rI<$]dL?P;;5n'`,?oV>
%1l:$/KoW+28="kP8ce8B:V>b#/.,hk/<_2i,1-DDXAYU?@AiFsE""ir`-'#"^crDK0=nkZb!FPg>fU(BLPHshBMA2pjE'V/[;q(g
%R(S^?0'&9anFbZK3-TCN(#GM(/_"m(gQek`$ntCV@"FFfXA9lhL7`RMJ?\+RS**e(@Zk5]Vbk!Q:k@H#Z3]/=)i!@(HV#"KGQ[^S
%!W)$Y\s"Z\VpuKn9,YW3$)_A"Ou9-O&W`M3,jLr9\eGe&Af2*"da/e^*%IZ*Wjt(I+RE32oT#N;F)EtpQ'i:-KgaPCN+'k=UWE?I
%2&#0HmqBB;fGJ.?^t*b41!De'KS]q-Bh5@j7`.5g,EGOX,Ya]%0]C%6-hktJM/3`'7^e&!(B>69q"-aurZTkc,]Z6-3LlhsbP:Uc
%"h\Mr[a1<H)X(:KN8;RFWe?Jp:a<YiU6B?k&B!`G*)Y'HfW+%X^=H35Y7?3/O;0\RX7pMkS*s\fj#R(5+":G;5S9_DLEQn_**=[4
%,#6BU=*T^SE)idMN*jTYAJ<(%VBL"`V]7>*Q]+UMXjBT0jXff&?fgq$k66)u]3EVtCqT?@?KLr=[)G5X1:=gIYNKPi!pAsWEim<e
%?C.s1Gg\iTbrK1mkK9(0;=Cn+fms6dEY>8_Wh;2/JWWt)PN,Kg%3`G1UP@(UkT-H%mp5QrlH(fGX_=8rf`@.2mP49P!0>JB%ID-u
%mP`/!]FG@u?tLYd&_pSg5A-.Yl167I+;#$E!3$:3hfoK<CqM%QBcW(!WOC:AA=K)@d')X9Zr;,pBWZkh$k7.=T"9rYIkT.cO+Vb1
%cY&olPR<6UI,<)FH'p^J6tF5.i'n8:'!c;NPKT\3@LTihNIoI?^8.V_Ri.GpdYid@_\L([\P3nL&!=0SIU6))a_m*64k=[\h6Q!5
%@P7&uUuG.6mUH&6nSjLFi^K73O*-1l[,)Mg,[UY=_`6UH`g#-5##9A<qk_9m?:/MDX"MSZ*55'Y6FDFAc%@2tLa0G4n$f*^M23<H
%GEM<N(ulL][W[5#GrY&5AAp7Pp8;[R?6`e;Td-$28-=+<`:%h`QqLhEK<<+?i-*^i6*/uUZJsdd17:$=qXf+J'?NH%3p3<OHAE7/
%c6%t&P8@UiJufSZYo.",44u%;-]k.V![AY)bnNB7npe,._n>>h]NVUP"`P;mEj3FES=$7!_ng.8h`7o\m/Z:b=a%bTgI\1\+6jDY
%M]u-[2^4Efh@!RIH5'Em?FHP<1;,e`BTdF5Ya\MD[k.1>RToT:e4pdXN-Z+DhGZ8?PFe@D4tm3Kl#,0QKT\l`(FoHmK_9KLbcHpJ
%G^YKpElOM?ADSa:,en5r@ilq).[;Do:&,+dTM=3A3cpkTJb7gY,D3(YUb],RKcbrHOZbKe%)`I,2>Lj\^46Ve(qW.Q>lUO`8^A=I
%Z$+p<3`IG5\&.+^8`->q8uCX6k=@;@m_Eg-NSA>jEfhLJ7o[&nLm;L#Q!Y&+EX<'iL)0$WqVFjJkGEZd0Z,)7'e#cs,e#D!<T)%k
%@G\jBTSqp[fn]pLE1%4s1)]"S[b'',(a2SMGR[R'U$QA?3_LaYQmt(^G'?_eALnu92c^G*`cDZ"48E<lccKiR=fe/<[a(%A3Z_qi
%_mI0b$]]l/$kU*'DD!E:D0AgL4:B,fM[L'4lI$XP]W]5MR,iY(\=:0J&BQhmV*OiTM4S6^bGbP/5i4jXX!B<gq$UOh$(<:,`G7pG
%9IR%,rPN#R#aeeG'">Mr8(qC@rF9i;L2Sf*%%\1,2`.fZ_kO[l66,Y7L<M:LE1G7m!Ic6i<;mQ,,)=2bZ^eS4313*4N3YdWVD5,,
%AG.uY%^OZQOL/Na"GE6,ptAF?r8J!g!jmR>II9YO)m#3BRWidc^LWZd'TcD#2:7U)WKoMXb=jEsMaVF+PAL06&js7@#)6Ba,DTAH
%SZJY3]+<;3X):e_(8JD4fK%5BB8f$H5K_hJ-Tn^\7b],]KD?M![MFt%YLi\;PpPbe*"edAq>&fa]7*eOk>s;]B\W9Fp1^\i#MEq`
%H/fpqr$=8oX5[=UbgH\\KC!p)nsmto*R/mp=pRrFpe?D/(+p$HURXPDUfTLq"4EIrG6YWM\`I""Z`Vj'%p&*Xc^e</`&]Ro1Q(0*
%lq3nBI*/YoKD9SNZ$F+5L:IYZGomlMal*<c3u/8.#ONp`,F<b&AQc;]#Q&9OEl6H+Q[-KeE7F"I-AqaOp%@#_6bWem+pA;4dT#\[
%il)(QYh_CkY>#ke,[:"a5@tcB*[HTa=@A(^%^tq373\.6o/ZI#DZ12oeun-uVt8"<IL[Z%R,@S.8i7uU2BIh]2ZXlj]6Sut%O3++
%(iS(<BcJ*W/&*,/7[<\8&#CJCL=``V-sJH^%Z5LT"T!Qp(d[9OYmah@QI#7bNqRX2,`6h)4kcg/>0WZ/R,jV#o?gq)1NnQ`C-FBQ
%:m1KOcTB]C\"N<T?LG3-DK&W/dF=d1"+@qKq3',ef3J28>"(tSSE9`Aon6Vtp3:_Tju6;Y=g;KDeT#LX*IO4X`K?>8]Q<bQI!,l6
%1Ks^XpFnZ5.`umT@,YE3]K$=h,G_&\+\UjVM,%70U4S>f3s:^\j:TO1`^^>>akWR$JWhfk"6-oO=$br3Z\:3Wl(T\b^t\c7c.%M^
%A%=ZRr^_'=I,HRU=IQ;7Ij]A)o:eL1Q8^S(+-O066N&7CVmTp6-%s\u/h"+YDiS>^B?EMQKj@bWG+fb-Q^[RuG!\!S,J9]`.W?[t
%3JS>L]s\nF3L=T<m7K"GS`Fm,j6DIPWb,nAqubbu/;?6!K;e_/RtM;`ajI0K$+?+cD'U-&?sRSnR><4ogIEl+SYK?;bGA<qp=+^"
%"`MpRp4!*X2akB"g\MS.#irrtHLMUVOB3Hb=2S0dj+ITVKA2nB$rbdjIP=Rp*f/JYIpW@We?b%$[-eI+oRLu#>^i1c`Q+U,B`U"a
%e86uM0^XbOlW8'SAq)eE6YYc3B&7.6>,idBJVRqZ)+Hu0">^J/INTloO84Bb;\%rES:a1ZTY7tj`R`?L%=Lcf0F]lE3,GJuMD8+g
%@$Zl\Z8>"3^!:[K/G.[:9jp!jiN0KcB@&JXT?$NpYkXkdmF=D!WBB&i3[Z#TAg4^T,4!0dF=uS^'B,dFF'tt)Ahb#_a;1>aSIZ@5
%XK=/GrQ%A?4$'8]p-hr&U8K?t-O&k"#K`AK]MXBqd@B6^6lCu,;d/eFFU]/[5&*(GFAeOY'%SgZ?"!X^2"eoK3%BHSO;&gO2XRC?
%!i;c;*q%>/5s3Lj6CbV]mNK;Z+#m*B):c[G0A4WC.&\bn`E"Fp"P<XDarRtKC^Zh/cKfR+*#V4L&H?WZVYP&@G+_rX]DnEj"n2B?
%m9RUg';+iVBm[HHf8(4S;95qm?U?NN(Y2_rrQ&S.YrW$7a`0uA))8hq54#[eZ^cB*<:$%AH]fd$HYnKY_`2JHZISYG]`CjV5E<j+
%oSZHa(Y;#[mF;LbPqDHf#ts$^q)cD[*k!Q?He63QR$O5F$;,RE_h?][LImFFRsRu<Tg7h?L&k!g@F5"N0EncS;"MhHo9YUGh7W>;
%8cAqOb)Of]cF.Bflq^i[WG91mo[:3@gbe0&P_V,e/&fR5K[ZBXBY]oTPhid>pWSB*`#k"">c]=_Bi70p*ANYA58LGKUgi<]oC]>f
%@)^%:!!TtT#P?8jbj2j?DoEqj<ej2"X9L9C/fttWrH<8Fkt\(D?71q)<fLNahq[g-k`s[b-;;C>>MG,?'-O8JU7!lcj](W'\g?+V
%%M^::F`!0%.,+eQl(nK.aCcLPcKVT).kgV?67LF&]N^?`2KSei@[nbP_R0bMAh@c1%,.<25mUCT'sVTgE,"_$E;rsbU-3gVI.,HN
%;]CH*brZ0@ph1*;OQ%0()<=$8kqahN^i^2ZAiAL](IJ]GXmI7Aa8Xi<B4"0ab`X.#i".KQq1q@s;9JA"U?B?l<er96$qu2>O%a*3
%aHA?lOKCKF[KmTAq:.>BbE]T]odt>rLnpj-[AARq>F-ugp_s%)R5krbGsn5,%%d.%0%p5!IbHPV*)7&]Y&/1NAg\/RnkXR[8DW#t
%j&4A@g"6417R_%?J25h<iF9j+qUp#<+PUJIk3eI3?qepaRR3!tq`=]SSnMsnh81UH7Igg/c9G^bphNDn7<7`>-.3R!a,46Y0b,\:
%MNEUH;"$!d,_5as9l07X&8fB[7O%(Gc&1`)27MQMMBhpi87\Z,_7o#RI%MXH`#7-Dae$q@"^HNH7bqKARMS4P)[^F(be!>uLcHnb
%Q_JhC4(Qge#$mUjF%']eO6GR*=:7:9$N1UO+&jP7Ag":CU>9RDG<<5!,Z]2UkL*Z5p?RVn`[mC2\Qm?<*<sITMl>31N$F@/ini-P
%*TVM@U+7_c-GL\an&&CUggCfU&mo6j1jn6b!_U*nf@MRCp>P>?lA%ZJ<TWB6BTUW\UJQNbB=l&WX3si#N#)Iag@6mh)?"%dNFYqm
%>:aZOHE9Uu#6_Z[hi95ZT!WBn;P#6MT\Nk6%>jZCK]n."]qnaV2L2q-BF\2HaS*,L(t\.`/R0T)no8ut]RM>YX39o+bNgu,D*gk8
%O/YQp$f>94cJ%Zrh_NKMV5%V0YG$jV[E[0GQ7bd3E5$h,#]Y5CC&+L!hWD]`EZ<h-^AV'(hr.4O4;]aAZFa;onI45'hOHW.-4f+@
%4mPVISg?V!(u8s#p!V&\fD!<9EDIQT<aGV$.+-Vm(:Q"9il>?6>'TdJ<Vp2h5:.niR2"`UIjc;@pWHA'@g\a$LE5P2Y5^Y'=,Esj
%5T;`PkN!HWD&V@rb0)`"kC2mS7jXMZ9,91[jr?u'e\i`>XZOKJg[13hYSch]_WT6/6q'M,ir,0Y7\Kt;>'E,F61,\W5:HCl8Us5&
%4`U&UrcV"gddDN42\WK&mu=.E]gZrh7I,*OHa.<NDVsd$,8Y'#80G+Dr^6JTXELT<W';NWo4ohHoq977?\R((8'A$pCKmKUQ3]Pm
%a.-lIN-sbg>Oogll^[.&fLZ5&JC8>a6tQ_fIJGGej8@[6RD+*DaJ,'F]jQr()/f+!:h6q^82$7.M2eSW0,g1je-B`:`<d25L(83?
%CI\g(pD8MDc'2P'31+_0mPfF5q(aeH:V"2G&oc?jkKM,=ncE4&57?\B:l&b"kJajV*[GWq\J2WRkN>Y?2D8;frOh7Q0&iT/WVs*R
%r!ONsKm&d!U@8rrFk8M+T1eLjo_H+rZf2>V&0"=*a"5a!!N#cV)^S6B"pN[NYP0c*"hBI)o\7@.#!d:ph"eLBe9[Zp>oG(,3'@.&
%U9&!ADa@2tIWk^#L;<FA2g(EQ-Fhdc\I+@5BD:KM'M33U[d&.0CfQ;)j"@iTpJSHXM@3F%nD@9X>)a&Jp5419c(!%Cnq(f/ft2$2
%g$.9WASaM];rAe)S08i4`9o!pR;c9p]g#h5!!cMuBm7U\j^^b*ioPPN`6sI<7lEG,d#0L[CK\.U+[e;%eH3GF!,oo?j-#XCL>pX9
%NFVQP3Z26R<;6>6H#nWHK7R0fXII0/gO<&;%]:!>4T?l8O&J"ah_?glTM*>4Ci4#kgNg#4]Z`!;.><ashQHo9`P-Om"^D-F7dR/W
%TN^C-qai!3-F*B4""*]YV1ql=d=N7QlH4&OgG3?)-p"[`F-%3R:6uN:Ru_`X<QOQ#R.#oNQ<P`'*^M.ElX<cWl,i`,dklC7rWUL8
%BasW[-(G!q3H!*nPOaaZErSHZiL[jXBtK*fa`*\iM<ke^^lt^]G!E`l7;XPZ=%`McQKda<?c$Q0iq!9&Rg_YG"7g\"$k4LO?7^1%
%3?6_[3G7h58*+F;%ib4:*,iRR"^cVnZZi:>3;5pOJQ_!k>KA/iC(Hq2Wd!pt`YU7"Hp$;C(hP(gq\gflqKY;;cnd2P1iE?f_j,;?
%HjN)NhHTh$QOgdO2>WX!$=D7HZ<\_r3-B,O#7U-/X6"\^J^[i!'>+N3L<Q$o$oDYtHsNT&)%F4Tf<`.N_p++bq;)0::%.c20fMu?
%Z0msg&<k:AhbX8,.;NlK5G&/<1KkoL+6!\nn9@Rm\4fC>]KKTEl=*Q19'CD.S;mD)1Sg-F&dVQ'-SagH<G8V-4d:cQD=_k9ZiVtD
%LCHem`V5I%b.rH7GH.58&Fg0cPLUgOA4dt@F0'bueq)7\Y"]][![c_'MK)\X>Rp,t13d[&iC,Ol)f(!T?,7=-==R6Be-dpVEIA&l
%=>P\l$!E7f)'W+3Tl<rV97AG-+.9AW>LjEX-+Xjn'X?[&nkt2-E4E:fX^JOZY!ulk".7[)/lF@%q(@?Wg30_N?JlIYWb0J(Q-:C<
%V*&UQRU$j4[8pQ2'&*jKp,TW,T8cj@3Fok#L#'UMr;.50E-^VhLG89]T`,9:7FA&iio'K6Id^_k"aHRZ/f]_--:FB7q-PmbJ7H9^
%MZWjKV-?X%@u8V1Jju%tl$Nu3762FWH+nZ(6KpUNFJ_XkALJ5gQr.,Z.cgC#Ed.a[lh?aXV3,emJPNBOT'ah5@A65O?Nj&0LX/qZ
%Da.K8L<*.T$Ac.5"MBI"N9m_M^tWf=TNT5P.cDTWao+s9H]dm&opJU%b+-.nX[Zm(nE8gJ8T6,$QKO(>\=p6VXW3F7'9iGhG%mE8
%PN>QVWN47HAZOT+@N[<Am_,gL!JEs6l7!LOli+u738qe]n($2^%i5U'^0OetaD.-F5,CfQH^q@sa_P(;eKZk,V_9C%e6i5o9PAWR
%PrN5nGtmMXk%&du&mJbGH4H5sH#o?1lh)[B\b?"lZPeYq25+LJWqkIU,oQ!W9Zc!qT6!Wh.Bh&HY]-T!Z63n-8M`i14$W%hK_X'^
%o1\NYbO>>H\Acp)e3@;L*)Pf7m']?KiKSY;O!-:NEdi.!66'mGq_r"<&CqhnOR8IK+bm2og.<M,U[n?$(rLLJp[1G<E"9P,Fcm'G
%QNLrWpjI8YR$=c6;h>B(Ie+^0S^B*?dLNV.X)D./p\%jP+*H*T0&NiC6@6\r&C]-JH.D(I!$mr&:]$HT(.1;"O-]lpjR]Wk=8U>0
%W$8?bce(^"19mWENJlFtkq3hH/DlY2?2:a.j2UL%IUMOY8mTpkX/k)MqgK7:k'/OI'oP6p3+bK6DK-qmm9^NqSA2q2OWV4%DEK;c
%7m+V<SY[(E8;'tf57_9EYapZ`\,VpSrS#S9I\[ZBkkit9jC6fT\'llO$*EG5ce0b#WQrV.<eY3jk$*N)C#:<)=]Q_oli$Kr:^^<O
%LV%gCli+QJREA"[q3oI%Wm9`%1.iM.pKP]8i,N[=<H&a35=qj9&WP')#f12V[sIe1(/eb:h%XYhcT\Wp14S0HN:;C5H@;(d8`'^G
%e`/Z'-e9LD&sLmsGi\YN%p=Y)jZg"R]QG@'W'*nBqb`5$<faT2mO\'C1jcm3C`eS9pWia"9q3.!\ZA>]^FQ"-2@<UZCW'Lu?3r#2
%Chg4&ig[D+c)X(k%Up!'BFqQcX\l_%8(Sg0\shJ]ZH12oG>q*0QIT"8ns3egY!<l]5p`<uGd#HiJC%jb*FfVJ9UsGPJ&HK%2u:T.
%8Uc`0`-*+jo6<kB;1?aZ#XHC>KOfMU]\g>(om:Y<4F\sp)K/L!l(6"DKWqcVYEoGGg$6%_<*0'GM'Ec!3CjcRR[;4n?JKhdW8o$T
%cJJBri7ruGLWg>Fk^PQ\:[;Wm*ob\\LO%'>o&CrWA7aqL2a9G71N'o2UpN50H.[86k8im[k+5=giTb^n-(E'6-(h2MV%FO/l!AmQ
%UPLe,[:eePka=k&Lds.^gUILV'L[a8#$KIEeI)e\Q2TFt<L#hilZFW:F"5m.hRj>b2Z*+&.?IL?`5V`#L8R>UgLVD(8u[Q`AQ758
%Vuq_X_o]ncpr>\NAel6cf/SR@aHr<S?s$8+?;Z1CmQg`IFN5JiH^q6:$^F?g"=-gto&+RdrOjN4X3!GD./6#(@D^V'@U)8n-2loh
%qM=Q)k7L/$]fIb*8H2f'>SZUChNTR=G9Ui>WGL]55rA"mm(mnm>lVA5_BiN$4%qSR5*4&'$m2tF\'(<XH]05i0gc)J40@J-rPoMc
%51=oXl4ffXHHLIH$7]->\UT2)>k4MP=(dUHg"MRIYiVY4$aS@-4:[UTQl&3MA.sjc1"VYuV\h+P&^(eqm&:,u$VE:=^II<]<W$N#
%4RgftR=)2\bJ;S)i[1'a6*fmfVBUE\rpg[,9IMY;DmASC4/-ou.^C'"aH<%G?#\XSeg^Y*r10J3A5]k%id7DK$n:EF7XQ82QZ^j1
%0,AC%p>%Z$^O>S&0T/d,2g#`aBbWhtl2GW`/q^8gf%$C%-A5maT]]NQmAT#:EG*H,,tlO!JW)#e1Y**PMmD[^_[<f:ZC6!Y1-V!5
%`m_:7[nP2U9rt-S`ID.?3oF*QWsJR'-b\Qh'.anOkAe[o4"@ZIJ%;'K0hSD,qYgX05sb,7O]=n&+0lsjYJtJYr@%$TCOXIhpq1@$
%fI-+Y3PWT;Ir=$6oqhckk1?D*T'S8XGoMHtFS5X`Rc?03njBi[-2SUDMIc2E0e$:+qL$P[._4qI?GH"P<Ht:kD_e"&#4!7X36KUc
%)E*f=?!=V4Fko$q4GoIF@!kn77=2irCh-2*Fah.EfMIsD>U)Y2KkiSHEdRZR&;!q[V9'IXqp`0W,4I5tm<[9s,I<#+9!36%blph[
%[a"P"gm.GZ<)$0AcmCFm`iod=rtdE4k.JYu(6BQo/c29U-"+A`e5"\pk`HM+POcMgR%6o%JeL`[<@Af&2_/m`TUU>i;j3'jdJ'7g
%i:N6>s.j+fml1TLs,I5!LGk#LQ-;?UYgkSE_oVeUp+r&q9boB(cg@^)Xk_$>gsod@W#VhN9X6aBKPEOa/M(r8\;b:._5PrQLLeOB
%FJ,"(%$+bc/n]a:Cb\]pQfGM1=gXRDq6aGNNs#@j8groYN>GO0'gRY[kCuPp2'IQrg@Iohs)_&U\UsTnaY\DWADs0j7ihO2Tn!c7
%d@:JP<7eYY:]Ro8H6k2hCG+A`=J'bj,:;E).(bkuEI8tA*]g%.8k_:9\L+97qCVR+0H8_F?dbd+ABk%e:bSYRC0o?EWtVDBq&YGb
%`1l<*A54"iLe)]T]f7WcmC_/a%WEJ/T$uB`h>G54neHR0AC`m5E3>H*g:Tj(-VCIm3Hu%MLHASgbY%r1<q*YJ;Xh<(:q"KtHCL38
%B)t<H<__4u2m0S3.]QsAZ9M&/+lu;oL52p/m?[->SQ:Z,mb31d3JWjFTk:jgLhR=W]'[sM!5PKFphM`q(Joe_i1fQ2`K6!Nl5A!E
%A.>c\716o\'ofSOn8jF:8Bl\q$LEWTX,5@8/q>SI"eIT6pV8u]O2ag4g(ItdFh<E"5D>R1Vi6aDYeb1=OpRFN9e_?c(?>t04n`Rp
%:R'(3cV,FBE7&M^;it)CJW$/'[!>RBQdm?$2p1D5s*jBQ=a4'T/X15p.d5DIUp,bqb>+5cMurqU_hm#Bp^*uEB7I@Y_QN*"K*P"p
%Q^iY3ZpX3"D?tb6*g$rMN1BYqBo"k3Y+LYg`73L8Fks$^4N/sd7g0M&lhbkqY?U6;k:2gkDM4tDUk["uaC9&Bj!Hgg@KYO!.u7Sm
%Jh+:1kc_2LRClPP+3VH?(hP-(T?*mfkou>ZXlaid7`7=8^^p_\qgLTE;%<0r1c\8gO'm`1Zc/,H;D^do@T0JN6rjt>!6(no+.!<N
%3#u:Jq=1%]Ak;mnl?pBhQ;@*h*b`KVD+&J?:CC$s3^Zt;A8C-8i&*UULa$XOF]%HVcHW:VM=[Qe<S\FOo'Is\c6J+A0BdoTPq4Up
%S1_ur<fiRt)-5"j$s0N]!*t;`rTO=O@A9`9pD*`E(J*`3J<mR\>`)OZR.I"m>[*DEP=Mt9gSoXP9^Df$RM"aXAnM[0ip:UJ3&_&u
%W%K]JMir-%3LmB@BQu74A>6#iQ)uFaH;e=Y-^lYeoQ'%0Y5'-MZ:\RdT7O<tYRW-<FR:K:VWB@*4<%,Ja_1#[96,1YqQ<aA_.e@X
%$R!N)Ru&O*ToS+P%pE\W:M8%:5^;%RIh,7'Lar>W4Z$U_VCjJ<hL4'BZ?ck3JV;\7'S67C<Cmh)9Db_M&]FH(UZ]!!$R!7<NUV*0
%LESSIaVg<-iM482;T6;BF:58Z5lt<BY3gWsV%@:2J;&*7eZOH.&MlEY^"E3YgCBPnPj>iej,Y?d(XI(/k6JE7TeOMSSATf1b.@f\
%1P\tT:LI57<_Xh0g"a&1Bba7dLZfCSkt^?*k;\6tJqUSuUu\%N\'Lu15/`jOK44PDIO0XFL-0c'eI(hs9*U^6A>492MA*%If;tM*
%jJMc.EA`"d^VZa3'XNY6nTM7[q:()JoXE)V/V8ja)6Gd7Q`Ae/]A9#!/=C1mB0J_baSN.8S[1!:kaaiaC_lU&ZUC%7Z\mC_%50YJ
%92UdHVh0iR2<h8_TSoVgSh]K4f?i48:/R9iX^Ft<-.iBF`-=3#Zm/G;+;LVI)3ED,S\pB=9HD^fRV5h\nL9E2q=8^5hV45[\>>U0
%%#8E;\+nZAd-K`VoeD3+$1\t[Ufk[1OIl7;Qo,.B@N?b#]gY_/V`$KcVnL);(7STK8+^<&rt.p&n5?UEK5Xc/g.PM`q.p0gK\!1n
%C\0AddYHtRX\$omo-F,<m'gm'#$"nNc(3GP/^l1+("qjdP%UZTLds7u&H:!:I$qU2Q90lEg0&H`clJ8u(3>s"7nPIK^[.<2jXF,L
%I`fs1c_JTaZH#5"dcSPpDC*o+B]`KUc51[SbAQFR,6@VIR-$H81.md.K?V>a$"<C-R4@,pg[e95b"%Nc(:##S=nMSDrB+6oW@bDL
%1+%tIh*b&Bk4#BQa[LS/<nQELFTgY:XE7I1AGnV9D"Wk4S^lQApWXQ*WasKQ)<Jl'T]-RGjh%Gb2[)S@d9[nc'e)U8F!T'Aodk7r
%(A)6\LhG.=lrqA.$;Bg8ph5mG5s,$KY>eM+LVfSl.Z^U"_ccB2*)gP<>d(%A3`j=E3ZCmW%G+7qqoCOY#8L?U4fse.^36b=NnD_c
%Dg)q3@-dlY.D/&VG5"!THF9Z&atk?_H4u:CldjR.r(>t/VsI.#nJD\B`b_Sg:/C%p9-!-&<C:=L.k3+T9hMSO]\M%!ND_r'U8l#Q
%E!oM5-\\1_11B[V<&*!/WStDPPF:,kHc?P!7%(#TV";%6+V&S^,qHeLfi2_8;$'`oEiC>?$;3gVU-o<NdT"SQZE`@`el+e1$a/jV
%3?Ft6e=qOga6R"cAFP)nj("$0Qf]-64abZ02q6u@H8e/R*uRB<Rn1:@8%GSgAqu''p$kpWY,d:`_P("56&OCBUII)<+4hcrf:!#R
%LoSXb?$H:q?kUV*!=1iQ`h@-$`>WA4aL$B^@/PW4.9fWH(Aa5NpraGX70u,XR!H4BWls^!2dsWkRDs6e\-`I@=l\/bW-GH>GUXn?
%\C(i_hupht-me#_)YD#P%<oVnZM_rqVA0e+Kn+D95id$sQ?+4sITg)=$>L/Lb-(9g77p-eim_9R<CrEVA!\rj5:iAk;jEK9"ae?V
%c?+g`$41$90*#B3b"b53M!Gqn(M@k6F>[nliI]jFka%96NRBKOg:IN?4]cWcl>bX3V'uUr,-j(^[S"Nf)'o9K;H4',jupS_j<.`L
%IAm9AcNtr!1+lkej)a5*KJ<hfI4.]i=2=WhBpeg#2/#@*j0f:VXuUR/<&&ucOK#H*7IGd-("H!gZK`E>3ZWQeE;pa'0V4F1K3_iA
%b&9kIqBF@;Xs4`9T.SF2j/0\"<.Vna(]O:-_P[r$Z>CCsJU[->+`OIQF]mVIR7/Lj7,CNbc?o>Q5nh@485[U0*J]4ZVNI,Xh?,Cq
%lgki2^B^9kUR7GV'70798Bf,LXC3pLR+1hPF]2,KF*LBO=L!.*\2YWRnKMI>FV_m9=j!lbP#],URd-dI6D8^8c!FOGSR.MO<'A#\
%(K)*RK>'T\iKJr#0A0qEjWp>KCn&k=Y?0f)0V(I-.`6Ca8X?)/K?dYME3rkkT?(<64i+74^',77_.TX&RHD5"MS,#/k!T^==.@;D
%<Q*@V(90A^DQ&J[lG]aq!_S2\L=e0AJI^Y0]IkCE!kHEL]nl/j.nQ%,ds%`Je04&jLWE`3=`qg._+&G$ART6<9UfWZ;r_stiNR5h
%I@6L:qq$CFM,lTg'FJJ2>&G1$H)^M'$U16>%N]3\m'n[m9O!ndIQO3='\@Hk%`I%33q(c6)<QPm0XYb(pPd/&qK8h%L`FBbI+t)@
%@]JE9RO.@GK>R0%QI!p1Q#M]mj/)>mC22)YG/8OF"GG=uc1/V"g6+`:\J@e=b(@W).8j5&^i@d3W0Gr9Njh".L,0Qf(REu?GR1*.
%`>fP=GPl;QAtoWW<TY7E7jD9`RER3Pd7@j>P#[bdQjN>F_IDG;ZaGoqbt=I/:8=8P3T(^Kh8IO9T)'n3fTgO!01p@dCIjqCZsU;l
%+^E"J-#cnNk-usX/m=nC:EqO(cqu-/6[WTZY#g1>bNeNmeD?G!Ot%"\7VS3n+VM#k0s;3o2o9p13Bsh*Bffi7Doh5lUOWNmqf;5X
%IgJDHcq9Bo)na6k9GlH%Bgr--P=sG=Y1259lW1\i*n;:.[3Td%rT%ptm_:qs/_'YW^)4fJDb$+qh#fH/Uo5M2ep*:!bYg=e_:9kr
%=/&!:VDH8TWBP<V:YLi.DU@rpCT/>Pr5B.DT@_OG!&uI`ld6a@)ApP3=5=$6Sg*Bc*DUiOU"em5%n;[6>l0rc4P)]a9\i"?hHZ<b
%Z/*r@/ASKCUjOXtLuf=R[Lu$7`5jI?#20^+4B+]]i8?q?Y!8&eUb>SbW(-S1,L.P_I(eGEJ)I0L"CQ'VMPqA&>&L/8C'ic$/JpHe
%g#9"Hb^%;!?]VKt=WD?_g[X,p!,(KJi2BRMYR)T<rPWOB>V`g@:f=KZ5Y7p+ggL>V$;##JD?f_V^.^:LgH$/?.'`9l45,XmhB3a<
%c\X3@eprk6!.13)M!l@3etq?V+K)T&NYKkp,K^Vsk:[?`4FqTQCgAPF\+Gh:fpl*!?Xa]h%ZdLreTktR54*>.WcaU#).jcBa^PoY
%7o/[6KL;F[%&V/!;;rhr`qXQFiAfFpV?9u/]rqu!R@rj$p)nooR:XeCRC]7H)$W;8,(,303d^@/Pl-pX4F[7/mSQ.#HXtuM]4[c-
%c7Q?FrIo,DL+sYDnVb)LJDp<f?'SR]=)T;jJILOFr^LPBLg;/#-R4C>S9Z@:b9I2V+6=aj%!m"Z"T.&ZcI((,4WTu$.u/=gOQSB"
%Uh`H_-9OE05/'3AQ$nCfORN@T3.Q+:=:/[e8ZU_8eW4AUgKB;E?P:$Vhk*n\f<>Zu16TeQ]m:<+M0u+GX$=N`M.jW*[NWOArq4p&
%SZ45=$\onK3dF?Yd\82"of?Y\Pt0mpK2=:,J]KpH@F?ei0:'[.+WWu0/f921[rGTTm>lu*NphooZb-(ufZQ!.A@hsF-l&=??+l;B
%Lk=*3)s#LIi$;o4\^ZdXX?:_nFX[N_'oX+diFN88L1CYPn)o*-0Bc0VECJY'/VI5Cl'O.qc8+XR7=%IDq)C)6Df]M6Sg+Sk8FJf.
%&iYT7<u%*idX%palHlQu>38\NOq&2RV2;,N7EGfu(k#Vs_Bh/P,#Sf$V*J,eo6!nBOYV7(WhBH4R!!)+ONh4&2g/(I[:6UaXTGJj
%i4F`"oN`@;r=S/qV8l*:$rGY,3et\s1fa_uM/]3QjqX,/r6hE6jI)&>9f4bRUm+ekU,seGlli#KeEjRerE`5fl/QKF8/>EWKu-7O
%RM?uc8a8c7ST>RTb%6+'7)dK4,f;:'E\NbQ<LkuhCN929<_[M!F+>bT]eZXkC-(H*k0`mgC4PS,NE[iXFIVV6T!e^`H!W!#B'qM@
%T\'d+GT?E7p'm4uDY+-<Nt[:T?M,q"67.(<N#VY/pE1E0o:-b&*,isK#Kpcp9Xa?bl-:&-VBN?To:[#Wp^?]ErmTd+FG"#<>g,C?
%i"&g9>Ko_M0scWtjt]8i8OWS)3]Dc_Z!U!Yonr=UCY7/31sDUfCl&=K!?@rGL&AroP)=>%s!<]h):0s/lDo")W$l?RQM#ZsOnqLo
%#cSVEkshe3e[G28*/p:WZghG]7k>d69b^&>(g@327<XeRTu;kO1cRXUn^ZV1,qN@d2'jEQ@VlpdC7-BDWlCR"DP_AMlUS"_ln)R?
%l/`Iu9Lpo.'+%]TL6(!Opn"c)K-:>"=HE^b-^R1jU4>X/r$u;k(tN&P1'<,f"@%%LbI)9"/+bhg!Mud>X.L%B`c"U4YTD"j*;\:M
%a#Q+kOIX/M].QrBc@7S""Sf",gnNYGLlL`cI&'\8GmPj<XeN[0k^nA$aS)j=;uSID73$;i`+?.@JBofS[T4::0-?Tq=o$uSr:6#N
%=K6`LALd?8!T@T-\7r38ba7AL@JT/K>r67"0,@R$1J8ln)8cDBA[U=)f[`PLWl\SEMTU03lNA;q=Wc`KNcT!pI?7NO.9"tcf^0$2
%e!]Z7$6,6T]7.+<Z17`\2M:9"=OAhO"g73(F<!,F9n##\(JVe*FeDh3bEGNn3WF-42O'*8-:?:A]U9*SNu?.!T&r_I35b*.K%fOT
%K<7^F@PsmV_tR5Th.'/4.0=2(2-4Gg+_0EaM-'dh=KN2r(gaA6j]J]0>?(\:HjG2;Xh+4DNr.:q9tVBVicR_1n"(m[h5*cq]-mQu
%h>nCK'm_C7F*aen>t0XQ"Et,,fSJo1+_WZaK5.G`rH*!+$5[OSbHL'dm]7NRbK8X8nKMn/h2OrNe<HH5*k0GnXJjXS/\=u^+_$#$
%)Rb_>:IWbGlB:%&L#E>pl(/h;S)(KTM4X+o\gJ&k5s\g39MB3/UG>-CQFT?5:..da[&K`Qj#K.N25ttI/TEue,r6Hr?:;":2,,Sb
%Ofbgq?#&e/'oc7p:D(tT3S]_;fqTZ:L8B&Q@M*6R_6='WgIW:\9nCP[\j9BE/L(H<U![(L<MI%]1>j-?<HfDF-X4$g?*RR??AL[.
%/],9QAepWE_M_:H5.PRrG2YQ51Eo:@ItO+F':"NKT-l'?<lK6.5Gm"jS`?B.o;H+?.^?]gLcT5PLo._ai5SF5/oS[*SW$)5Eo,Is
%EdgY1WEt=&J7ML=&TZd+WP"j%1gME;f;goRTqe.W48!o]`USUTjL's2g2tI#d-Z-H<B,MClV#.YJd3sUCr+m^HJa=2jS,G@.*c&<
%;U>GhfBq`8+*X*NJ.j-lK35RS.]o%>?7L+u"_)/"kos'>+8*>YRLo!9VkAnQ/`m.RhmBJf(o=;RGHN((MK(OQ<A`r:X$7s7!'o%m
%7]$T7a_]Xd9"[.Kg-g4pAdkZVQQcPt4ti.W%hYk'=;rKb;8Q1]q:nd/'B<D<TRO()_GS1'Zo[njkeCh+_XTfSMMpm=U%+@Z3urn$
%(@^Cd@\@^)$jBRtrH,Ef!<_=jXmBB8bma7?\Mi\7""9U^CJkSVf?C[1$V?KIq0F"QX_@;d/,BfjB5qOMk8jcq'98]3*W6f[[!g[`
%`U'kE'p0d`LS!chSZ[kaG9hkd6O5h&Kok=qM?Z7ql`?0W-S,fuT4YGuWZ%bUQ;)_6L:pjNG)(>1m2#k3]q1KHLl&kfNUmG/Y&uqk
%6G5b&f[jnr@"L1@oC8#*H-Wu.?@>9)c2GGRBACu:-tfSnd_4-F8R:F<+>mLrc$V@gs"V^gFFJbVDV:(j@l`@XIQYbe'dLkuk\2NO
%Fl,i%gA*0G>:^WD21TQF*guiF^qg)(.lj0?@RsJU*!jq1T*tN)T;1_Zgp\Y^rSD#X6n1*C6_E63l"G%N!mGG?'AUJn2GMGljsr>n
%'6NPFo8<ZX5^7'Xe*!0$)RBM^pDpI"kWC3@`""$n*rPN8Zqp9#)HQWa.(mUr\ROQ;efXQUSg/33jV0%1Q3*u:8p%cW[qTo'p^e4f
%hob2D3cfYZ?r[jjVMc,T%mH\D-Id.T40lbT)FU^H/`R7aVGJ`ee1u"J0Q;'^NZKLMrcOHV'Xn>-+]Fl*eK%pkY_"lq=BKEJ"jN!u
%>D9>22)5&uW0MVNL]uhekakEYYhTT8o(JW/lIo\0'W<pD[K_5gXYe#`UJ)Cg,gJlE"_pOF0>%EBo0=(ba,>NBa'`?mrP"QrVCH'8
%a=:UA+NlQp9TB0AYZ!Rcqb%b,+f=kAU60S-:86K^jUObl,L[n1a=Dd^GcN#5@'.fNdAG:c$"_^2S=Tf,371*]itB6(&)a$p_VeR-
%Q!bRdmjOUq1oLD3[r(dVX,s(k=epL/A5X9"]]#eqDGJR+Pbtt)i6?e,V8^To=,fU-!ZQA65O*eep)EA`A%Q2$5kn3oKO,.,&26=a
%9b8&WT0V"@F7h3V)tK;bG<qqG9'4@uk+=]%8oub@(F_g>RR`6]8)4ajO*r0=@C5S5_Oeq-YY0M!^lT1\kQ1SrO"H==arf8kUE&_P
%@J(>B.5=e\G9^94i"6q>@S_d@kcf>&rQIdc"RZ`<;J;$p_HEa/1rLZuL_M(+I8U<<]H1W;HRbu0(8YZ"6=6pp0ia6$^<]bI?[Hdk
%P<o$G2SK&;ANGC7er,ue+muK:6teRFZp9^&?C.gB@[jepBQLZN7gjjn?rI089+*[#Cm"b-8_/NW2fJRHJ"4on\qsbtfe7HC]5WK5
%BK4E!)V0E+VZ*8H-?^@iU5HV'Uu]DW,8;+]LQ`"s;Z%^Y9jXk7Z3iMFS6["+Z/T6`D':'&8bH">Pq&B97WVh'j7j7b$7o)A,3Z?:
%?_qcsL0:p(b+0DqO/RU&gN+OrXWmsrh&Q->U<c^;2^sC/4L509<n*%5UtYdQ':#NJ0Rh`if'O$h0[ACT>5UPobS0D=UDubW%5s<p
%DEq+ir_>/=Am^M.+4K>[kZ_;OFqh:(<1k(#JLCa)<?"kf-cB"!nRh(uqf1b*QsKL$>nFVq>fpOpNCYg5Ms.riY1TN3\/+^If*7lh
%0_D3ER6h3F!.g$d7P0RrYd#+i2gJJ+;.N!RaUr2ps&3Wp\e<tnY9Z\C;(#TfG[nYn4-ObkkK,G+e5B_[7s:;%NlmIX[[farN$+j\
%gCBAJU:AAla40c4Zr.Ui'gmioOjdZ1pTtZd>G>6,i]!>$]6O6$96Zi)8r:LB^6pFh3XXb9T5pK<'kVdT*)B]i<69P&YEm12msOA`
%MN"a0]9EkGo5-Ig)2qY61po8CNS]pBV:aX&`q03&bi"5S2m&nbmTNjuD$d&H:($cmQ*q6JeH>cGKeKQrp*C?RlgK&k\\*dAGU<o2
%nk+9Pplge^QNgEg[d\N*F5$"7SaT(j2Jl3&n%jE4j`Rc)pKN$9r'V]i7@b6*PBc%_Ppalh,_Tbn69:#,T_p3S)C5+PW'2RSk-f(c
%/PW@"]En&9=o@O^/PG3T<WD%ep^s"2s8W,s%off"oaO>3Y<K1@<TO9@hVs8_,1F*R,?NX8lD+.6,^B1#s$-GMJC9BN65RUSr3+)Y
%Hot[@8ERLG37og>3We[JOtCk&QV>0jqsQWDUN\.>#'8EN$amJCCN4RZ$?=*nouH'#8n;S(K.o`+qXg+j"r%MLnZ%d43!3#7;0orf
%\=*A7:qpMMfo0KsA/3CRs+]0KiXdW/q8_L\,u2au'O/[ojP.^.82eo4J+5rjgfO+E;6.*CdFXaJ=rcTLdZ*4?]T1MA)P"QjBa`qD
%g``/i22Z2`:mK7>,8NZ#iC2#i;#Uh5$jf,'&U8##pi=*?/'V+bHCrJ"k#(%;<EW'OUAH<\d2^eY)Q'W**;M@^EN41tJ%s<:hY]/U
%444]Ug?m()ndn`Lo2:-H,=#b]j'.hcfP=HM3:7(BE*5:pf/u8Y:o:9Ah4:kFP)YiVnp=;!5?`KV+XUqVO`aQE:O4.hSt*hd'phtu
%BjGn@<%6s6O(PG$pWNTmKZ$iP<71A'(dF:!l[M8A#huG$@*U;@1N:-+^g>'RA-NZ;[N'-aEsEAD4Ib`Or9=\=e$&3@n-a_)-k@,t
%NZA/%-Amc\f>=1a>.U=\J&)Xc?ih3<3prUSTeU(,Z9#tE)+sK#Y3"ec<_HKSVL$A42K/7qLZCh+\bLj<[U_@(a4#N**#6hcS\4g&
%03L@(Po>3r[&<9uaqC2T@Tc]7IPa[P/!l]h=s9EuHN*!o^E8\qX8M85N/1N'NeT'hX8^o65CXEcFsNJu;9;?`rVG&P2#k2%@MD^A
%XP#"j=L<,q/iREd+n5'Cik4T'MC!$sO1'L'1=N>[ZJU/h=^5'6ANSO]WL#BIcjG>Do8+\uK_GCI/2]AX`a9>;T`3:tXi^Ru:S0:j
%QbnFF>su!t!#Q'_CnYW\0<ge1OB,X&s5c3;j.n@u6r'gHpr:tLUiiaYdK.&r;3+<18a[p93GL$7jpA-[OVkWc>8VaAACdH:'r%VI
%U=t<3_]_MG2TI">H(u3g[:_k&p;Ft5XT4Qacp<T8Z&n\8S2rTY/3[$$7C_ii?g+YQbj[8Y5QCSl$*iV]F=dYgNr37kWrH623&edN
%=_U3Mh/rIKWHk;h;V)3k**:N[F:?da7AcLc^SA>4)GkCCLi!!&P\uhTSVF6<FacS_r9oC*KCXLuqIBNt^L258WRVcH4</eh`0Xpd
%Ws%=>>Y$9<G3j`bb<UK#DY,=u.YNDE+Z++7.C?U2E0lpC-'PA`'2,WIlNK-$)JPi+aX!"9Bal[qjZGr9:Ok-,5*<s'0L0R-@&mt`
%JL_n0k,1^RfPXf\faJXC)lH`*C\[jOo:9aEQ0Q..c"iPe2kr]<o;JW?-CqD:lfOqo(l8F"9q4Wa:Bl!pMYpX>@$stBT;5)YFk!#)
%Wpa[]#<:XQCR"]8Uc+:2\o2QJc9B?d\PY?#jIi6_TZaJDH3u;Jlcr_&Wp[!U7"Yd`5d]a%aC^MJk7VY\6&!f!c56t5&JG=30F9]Y
%Xi8)ROXm>N07!#,M+>+gY%<ZTYJiOJF;&f*&SG%=,#1EDfi?qIbDt5.(h4\n15,`/d`b"9PHjum;_f`^TRif:X=e(#k"`kYO/9"(
%$W'irWNQ(?;-Km.ndmW(c"MYO(2d'3l)$4""TuBZle17MY][UK6JcK>[["),.K!9_FA"a=a6Z5Yf4dE7Ye6Of*b</9'j/3hln7?N
%FbA!p_dQpf8'4"kee5>=AeZ/(3JIJC:qa2@L[:g&f8<p\P^j&Ymu<Ij=^*?XhX0`ZM-E)TbW5ejgjbIR];`nW/VS:<Z?U*6'Z_F*
%r%^$+OoO6fr`FQI7/d?lS[*aQ<dun*'3,\K!mGip=Ng38M3-Qd<X/qiTFPq*="dZdKiE)WPS*X43cjkoKfF>m,3E^Zokrbk,R$^R
%U23.Zm[b=26.[!f>5TXK7FIV1;#+t<3me3%n(/S?L2Oj:293OD2$RP`K=hL1LXVbE)a6gg71pH>F@FjeMi1UT5/D%GNNRN*Cu?rK
%n_QtDUZT'jb3=9U;aAq$51DQ7A=&+<L+Ks^Guko!P\T2#iNq"F?*W>O-VbMMgID(XeWS4r!>I(#;ZWJD6jVVV8`e,=99,rCYnpM[
%(I/65[W$!$I,^.EN5D<H]o,RH*d2e?IrX29ct1J(,?@f0A>qWgJFm,d(lJ=FX,S[^#a\)pqCU"_j?C=,]ABffI#FKp,eEs%:Yi#l
%4pT"TkRC*?eoE-5jUa)AX9Mk$\b/Zl35gdsDa\c5CHIXfaNM]PMT&"\82Oc7H1e<Qad-cTM4Kfd3)dQ>Z:O0:<"s6`=H&b;<gq]s
%]"!EAO:(I5LE=-pKHCAt!L]+t*UuIgJnh$?1Y4BR+r0:=RHOF/?0::6XDMm*&XA.>JCskAToaWPP:9+N,u]XD;VmFFod5X7'C7k=
%Ph>4j[o7fW!US5e4dhF060sM<`5M<dWA)[.=PM<RAs,JSV)nXVa]=Zt"6ThC'=o=/C$tk6bY\+,kR,2,:Ho/`<AuduVLp!q0iCfj
%cIlU0U_EG7.op1AJaUSTQFTkFLK(8HhUH!YmidC%`4OIL&iiD-&L/5D*[;PI`l<P0^j8/P$@rk$^!pQZPdNm@6O!_%"BQO7HhD\R
%)'.HP;5t3Gc=>Ks]9jkVg0cWBC./OW7pY2PQF<Z`M;M0JAoo_,@/"6['pXfsOPil-8)hU8S`BVl?fZ27!1(E_o4,qK\1Y^c2LX1^
%k)]i$M8$-jkq([gZhh2%8A#F9f(AXG8$lk_VP+BHT)s%Pc9uFj:Yg;9bEPc_57_Cd&<e8?;+,7KTo[CJ?Kkdk#eJ!SW?7N+r4SB$
%bqB]40cWaKKL%8DGkJG9@T9WQQSBb#BJ39?>i-S?)=(<[bJ1rL09HWqB]jD6+o@_Z1M?!nK$7e]aZrjoH7[mLf-JFRUpWO)4_;_F
%QRkRt$u/*&D2*0_?8n(Yn>7_e_f&b0#U&GQ["0j1n^3rQ;1ggf*/?O^kkqCmX[lF9$4e3>^;UJRM\!M^_oVp6@"*5m=gWUAo6&Jd
%Q$kh@[-kQU%mH4p8a=MI;BOl^>E#Z%DBd)S[glP"!^qUh'hjX8S@H/g*+3=tbs"`:!nE[O4RE=NWe/Vm9OU(pGrb%[;ea6-M=EDV
%DlL`AV^Y]/SJl.i8DTZV)/ENC5rEZ/U"up*P70t/c]5b^:2\JXVLk9$o0hlG=L7T`]:4U`a'2T27g['fNT^`m>^1;gg#Ws'i\5%#
%5Aa$S4c_9Q;p7#dd!k?D@TF<1_6'fL?g,:SI;JlAenIMV3GtPGNo_3fDqKpbs'p$]^e[Zoq`T5%-'#U$Ok8MU"qqe/2%Eo3Er?:^
%Y(gY@;:o`6S991f&9kKIc,Z^.UuNZB-o2pH:?#-N4E'fcFCI/ra6luBb?"sAZK^nOHn7-6JLa=kV;,*u/\rEW^U\SYc8ZQbc[O,X
%1j3H,NR'-N'8uOkKmiRGaY:KlVD0N7Xl5Jr+pq:7Gpa":o6BtVm\ft#-&?l*RY6^F<LaE;9(5gh0n,_6,sDs!PRa_UN8]8caB?!!
%i81]Z'HN/XHBrh9Pei,;%L;cm'gE6baI,t4q*V<]g-nR"3`3R>SuJbY)4\dJj5[upfhDYF7tjuc3t[\HZoP.tCu.Zr02h$@U2l1B
%&O[XMQ\J[8(54mXg(N*EEc(\2Q2]%99Hc,.kk;T`\6/2m<"9L##ML1E<?7E<S)"?;EAnsf=]ImH]>K?Rd"D-.)C&j"D6qRMeQ/OE
%X=npd=-K'L\$CL*`NPY&AjDdn3!"LMfVF.I[BKK%dS7HeS4%15-(tA,Am.&YVOGcNXK#EWa<0\J;tqQVj7_XI\pj=496ZnWO6N!F
%a\3g)JoCc!Iike[_%s2L>kTW/I8I-=nPE_lL@sbWaL2V[4WoVAHkr;(/G+&H#g-%9Sr4G.4MfPN)TR"QdCGKf>Ii8h0s\7\PCPX+
%KW6MS6utJhZ\MZ!/V+-soL'_C11cTNoBK_`E]M-T1/(PY5ggZ`Efa*3^R?-1Tf?6ZU'[%b]$)YHVcdWK>JTaPBr[;i[)&2k<>K:P
%qV"3l]@<*o7,+*1Y"R>u8%lg$^od"b9W?68SE_RMiG$2HP&ha0@IOT.;CI%nX[n.&F,3^e!EI)eE*s\.0l%DVV=&SZr$ti-9fX8l
%pAlDE!YS6d8JLGg8Td;#\7,;i($0XsE];=3*/_`tXoM([)`tuI."lPSN9H$iHAHXo**t`bK,#$`g@lFUn7i2n)m=kVL<"o@R((Aq
%S&.;%k)$s3cAdK.a1%ApAkS@lI'-mk[p$sJIAX;Nf*g$UgVMf(Pp-,J_@_k+Bhe0i#>fb4FoV'fO)`)IJluV?\aj?p2o;k/\>l'!
%A;EYFZ!o;`DV+gg`O*ChR!4h52Is&1+Y-FM'3UANOXei*O(M3'aS(KM_@]FSQ@qb<9T!l!cBK(X[VG<S>?U=A=IO2=G7Q&N52aik
%g_F*nr$93lO*Db(:>BbPZ[S-@>eD;JLITcZ<:l9OI__#6pD';\\c,,59Z:QHYk5JqOTgjaApLHOFHkE4i(fc-)"_>N`5`1h4eUjk
%m(u2<?SRlO#Kj5=,,F)8PosU-ea^gfr14B1ElZ0$_.NF,=7S8bH(iqS79L@gMjlet;?[AQM:n\P[D)lAe=i_l:#16>86UW2?%Xt=
%<X``rAu3H#K-HoqV@Y`RRY_'E?*F<?4C;@)J#$gA`L"m0*3Z7o\M!5Y1.;KSIE^_3:952?\&Zp5:(d0_HSZftToZJMF$_jmG(_je
%O'qo%8&04BgBh.[j[sT8n'2Jp+`B8Cl(@X"P[&ab`&.S([Wb=NP#4Opoh=M]KQRp#FD:p&.'e@(dJPmSq8HLqD>16:iR_6X#.^M;
%AMld=F4po!Su/bA<6AX8f1$?--c_aJ[L,6cEj((>8##0l](lW'IQ[3EE`a3s6kNlP:KB.\V\Bt!,rbg$g!)VhRH(\+H'r.84Hhsp
%3nh^4kVF8+JO&Z5O`LMa5gGLW\%&,-`J=[0_iO'7F-(kq*o&>DmcAQ#.Il[A)eF=o-.YS0)BjK,'rcYZ:(7iha'J^R@qfYi6"LB>
%a#5@`5LnInRR4!B[->C>9&`$58^W=]YD<iSWm[i[Ae"l;TV=-DO'u:jA[iFS?#rHN9#.@E4uJUQ^ABNJOic3(,77_T%Nu]T2*fb3
%Gr6=knq,*OV.-1gG`Y/^XIc,pl,3:1bK.A@Q4pL2(_^>TDDq2cc[2iNSbQ0:=*#bm'o>Pu55/d)M7GS@*7Gd<,sp$JSTGC@Y/p&5
%otJb"Lr"q<Y@;n"BBWH8lgnA#1b-,]e`ZC^d:BeqqNdt1CKL+Kc\V,AK`]Rm+BbkD>Gap4[9IL<jZ6>"k1%7*IHXX.cS&kpor.1K
%Um(J+VL19oRR(CY4>9B#Wd78r,YXI$6(1D,YFoCAnk>u3=FZT4BJt$CG:XQsOua,RY$uJt>JYhPYu?8V+$Fn\N9!mMU8^Y@!@?If
%6gXCANX9]^s0`XR2'j[F3854B59=[<SPsK>+l(^)r]$^*Cf_d+r@48'#/=DU./6YrM<KX5IHFcMf_*99pa^)CEn%u0dA3]7F%t`E
%4BTRfi*hVYM;U1='_T,NF/M>_V1&.5FqC++4VfJl(^P;^E5a8gn(A*2-O]l-4eMd!J)_^7,+[ZKoG(*96W*$dh6#;cl!2kd`?*&q
%hb0!AIB-8"R9ls!i:u("q&uteEn&CbUmo=1c!mZJ`oBo2\fC2$<52Q&T!jE!NL70?gDqWl8:S<;3O7K#>\E2r=[#i6NGJI`aVFd(
%cK?Lu[]GWe26n+q]I(?XH-9)&M?kcV9;07L#Z*=_*(cg'C#W8rlrA\9+Rf+p&Y_YK?-Ga9!MrWf$+e?0``Z8fJ9]>/7ru<o9kQ5j
%Z0QJt5L*HX-"\FBU]Mkp#.3%3Y.>1)\hcg```M'oCQc!/&u+n_aWPjk#>"ee`fK`8LI9e&Srd<iG,ZKJpX#agehc]/Ssg*b]B<D"
%Je?uVD9jT!&u<s%4SIe<qrJ_[G@UREiA.-C.#X5LF>odCP18I8hqfn\Y)lR75(J(dhPGRu?J#.6pV7qm=T(oj`f`'75WR^fEE1QD
%Ls1M7aNMC2I6KWU0\S+r6OiiW)s;;*E*5MlOSA^ie6%A6VNoT)W.9sqN10dp)K"U-,W./]S`oBGCO0n).YcdWHGO3+#3+[@K+L;,
%)uCmBh[<`V(bM$9o[$dMFhJSPf5;>6CHnARc3skH\Be9s3J_[@\22E0C@_E\%"Dj4Y,F\(.sg(@`rO#-Or0.n">+4JG3CWWO(oMY
%h+ODO?_u<JpNm@o1.5j)jupqMTtPqfpItDt0P[/M-qOG?ADI>c?<<Cjr4G`r_9)fV5NVdh(ojI,0['>DcK\rQkbL9EY6l5^STR,h
%*Ni;<UKANj(^Nj+Prn#2/SbO+9>)?Y&A!`+8VPkfLiO*jb=tkYUjKPDJ2jC;=Ioq"A3lEL.3$37Rj(Fk^E,l/l+?`8+jPVqP$nRm
%<'9"tRa:?P&KaTfVn#fPQ)#V78KEMW36B#gYKi=[nF+YDp`,L]iS6OW[>i@OY.<H7nP)K<MoWIVZ$c"Qn$c0kphJUZURn`S-0KRW
%\DaYV<'hmGha4W/8qsE98IP+;LD(R`mq+XOK?6_uR)6_b:k2*kQ=u_%T+(J]A-N`8A'=5$.J)*a0gQo=>Y81XiZ\AgK'=@V*i?Kf
%A$cd/S!$o]c,E(Xc^Vu'<r,#X@[aeT[/u:IGo`D]-B<m>:ZoUu/*OG]k0PS!e8i`i4p@1Z+]CDYQo@W?6q%/W0Zkk.1M/fHG/D!j
%V95-/>OU_@X$Zlt@n8L4+$iJ94ce1XfrA3hja'I101"D_2*QBIDF6k"92TTj(n<'p;kh@iZ8Y:u8[GQM`#Zl#lqV_m8d((c*iNqS
%c>@(]d0J(b@p@)$iQ:ra#14mI%P)l]-,R"YFG2s,;N5di'VR!3_^WOr5d_p2S5/<AM+N'l@pZ3@UPp?kGIY8r_!G_#)=KE,a*Q(Y
%D`:JS1V)mT*d-<IU4mW\cD*cF\@,rM3482?p_\nG#V;M';A=Cuc@?o4d<[7ejK'h:Ag\'nm]79#5biK-`Ya"JZ5fA![/TID/`1'l
%c#i%=T;)f,SdX>eHMOMP4_5nNV`F2.Ef5R_P6"^FaXchro2/A>`h6KLU,tPi(mLHEo\i(X5Z-*A=.[B-JQe%Q(/<Ip6KY1<$2OW0
%&c@o^:K/a&%g71"\<hf)b,TBMUZlPCW&R4qs'jLSnT/h7C3M*C(f9lSAj3i*8b6^PO`;#J,rQ1RY>f95b_JU!;-PF7pN[A[7Odd4
%_:.oL749bDr+>EplqCl^%n@7kU>ia7F$=/"Y/%Eua&1hdlWq0d?Lb2hGXbiA;#p+SV%e&VVBIj:pO2aNBhD#3(pcHaOnht6a(LPl
%G#d,m36"LOK1p6O*q>PqH$':I=C=+mX"9oc+&k;5+F/c@JQ()N+pAN6dr$'Eijh'RckX<m^thG9R_+9?UcDTWGN=$u;F323;I;33
%:&cBe''\26&Lgh.Ie>:55:8;5IJ9kaIQMiFj=W>pB+iI;Sm4FirnADiZ2)'1X3\Ml+fqlc8`C.18ma`%/-d*!B.Y""lY8B#SbHHN
%B6TZ4c\n]^^R)!)fs.e;\U\=ls0q@I&s^Qck1"ElD4^(ZFi5.3U7T],PGT;0SFK(Peoje[<;OuS"F0g#f#Os`"DiPs'3al^s!_GW
%F-OfZ&'hD_K[W8^Qf^6lZsCB6*N/%@g2W@"J$da8?1[m&=##kQ]MHUXXZsf%I.OPcf`1`oQK#g<O04[&-Q._'A@p`O:D&tnWjZkq
%F:pb8'*Zk9]T\&?5`AuS:UY-E`:K&#^7RF)Y!QuPMR$C2q&I(:(^/dfkI[@)9\]^7g-;hVUV[oHO&O`K,Rm.MCG:d2WI5O&!3!tm
%HE8hFJ<3_-Z1K)hJ9:dAlL:[8j1J^ANdtq1Ru<_M8$QA#Y9dpI.H"+gB8&fjk[[FC51dR=USu,C]N-FE`8Y.jVDF@PE/mIo^VpPe
%7H-&j;p+Y"%F2&q:;G/C(fl\lo8N6SmZNtB@'6XeqU4Qs"RZj@2U2:(LGJqFO0]Y7Xhm6u3C/=gi:>7ugRTn4Wqi'Df^E)LB'3sp
%KP0JBd_+[]I#G%dHgE9?RG:ERrfZXhmh=/&_mZ25pWmWt$T;Ie3<HWumI:uB2'6TqYAs.>"D<7+(B!;@b/c\5,PCY\1JC9'*K15a
%W@dR1FMg$X4tK18q[b>a*#@f"TTa2%jGUqggcaN(a16eK#1AK<cf]h?+'%9@6Qp?Z3B;Sb>IO:1/2Hg^P8ic@O8Hk7o.nT<<e5,f
%_Q4jLR2=tj`d*ns`3r7Vc0KZ/$3FQC*I:tQ+-4X$DrBYriZk:I8**D2B,e&.NiPrkKYsV@*gn<(BC]6pC#2,U/FRaEH/(F>a]\@W
%F=:]:s,+h:=@r!DhZL/G#;W/)T>V)"/a:^;\$)leLI`_KbKD>?`Q),Q:KH!iT'Pus%%K[0:'GeITG?"RXS2c8;XhKJ#()/HJP%cF
%jD:.&S0\mu$\=\kW+e9db[53![kc:"aX:/_hk)PD(8<3gGYd^F=2ZY*S8D8G.DacpcHZEu=,3edQN!I[F\WG*V`AR&7CAb*Qghla
%.9eY!oCUn^>u<DCqs2>(<`EStI\.+cM^k46@EM[C,r]Uf]dFUl^INB[,rG(gP+i>l4"<cecB>o2P:]tYo22I:qoJ.b8i6iiIkTB(
%[LG%iDS&*IGnD"9mBkJhq]3?;+&=cD[7*+Jj_Pt5Uu@>PrLQ`cFZNSaMgIdcF.uKP^W)9Ml7=4XkLDVn5DD!la`31Cn%<q:,,qJp
%n5iii>&o+A$Y8M?F&XaL)E?=+M*T#);fgCHm^;:F%`7&r4)tq43bdjWbcW-eC5sGslVgIpJ:jE,(Z>q?htTicAWX\)`DdeDV<6A;
%@4RgXi8+Ml(Stem1T!I_!INQO%JPC=HT/3mAAr855J`TF]_$j3'<d%@fRd\.L[p?P@Ldq"8e_>'nZd*WJsBmog$T(Y-9*!N&tu6:
%[8;=ao,X[p/o_)+U3`qW*cPR3e+cM`'WAi]I?1^sHuhHM.V8@)!'<j),:7K'qe]5hEaoD7p0n%@]uknY:/GI`<W`[VEeSWST7.'c
%"/&*6]K.O@m:oK]J7"Q#W+8NP],]16`oi4Q[8ecI311W0%]mCL!E$sj*0pRTK@&o_BJZq!TL0;m'Eae1f9K@s#T(a4"MVYtX%Gbn
%i^9F\odOPp;#:HWDT&$^Nu)3nXIJE69NM^.D]*["qq^uu<lpR'R\V:\I_K,Y8c9-TZAtBI5>!i]*Q6ZhD+/?[enbnI\DckM1l2rg
%s/Id6o4C.B"k$p`9ati,/OUppL$[#S=%7?rn$H?l^72*4lh+9MlX*!PDgY'9Pshm-&fZpm,18onV\2pX@e7BQW3Yt.EEo>B`3KYa
%LaUJrrF1ElWF1<^'q$3e-_2Cb*gd'I74S[<qEU0K1/'Imr+8=7"m^X)-oNNoi9")lO_ut>WR:]`*,FBN1TkP#9h/.cd?,#AO=]#T
%ge@DV+hg\jO,5-LRW%&l^Sc_5Hm9uHWB)]O/BIih*m.:s*PP/\OX.<\UIqsE6U_1(MEd4<``:`RXH8=\WP-G8kq5,>[L<)f!!<nE
%,-dS(^[<NBg!#7L6p^-Cm//-4lB7lFSZn)n<H,Xq(-UKuEARD3Th^6`nu;2=VjY8UQN+5^KZFmcl^k#JG"8''&H.Dg2G/e2R&Ti'
%V&/V$DJn!TGs>A'nA6oaW8`)729+#&6;iJWpkE'iT3n,lCgJmIs7WP*Pf:`h;SdE[g&Vfd-8r0L<*))S*0)Pfh,E\jj@rE>dXk`:
%P\es/MZl[QLa`oJV]<H3bnpD-pRu+GpRP'n&UHm\k9IrS$cnC8M[p`=o1F-dV1_mY/u[K::/t=jJRr4!a?Fq[oPXYkQ#(Pq`5UX/
%1JlTf(hb/q53I,<>:p+EDTmf$AKqs)pja:2dIg*k+n#rK!AVq^db0/W/I/R-:$\m6:>nfUIE#0\gksZ!7+M$$C8lmg"oK\?NMcEM
%\MllQKHS9e5IV`bZ(:0kWmP4^Z_k>V$sn&,ZE-Hd4Y2;T%0-&E*u_?BTZaWYUmHNaSJk2>T%)sCA5+eDkWMOe$*E&!71b`U_U<ri
%i'&crP8L?p)&hj31Ds@u+6W<kRL_k[/,)o7?UV@"4==%iBZ.p$b7$=NC&OEcZFL_d@Z5:=@(*]?J:6SQ(qsQ[r((Wf2pr$LaVuGC
%%%@]MU`2h39@=MM4e8<n9#4bh9"Oq6M,R%jkk1"$QsW7NKj&&;rZW*c;i!(goMB[*rquB6A=nP3fDY>.WTMSjD)h*#f)C!%@+gL4
%eaPAn+C6X<Y#*eVq4Hk,,u/Z*EH3*mcS)<D&4[TLjcG(<68iSk<`F5@Q>O6;&Q`'"6JQ?]+9+_ZqY1i!&(r75M&h%$&e9Q6FRA9C
%A?fJ+\k>Tkd>("?PlFpi!ELGIG+(cGRV-u48ZSt$c$;.[2C_l&!^*#iZ(RVqB3C,7FdoH)I!m=X&tJ,WB?#,Y%4XYY'8)b'YS4d#
%P-)cD*^dlD&I11G*)X:NFDUX%dlF,-=0]d5!A14EI]XuZUt\[7Kkt/eh63Ar[,"JtO+Bee>C8Wgbjp7Q+>7G'fe'K=4BE.R>&:R+
%Z[fu3AO&JW68HFXC;.m5Q(Q/`O2n_0okI2^H.(B2=fJ!fg3oSh#44Z>mMf_dYE5cccsqeQ/Ps[k9/bD7hu"76UJ)^6(/,&B;a'$#
%KVEH.N88UDn<OmKfFJJMTu(]jZCRaJ"U!3?H4$f\kfe+)F7?h<O^Hir*YiOMC?1D%hVnnlaV?[sj3g\<d@PDP4r/ldc[":&ml)UW
%(UX.o]In%b<*5j4::'pU`2$JTEt(Ka4p/Ipl3s3Uo43TcUZ,a1*/X0SO3^-PK*R!XG&EiMa>R96cXeNANMnc2fdfGCgp,>R1*h7.
%.J`nS&7G^Db%"5*ncWE,I5_sk)D451T3FjVg`q</oCtk3eE,$R=$\)s9`)>3+IZG$lSKhe-RiB8q&7$.)k/7QfiS-B\rN+=(@3X5
%d,4SZcC-n430.hW=f],0n[_0HcfX`$bX88&oX'AaQ/3m1kf?B0He2%_oAFNg$PF]rNuO+7f>rF8i-D5H*dHbtZiMifhq.IZQ33D@
%bo4LT%^A.!"r6S*bf?,qbVAZ8T=\K]%U&8Nl&pGg!?9W*9ML$K+!Vjm+j4ZZW;*^dmt1[i]]K.\RK2K?DjctJp\-*on9f/(o_U"K
%pp6R*;nm\)YBstS>9E=r^no+!d#65>:VK6T>o-ELl?T\Mj8*j`>R9b1M:SSG\?Eraa*t`^63"[3X0\'t8ES'N1\1Oejnt\DPq4Q"
%rj=ea+FW]7?SiS%AapCGXN'flTpO\nY@")[5T-2NM[BU(/&_Dp#!Wj!DQiYfK\r28eb,H$CHGf?fl/&?-H;Y:0Kf(JH</1<R5]5H
%]O(ag.6G;r)_+@RMgs$3:"isRYA]=MKf0LG[itRk?P<oNALAZ!0bt*YW.q78$\oF(b,g#?+6&AsjqN\Zg_H#TR&ni!V@68`:7qFY
%LiX2al/NG7j:`g4j0bjpd=S4]0pPZGDZ)HS0T6>Er:u.E0%*fkA1E?a&Q:k^]=2)_Lr`G/]+:en941ig&6;>_ECE.&=W8@8O6$GN
%CT7,NI5r@CqB%RYO;'Zh[uZh]bFBb$25%C=K+[X:Abj_!i5l]Ma`HYWEQigr]d:a&S%RLiANc6=?W!@skCCGsP-**_8OmuFg*E-t
%`H*KJPiKm-CD?l.UQ>?Ai0R>DD"r@Xl4Om?=ifXk]4q(MGg4^VE/e'Qip!LGNLO`s\6n7CKJcsJ4KE(l\mHe9B-OjH?c<\XZGsU'
%oVc#%S3&f=nBlV9f0t&#,UC_cIZde<WoI(PG<;#C_LN<SF?ai2jLbQke`JI4=s`rET3pa$IY]"%D-D+"Acc_U'7"VKU0$^*%UT[M
%6q(Z>JUMb0O/lg:F?WLZ1r+_V7=Z[7]c9i'HH[<Mr8Ss\([I<EP2[oT#:/ICi.7P4hC^^GGB>obO[kZMK<1ko`no\CrGC_4G=n$1
%)"rae,@M;!B5,JI9W7l<o?lPAm4?Jq?QF9oTtSM'`C.'SYGg#gf61KU(0)`U5DG1:/\h!"U4]s:c#e`tFrWT.%?oX='^.ZZ_I;aJ
%9:4X68%nlicr3Sr(K(hedJS6ZYeOYX_8YOVTSYJ<`iJ]0G0<[U.NE1UO`!d(&pEf,,)\Lta:r7bESr!\K-k\0d!d.]VGs=rP46S#
%11b#eo34>AP,;'1H2]-O*YBlEmPsFs_V"^[1NjSQTr_0=htN1]FI>Pc]%I%bO84$G6404.n`Upa+AolE7eQu1T`EiNQUpd"g:R$$
%)22ap*'0I347T-2CW*s(Et-u$Dq%I74c:&,p_mf-EA^c[3)f`_;\9bX9Jog1I^^'g(gRC&p`,%g+u?T\;I%hbXqHRp(7FC%gM%[5
%9N)1#I)pZmgE_Gump`/71@:G",8jG'MS<@d"F8FEa.P+U[M8h?6@e)UEtoX3?^$N5D8ecddTR5dJ+Xk&N`ZS+,mbs'4b]n9gY5ZK
%Pm:"R&TFQtRPN88p3&$J)<)s=QOm'!YH'?gF\I,,BJ,q34OM4UMBa1@e;@',Fo3"67$C<iT9,&BUq8mP28f[f,Y(IMg*Eu#AL-cW
%kD3riTIYM`;_"]1*0lsQH<LLkElRe2I7<D1UR8m:>!KbO9pfm.hriCGpKe)@g_hrP3=^HM-#R]I&!2<1FTsHR+TR4a3%qWI[Ym4W
%VUh>J7;lq#!U\\5du?Rl0/_<3`_;mo>D,?6fdB975Ar_c?g5Ym(tN8Dj&G[5g6U)Y)kM_!']E"JML$U/0VR:nV<7L:*96=U%$A1:
%6"k=hb!JTIo9N8UZA@PYg<j60`ISYeoB-QuW2/&Z4bb$;LMojN)6.q[DlS&3FLp;n4dDC=1>gQjVnC.1,Yk9#4K:8ndG;&]TZHik
%AfJ<3n<GNISB4WD%`e9LCK0Acj32Cr,8>Bk'D&T.!qlrEeRZMd2?M'eq[;m5R(@"S'`D3#*<a.K*I%5Y8CcA"HVmb=/#N42p'ca:
%LUM&do7DIN#b:c5OE<[jK<(m>r7YNeVsAtMrM3\:<3QZfm[YR>laWiobMn'eVKZH#IpN+_b!QN<q7taf,[g!I!5)4n`BSoe2NWrV
%P6&8-0t<.`?I,;u&B3Vc7!sl9P%:,:RV[`qj>r^-Bi=p@AT+^rbH`])l4:E)Yf12VpVQ)ZXqj[lD*G4%^sPb"^Ro4PC\\O0Vb(>>
%iP6p+gr%%M24+sp_t5b0OC_.qaBHBsA![pB!DUfS]Q?&kca:49(_7W]]G'^Q,VR.]<<Ep,K^##G,qM8/GWT!rZ+hP/Q@hUi#HJ1%
%Yu.ou!&;>@_huDc=lQFea%tsr]ML#qLV)i+=h'OZ`J:2\-u_465$pF7peG8QU,*\:)iqtq4%ki[]^CP8g,i3S8fFcUV1(RHa>i.,
%Y$cOjF]qVT%j>10B/qbZ"r%26Cn=gAdS:"USu9@LOiIJ)3u#T%9tV=?j5M9uCD[un(;RaE_RX<5&P4-ZMNnV^L$4"3Yk@j"LQSHf
%oV**pU6ZhB6mNG[?Q)fnN%\fQ;Qo.L]5fj/i2hqYW[9>W@'tekk1-_u%>Y3I:o56^=MQ=OOYcYse/iS&MU`+Q>U`:O(F7P@(2%YA
%8d.159/an&55%H$@?&5\M7W_-@*'m_SgjBV":iD0$Z;O75#(!9R?GM1;.ZR<`fa;>k(&C%mM98]!g\FSF+Cm;,rT8WDpT3]l+Oo@
%H_ePJd<l"jl5lD>/&gds#!ul@:=FM2Au,KkJ-_k*e8N_$m&Q3"SJ`#@+o>%k'H3(@([((,(.[*kG1b!k,X>;8SEp%r2fRi'G/fj]
%$02#LPii-\1?PMR/9DaG^6nk3YME8Q$Vk0[T1S9SUd^T[5-@'P7%tEdK\t$\MeC-Mml9XQc=0q^3E[F[f*I55Ldb[Ag#5@eibm-e
%oP.;T/lK%Q*G4COf;F;f"Y%JL%I^(Io#c/Odi)e5/5i6;C^<tF+rN5T/hEQ3#hQenG:X1<G6s:;5q(_)=DS.C2[40X%kQ5?M%(`e
%r0k#cdG6h[=L&icX=pYJ4QO]6qaJ4\;R>_%VWHK,.0Zk"GEE/M=gc/e:@<n!2-Iam3%D`\lZ20OLJ(g8=<:!;UZG\J"T,l.*&$OX
%Hq/oRp9Ig[[D;)iq\E7mOWak^O3D7^d`Q,+k*^TfOB8#$G1SK$45X]OYW5d6`hVcX82Z5WA4E&e8V*bLY5J-65=HY?is(UB![XmS
%)ub0T3eeY6)YY+WU%tr]W=#+R!naC/=M,A.e`:Fd'&H2&>/3#pi+1c>W;F31NWVsp:4@9'+Tpcsc8;+m5BQH5bMj8Dj8N!$H9bC8
%s/;HUJgC67-Ghn\;U2_'-.X\N;nPQKDB%CdVS7R],Y@/)(c#8p*,#90k<.l-;/3Fa70Nm%n<ZPX_I>/K7Xp#$_YQE/B9p9$NWPH3
%l4Rs7U7XpF0oacb1k9cHh_cR/Cpd348X@e(cL,([]Z5WsM/`>'$Trp]\OKrm==q\8#k>KUcl6DQ7s&Po#M4:JNc+o4)iN8-RCASt
%*s3olmECIi2K\"-7`(Y[pM<*uPDY+M`"M8Sa':,+lP.;CmuL5PY4XB8H"$g+Z0GpTJ&ZJ7>iJ7l+KYJ:4?oJFJfeu47)pTEL?Jt)
%3Wm#``eVlS&a/.D8i#K>LAh=CPe)GUf2i&5;`2`L1NeZ&$\U+>qJ>+M/n>s8`[ck=JdIKa,?alN:rLnTba'C%<*J1L,7^eS0s=Fk
%S:V4G-AlkO_kSoXU%gQZ8q/!K<UT#p;&gHiBbb9L87AN%pP#=No#E&AGnpWP_rK951+WCAC1nc[D=-Mar"9rNC$.`*D:n(/*[]d+
%%aT"nr[!%H'"9a0*Z2r<"60j:MjJ5f-UPH6?R"F:5HkRQij!b&X>KY=3DPSs@'_j>SVY@siifq5J"=;de6rK0Q<aK,i7pZe]9N5J
%8$Da7`BT,^hX!_DB<q-=\qMiqZtd'&/`okY-Of@L1j$W/.JIa[EF5cHs00='`?/]-&';B$j4C@meB&9$mcLLd0?<!D0'58[0idOu
%\jUin>l&Ru/IpX569Rm>Nl!/#@X)qmiI4oQR!J0X%ZFp?/b[.K&3eP-Eap92.B#[NUc08p`0@EcR&5\<m<^o'4Z_YYSt5R9e0Tde
%P&rHo#iXptFOp^]AQ)bTNeNH$cC#.i5>`bP2F).od6YDp<?kAYePL7=>8]D1F^2o];dceIQL&h;GrZJ=IpGA@RAGe=IaFU9WjBja
%"fs&Ai5"V<gK_2qA!n\qqq&Dc'JOcbV01"1OM<;=Q'_a\[Y\E.O#KB:imK]mL*"+9L8%Oarn4qDXpBQ9c%1fkfV68hBb^KQP$A@3
%V,jKh^goMI\R'3i&1[Pt_DZ3?19nlg:iri!;fV)000t4(Ya"Qg->CL?YA2B'ZL4m)r>'5&UV,\Vac[]eXb<AtaB$j'#EJ(@[o$.*
%!aU["-Fl"pQ28.B$23#Om9s;JIRH"sHp!Tr"7O_b,kSm(fpFPD`N'fIOodaFX`:mir_o*]>G:B7pUG#Zh^4uo:t7J6AU=]B;3;CW
%`BLVV]Dj\kmCo#XZ[t?6N`@1g&q%P7r1o.HHI!L)1^ieQaY;0``YB/S,r,!0hDt.c2Wbi&?Re7Vdf6aA3a@V_%=V^0[d<$(9fUjG
%0JRo^Z.YHkR>"s[L?.6PGAA_#qLXjQ#H0.G&5\"_YV:39eNu.B06%l]3.*Qtemo=@^W*0R6C)<cm)V'Q7gA#."IDupDFY`[fK*eF
%9TUrGS"">aV40(2jFCF!CG:CA.^se6YSKY(5'eDF1Gg[C3Y5m-#3jispD[7R^bd'%].b#@jWJk*8V(pOA-8<+mLd`@D/=C;etRCZ
%-=?%>m9h)4l]DpM+sJ.Dl1rkk*AO>`88Q-7)itE2N-h"8+I^OJ;d:TQV)!R,QW.L9k-iA+N>.t-do&S^T8/<%-@R2F\r0nugM^oJ
%71M>>jMll\B.9hC`C19c_X'ahhc"YKca[*0&\`)9I-(/FOYP\Y(!P;pg#JD2_CA>+XFnEh(JjuP77<XnT05t9,qT]2;a>m3S?[I;
%dPoo##V7So#$U&"2$/"lX>E!=1>_4+-@j]U_T%(K-+([^OrKh[>#YRA'!."Mg`KVun(:XoS/>U&RkN[LZ9]H;#g3Fg2\^<Lcg8nO
%WQ-NOl6(oSh_YI\4pNOTeKSSeHs+oEl9NMqi[G?<"*;^-/Z83\aB,i7#5htB;E"[::?@5-Naflh'L6)Op8ZYpd>3*6)&_lJ_HeOl
%27f:%H9mg_)OGL`&ZripSW79#P(Tk`<-&IG.RL=u>I:K:n:>d;mX`>(jlu.XS,G1,%@(hM.gKFU[?IR5Pqk822m9k<NuD9U[7tk'
%doHAL#otudZ[:%$p,rcF2!ZFLV>u7YEcFTt[ubg^B%PsYI@Phe-ko2fi=Q&&rWL,.8BnArltl6O7WVYJ0k:'=n:J48#Q/]*%k2U2
%Lu(pd_&4P+LCfhGfqc\3ZXbJ`6bns#kJHecZ73X!baa=4cYeWG9.lLK6^!h>,/XsdR^3-CV]0jlfq@kBWU-4?_%E)Y<)A^HTd'Ok
%2:G/-$d2O<gP6CU?j=i)9:g5tZt>#*I+tjd(BE6rk`$Y0%P8NVHae_?#`')L5m<p_:'HR)TXZLD^%=DQ[i/jXpTcH+`TX]M8gq<;
%Alq=1ONLpA=@JHGS+];0-aE`2_9>1OPijHihdE[XYUM_-"LE=s!cmqp+@Y?!ceF]i3NEE9&EFXIZq>WdaAu\u5dqe!77[I0XPe@:
%#rAeN0fNi@/$<R,J+]YL/b9j25VnmC(=)2WAEsqmljbr^_*Wqh"spK&,"c7*>,O?8=[ZFPVMZHe`u+t:i/0K1?o)^P;l:B(OmL&F
%RFE]"7,n#=68k^&(^]d>FjH:fap(Ro!g2H7Y-qC_lG0^(R"5^bjT#\-6^q!+^&76pD`tJOh>&124e$^^3S6uVc8[A?=cX*[<0ril
%CmSo?_-.-OWK[dt.)\l["I:Z4^DA;0m?//ppeO>8ND.=?d-XcIXClj<poAi#M!nD@D,amPKn'Ug1j;hJR/.tlZg<6Y)&]8M?E@1)
%&B>56-#`klF_eqH.`6TX++OZe>"f_fWMbTDp1^dW(7Y#-d[joNkfE*2-LKJ;:^^]ZYQ^6,_2O,.'@4TWR?cP:Npn)f*RTJ(i)Yb`
%+2g$NAq9o(ar1e"LEK5:645//)+aI/0jSoO8sbo6doG7CMAM=c/S<(<Ajt2H&/FP;=M>ADQ5=/5_DOlV'jqbjXQb=sCc0$Q;5;%b
%ij\FC+YMHg6ON2Xn*kW];Nm"7d%`BIeY0)MM?ItP?Ai2Y[-%u,,2cYlWN[HLFk5hCLosYreT/P,aV[q=$b^uriD-?-Si'XVl2s[V
%oYPFWNLs:A/#O2+[5H#;?<c+9N(]+ajeuj4^a3-rG#t\+Y\__;36^^58$fF0j:a!VjKF(28,2]U-qp>tjJ6g<X8E$R7=((edCJ`u
%\/g6(Ug-9W87"u#8Z[*V='F*cV!\0pQ/eg$qFbZ(OlRdG"H3*VTR8;KQ]C_4?`H9_]XXdh*ohB:G4)%PG!t]giderB5DuiPV*cuO
%](.M[Xb#E4)WqtP(I;Z#&=9&k<J\KOT)>F6WneN]ZZ=C+Xnu@+m=se/!bmcL>T!*soj(&.;&'i^qd2srY2RfF3"P7?aL[m1cfbJG
%+29E80uS-c['P<<"c[XRgh-r(Yqe9kMpkA5>1a^kP%Suj.s\oo%$WE*,Bt-5enV"IP(N@.Y]Ltdkad[XZ;Z6V5Fu=UV#PGS)r_lV
%Q%g?i\Ji'd=\!e^$\(cdT7:`EE+%?6]d_sf^%cn'#Ur:Z:[RLb==*VuJgn$jX[1#eNAM?d#kI9pL.'P#i)Zo[:b5K'l1t<YN[/uO
%fHh[^C$j3GDY!"4@<RrB`P:K6D06S+b[2\KWtg*nCq\;Vep\Ujj7;dO';n?*>(6H-:pc3HRsF*KO"j[LLCk]N^5%Q;V[i!T[k+50
%hE3657,nQmq-f^o2U!U9h`WDO(0OTBf$.b&j^i>/UjoAq7ahoi=n)`_O<nm+\<m3jO,DQ!`56$4#cTZl.iir`gE?6K(eBQtn^94^
%;L'""an_*Ujt>o`8U-j'fOHP$!]e.>VM;"l[.CGD8p3HG]S3V<lTVh@ToP@f9QFB:TnbF]JLCejTC)QIom3WJ3fF49F(>G$b._:0
%p9ALbD:om_+io.PI3GIm7VRc[.un+n\[RX!"Zo)V55#"N7E%I:!QQJb4Jiq(VZJKgL20NLV_S#jo\u?)J?T?n+NjAbY%RmRA1@$W
%?J^;QOC_Z@.fk6Eq4:&B"^=Fc7]e9D*-8Ub)m,gT`rUV^T'%4\?ilf4\#E\JAFR!9btJZsN0<c1>)9s4j,#)/bh:LQTiWT^Tms3m
%_NZh8TBg,e4B#S?'O)nY7/CU.,5&ef)=#EcU.KAL:.0)WIt4u%O/O5UZ?h0>_U>U@A^'bgM[?2@obc*#'\AEVb<Y8hd$of"^Ot[*
%1!9Wa!X>VtC0ofMAD89FK7Kij/Y+*IC(`p5g03`u.E5bmilK(2@YD^NK92:,%0:0>m3Y5C_FDJ^EN<RV13TZVBF\ZP.XQrWV#fXJ
%n<kGeVASPo_sOHs$n+,C&X0^=bn?7M,W$X3(K`1sQNQIf)1l5JW:mi^Cf?=111C&5.?4Ht;?h[B)"H#tEpQG=4Jkj>O8Kb3MtMdq
%q>L6Yi3"erO11U=TIkm&L#am)ME#PTO4AJc"u0F4Y%A.HY>T3dN,^b3?'O1/!\V".87kuS'kBcBQBFoBe5]/eo'BtGb\CZcN=s'&
%e-ccNmU;In(:W)eiShmJJ-/6;L7DNK,[]@qH5*3WWjg#Qc>7u?N'lA=j,+HN$iG9LF(G3rgu#"uM\Z@3f5?_+)B&-Yj#st/egU1@
%_E-k?22_+a\ESrN`/@fi36m]8,sV88R2L.rn%fotW1oe_eIe)TBSnN=o>#ehC/eg5pJ2Ck,"<X>+ip(2ZJ#.@!=&-JCn,d9AoBqA
%D=/IFS^BK&gC;,SH1G[\9G^2AU5u%RkrG:WU5t0fV:c^\;5d?`M^0u$r2oJL=lWZ6&Q?X*H'B'9nXLj9%*@ucibG<WJ]0>L7D@Q[
%>(./8A._5q$NY#p3EBOQ/`]GS50Z^!VNZjHID+?Vk[Z<s6:Rje;=R!9VZi!g_-J]T_;ToCRUHr.Fl"fu#-bU>V[em",oaG2Dad,`
%@heKF'EJTTY%LYFLn8e/hNRf</)c`,rjGAh-:/c)2<1tHj'F'eaF97E_>`Il*AA7ooi*H%S_7\o0PTVP&&S\"BSi\U=:X$*`,J&,
%:i'0'!nc,g@3jB\&XIu?`AC5%5fek]%H_01AqP-)M8?\4/D4=!3a5$=5[\=]&oZs(K:m&iMpdRpC1(&-?IGiVA3/XW,hYYR#%qio
%`drksaQoU"2)gDN$'*H,2%Qo;+b<'6_J)WWYh98C2NF%+fLRb#n/1V2a,sS8iB.[WSJVUCiU\0u$/oiAHhQd0D]OT`Rl-bVqa;Uc
%BZ.HcTOP;ZPkWQQ#Mh43XfNKIQ0KW4"f@Oi2R*Ha>M/_f#FuRVM`7JgiI!q'KMn5C3t7Zu!X$p1?ndGdH6)`%/'N[]_B7@sXChVo
%-N;5D)mn2p]l=$FIO7F20qkjS_lst#K/,&i)S$n=.?]+^N,Rgf1m*fJP4aa\W5)ZL!,'t&=7MlAp?P_pIQJPE1M@D^P.9l>.+9JN
%VrM5)?M\_"#$3a`QWC-$kR)m-[ho*m(\.*IJ"paPfZ.omB*O>N1$6:.;U'2biS\Z)/Qs>YC6NXL@81lIBRMqRBNs+V<=0LZjI+<1
%$N%s;>P^V*ElNpjMK,KTqLgk*[#?hJi$?Og?B$HDf=F2eoS8,Gb\8dtYQ->d_ct,_'u`jsf;jF/iJ=iAWu&0A\0AaEU/iVhknU@6
%YN&_DCa(_KlX%nP,Fi)HYMc<rfA`#?g4@5QL>]^PFM#Eg1I_=D,Zsu>jh3'2%]j%I7fhrn7f!QtY`*WZKPo'1#&Ifr=9,eJ-bsk.
%KG@B0,U!Va*`HH<Sl\)V5$Vj^.e'Q+?.YSVJ?*fu7t.$R`);o-=>9NH\`&\f>Sp$k."SEU-"+EUJhHb4V(qP=I;09GEesgt.!:1N
%',r9@9fm&p2'J9SJ]ZWdek^;6(bq)\iqNj<3Xe%cS6re5gEU_'_)Wkk1S;Fg5\XIYK)ZD3AiqGp]'>]KKhWEUT-S<l,0?#b27M=,
%0pE70>o#h2g^,Hh<OUV]:W$+N0"?^:_JdDQRhl(4&+Da@1md8Yh7Wh>cQ)8YK6!:jU#*t=9:@h[DG4nU&=]BOm4a,?a1gmc)Ts$*
%8>cV,UAlum"?dpj3Q6<1B'$l#eQ85jKsj2L^+PGcEguS6Z,>VaJ=q)AP?2I+qbtFVSuOg%Ru(B)+<`f'*_C.]/H\6sJi,GAN=tOl
%F+bUcAB8%=HgOJJ$U)FO_NaOAq><@C$.\)6O?Y4bN<V'+S#W'U0T\bLm%VoW,Te),fjtgt%\lrJN,.(a9g?(G9k(ZcPd]IPn[+b'
%9.ffoWY^[LEu^#VNDel8'T>+T>eQQA@"@m2=gKb[eA]4O/^H;JMe`T\j`%:-7$6Jtm!0;V3Al]?i="9T:],ito@>h5`#-ekk/fL-
%fFi.C*S"JNq0]j7:7k5)UoBa(Do7NZPu]^/"[2b[_0q^hKXAb*lGfBfXq_Y2;_+D3m+4dZ5aJm7(WdpR=jmuTW.fm+a`58j4+%Fm
%_f$m9d?75\it&SQ]U".XTehA^C/`"K[`oG#p<Y@!L0e[QaW(Vc.'B\p\rNRueU"`K)CF7667Bfi0q7"67@&hu19P'K*;QlfA(t9A
%OC`^W-<033!$/rGNBH>I6g<p8Sc*cg-#ApIOq6q:'ir^OgR]L=1n\>`O%`"KRn9\t57Nq691!=hP!N_X$:E!?7[Hk+4k3<>\9i@c
%,>V0BM-'g01=!X]PiQVSPc0U$n7F"8>lP_D;[-ZLi<*jqTgT]//-itjS9rae[<O>-AAe*HbXbi2.#sZ7MfrEEA8lQ)V9YQ0UB[2D
%30@p4ig#Cd"BM6\-tFq^"e6i30`FYEG.?!:S:nhDXt>QKktB"%7H`Uc$:8T=h;3pm)o@L1GJM9fA]9_.ArM^f_9jJ"!&Nj6`a/n9
%re>Rc.i6XNVZl+d$f:P'L-#NT?mS<&mSj<NaJ*_L*l0"!KQ75dC)AC-q(r9c"KitM%9SJ\RU(pk<aORV#rk:dK!0k'Bmn^SWF)SB
%@8pi;1%*(^V_bp":<U$s1)4Gq_?FF-odQI%35t<t.=D(Kk3c<0BI%lMe#62reA6B.E+<9F<5m60Hh7@+9KtT'%r&d5!23U*3E9mV
%3/9i&&US%#$2g-MqSAm`YaJ^c4F1?VWKL(dY^A?HNsZJoa=BP5^(FVUMnMq19kO+QZ'c[<Q;0><oZ'_I^_?6,<?/QU(6X:(4pD\1
%g\ca:iCB\8BGJoCU"Vf'CqB>+bW/5:7d3rLQQZDIH(K]bp]*U2Z2E*(f.)9<\i6OHCABI0$3ZZiFu-p6WC;?*QaAPWcp^'P5Hn>R
%WdK'89?2mYG-)7K21P.bE!tIc4mX;mMnD\sTg;`qCJVba1O:iC5)]W?VS!b#kMV($/B@+9ATVP::!@<)a\7V77\i)9eM'^4-N=Rg
%jF54j=*-K-O[736S#akfdeoctZ@[sSP!>N%>`uMq9\2?>c@QKKO<i(uk5"Oga0IJ=/=5_%$+%"b]1$S!JRMZWgt$=\>2sVYMb9f;
%60VkbHm_CC<7*V1<?UR<"t+R%K,<1*g'K;TSIS`7l7kK8RerqC6KV;eZk2,HK@`o4pA>N2+%,c^\%=PgE10_P%<tR,)s$YnLg\<\
%XpIHK/rS1&"21=H=U[*4hnRb:F[)q7poNnIpE&sTXOg!p*@IuK-Ktjo[X@d2"[]o_EEE7i/OZsDSQJntV!K&T@V&B;Y&I6@f^&pC
%]"gZer*9_@nH;]2+'o8^$t(OIeNr[?i*&(!NJjMjBbes2_<dk6H`BM[Y*"ME8/@%!=F%*)Ee1Q0QEl6Xb@YqMQd):\@6e&1*c[@Z
%SZd^s,[Va8kGtBR1gJuee7Te.)'_Lfa""X'Db5(h`+^`n_"WC596UmV(-7"S=WTcaQu7oi[$o<!Z7&-00>>@u.ba/2I1n+q029ET
%(P@Dr$s;J85._)eTsUi!o&J[?OKY#Jdab66B*&iSB!lRO*p]]#344!03@hSFI`]QaYXR`V&<+$E*TqPb#09X2F+qjmGct8gK)ZNC
%4C0+Q$ppj5f+CAY<.pJqMn6N=#<NDO$ob$;gt3hh_+GUN=C)EZ9B"e79#:=D.#MG%B&FYdX9>t'GGdkNqf>2kONFl_I:K\6G[8YT
%&<JiY*+!cFdK'mdh5f?.k-=B22M]QQlm:lCosS=5VOENYG7U;8c]N1*@nb$o7;PnJXNH_8S7!Wapi7-)@+V7#)tuGs_`I8YZ^l)I
%*P'>+YD;u+8DsK9r<s/9(6XHL=nm&i2_h.OV3;9(E!fXX794tQ\ROS_hAl9sS?dXfogXaQAqqLu:@[+9TnUtVr#24Y0]i$LIfYSn
%$#Wcc?]$oH9HB_j!>%O-)Tb/W@"C.$hK(N(ok[UHCK4N2J7U_%J>KJ(P2Udk]U&S^b0d6R[BWfN#3EDAg(F9\f(`4K"\>t@[_S;K
%P8L1B*j,J^0Qo6f`VS&$dieB[Upo*@@3>Shj:U^bFgH+!J;(W[oIR)=K;\cKqA_C!\Z/A@<sC$Sab/!+m2'[pmZh,)5bpk]$gW!5
%'Ym<[X4o57WKBNb_hcO&6u'NeXp@8E#1M>,cmDM`Tj9Bmb^0]iZ;i"dan-u'0Jbeo7l'i0Rb&"G`K\rd?B$F,5Q/;s$c'Gep#daS
%-1HJ,!Lbe*$*,C>F2X?NR?bAl4&a^b#E3rNg^q^"!F&s>TOF54\uZRL,pG/\ba)PC+$:-]LG[Y/gL4AH-E"`aLl+`d#B:+4NhDqP
%$,[i"+ckUk#Pg)1AJtKs#%oX-35V\P5L&iAjV.Jga@9mEF@QtghdJCaNeb;p(h;J1)md:"+Nsh=m@/K8(]t*N,-aA.@S]'@%LpU!
%Mt=o6d8Y1-96:l)%tEu?HBU6TIkW0"M+Qq@%@C[FS?u67P`b##ARQru9a!UCdM'B<0J\ZXqn9dp@1<DkY!jhVK:1.:=o]tri!KXM
%iKkZ4X`qOkiSEKg!L$)nT@`kGOD%-C5Zs-fQGErTWS5Y7a'"N,$<m']<&SgRR#$@)3bl)6(#`;IY6#T!4e2]:34,mHnPBS%CKSQ.
%QpV`O;j%[!8D9ZoicT$u!h3bLk&*eb\29GW8e8#DoFggSGTf@?Io>*.7,H(i.i&A/7bBl.0t)Z:ITe.h'ZOAI"E/#KihOX2eojD:
%nna0U>tpF,!:U7OSPT3MK.SK$MaJ9gosY!PP0\t9[RT&^C'_Om7)o0^7@1'EH]@04__lS,j1\?pgff#3G2)'$XidplgoX/F^JUpo
%?i?+d(fZhq7hV"&lcEoj@Pe+3]qN1b#rQ\t/F-:Oe&1.^SCtt?,#m[hqC0nG,B\b+3K3?#4kfaH6DQe.XaPV*N>^qBLZ"(Gq(7*W
%W&<U"gdB-ii>pftF7;h#60u+Y[=8.sV&W,#LPkeX:?2tipOTe=nq_*mE+?h.ote&^^pIRm$M7E9N!Z)5P'lq@Te=J(j*0H/7qrV)
%/PPuMHp<:XW'kDt'kbRJN(PfR&AWKm)Ob1WiGP/i3c.d18Gll(\=cY@^f1SG,UD%8).El(?Zfoq=;gM$0`t2Q9RsZIJXt8ZNo4Oq
%n/%N<LLGUk\L`q9!_b"KahP-+4`Cmf&DeRkKo%`CR_*^OMg>Y^8\Qm3.OP1,.i'Y#Jutk?G&te5fY/%:5pkV7UMPquUPG&_(=jF'
%$/7\%/]u3W_@^[;S=.bfdF;VJO&\VYOh2Y,^ijB*$daN&U+jdraBX=R3[h]OB?/6c3Wt/Z.g9_n1%INd!U`3^AiC6Zp+3"2!B`h7
%TCA;'=KC"O&[Vcooj(KSP=]7bVM^"8&`^*8WD80k*0egW2ocr[2A.]m)JaPIFV<1S$n&F1n4*r@o$&!fka!jh$)%<'BCX,X"-S0a
%@3=G2L_PSbTddPWOuf^9I"raZ>mnL&--lqINHI$CW%dO$Yc?>noBRqE8\eG)&0iSi'>Hp9)Gu6%-D9\c8=u&(M8h=MZJ-tY/o(#6
%L$k;:Bj+)^C/l0UaLe`mWf_HP#+u_lUeE'X@='cX/kEk5a%ac"1Z)4%)f"M+5>,M:aPQ?\5W[\R;cKALo/_Id3@k^0)T]:?Ni[b*
%A$'BuT??D!UA>:o,rhp1DA.69PdKo9jjldAg6q5FIi#C)-%2t1UEU3d^VBEKLGB18"[r3Viu<Sd$<uHQfaAEmYq?Q!>R/^l')+$q
%U?SFX*_:>RRL>7(('[.Q)VBl.nABX[(E[L>p7cO3J+@B(e)U7Rs&Z#rK3=9$&+Vg@2ZFLqR.j)s501`n$ge`#5^4Q0CE*83KLFM^
%O&&faY?L+]s6IGtq/?<%WsSh)+9)q8/./D2!0IO@TbYKMJ2+"=E<JoCD\d;S%dZXZT)tD]&dZ?JoABP^f5h!M=;9)<`=f7t^BX"#
%%7f/D3aE==@L+KKMg0YKrDj:ZghI;:jS*^MkWAMsi^KkE%!dOM=?i+8Nj3_G$0[`H7Ma-`-kc@PE?RVT?YqS'.8`3!R[/3IieX.A
%+Ns6X1)r4d6qZc\Gb$Kn-n-!7PIn8!38Y>MlL\'O<Oe=2gIJL5%*.`Qfe_LG.a^m%LK/=pW"n$>JRbG>\(\X>7Y]+WrSXVj)1QU`
%;6L!0cs]^(at>H\+[>ef"W796XJsfq!nSF[g]W62*!%fK!u]G+IqBWRodsU;GZ#A*SRf8/lc7,I_p,TqH][*$:i8=6#Yiul)TTQ$
%2b,6CC6X(*JWcB=4rFRSK]h?9>F11J>n9EkAZUXK-M:c`71L0)#\WT!La_F1^k)CK$g\pn%aad'#R@X'o159/*_LLg.R6U1'+D^'
%!T>b:S7'KgN<a6<<3Wj#`dFLkGf'SQ0[KFP3]MS.bYq'fqPBcWU'?)KNIp&J#C@12%.T6B``.C^r&?SE'F_p)6@<Ej=VVlO*-]dH
%#bS&Moe'$Ik@j<[^kuqK[!p6'+AKcPfE@YYT&6-$keD=dij2)EGpdqjC:LoA:^k>*mqR/`#fXU-1EB8]/?jotIPD7TPP^,_!&!H@
%XrkPBrrT/j>L">:$#B*LJN[E3dLt^@;d<Y8A'?Wo\Dl+>c<g<5EUjX\'E/c;FOAf<J4cQQWE)ZC79s'"7L_tHoWu#W"be)dL*D^2
%NXJ4LTVs,"K*A#Ibj-2-IKH[LlNnj8IVjl0EoaR#C_X=4G)`R0I8+"$O+q-2M2s;Q@<[tAEED"BXBrU4\p(hA`Yl0sjZ's!ec!_G
%Qq.aGrfo`A3cU--[2]b#K'Y2D+pU`t=3jREi8gpi]F@$s7p2Y`Q[/Tb_,K6p/q_M\?W_)IaX?)bF;+p!@IB\rfIJOa(J"IR=Y3<9
%?F^BeN>0#YaHJe4QZIX%kK[U9I]b&Qg2ZbGl]"/&ok,`XXIh]tYQB^0nglt8EI@\KjOs?VjHp?NY:%?L+KS920;3%l+/Q<maKA^\
%:n"l/H<6,HPL`P0%#'D<DO]qaJTTVoHkZ^Z,*.kW5'fF(M3ki7fB16/o3/A+)s\k6,`>L&7j<[[%]&bZe;bL]`V7R6nQK-$c4jt%
%IUk/B`)k()bb0DX-QfNL4f')%lY_rVRi$1<^a(=bde,EG/RjaP1q?,`QE8MnQI*QC;pHU%O,WXGk:e/E?sOW4kTDs3oTc(,X]j4,
%8AVc>Cs@K^m5m`s9H]+N/Ohg*FP'%PifR*+bt]fe#K?#L#[Dl0,[$g!mF2h8!d4JPmaeNpVBO3^C.GXESkR!nr+:Zfpo4bJV+!Hp
%:)L$gfsqk^^-SR9pOsioVg@j#1HQ"_4*tM"[tuM,KP\EY76D7$:BG@0m-!XNPn8-tPSl+tWjl0dEEK.<pfU=f!d4+o;7[C9'^aIM
%FsO(EW6G]:.Z&aa::)O]PHQSW60(Hh]);ID,R8M;hOoU#;lsZt+^/K`Fg!bP@0N&bOo._Q2s)"OX4s%?SZfL,<1AlC5XIZ./W!d$
%m.Eh(gJk@,:`'t3J>M=Xoq5O`"ZM,`>`Zh^gV6L'LuPFq-6XKZQYR9oj3D3^MC8MF!6Aec:;oJ)m=Bt(N:TtuWN4:oQVEmOJDn9%
%"%@g`]6:Wd',4_;b=\)q",Dto%SP-*Oh%^m0<UAV6mMM]^\8eaFJ=]iLS$M#LKc@lIR7,1ei>7Z[37^S^g1b?TTG.I:B/1:CbhZA
%V>0NTM&7Goj7Q@s%7WeD4Q'YI:$`Z:3sX2JZ^U1.MO=g"?@;m982"aYn=GB$#IbRdl>+;_%O7*:<2t&8!h5jN\M.tEL$F;1_&uIZ
%Z/]a5B-XJb`1g!t'?=W\*O<1M'sQOilP&T^b1)s.cI#/q9rp?^f4Y;DAcUrm"7,IubTPK\V+7`%><73U"7DpDG`]p&7OsD@p$M^W
%>k=6EE-1;q.?J&P(Dq,$q=8`$C#G?pd6H*/rCEqf/IjW@-eN0i%m:km>E6huS],"g!qkJ+^VPpJi<hQ!(cX2O14&AN#IkR]lCG-$
%Z`,fs@E)>o@A)Z+l_ucb.aq@-/n;(!ji7FWD]RJGKuf![8:pAUa\16Wf>q/,Kp+LZX#*T]X^D#8)lJg:*!<Z:>m`t*k9CkV>E2.:
%gl/+"HM0*C,@`o-33X91]J5?l=aZ91"8n*W2`^T[MMS?ImI=oukPeZ%rR3Q->F0TK]Vp8p$nNjc%p8(>BK:OngO?/H8AV"B-N,Dh
%W`+<h+5c#0.s5]OQI&@+_N;H*r_V6eVOp;#8(3E`2'9J0&.=OMK^3iHhMojmBOY'S:"&3.0X)tFhT@tAToYABB^Kc[YUhTE=6E=T
%&]u*dW\GG[#*K7(]m:2QPVLdQID@*SnS^1@o3!>lQ%%TmTTQ3Oo>tVIG2-bPXGOq6/-KR55"kW\[t:BQN1Ai(G^s+e,qg:>k!Q'&
%EV5pt'Y$?#/U]dUa?IR%MUj&X$i'$LMP-63IU3atf!faL%rT[8D$*?d]ZBtGZ.q\_PWH_E\+^JZChk#+.Bj:JP(&JjqT?mBKDNYD
%DQn][c.5o3d/"Y</`gMhpYR_PT9qTkJPd>TQo+4\XWhI2:B$ihX!Bd%q+H;o"u5?)mq.fjjm+N_.DE,(bk2*t]fN@kKI8iFT3;pF
%oR(DI(tJ;t.OjS&*\j[nVFNjZ"&H=3K+=#&IGUS*WNd#1pXuBCUQH_>-=V.91+KAkEs2fJ^`74akCUP-f@.:0JnlLH>lVV%XD>YV
%f-L1IfH8d9.,d5AJt841leHoILW+@ZN!Eb8D[_Ga&V'L`hX_>UOTNOTC?I-t-lS,5BpLA@E#;#'@LqkN;Y6-XLX,`@`<5ep/R48i
%/UhMC?_0B51UhFOK&V<cp#d.-"h`Hp2:sBJ*_5;;J);=o;Qm3p9BK]=4F>sa%Y(W-'1n*Bg?;ZV4@/B2Ui;C'\dgbbTG#=AXL'RG
%aOFaJa?DE_Emik*N6I7-A7oWVV.JXa4XrkG\KsUoSNCK/r_jlm^L_LXV0J"NPq1_M*dMZ)qrgX?BA3,gCf9tS=stJkZ4!h.=//ro
%;,BSMC@]gu=C?GMoF/^)P4C8%7&Qk-rK3mBo*jG8ZKruF\t&P$1rXdV;d,F1q&WpuWD3gdmT+^E;frg5NNa3Q6T\X/c=<LQq)6m2
%M0"cI37Y!_`Ybr"VrGpo?HUL?\(q*i7/,[cF#5+::CW"T(1B!doX?1N94i`oO!^F8hm1I<V1gN==HDdA&]aSO:QU`8n#$Y^og"un
%aJHTSc`l>j78cA/YUm,Q0JF1!!7i=N4dg1!b5'O?'q`VQ\m>CD$^,Ybbsh25^\_T*MPr[FJZbOjrVH,jF:L/GAJ\+N;jTlkS!N/b
%K@BSm/p].236aZ4,&b1)0+tPo*of)</5d`EU^mQDUpP+4[l%d-/^Kpj8Ki'R909tSN7e2:h;/$Pi(*p:6U1:38d`H.,Y);pe!UV*
%<['[-aU-F/@n(@b\)AA]7A>dkoT3+KZU"/[Na"-Yc.t[(k%K0?'$*9CRV=-_TW"Z;fuXrt@A::QRDfe$,sB=f.<99<I=W>n=AV=1
%f%o3&=H:rm(VpNDaAlH6:/Eb)kJ""V*j@c?dCFD0Mo@nVO?2<t:RDPN4g.p8]m+QXBnZ/0;1+]:&-9B!$OLl1c..KsN+3)_4<HWJ
%8[2GNS=h\"@(/L2"Mm!TcDN,PdbE?3FN>kfoi,QEC<CG+6";/5#95_0@.2fWkp[,)ljU]E](D?\i;`p@pUV0[\iE:Mh$M;[3kg[L
%A5o/Yodt0R")7HBjMBoZHXYM6@s+u9aY7:A>e&&2J/F9/mfABgj5clB%A@9G`8,&&cj3pc@"gaASVm4-?O-N9hSgT^`ch$'J'^HW
%`CJ5noC.`>>'nkGE#@^Jmn=g88=DrFUHg&"6&LLrPj?d5/ZT.!KZWudT!W2,+Na2L2_lhj4W[Ymim(Wrqq&Ud:X<@f=7i=s4W4!n
%n_Q#G!RhB573%,94[Pq>b@01Q:AX9PkgODW=@qhkJj+-Zk_e"p0+=ojq,ks=$p8\$8R"h'8+>1>Q.2'+28,I`IuUX:6YY`ErZ/tn
%Y%3#eD+Lu(F8$pI9.`#nE8B60,iWhD1+9TplX%qg;mGrkff^#OI^T^;ktrNCN!i&,hqm*MYflZcm/iYq9b.ed0OkVX0mX<:6`%CM
%^WbQ-h1Si;[!InW0)K*pZN@URqQ6o,n>l?<Z(,$Z9)$oOhDIk%JJ[JhOLX58Gmm[Pp0d5kebR6&La2<KnJ4^lIJsA->/H>IXnrJ8
%3GC!r#XWjE%0rC?hnX'>_\WfC_E,\""ebauVP_t![&?+]'1Aj#l'h+Lh0XaDe^M!tZ%sOWSB%3I1j`WW?6s%YU%A(t.MXE+QF.V8
%_f2Q8=.l'R]0Z4ipR,KOBuGAX."&E'SuLAT%5BjtBK:7\omeOWYA9@_e*tloc<Ip#WBV5>d+OH_+A4go68:,?hd!bs+,5oJ9/jl$
%BAi,#O_etRq0?cK!s2Tb*A7(i>!N_f/(B#'#p@-u#:`7RE5at(U`2$1-]/6P$eWe/(;S=Tbf[8>OTPA?:KWZ4AH"</TY-FgZsI$&
%/9OH!7YR(+&ra9n\HB<[ldcB"O/UiYA%]F>kMI-6V@M^16G$k:mV:RUN\<_Q3]$Z`D!E,g1WQc7GuX:d_UUF+TN75R1^hi-7BE6f
%lprA'DrsCiBbM%ce9cuQ&dh.6LNX3*@cCnsK_8k3a^8DWd'2Ir5q`80h@\pTmpo%h4]Wa#5!6Xme,/9i.4f0T=m$snC;o?t!6dN2
%eU&j"<\2caV5tc3Z5S<`Q=_AU7@[u?q0e6W$rZ3cB&3n5.sL6%kJDu#ZgUl%/ANZsjrT[Le\Fb2Ubcpl:3o"[3SBVp$,PaAr1uI7
%:_(,*-s1t-:mR?R>1d4T3%UA?%jk+Uf!O/=*Xq/;kHKMK.s);s[:KO.c_cD:oaS<7g>bSd9S`*=E=JE%=Gq"tJUb$Bhem9Z^k=KA
%PPIl0c5-.e08@m3pmb7+12GqLk.%!K[-Ru/(7"TX=uZXfI)Y\'LDHt"9<g-0&Kr'6]R:j2;J3E]VY-K=QoOPii]7_7GWQ&d7P`"o
%T*n";:KL7#Y-(VU3o.eamkMdPP%cdKehA2(1b\`63l#9Pn>^G2.r\5Q6+1Mq&m+gPGcqM1]!8mW4X@bZ?["(ga:_)shVHA58uV47
%K@JI9O3&&SRe#q5X#Y&7+jRbqfEd%1jr'8!U&MiSTCrg(:+'/-8$#3r/[?eU._em^ODBoIMY"*/.@@pRmk"S\(Pa$@n'UY60_FJH
%7O*%E6bfOFTod;9\K1uOhTYtt*n"Wm>"0*"nQK[NqeZ@AUdc5N;RQ!Zni;'Sg;bLAh.1`D![>Tbce9e$=R2?GL>e9m\4IrQ!^1N'
%/CX38Y4jJ#%6jPM9`a%8-/HHK?nran4oG_/o%/unLI*K`mTA\+eG?Vk'Td.?]tpf4$GP@)=A8FoSpg^6&JtM?T6r=5oT>FoR'c]"
%(-LsHf`ZsApcdB+!qUDi_"rJgiO.&T%p2QA?r$HTL@"PJU[o^ok'eJi7ifo3#\0/in@T>&Kd5qujEhn#PdfAcXj=g03QJhV!\C$0
%7YcWqFhGo64?;.krt1(AgougDPaS,^,Sn^*'1b[&nTHTiTjUr?+lForEmN-fV!>U:IijTEA5%@Ep\$Xs2Q_+E5-\02q?'XNgV5B`
%'M%ZP8r9<bH(=QT>)O0oGr?'=I3"BXJ;M@nSNb(*E\R>R5^91mB>+/g?cc1Jq1_'Vs!UjPQ5$O)RgH9FE7rl/@TRp%--Q#Yg>[aD
%LGq(9Unn3N%o/rDl@?ko3CV5OK,@F9HM-<2,:d,ZYUR4-h%4B0hh!;5,IkUEn\?K[bGf$mA>dV8'cAopjlqQGL;ZPjiXl2LiJYBu
%=(-`>?G)2kJkE-lKL8j*.a$6b-HtDqlkN'7W?-j=q@U8GbZo#(4\csWoi*3>^4*mg8dLaJ[>7QZf&TL,<jJVJJG1`Y>arEA*[;O\
%OA!jU8I60aL+qqn]ln0*`/I$2rj6rHAa/aeUSaCnO4Cro-liC.589nD%&&.F=XY&k'QCE-._U=7(hhILTnnuF,FO)4=ZmO8U2PSt
%;c5nbP)d[Mj0XRck(`g@63VLf#<)ZV(6jTt?kqeQAGiN9&Y&%dJ%^0"$1Oeh3IfTo3+R`<"e\/!(<IBjV&Zh,\V)R)M;8<.$>JFu
%Vj?D.R_eVm!t,I)kIh[B7DNB@?nntSfr.,a$:\XlCJF<,g;$!p)^K/GF^",<"4;mp=;*&XAMj0YmKPGVLSd64QEQ2KJ!t"o$q)Ur
%?>G!FBJu^)9rd'kSq-DP16#U:ZkuH'Z]OF,"IeK#=-U9sp5u_CL;@D(fXWoE3[B*>WO2>7=<0G19r>uBs(S+Le3RiQ^,gB^l4di6
%UEE&qX<`^&b'4cY@%RR6C@O-aKHdMO'.\J'7869ELB]<.#7qJ*)mYP^%DXaQfTjP>Z*m$uW7hl;8-nMmd,WHTD]'[6mf@8C)TYH,
%)PsW^3-_NU:$"kI)aceM^f;i3YV%5`m/h&]5"VX+iALo/WPupr`o8[N=c_K)@freVr_fd3AP4cs5[Id;#'sa!9/:<-P?Gf31/-H]
%f+>kr.E*jM+2T2s:*@JPQQVGUaVGB]FboQ9]ii;o"?9p*E<B'*_G_meZYXe6$t;(u9q\D@egN9R$c]=r)oolVMY715,c#`tcPuqN
%E7Y4._f5K^[6UOE",96i\t7Tai$^l]L']%4"^ZKg]6.\g8Z.BDTi%Rh3rj[+27PZ2MGV*O[D%FtD,T"h)oW3N6OC2OUBR&0o,n/>
%3E-q1Ye%\5%P3G5J0Ic8==aOL2Z9Nu.Y_\q'I5`p;dq^TZCM=Q(!N_B@AVB[H==p-?9nRO"ED['r%0`a[h(?/&l?f@\b<oIT&aR[
%Ue(Q>O0%i<2M2s)W[@=OUH``B^(shm<ZD7-Fs8=g6:d-'*8KBrZE+n3@ESa@9:N-un22Vi*k_+NMH^3'B6NTcJG44bL-7L30sH4?
%S)?uon1TR8M[e^Ehh%m\OOt[qe=YBK93YL6<5c3&&=s1LRUJ?tC5BYtPaF4M@;LEI1/@01+e9AaVm<^:FGdSHnus=U7&*l\+;RWC
%askWTi`NqG;[MKDE7bMuTB9*lm7s1ImM?jA;hm?Q,!;;M1Z'UQ^LLPG(KjJ?ig;oNhT[^p4nRWCj(e`:p6u\,Rn2;H?<.B(=9,Eu
%5tD[:V^/&$DiFgp]M0>IhD"8`F8%4\)MDR%Bqbe5SEm2g_>H8)6K=hok;m$?>TsPCm>);m)_SQ[0iY$YWr]N;Y4cpDVe(!0b#\j>
%V:=ot/Q#]8J7Dk\eZ_<#STh)^kR!NI\U',rb,8;'\Z%VY>$HmumHh*H8AO/YW`Slo*$3Yn:/?$PJK8p8cI)\XhQ=nOq+lR\]I$Db
%ri4nk=>dAWDo$F86Sf/E8B1n#MU1+=@j^lnVu+F[XGHYMi2N=A8mMid;`%doa>A/.OLa-C;CtV>=lq>3K'TB:BD?BkoX<>!SI;qZ
%!6_A:!r_D>8PEStJ8/,Xc(rL0p!knPQ:po@l/`TPa[tLWj@abd?Gg=OMd^#$[j`V#,i=G.*$4!hPCI9LYM/?(&8nl$El5-uIs1%a
%++Xr?fU"<megZJ:h_tf"f7@KTQ*t\<BeY*5092G*-s%94H(]TYl]a##4?%,C%fb7?UUA0=#1QA]39Gg`)L9cnno=1n5^=u[,``@Y
%-4SLH3A>HDSrB2]lQCc]!3d0=S%q`DhsQ`-VP+l$XajS6\#^[=(`$td&3F+$E[^$PcNU9_:$TE[s-76Kf>eC:I"0sIG10o@!2lD.
%:/_:YJA^R\;n%W<\>IKp#_*Z!,ik!+l0$Lrg/_V+%Ob^2&'[-B,Xuehnbe5*<Cm.qXGh9/-3Lg8'F3c:`s*Bn($<#h8q=T-1O_/.
%))ndiV^Ib*C:Bgs>c=;nZ]ID2:A)U/J&?:6p9ALA?c9DilR7"&%F"$s8]uF#T.e=;JA$u^IXQ4=[L)iAW>m+U#5?D]_)X%OYqA;k
%p,3G((=V&(OAD9nV[>e%LOa0(&1)4)G^3]-:WEf@p*TJG=oE?O9pR.__;]9Z#DmMi:kgOoc!\uq%8sqYP!PiJ,[9b*NJkhrLcX&A
%aI]^r)0)&QKio6h$g.H-@2M"*'@L:AZ'r@s(`2M9]^u]r4_Q)q1V+5<VCm_$C=<Usgt-rna%@I3Bm;@aGg%*o@kC=hDMOp?]+KS^
%K6(mR,6Z<CJ;,W!J.gk&%giHl0D_n*JeX"u*=$#r5+dc`N<[GK<l##Ignc'r8HB27PQ5WHQJUb3(.iZdiN`uMb$7<N`U4fAKQudH
%Bd?&fL2AT"gMk>16o60nB#-hs=^)XT-lRk0"(:qO*?+FreAo^i_tlht#?/g"Kdi&G`>p;]O_&ulQpk7IZt;T2HSDM?SESnqNepm'
%<ZKkDnV7>='@N*LN^.'^eWKP[M.\#'7C#f``)8N?@-0qj`$Ea:3+tg^(!k-G&u/%fJu3"G6>Qk0O:F[28\J;pE*gOV$*8g@<mLoC
%0jpjr!paNlWVBD]A1QlW&'5ns4]oM$Y,'1DnHnM4p:fj:o(1TlX(gnj\=DhiI6p-4=ue-)!;ED%8sc?W9[]`nhO5-e5)]uT?fT.E
%=jJH(^8%Q3aW`C=jB(;r4IQU9nlWS7PTYJY*0P]FXpGA/f*(!=+:LD:deF-dM*+eK5ETsI8DZI8#r1PTm,HSL4Bbrajn[CYD+jp.
%h6L\*fF+l1?ic2[pSS(NV7M2reP8+T8!iK#l6t`CN1fY&_sE)Bgu`ZSiafdS15L$e;Qnka?u:.E"SK,C^IuPe6(!0D4`FlIf`_d%
%E/$)7)&2"#$Rs//7nc*@A$kBn:8CFQ'u@0(XuQtas5BFVD?J@;R:'O<.Y@E'Wd(Z^M1W8)<He`bnc?]@=nT">KjnC-XtP-Gk19H/
%@2q#V$<QmT4UArkdO8fX`*a!i3;1j80sh4an$+k=X":QeL97bq6snUG?(>o:gC"5[?dql"/OsnFZd+V[KF4Z8-30Q?nn=(]CjW-O
%"A!7\L7/.:bBcb(iZ=3!<8#F-#=>>=H.*nP[Ae\X.%KgEA'HpM6/g?S_/\MB<oT$W%mpo4L)7^#Z;4[AoG'oQ=Sq#d\`3h9%il7#
%je%dcM:#]bT^o&?^IudI3g!eiX?=#F?pKn0.++)Hd@t3?D*+YU83rN&R2ah&^ha6&K=@\>JR$f9_4]@o3TH=6?3F]HN=.>49k2h5
%c5Q:];P.2[.l]E+WDc)J;MEmZLsX5fd@_.&ZaW%TAKWDk4IubEI>X@4@7@FHA:`cg)^YC$aHkGsQWQ.7F'LJP3Ktf,P7;EV#lf@+
%1FhFIgTIa]:@-K5UH,PlIKW4P3IesMh;rng!2hH^^?9&N^lM<d?NR+\Q9\#-X1s=MRUHqW8`uoSdR2"b4"7pTEAA;YA(RGc9,9KA
%i3WJbD%WT;;%Y_Q9Z-Tqh="aV=ATO(UQ]'$Ot@R<T/(YJX!SOA?H3NWXP9]_?`+aa(ToaJ,CLn><aa<!opj<;12+c6NlCTlna6u_
%Lnmdu5Fp'YT)tT`Y=g=K31=2g>?Z!]D2ajZ1*_I@@:RMp=;b[UW&8CB`b$P,:5e0tN_qb#hCRdnDDI="0c3UPGtbU-*<OQB`S=j&
%7n-g8>tKSL][*fDVaoRGhu/?gc!g\]FV'W]a>E8G[Dtbb2);K%OecKIbNrU[$G=[2k(-??$Uo[-&UgbRM(o7FcP5u$84tN63@J)Y
%(I!1V6Scn/en[#h2eA#d%MR!2BLL_*e-\8G$b4@,N"`:NE5QD3D*alM.j8i?4DdB7_dnhDRF1&S+\Kp%_f0g^X=fK0_qlH&XVfpE
%G;$k<!V1SF-:D++q'"IQPOOTia;Ege"3W*IiN<]T)/3FdWns?g]7X0!Ahl0hZHj\%Cuup??B*Mb\<8*Lo,.]QDBuc^+`9pD5]F09
%bfKi\HVkbC&-)\l@UG73&RlluZB;KYp0rbaUdEgo_PAU^d`F=_lREn@i"4Gt`j*el;]LD-hrL"gAfQdcN\LlYQotM+X4eS3FNl2=
%i-JcN"6O!39g(J<Oi:)R>Z^4mUDUFInI9>t)P+*HMAAfLRt20&]#jg<L55+eN3/S(Jngs(`80dT3'?6o@i2_6d150&d#t5^4KMm)
%nX3)5E*LX2>G9,+?]Fq!)Dm_N$ujq%8fAJ=03S7SO\c&_?bs4!#pK/gAd"q4.P3_O``@C0o"6I86V2jrFnMIKpW7@qImCia!b`M2
%1*2<//)28dQPljf9AU6ooOXLSXp0*fZ'oXKF2'>3p+=T`C1Wp+3#Ud5I)#k9(\ISM)]RB.?fj4$.S>Cg5*1d]>^3"6@n`8BC5t3E
%6No*F0YL$e7SI4&KcWG^2X9q>*cmD1FA$>a"f^D:Jm2E;?%dbH<?!7m(0`chEa*U8o84'tk-='aRVkeP.//)m+^n"bT??DIp`UGc
%0$>HHY2cE6;H.#*j=H%V48Q6^Ogaj+GNk(;-_N!*'#]#7CT"@c0J\?i<(:O1RL_>=Z'[,EjqeNl?>kDFe/bS$4f5En2D775%l4`>
%<Wpq/'Yr1tR&n.4$^:+I".WI1p.ie4cIcMuW>k+^@/q5ips-;@3>iIa#oc0\OT?#2F7BIYYr9tQ[1_?r<'4P+3a5;IpJ9[[l"98_
%->0oM"5e^N9R\0V4L?g]e2eM,[IB/2?uZ(INU?fVc1`<iYd)>)1c"q?740'%'3.9in0mmNKi8P[CC[_6,PY]Gi<Y$KN)].ji.c%(
%C>$!rXEUf?8rtbBV(NHI?soCuT'q-B6h&k5W\Fp3BUaH]S96=P,W;n1ig7QePcR*b;@oiuU\*FACs0`\'R,h79K=hXooRa-3C\q2
%J])$g@sR'6")\JSLVlRCFh/jL7^sZ3/O1]FlA'do$7nH_a>GH$:)W&DSrp4D6Dm\V`Pic,So/VC+=]nB(7!%G>qniQh0@K/.lHf'
%(V^UE.9$'\ab3n$\42"6@BTem)]mZD[kRaR`*8NB+6L;X9dJI%J_MYW;_?gVEEpm0!65M#Zf%4URQ:l*dmM#8@LRJ4/BWCV_h(hi
%$*>f99IbP-#.bUQ11i5qOAiIc4N<g+K,ZEl^q)riH.!!Di+,CZY>=l56eKcaJff'ATMqcqNHO]&$l^0t/%ML/+*'+udRX_)FqC\f
%*3!AO&U&k+ib#8EJ\,tW]Ft<+_c(>W2mVu_8;u'0<'XotcrT_aF@(+,LM!mGh5D=Sp6nnSj``O,aCT<1".#M8&.8!5GVGs>Sq&^&
%Z,-Ou0'a+Req4p1&i=BQ<4Wu.'t@fV_bacFZ-)%`AlLAs%.Z/p`Ag#<1f\lq\A`I95t"DRRR!j@($p8ENg@")/)H'9hMUd9o)DL<
%47$I)C<LMY$OXkk"i.IM&o:n*-BF'"FgkgsmB]/fKKa4,;fjr]L,-@G$GUbQro^LKSl*0`['t-e0Go``l0CXO4L2H__9X0fN9H%-
%n\`W2/n&1J;,;&gr1Pi'm,7%/IZ5,NT<@d8dcqd^G9;CiYR\.JMU0O5=Y7qP6`35=K#e8tXA-0+Q_D@$1J$70fb]BcV7.gQU/Eun
%E/-IkA(8,=&""uH>3(\0;X:U60h!\t(jG]>JWSL%no8-C!*[nH%2T3`9:a.P#V`i[620<Gl!p"Ppj@9ZS:UG\d]q*eLk!c9Fk`]W
%hJ:jKg`Ht)V+crtCf7jB5-\upOV;;>PMVh"E5F*SQp7Ddr%*u$s3CY;FVFc<?fXGMer[Xln8fsnk3tG0!m\O;0:2mdL";.aK?VEH
%YV2t[,t21<C@\,D6(ZPS$:5*J.SG[S+cr?Te)e/K`m,aJ,YQ-"<JG[d!n[O+L&kIs=:dkG%kJMtIUOggj>E@I.O!R``s&?RkVeb=
%Y^n>5?sV_p$'?Ca7D(%#_rBn#8mS=m8;*"4fSUG*$Z"1Os,eXmpBZD=VL"*#-,?B76)[\X.)c=PB/kcuUo\*(]*Tb/(``<"PN.5Q
%e"h@-a47dQ6)uF!W7U<mP:nb_U<A[s!FK34`*W<DWu4M)Bg5L\l3aO_@-P_I7ZLBnp6(/-,X/Fm]lmYWMk8X14D:fFVC2jo3^0bk
%XtqTB)G8S\pud%c,i_Y5C7d2o(6^G)&f"L-1hlm<]@Sn3;ejP4muH^3o:Fk.NdFHq%,#FBT8!d@2[=p:<j8;\g^h8X`<bb;eJ^iN
%6.,=@pf-J!UYBaN`fU7^eE>)4DLm''W]J%hSopMmW`ec^Tk#.gTM9A^-V)?f_s^:M+sZonC'S/CRWnfgCi7>h@]Go6N#?4aMJDkI
%d@S-C\+`AM*'r6.E#V1<?BXD"j1If\1It<bZ(,8#brR$_8gSOqc87!5cC_gGCYc3![fD9(FT;O[>ji.PeY23)d-9Z5JC6d7,HDO%
%8O0GcV]:S'p/)h-WJ/qnoHt*385fr%`iI^b9Mm\C?nIE`@g?gN4,f/Zb[rtXa>JipR;bJUJ*0bi9?!C=@0'FH68%VI$:LP"+b>R&
%gjsgh[,PJnZO);\Z%D]Q"\!T.Eu/YsMT*Rl%i/ac\9FEUFt(-ZVBY]F3238aW.CChdMV[%1FQPOpQVI5TdC""TUnhk&<-#i"U,kQ
%IgRE=D75m!8a+01e[*C7%!+;gg0$FX9uah]0-UJ\X&gTG!)ACX!nJm@GkU\ji)VG<\<!>**9?[ZANN3?!+q@oFHCF23PXS8_8\s@
%6P^c"B"9j.XD4K&g:Jj4_,:)`A$=n7._k[agh,<2rPkMC'?7@8]Gtt;m@Q^B,_fc1_!r0V"3[7IMo1laVsW@RJQ;>X/+".VM>;Xd
%[QU%T@?.Y"_plP[-ROt6U>lk5ireVE/UbI4Yff\!6;m>*!m\16<KKuffF3p,4koC/26b^%kk<D2X"Q(N<<>u6)RXdi)n1[_j04%8
%PZNiJU<S4C0RG8eVAa<W(oN.&.J,@1d"LbK8eP6s*0@E71[BbJ/o/G4/G=Unr-(;e=4-So]_8quA!bGO>&e(bNG'9u^o0Ng3S-/l
%s-u<*ZU^_]5\DO`[Q8_<Gs_o1&RnP2ME5Z(18CrDnI*<E_4[9*/[*2jYu_\$,P!URCptNA^(iQVX";5+e6QLZYW[t88mZ)_coq\8
%IaK@$H,'5O2dQ_Kr_g3*ls;7T@c4:F0;QAI6:EdIBtJ$ID@?p^GR40"._,-m=JEc=4O#5^73l!MJ>"Fc&L-l2YMUMQ>M^pn%gO[J
%^>&f`V>=la=q<1-qLqcM&R$i*hHm;L&PTgPbWG%+npfSafbNFr('LiBCD&B(`hZ^+X[rrj[2#_uIoLg3[KA4"/_SP#QM\#Zf=F^[
%@;G$,F1FM>"C?4q21S,$\T&JSQBuhSZr:3&2*@7d@dA>:.OD<$[!gm5?Y#sY^_Ljj9TgI9Ylo2r`qpKTfXmqNXnVouXQO6`0\V&+
%ri0RK+cI4:PW<-i^B5BH+'c8_AS>kKo9G9"=%Hf0F+%R)A$Xq-=(Z%QQ#!X;EEpTU\c7c18[_@k1*\H2n[7J,s$9DN4HPD#hUc1u
%.B(cU$P8UZr7eASa6f#:j5M]HFlOYoUW.j.j>Y&eifot%[KC&ZJ=VaSq$r?c#RW3t^.Qh[/Lh5X\5rKu`.u?3=/C(J`"c*01Ep(o
%a_S]_bn$1R[DAKDd#6/"&_S+J:@-<kEkm.46H;eH&?R`*YZ=8D:2@-jW0;Y7@$nOM2Y%q*]_h[K=*?)u[.!kiVf#+;?gfYHML+#@
%pjur4H0rBUAoIFP5S)#k(0V0uk6F-IPCZh9Rl7!"&7s$]p6#;teXTnRAIlAk+@l]@('E5)X+6HPS.-96&N!H/@s-T;aKZME0Y<)[
%YF*.tDA6n$lR9$l%b.^01H]"&F4c'g(0Y*K(.i=.Y@G3\3-_iUA,nZ!Bju>"EWjs*<TtkMq:odg)Kpbq0Xo?fJJ5%;/?>_]%&LKc
%VN%nto#E--gcb*`_\ri@-=BhOE]K8.;Pt8JgFIb+;nn&e*uJfR3.gK#+sZ3p&t&bZWNH:D&@_cGKk4^QBV]_da5'goPH-ZpWW+(@
%Ik'pr8:u2R;>oJZ!]H!P*H7:).:_JYbTqaj@P'AL,J,"251E9o2HbIHHkuqG%b`#4,BsP#eCS_D-.821a$!B^Q=q9m-uOgnLu__O
%dcA9tg`(RId9#H$RE/FgRtDNK+c%#R!Ts]NAjftQn@J\<QL-*/q(*BGM]gXI/tOITSt<op'[Y9.q*)`0,_'d"@DjQGBR"!lZslLV
%C6BbU);"M\['G(nGbdP]>Q;no[;1qj'cAZtmfO%;3-<l]-O)P>`Y7r=B-`jV5,9+5$$AED.0rIf3A*KuGm3ST+2WQU@<Q"KJC/$t
%7PohdXRX<RfPoMPN-,9CUHu_.WR$Go3=qZnYTQRslth$Cb[b;H@q^9V`[Qq4(P^uk],&1tVL[W!XbKnqbIJt["Tj!(7F&@=1e5m.
%[F]7UTtn\jp^<&d&*k?&0AMO5C;@@@KVaeWTA:+p_.ZSnVntm,=Hau'Oo\`jnR:ed*,>-u5hj-`le1W>[Y"R\b3Hi=1D!E%`=Frf
%#'^kIYk>V<9A9opk!oml#,&u+Cm0epjctEKg9T=:)OOs+m26f%3%u=`LIlC)+e<F^DoShE0=T640NSC#E"EVhDK6EI4SmJ@2iirH
%-F5hmDH15=@7C>o)t:&SRP7IRj8,2:q3O]d`At+p)?L,+*6@nc]K\3*@7K-qF43mE+GucBAWAS6.\>`Z^PXtl]Wpi/D"g+_4",7j
%=HqM!pt]BBRp]>(%a.V'W/NJP)fld(WTuUd1fA0!$jp_!DiWV])3Hq;n$!h1kJQNCPCfVSo8ju`8/,W#:"'T*i'gnWriMe6Y\^:0
%!f2$kKL<DM-T70tZUcZI4*p@l>X(ZO#LW\"C(Q:^ibBkA>:DVo%iAoHFIDf%L@LK8*mR_m*]C`o+JMHp>;B\.71YMH9a0G#"65N*
%`=LUE?cHSJNuM2UO5YXIK[P:Jp8!3=Ct&JBG`;+V_(g7Na:^IX5@0g<MaJ%\-=1'PJOL19pmuIkY\_H12rPr5g+![Rhc*BFUY*"E
%1\4UmDh*Q<i:TJKlQ<?c4SJdub@QrKG3uYl.2<[ep^W5R\PL,OS]BsW;dk1m0`c`+^iE!a;#0,fB$QND@_R?'S4.[3#9t!!<I:?N
%/O/h)KsZ;4_#OWl,DV>a#ZG(BPL.u%/</0DX60I[F&;7t,p(!B`Ql/'2gUk%d+UffE@+"f#:h&d9Z1,BDVp3X9'.VP!8B^YC#k")
%b7PpUE=XR=<nbC:GA>]h0Q.s?I9-W='V;st`0BaCWS%,q*G&ca`r0'!s4EUi&/7'sGO3ImM4MVDCA`Al:Pt8><p[$sM+d@#!2IWh
%Z1^;;8'!6pp)d\m"q@Co?=W*SqWS#j+bW[3:Q,[8,n9\>%u:NuX=$(cdCSgDk'5%6K0phP&$W![piY>#nI*W%0B&$Z$r!&rQ5-gF
%nu%o7LD1LofTXV'CGS4`?+31Ymk6%hfDIkeNpMuc=\hsq3;c$_?nEZ@AFU=.8+cS;lAed'>F/E!C#nT9EjY@W3hA$n;_Yd,`8'W=
%H2rb"k74sYo!QkFnf4a["6Fg`d"'X[]%/IT8n!0XP_EAN$phR!]AS@tY>U*#q/6(6!On1/QOm't@XVW]p0$$WE#=,:O^#'6^!=KN
%gRPab"Eud\T=MWAE<'N)b&3ZB^cUg!ES7!3k\9S8*83/uTk-G,<&R^B=U[q0GK+L&q@kIM`@-WMcH#N*Sb+OeTbJWo;B5=LGJSNf
%L]<OM8&pDf<m=@Q8)3YVi.7Y`EgM6Y>>73ZidSR2X5Gs2I,uR4[XOZ*^t*U3AgZiJ*39+FKiY?g*MoBNH`K^0=O+b\/!t,ia71(K
%bm<,[e8VL>b>`'=Y:Z'pK>6%!?2D8&h'uX\QPnCYeSFh;%@V:_<it#6UKMIPIPf5V;MN<sE>3o+h:pJ&8c.]E%0$ZpZ<70F8E;qk
%G9B'b5p=:$h;e+'inalpO594Pra,J><tE90o3=#O?2frBAA:1[[9U74]/h8"o!;V`+%I1EYqmK@heVt0iMaFPBm\&GYhcbW&0,3[
%*4FD`Kb%6Egp<0M>O^;uGf@Kjn>Z-UG56a`HQ>26GOoVec9JSBl\4/hs(E3D:FYSUP8,n_N47kD[D01d-M_g,m:'8=\=/+.HsRJH
%B)2E"Cst4Urj,>2m!Hu!g16ECfd>japUa;Uil024fd?Q3Qego0G-0cm[=;kV?)=1\nc5>h?#+LGg1=\YcZV1N?!co%`SYIgmBRrg
%2W+ueO@Qp/ehQI[dtt-`VrDlmk5"YA7uS>\P@Jh"pF,'?Ma,s-IZ@d+o4)e7@ie?+XrZA[A`G6\L92"W$\U\d<qE;*Dq(r4IBU(E
%b[cHpWN=hF/%G?7I'=Pr^@#'.!GFt.mc*]Cs/^Cs[:VjZrB=VqDdAWr_r\b:ps5^@k)2IY!!<NE[6E,YrIng^:H'`)"_)u"[6@8e
%*j7Sa.'Vd""c*B1Y+4gq^?=mh+"Ht2q=S_2p9@'E41=XiLapE:IAI(B\5T8_(pXXnE#,m0_5&2t_jM<iX*D+pO,$R3!nkYu@(J9"
%1XGH)k)+99cZRk>QV'd>X$JOLnqH"jWV'Ej=o$BJZOkCfjkATNQpIQ]AK@@#N3h=k0E#RMqpg6tF3aGlGH27>J*8JB?[2:1ffm`C
%0TZMOA3BqC5;<OtZ$(C3<Wq^@>t=EtmG9HH?ZJT,Vt_#ZiFGA.i0UDHpYZh6'R_J0ooCUE)PZV9Wd#8""I;+rYl7@:CXrboGKMNY
%TfZ"rhd$b&$`s*A]$T:mPIjS+HOj4%Tnjl5bM4Q\m"a<P8(Y:\m/fAFonX\[WZ<M0JC.BkfFE*EYa[NRNh,">[`Aue^\-39l$L@V
%4+*&!GOAf[_Epqt?0e!Ubnm[#,-nk=5APaeQZ!n*G)`I0hm6U(4#u!uiPV1Wc%8DoA'FadelhiP\MjnuS<jod=0OgjYY9V[Z5pB#
%N">^P@Vq1P\F&P%glatHj0_'Nm`jJM"jE^-N5B"4>TSq(gjO6+#FA`gIe6OO3XTSa5Nht"V;LUqXfAL.DImT`;4%Pq<.V'(puu0K
%Pi$%:GF?UgY#jG&7Z^+jli\1*r2F^T<c`86fA.Dd`n"9/bZTQ`.f$iq+Ts;d+h;:!$@f$oNVS0W[:0>.Zh8aFqRo`I&B@7_RI3k;
%d*C`T5Q+RZdB)G@3m?"OMrK5c!LD-<@L]DEQI,`#;sesg7'A9-oShQZpTYs6"AdOsI'<G1X]<)/>H@Z>HUU/F&6c4[h*#FXZ*/ZT
%`ricPI_Y)Lr)pZ)er^S1\TI5h*?4YC(lgW@Aj?_#h1%(K-I2:mBN3<`]-%""YrfF@(OiF<S$^WQgthoZ3->UP6-(dtY.*^!=`1I2
%!(oi^C=!oTeiZT6_+D`uf+YCm@=:?j\(DQ68)3M(8/n*VcJi6ka0KZ[9dD.=ba"j[mn+KU*5Bdk>+!R4=5TQHJuptf:(?aH.3L#l
%9Qrde9D5!$E0ZrYJNUbhRK6KH.j94j?@4k5qV"I(pW@>T+))V\Mu+7U)&s,.Gp4@j0C4;h;%St*XObEn"k*V&X3Nhg?2D6Pl`?Wu
%E";0NosP(tiHe]1'8jDA?GT6@.Lq3\F''[+6M+kkkssR\W!SLBlpc4h(&ePPk4\nKkl;_s1,e<Pbf$DN$tsP$P$?MD$)6PO<r,t0
%2etEjYN++A#H3uNm%c*2+,`F"_Q#Te<cR`/p9]iY4CpYsW<:"mg21A;-SbN,!OA30s#?Rf0Y&B(!7+2Fa%B=O66=AE&R/YXq58#2
%r^3N,CmXm>@sk6OkIn4GY%`mdL\Tj-nCm>Y^#Qr\8)3RonCcA+He/2(3m7Hs/)\t3eY8nY=?Q67;$T#L4g,+FNUc?)[S]Z47l8%Z
%r4R8lf*YGY:57XbQk"hF$^\EsGcp3W>'GrD4NC#2B4TegjY$O=\Mn<%f(c`MeY&Hh5K<F)&ii--fT489%:52Y4N:pJ,U-:YKuJ*Y
%b04:Br_U3A?T!DE$[HCJ,M+c`Ya*[jgJgo8]!D]ie:\KV.">=1onng_dml0oPGN+<$2A2&N'TGZVL1a$ZIB1*L=A9'5Lsk;I&Qs1
%ZT+4e"F7cM3PU/QP,-:(3130cZC\^/(=7[GMgV&\2-9$Te[nDmm=O=$KONG1H,L*)5)[[F7rb.Sf)Sq%D8e(I1\bmG?gstcl?N,u
%nQ%^TW<Ge.8`rm_p\q&b?]X`,R%s*$U<LX-.rJ0E*t6iH]%Rna]^e1f[]\WY[D02oF1Heh(WII9ndK(.lfh1Ar_WO?/h1[[c0RX6
%s%`)S]?F&hc13O%Hr2uLDP^`i./di0!"hr?)RXTH58Ik#<qr3>hg^@"P!.8g\Xqts"a`Rc/<"1"qmp.6;il]AHD[Q\P^][fGMNuH
%\8q/mWZ<AL?i97>8<P\$G6]bW"!23)$6n+)SiRt&naf-8?`RHg-p,^T_-`nL9hu:2da%Z'NVpGSYmj4H>-SX&o;@o#E]1bceh;Fe
%Mgn.n$2LL^>N+QP1=$Kur6V^WOkJoh]'A[uORn+,bmj;<opOHTKPGDr-\?_M)L(`Gg:uLuFWDEE]@O5q2f%mZ]33aj@5hsD)g8Q2
%nb:2`S(1r=/B+*d]"o&@DiC1X^E6`k4c>!M0q)_t.H`:E].BL1I9jCu\@=8is+p@@<V'-N5E+69.D4SibKnkpYg;<$F,`Q1I/["5
%2<ckodj!N]]++/&pp5-^f:L,+87=<%4_,Qrp([2;q=S.QViTcqI8bBok!)qfplF5=n9_oQLKPq\*O>fkcJf3$q0Iu9:Cma'=cT'a
%Y7QMbq.I(Q\Nm]<ir1C3J#fH4o6C9,q+C[9*sDq+88j,gS^dB2fH9&8=$*D[geE;&b2Ue*5Mo]$mmFkq[gdm0LS'HlG^Za!H[Rq9
%`YOc17isdi^a+Ef*V]9$p>)n7"T)1A^IR\g*'8cLr>%j$k\)pN^%[WAH2@'[[[u;X+<aU4qg7.6ebS"6ogi4l[r0e_,i<_8+#\!A
%ql)80k<7T9Co?hKM89OKW7Y<rFN?@Y*9dda\hRJ_orq43rI<[_O&'?LNGA`$nP>G=B)1c]"n+q8GW^SbG^Vb1QN"F%e^q8$M7*P9
%W;=QgZr9L*.g"Y_MGI>dr9aL`J?4HZKS[@d0PZ[hje@W;$eNcI?OsjlhearCa-NM'gY^M-[!:-6'7T9^G<t!XH"P=&[f]?4EN=lc
%,<tgdQ(E!,I>&@6S:GePpm]\iKm\sS`:.-M]t3Td(J@a#R\J(0,3F]&*pe]ur?YJGq)Kf=p0REIH#4qBhs7NUX$'e=Qg3n)>$-9W
%'>mF65@3h-qlJ?&ZSS7:0[5@;OBh,Z34g4E-0b5tO3+]iec*cCO8D:=+/[4>DOmjVIU0)j)$p4?&HI2,DIYWVmP*8NCY[Z?s/,Qu
%O%rg3W'h#^UB+>Ef.Y_Ug<VqYr+ss`4NC67a8Jj1q\M?\\Pt_ZDB2WDqtXiInGN#j;Oa*JR]<F`HUZeESTX*p#/>B5SR6uOWF\#]
%CF#u5k3?$oo1,s-T"[GZ!q`J_h)!+2Z?N7<MRXIcSP+5$_0Y!U3'6$5/UZ/GXenn%n*]c.d:;5Zm=Mc)a:lngYUFJ9ab2bZq2EVl
%dHqTXSo&K(`SYJ*G-)J)D0S-Th-M2^Ho@Iu*E.L5Rf%uJ%mJ$0f<!_6d>W)6<IZH+[?U%/3*POED_dW(&Z<p8AY6/I9NMkMqQai,
%mH?SYpGfeLhuPjYoWCFO1@NY0Fh]m#3aM/S\Uj)#72,;'g(R\,742n+Ru`WKT73frgXVE$<mJV"n,3P."boup4LiiEqoUM)-st7X
%f]D97.$e1[cJde?If4BESl^7/E<LQ*r.j^k0ueOoVo9kM3!Z9%A)7PsUO32j!8-=u4Rd_NrR_!KIN3!qT^HZ_CTnP<a"XeDjb;B6
%p[]6hCLK@Q$fuu[T22kA]9(`(S48F'rSRL#h/)r_.8=-@MLXFaCVKoR!Q%:,.7391SNVn7T<=s`;:A_551XVTANB1Vmg!f)dqpTY
%2Ef\WJU:qQ#@Bi^C2oT4LVci4H!48=BC-dQgp4S!cZ"o@ZS&ST?I.Gn=27c*(],>)9]9"JX_p@L/a@lJ!;I<#J.WDF/*lk>L+$0L
%<aCXG!LqE#9]7SDqiU?Tn'5,&bIMF1]sX0Ij5"P-qmV$c<irbLmT2B+5AU+!I8a(ZkYH[3pGk?`<Fft@:Q6H(&+Ge\lY+1=I/VR*
%hEKHWmFod6VeKNN6QGCm=M(%A!c3_HcTTj3lgqV4?qNu].fEEBLIRj/RL=#<jSPu&Be55k[V3$CG\u<X,M/4D^%S)K/g&3eR;`tp
%2p'm.HhZ2&\G!H@VD[CAlaX03mFGX61#uN75`&jS>Ih9?*%W9MAm?e:.KqE*eh/I8AbbgOYl1b_Nu[K=.#RW(n:j(Fs7L('g?BE)
%b#S=oif@F!*jbIKL7Vo(foFD(*oImD:N`@)=#kVLQ%#o_[qYNcp'"h%JkUrI;8Xr'm.I[)mI^=T(1qQ7]qbA/p@i_jTCAU]%\JtC
%:',H6ef5qX-Y:Q^j4`n3MEbnNG/`(qOA8aMF2Ia0l$Qi2o(c+NXXYst]FStND.m;B5*gYH`9l5<LkJeieNn#Y8`ZNOd='pA4T`BW
%_qF0?:j>_nhdJ^umB,*G?m4L[W#8\+Gap[KF3fk$9`1]47J'Y>@a*l'-E)gFT;/(c7LSJK]cE)MD(=),A+Zo%5#Jo=c6p+@m=@:V
%p]X%aH)OI:`!i&gq<(,q5H@LGC@"Le8?Y[c2p,7L8!/b^nYV4nkBQ8e(HK8$$RQAl^2hHjXn8r7mjM!a=WY^\6j"D[Q.kfUW#no"
%FC-;BRqM$qk6F-#7q(=?j^)`)GNnk%J"DX'dB-KF(;Ie*'Hj9!TB'>j\Yt[?g5T9e[7@!PddL3)Sm&JpfRo5DgRHa]QY$'/0djfP
%@(1YR7Q772Vk7^RCY'acZ??ssm4OcP04d+D+Z=JW0]ZPE9>4FY\BES,p*".0>c"'X^Gj?h"s;+,Eoc'<c,02`>S_M]-XZ9NMllJ^
%f3/#S]8s)M\^rA8\OlN8/XqL8TNs?fItqe`Xu775&]/&R0bN;Ys'"f9D3Z#u`maK/fH(*]q1Ro=VkNb$j2&NG%5nq5Da+)uib@.8
%g/mfWmCQZ!1nS6I:;:_Oa;`IJec\.iA]:cW<B2`@^=n8TT;G+BC\N!ho'U:MDr>jl-[^>u[;`;c?7Yd+0#4k1d=aS'pb)PPqcgZJ
%Z/4:h^eA#r?PkOL8-Ct\fFp?J?#rF6WRr\E]8kn>[JRI(TY=9CiSAp0]e1D_^5p*TaNTs':mEV]YaR4_TJ%&+\N.JBZQ4Q*.10A"
%T='0^[qhm=>jX<AC)?0VGI."Q]pc?`psH0KqH:;:$:7\QU-c4fX_/Ju[M/d)O1.8$7lQG)n\JPV)mrtJhs9.$1=l2b$1]V!T<Upc
%cW=>7l,#RGjFWB:$'1T.Qh.,ICA2nFREZ&38DX(-XjmVHV,lcH@P/(ngh(mA%b);[np67iUCB*is/cJ^$"RN_1(XEC]jEueGjhi)
%&kFb?7=7NUY?]6+/+;s&UZ/=$A%oR(RRN5,WVGmHmsu^#k%o[Jc!1@j&mrpj3RVLlf[=BWrnk]PC]AZqQV"1S5'e//Ajc#FUF8T;
%Luh"gYPY/drp(JS7MGL+oWqCA&+f!9b6gWB[$dF^/AOl"NbkU-ZW<K7_Lg,.gr8/$[q6XjbBX,<s)G%_//H(&_k$,f`_&nqfrb`D
%Ze%M*&5^/<R@*`Jp7Kkf;eoLp!P]/t8=?['BhH1mj?0dScC\:?fJs/err8\cYP346Nh!dg6*cH=D>%cJoVEU]p*-P#]$^5tCXu9-
%dXJ4p]j8q"pZSeL\pR3L'3cQqYcl+2n>Z?Nj4*oEAc`ca0!b6UCYIXtW,SBbfNJSfb=s%D/a"Y#lZ4o)7IEHd(:SL#EMO't<ao68
%-oW!^F8UO=psi*9liE'pNrM1Hf-O18ot30Sdt`9$m]Z@qcKVkF5Rr+kpij^W;YtmVS_Moh$ICI3_q)41'N&%>_f+!M5%*r.SKhS[
%J$8f`[;5GNOp^-Ni"Es[$13^Mql.K=aiVk?j<,g78#<&@;f=G8p+63ErTgRkjjen\euSqPb*fGFQ)*3aZWY:qqIl.fB;<bhO/dDn
%9HrU[QCh[1Bs=jc8^J,(7f%[3`S%8$%b^+6puOO\IP1Sc*\aH>HS)Z&=(nd09hnM]`i8g%DeiW@>3_$uO,=a12?Ll1lC>\'kssRu
%NH0X+8#mD@rOE7PDsl/*RlC(Xe`&8I(RCikZZ^9=P4VnaV8%Ut2q(M<WR1HL?C3:'kPO\rrW=M/+s&`jRX#TsYMIs@=QuB:q"J[n
%Sq^HLBOf*[>4JddDeH>7S/$I&G2^3CjEjniIIDP>^[I_G_[kHS/;N09]'hop2V0IkrS1Y$nb:a]]B\/<peXIaAdU)4A_n[*B[gJO
%^nmroqfm(F?I3!LqraGfo/(BKBfMA#-,d-TrlYh+fqR(EUaFCiB?'^VDm`=3;sEJs41C`TX4NrJ"fV,QoNp<6C)#o:X:*]AHgIY[
%;uEir6Q&h1oi7O<;3GY[hHn>1)_p$&T5ut+a@Tt-?^W1jP,EQ.eXP#oQ\FZ$,c!3kIDE:t*O8kgNH0Hmc%C&dmjObD966%K-(h42
%7W#Q9K5:O,bM?;(g>M225d1:9?RJd^,nK6ulPK^1lKI:5;N&>r4k')Qs.A;R't.nu_/#pSTq<8'V8f]n)A11REh!-gDi-c*`TOCP
%Wf`Tq'/DHVa;+lbH.aohY<&SLU!e>Vo`=lT]$#gV6hF\.NgeSV]kb?*rr(;WcT<2YloXAa3UD%DBmOf#OTFbn<1@*]o6TJkNH3['
%T[93<]SQ+(TB7Q!W`'Api/"mNDs3L)>I5'!p=V_EEMBMscH?)*Kc4/KO++i@IGM#r[a.$J/VdmJekamG=hF?SojIGVVChV2"ip<(
%S-9Cp'C3S+D=an)CEmRS?%_HcTe'V9+E*:Lr'uHNlMaFZnrF+DPN$?R\]J-]'u/n\-d7MKFY?#Cg>0Rs>n(Y59@083HhH7e^t7\g
%4F"]T`U0A4$bo]D.nfq]p"qA2]?o4kU#c'"hI1S`^4o(,6It$(Q+c1Z6hK\d3Qp0Is1C&13q$)4HH?]EnYr7oA\[QI&G9-daQ@Lp
%]5'F;YU*Os_J='Pp5F.SH*?&EdIHPo_"??GU<+9))oJrD\LQ-h;/Ppfj64.a\*:Jon!3?RXeB0,,JT<.kjh+8:T%`$hhs_-h0n3E
%Id5'cT8W`GH2m`[Hqq;ePjE+nHZ7<$6O<"JG'bD(BfBB@WBB>0>LbrVD7XU_a835^;F^tnX3e+6*_K5kC3H]'hQ1#\]lr_BF'm\?
%G(;qu-aDM'ghilIp4;g#\!LbU[_id%0E[E/B0K;/S(/47YmaR^XS%ZtH99igNbM"q::&U#/q_L;D&*(Iqg5qQ'5?Lq)pGR3m8H`*
%p")ZE`?0jCLX0%-TCG;9+8Y<5&`9hRp!-<7X4bm-a,Tll4pGAd^^X3aC>Vs04kOT;^\=.*g!``uM!OLjjHuOcqtRI4q16*,s$Q21
%?i*N=NNXYJ]>rOD!HPR5(gf8.[F"@3'u;:3T>dG1mrnLed>\.WY1N7(mP:nokIJggan,"J/?).OQEtIe$"(ZD[G18[-&%[XhQPj[
%KE[8Qr),K]cZWN=cPJdJ88$hiSU%7Mmn<P5g:p\#Nq;f_p\T3I&,+%OG%98%]465*$/rSISMdr$ksOiFn,7Ca8C.;+qqp'5`aF!r
%(H2<Lq9@Lhn*I5Xr4R8lf5^4C[\4Yk2KV'+00mPmiRimn\F\R3Yjf+Wmc*]Cmrk+0o^[J2hVG]%%2j1<eI>e-Z*L4'I'9TS8+kO&
%f@o-5gMk\lfI=;P1>iS+e3f4@a#Rrrjnn$?[2D'Nl=To3]H]hZFm8VhGD-QPeI;]EPjbJ&ale#jYI`>5DuVSqg"dCHL\srfhHea!
%>h9V\)p!N]Foa**:ITq"h0(l2@gA+P1on@*7?N3BPdKj-,CuCjP9N@)MW-GdUhZjHU^IB@bHn)3N>X!_V)2[42o5_l;E6Oh5KLo_
%%1Tl7D?XfUcI7HAEFgu[G4bO4s!R18f]j=067?H8mF.b5.F5@%&QCGSs#6"S[T7.Z)U^$o7i2A<@('=e0(qi33omR6-)6ONK.h'%
%F:3G"oC,8ueAfb'@*P=qo-NP1V<"8cH2\aD0dY@EO69<ZBWFfgA)=YnL!R;JK6A!2&j.P;T^qa68]Et`GLm7UB8!k'PH'4/*fqi2
%s8Kucg-$S=X'f_n0&Y<oM^NG."JWR7[18>-q]2cc)a#8VePO3:4/"gj-%*`<=.p;H+Sb10rR5U=^Ro39s(Cta0D&KGAmqr\p/Z<m
%(-)fAlEZSQ(:$p)*f*=G=_1]2HsB(0eo)Us2BcTB+(5+R1A%,8(^Ljgc(Z'4).paJ2Rj)c9sLI@B-J+\D`@RXIrr+j@%,$78,4Rh
%PoK+ffuG`1MRu>]cRi:amF7TP*i),(%u%M)14is05-\IlgOlbD596W]5<_kN+,B'\;T3oMTG=RWg8d"7;9bNC8ckCrEK<cZaQ[92
%NN#E']ho0K`Er3Rmp_E`niXFjFOk*+kK/p<[54p')UTmg@'FP6>ft!Nq(J!([R2_3DVG2^NpU7hGf3U9Pm?RS7&je2mlThhJN=>`
%%g%HKnj.5s/01tW9[,MQ]-'G[qjm$m3U/m(1[[5<:MCg%#a2@!5&4U5bq7D]7;pE.Vug1]<e3C-h'%iT8#@O:IpF[?"toRDbLr`6
%\#b9$p7&3s.=&-^=^'<tHHLY3Z,'G1,ASN=1Z_tE/3u;1hZ=@!qC,N#*JIr?A&5#%%V-q[-gCZ#M>B3dg1EWG[Y1P;Lic[6T1MQ*
%&gKStHsB.uRS<<Z5cVeVFA,R]UTSl6DJl@f`l,j9ol!R)Ar+43WBr-jG";GsR?I+gLKT9DFLg+`_Wd,J\)Y2:0.^#.HJeb`iEF[t
%K^QVea(-Ho]d_r1ngf_d%6$*(Ynq+6%;$[GJg'"]dbX.=cOPsV9:/!9Gi,.q\g7Y<7MSa"!")a9cj((>Bd%nKa<Tf-o7XfEp/:84
%E"^`Oh!SoUG7`YEr.L%Y5X%KjM7,K9iWEE5&nng,R:"0Of$IEs4j+hm-C(3lFXFi3_@B0"Y_._16),SaaU,YY5#)o?DIgJo^BPc$
%a_3l-mM"'\8BF90Ln-1"Q`Y,IO>)XM;\-T[[/?a'*Vq`kd,FqS$lf%N:=,uuZ6%*K0t$))@T6QmhGYNk&fnPUZU&t2NA?@?8X$A^
%TgJ`df&3)PdajtmK\fW4?a4McWH#G:Z:omMI;cC8i-\,Tan<c'8WR<D@DnL3.GXT&36R>SSl`Nd8*V=+8N.*m>Y,=3<p;[?Cl,8o
%arEPH>6$H`JNa\g[hkK9Ig<4/Cu_j#pZU9_[fgL1Dg09@.m:j=ep$G#5(@1ohr-Q#)tKp/AiUGdW"q40r#MARUX?e,d3qA9jsJ;Q
%Us-GVD5;(@F\$"DoAct$Y'bV+8Gg4r-bVV\(ZZ`Jb\Q:YVU*u(eU%qEX6)CeW699U..:lD3<g7$^$1ZPd@+W&\g1.@LS(9K"ck^%
%,m:j-Jml+>)XRP%j,1SaGpj?WLQdkC]9##C3b'GD4JSMA&68'4oOV6&#1N,VqFH%O=4F0CHs)H_`##G-0OI]H3q6c=C(js75#Mp*
%DJ^0XcTU:rgMN3fZ0_`id`%/@8JX-edAuK6j[u.BgVM4D%-TkIOY9J1j(%#eg>L.!.!`S6!B9fE'KY63d<k0=O]@D?gPOqpr-nrZ
%CO_Yg.C,<23V)5YM(H.onnaTJjL>-\=mm^IaX;q.Z?ZUsgDQFR9qLt:pC,r9OsaCA$IfIgZ/<2&9$Endec)@5'sJ#MW<%;kjH9'r
%MG&gu@X2VFMCb2ZTT.Ne6Ji'+kTf7>O=-iV.>T@#+!8q'>N7=c=HX`R'n9DX.O$P-eCK1".3p6K?S^PN*Rc!T6Mo5Q`MHIa.6qVA
%8,X*)JEX11/*4ab@Qu4#Nq0t`1=G_])46I13r/:Q8=@lml*q@>Z),;\@H="<\FS\?Q+)`'s"\A9b7e:.8CGOJk7CfI0?>_up?gWj
%qFH!EM_uqm95:Ga_gpC&ioZD@a_X7)lI_8_iQWB1C^'Z+*,KIiG!bB>b]$nmfB4j]U"XQ;lr^>k`F6/*-g2oBNhV(BGal%4GPff.
%rSKF5pKp]<BDpH2,Zk0AoYJpoQ:.r9QPJ/\Y>:59;[6Z-BJ<LkYkc/kG``YoX]DQU-3j:=T<o!#:kN:_h%i&2N.VH0@3&:+YY))k
%?t^E]acQ6K8eKJVF-3XnC<[NeCF)>>+kZ66UQ<o3kK>3'.iHA#MFrWIQAZtsM^fT">?8j"oNB$PBTGi,3?I2&lgYNf?;cQgids;2
%Pum#i[K:lQ54D"@#TZ@@E@%ajVKLU,CJf.Ri_$QfC%Ij:J&gtK#>=ep?uBj?BO_C=;^ui[r"O",GXM''Ns@=2mu"hP85nN`=pE<O
%Itf7;(\_eRV&A7&hYD]RJ[]Jl)jVDfG@4.#U*X@BT)*!3-uGR=b:LuU(28d`>tK*r#9<cN-hP_-U?\7%]9OkGi;L;CQd$[m*`Dr6
%'=cis1dV-iqJp@2(OC`*2T/C@6-jq(_52&g36M0*N'XKL50[('T+=-.#TqK;_+H=@qFH#Kl"mBZ%u.'@[lA1uHnDL-f7=I#S#V&n
%66E1fI,Q*mnKhbK,ZK?jEZYFVVk[RFk*tPOJ*8^E?g`T7:`n;O*tki;?71j]?(IF$)dr%VnTH+eSeW^B/jisaH8jMQ-cA70_4tWr
%KAFg=1F!W?pFX8krTtl9><3BCI0rcK^Z2Jp')]E.%@jj^$L>aJgnC;b6I_go?16u%ouS\LqJa0kY`-Of!Vd;.a6@p$`)hXMX'3O[
%^s#lQO46\6TXf2m<Uf]%RBP!"JhQBG-fp1G^+/ogRXQ$""o:c<+slNg[/(gp,iG]^P@"j\qOD8LOO'@!HNe?6RUq.^&%$tgqI7h-
%61m]m-_T<ED`AF>jkW5q7cUA%HD?7[nm2OmT)-ME's$C%8$PZm<tq^r7A++T`"n51&m&DAEhj/AlGR%F.U)Q5^]t:IdOe7!JpP,Q
%$2R0>Qb@K-MA/VrXIQ&0HuV/W)V>tAd/80CA,9BooKn_ilQ4[Jl?;U"8(&V\8SeQ/+h$NRa0u82Xl(_J<q$jf,PC!\]P]Q2CUITc
%*S@Ci-Xu:8^jK#R+f:$PZcnc*6:U7V(GmSr[`2C&Y5)Q#9e.pH=I]DCS^5aU'`eDleC%[S*keI8g%<]:I:#(M6mc^!/T5rj8J=ne
%.[e5fPl9H8K`#YoAe&N1[\XpO7NHkJQ#J6`DI#rN)=1p`%qu-Mit6MN4,d8ITYGakTY2f!NPOnh+/t<K;.G\T)TnR`g#6QKCjBe,
%U;]"XA')A<#gHab&%"j(\47BU<Pe"W:Y%DiNn!ER\FQAm`)`CrOo!-8"L[cBDWN#Jbd?@M*,O<ShRkX!-@_u$S[ZktPD6ph>8A,B
%\$MmZlI%:BikVr'K%2/0Xk#@(9Ef4uEM^$UB`iqR=7^9ge6ceP^9u"$kScl8>KJA>M#J8UM`[0N+;K:,;D`t!(>:-8f_'LXlddN6
%4pu#[].Y/PQ0Kn<IADnfY1r$ERcVr\\H?XI6fKt^W%i7s\'d0(@I6EWe;8M)lEZmUO85eW8`>$Lk,YQk9"`oB,hCA6(aSjWna\%\
%63V;0?nX*K`I>7"^T&ZaD#LR;YQ":2Ock-N*E;doH)_V=X5IjH>3Dddjje:a%s8I68F7>D.DhOGSeB"Ya84JcYjQ+Uelb'6'PXkH
%jU;=$D0;8)=;!I$Q-fb_4K<c0/?iD9;4Z&*]@/>[77(KA>tMhYWTU(Y[p"6&aA!"0(TAX(*X[8dkV_W+0&dqN(Om#a.2puED[D!N
%S$"iAW4bNG;odNdo[f;!DYF<G\1+ri41=P8S_0;WYW7&gPjLK&<2El.lYRS$I*)M>Cb)"'P-F=;'A3,*iU^>B%L%0F/_*!;;B]Z0
%!P>2;Pe^$BX"@\T+Wk156N`G$5:")3,q#oe@j:#p5&OBq4)d@[FaYR_m<fI*[Rh:!%b;iT)YtmiB$_<e-D7XjZR6tbqgT9b.J6-8
%\IbiB&(Gl;:n=n4(bUA`%9!tnU;;p(.4.@S!a:L_P=G&/@3<)sUP=oG8CY__/\E5)"a6>-*mlGHrR/1T:\29,=t_Yl'4FPYAgG-,
%p&MB/I2(Kc\bAa)>=;!;;Vk&SO1B])n+LD'3>[hh4=omYR=8m:P"#;HE4ebpn\o\+rO4)./sj"9PS"FNg$7Erg11g2M`Z9Np]L99
%XW>OYVec8'EcnT\O-U?DX@u_[/OcL,VU"I<Q<V?rOmJC4"P%6-1j%+V()2aC3VWZfoP0L$8*BFkm*U/rQY24.S#!KkB\j9AW*#=H
%O(^E=jEJ4not&DEijSB+C(-2U>?"[dJE3FC\_L&YnU?@*?oM1DO;kcl.P%jg'g?/X4V)IULV5/_0$DH.T<>ZCTdchEb013VoI.*t
%eDKZ*4uS<9pJBg?67c15W?bCiir@(Q,t$qtTA*8A?@H$RInGC@Sre/u<W=P:p>f3B,*u:JE)f]+^rkrm^KNq(=)%,(57:INMtG.O
%D^<G\Q(UYM)AKun]UAJQMjulI.>tm4Lj+:;6<+ZJ=er)?;TUJZ>`e%q=`&;3"h%TsHW8<AdTY/clN>_b`Qbk1[-<AJWo=B#C`-hR
%R\d+,&R1mXBM5s)X3tW`GQL7;&#@B?BBF6.*`R4VMLm9cGk[Mfn3hoYIQETo-^*nDecB(9bWU;T1U`lB>>G,n`muB3@!u]40s%)#
%q'^#2Z;>+VC]:$3<[:[QA[+Af37.dkXqg%fcL'2TY1d)XG2'9XPuT[>8)l1?-6)X>DlYLI/M*QlgX6#&\"\',UI-3WpRr'i"W-EO
%EQY'G<3r16,b"&1#P>'7O%YZt!NrGc>THTNC[+S/#cB*<7;(\CMaGWX7D+6G6#qg?7O_%amukh42X5G6S/7&Y5:qV[@9>JQYPDuF
%YHOYOHiN',GZKN3`V)\CNs[rZ5CTa*NA+_)T@VipLJkN5\VO$lIVJB%-0=;Hr"5nF%K2C`%]!TJ5h%(rF?tkNH93q,N0G3YTheA&
%&gn=99IN&@\3)AM"1K6iFNpIY`td/PmM%IYK&QaBMK\dn+oeGs/$YHH]4W)Q+t_>b;6/5L>*qE2e-TuO>bBbFLSZqF6Vh*<9Zk9P
%G/L^O-7_bYO2jj0G!N)^I/X[A"=#*+*rd_`Y+>,G%f_[t?lsAm`Mb0O2iAPclN6!a0C_Dj"nYh)7G<1rX?B'R[qkGt"B-&^YRr?p
%Ad'B2oS-9G"W%%RdW#HG/D7$55LT4$Nd5t,Z5G11[UM8bdc[Z5@ii#:X0?Hq!7O\l%,4c1^5>\DVTC2XLsaO&HQ/LLWfIa?7C4Tl
%JXtDXX>0j(DL47mCM>a'-r8CBlp&,DRoNSh7t-@(`CF92YicsO.4]3;D-]mkCL:[s\7G1ZX;Q>6EaM"EoWjqAq:%2N5:roncp\%'
%7^p+*%:(enI4^`?)N%+]QW%`hAWsL\[D?$ob"oAs2X2l%<ZdR,9)!k,[r#5rMG&Dd\fC8CrFqT05K3"A4aY8b<+@K)2QE9q#H.hV
%OpjYT1(!ci4alk)%#t*NH$g6(5ha".nn^e4AfZ_\PLAjX-p*eAMh`q'n]^PDk;/hHY$66/BB5ZVa:rNeNiBOaJgod61KRCs107eL
%S@E%pSiGAcJ@dDt7`JKBOKYI"<OSJ68sgBiAZi+`bF?%/&Y2O,[E-D(*beE[ZF%=6!,d?ur+2fFR:-R%m8cJ.eC/pr*AsPh3`dYU
%?,8>"RMV.&Bb=2)QNsrkG+\2t:nmB@9C`qHHg3=ic1:JT1-7T#:SPmIn%mKD5^40ZRL'F^qC'?"Gjr!f[raba7uuM*2nn9XnA7b(
%"_/)sLrA$MASCml9c`]tnl>bbU*6Oq5+t12[4L$8\`:lF3ta::!_FJ=@:co-VRV6^I$L`X^)VPf*IP!C4Rjdm#KGBoR%_?:<+l\N
%n7Ri\W"@T[<8r(\bc(ncE4(U,=QeH(UO<k^d!5seNoN0Y;JHm;O.tAL)s&D6'8VgYTeiLN9Q(cO+i,k3.A+'LduNnk>*WP9?T1sP
%CTRkSXM<dfRH"-=Wf2RU$]%C4af:cESmjF?TnYuKKVTJfIIBECWK0+HFhToN]K-HC).,UslnBD5?XB:`p^6YUqT'INf=h>hCH)n:
%rp4*]U"^n:YU8Gn+]\7TM.7D^D0=Q<If+&e(YfYOk!jlte#(reo?gE0qi!upTqt3f\I%qi.WqWS785W<.C=agH9^/++4)B[rC5N7
%pur4cPJrV2Pk,5)GC5EgdqpSE(W?>#%6gBZZilOGcslA+fYX@pV\u,bAPbap(YH0\p!8SCba6!o`-`qY1ZjV2>"1^ITI!JRB'=0!
%1(pHhf(2ZrABPFP&:\!Tg7,nlHbNX'\n4["b3NcJoWg4W[_5APO6QsD$2(?5)hQ;7O+u4GoI"a*!^S?#Yd^ohaC:-$l\foA]eZ+D
%RZ#3TA1pY@r6rmqWl7OChWKKR@aZH4'^+<G8U\#.INGsX-`i[o$3JR<_2!O2k4N=!q/Xnb$2lJNHgJgU+bHE[_#2s!dfWrKGBuB$
%LlMVdN+c*cTAn,$9$G#tQ\3t3m#h!S'VT+i2Qj8:?@.XW3=;5GCme;VfYY4UULRM-\QDJU"`6SSe69A4:BbZpRXI=!O_55*GkcnC
%*N8!+.6W&""+?t/ncdjMj3&1K@*@<`&R/9KXlE#WT<2>'@1`-'q_O*J^+g7&?P(/AQSdd0@H]j]rdpddr=U$J^\qtog3oPEEFdes
%#X_AckpejnBR>"'R0aM\8Y.WU7[lXbWD?QWlK@Xd*mJ!9LWM-YZtmS?9AA4m<_17@jH9)EM#:pu7GYB:i!N7g5"asWH8Ae)64Tbl
%@#qZbY.1qtEE0j@I@obWHZs-e8`AZ'LCV:mLb2*bWDE;`RO?;qC7[+d-sFK8;9]d:$TTTY(SUTQ_,kktO<sKmL.23Q<&`YgM"Kld
%&QK<C(a)W4(0S%t:5]jSd2oi-dg,=EQp1:V#MTE#%l/S&HP*+ci[`AGlJRTM#CG<VZOY4mdA;ee\EdPsFq1S:N@cZWEpW%g1[;0i
%(C[`cghhGT[TidB(K8$jH-d%kc,CA'_rfs_abRPgcq!B)c^0>cV3^E=+aB+>giuWe$u:,EDa$f8aa;3N>Mtrb&OeM@T74L&3KU]u
%M*EA1rdCunfu%!t:X9bjV"'57,f)`mj9[-hnet!Z2a66B.&K^3g$SoZBr)/S_1o=O$,*6#g%0BhI^<MP7D"AZ\8?jOe9pNUng5.b
%X%2@uojQ1El9cH%8pd9h2\one@#!N`Ye<k1*jPs*bc&:OllsV7I9c!"72+s8puNS:R;D'!QU=3$Xb#d'1[:/ec`/*ZHIpqann^^4
%HkcsH7L>m&Ri8K"3QM,##Jg).[-BT2lP3Lm:KPX=m9j8D1o%,7S73684i%35??!rJ$Nc0_o=7_@e4c?"h-`^c7>@_4Ssh'!6iO!1
%i4A9Q,==.l''im%ah*G.UrBP;*78#>1<U?9A*.@WY#X=nOYrq>MI6+_,&sd,`q^nOEY:Hl);Q[)rolk1qo?%!M5kS>Undc+h*:7r
%B<]?#E]A$2O44E^kCEUr?`8"\Hs*aZa+/pbA8mH":OF;o@7!-PZG#<Z\TuF^/XPpAcYK2)Ok5]h;WK@H?:sEEomndBC[Uq[fOW-i
%mi[OM9RDU?4D9dWn1?q2]Z1o'V`qf2Rb=Q:6Vr!sPka&,L=)rbbIR(B(?*;.]V!KZK^*5um/9Nr8WT(SDW@fHX6*-&$sr6C[lCph
%[3.&19Tgq@(n'.\%E,:dn<dC>2%I:^`R!0p6QPgLTG+WUA!/2&R#g/Th4"Q@Mso6n'gH,^&_LPi<S$[1dp]"e&oG\Y^!QFe^4af0
%(kc@`]sT1]?*YuW:K$(0>pEdHpDl`+_t01YJ+$EPg&[0mKA"2VI^bbOe?b=Pl$A3i5<e;Pg5Fc4YkEWd\m#>C2qQ>^Q-amCT:R_1
%3Fok@Bhnui"7TD]iq\Hn5@ugu[\NTH8&"K8rXN=_;$RVV;0T7!roQRN_%n([6_`;PKK@]3pBSB4iXFa^,Wh^MJ,*N.+GkcOiN0P^
%K,EH7K&0Q"LYl)Pkr>cI2d*0mRjlsO:qiN$%sR([==Xm7bu@g7@X!/>aU.W+Lj3Ud2sGCTe%sas#UO/OfWlr6/Ts(g1tRCE;BP$o
%ikA0p:!_a004GtH6nH.mqO>fT"lHEr-4ME?X%NX/G1p&$NsM\b&Tj>$Cs4R`YP8Soa4(CPXH=PadN8,uCiD:6fUXuC+sL(t)o=7@
%fPfW7@/p^]'3;dYIBp8^,]pf/lKMW\e;9(2Zj?E$O5!J,Wi2-">O*/eJQ!Zd6IUsT0;R)O?]Tl$*;M-3"eK>\(&6^Fd<k/Bqn0m<
%A?MXl\kH>up)`??U^L0cHCk3WY!9ZW/.//MqshA&$A,1Y)+40GJCA(anofD^<XnujQI"mJh/Z"*)1/#>/tQ)#q@6>[;'cFR!*9DG
%Vbr&7*K#$ddZ2P)ngG/p[F+1'7_mVcF+Q"+"UoWX%\(-gli2_I'?%HqqEXu-?\(cGl7P@U!^rM'?EUO\W59]t-%8=i-c^*5oRZel
%mAX&4LS1RUb:9t>aqKT2jCGJqa[p$M8BsbO=?^9ZGKV@r3,3mi0sge+/SUiOma+Idm7e:;9kj,'\YD9e05PkW"X[P5Y.qIu.R')%
%ORu.d"'$ll,BoBWSQrXiT]pmD*@'.O@aLEu6DqAGc?i9TZq+qS\M6aEOUA6eJ@"'-XWTsI*_DDdiJP]M`GOO,U$<ZE^1E.E9\kbP
%7O=o5HR'V*[Fu-U>s)Gaci%HhHET:Z?8`c8(Jlsc'(.lJle\*l4]7kF'PhtK/$>#^03rW<Z0f)E=WtX\bCt/T>jq>em!nVkE;6EY
%G(cLYNT]i,1j]pc)B)AhJ]1S#E^tGCW>p777J(d<9%/*&OX(]"kC$ULgj)hDS$32B1[\,3)B3pt`mAFn_5L@./+0guj3tM;289Lf
%;NTmjl]/bi%F/B!"d`f)"r9_kS+eb5*''7qs88-[m(D'MZY=8#IecsqH(J6d4!jKD0iEb"bk>T,H?<9/V3p7b*>q?(aQNb]A!&PE
%]VPOsHFM3p?2O=lMbT'l+^*)`o7#(F2se#[Fa2C9O(^8W"6k#k;RdofPL\t+9cLH*KB,,M"[?kWkVI<BI%G'(nh'(^q4DUrVI7IE
%ZCm%,D/m_3F!g:$F%j7Bi4?Uo5*E0td^FJoq8hp,RBkZ;D(Ab0+kqVb^bT4\R4E4!97+gd-a[`jGZS(MhH0IJ^0@hV8*n[%TnrnH
%(.[lA00S*N?jLBj[Q"DN,ntZrYse@?ke;<R(sF2@dYoNFh'bq9jG#Y1(A5`k[#ekp@PdQ>>dfe3^WAc0,L2-i)`PIG@m_f6R25:S
%?H7/>CQjVBY_\k<l$mEeO"%MC,KO;*F#em3@F)0d)&!-M9YA66iu2PO+]WWu4a`,N#:03I6!-f?N\b@\8-6q;,$e7A]W+kK(a[ES
%fP`f$iDsE0\<SE),?q*gQZ$W'dNXee't<0>TJ4tFM47%RXKYaZVo.q:^\u#rNU2ZU0:a,a+tq(Sk/%PbG9($sNVckd3g%:d2op[K
%YTY=mG.k!#&;-*s9>i<]m,sXBLApGGL4PaGch*c)*tJ_!j^kZ"=]c^iRk;Mh>/u6@%6)+i"Ql9P[f)Uk#@Ce'5nZnae+D\!Q69S[
%eX#TPW[AETU`"L=ldA[U";[@m\+d+=S*SJ8!efXf/seutM[t*DOZZj:<+%>\7aafAaXTQKY2gfHqWV*0g5LDn.3J["X@cU1b1a9M
%I<cNmP`c[PQ%HAO%0W!de>j_*\.tEndS3dm8nQsdf*o^%jg?Gh<q,?Tg,-^6B%_?7WGMfgqf6/gd:jmLAJ42bT:B">QOU$c6kRCR
%LEX=,68B-/KQes/\_<)MCp+Re1F\5`*er@D=&g)i[N%WFfA4)7=#1Z3&oc#q=0MlQ8S+`F700KU1VhLi7osKd,8D#\<4/hqDoTq$
%RC=@c;2^afrI`PeAEMb:r5.,Pa!)@p)5\`Xc_1r(C>,^-pP?GI3"POL#!dLl7+ONMhDHE\@.indrfHgCP@]^%jq%1oJ:;.8Ia>f+
%8KnL9*n$'YoE9&o,7.DP4@Y&?["0KZi\fQfV^T^e)gWJ?pZ=TIG$7Gornj-!iKd6R4+m<P]Po#mYTVaG)>Z"U-KH&[;?[>KjU>?c
%#dkV5[RV_+]EFdiL0hReE_H0BfRB'e,;.p*[5&>\GPj22p?+IAF9:2?'].U3:Q58`kZ00)^9^77-Ur=)MtiQ_WFOoQdC-\];c=b$
%`$BGo:8;\aSS4=G;4;b\hNZCom*oP$9Tf/dRm,YX8eZ,K;%i>kRgJl"[7>q8EKIC7.GD9a=1;so747S`;JZ7%lc^(qFdFMuPA<tb
%LMCV0W"O(8><q@G@/KMZ`6g%qS0)0P?J8Mb-buioT%*X@\#i#)26ElKpW?r"F\u;cMk`g;[/E$/<1<-^TmNaq=.m`?[)+gp\dfM>
%'(g0OM_m^KYa-#djs/#[P,o8b[]LL$'0<t"3hm?*8"2`a(?p<6?^CB/Z[AdNR5]09ND&$'rj9@hq/"WM^Q']1)Hr(o'43t---jZT
%\IO`k1d>OI*nQ5Og&f/`JVe,`IbA@1dj/9H%B*uN6FdSX?T)b[.ECaNOOmF?CLDM23feb]gQhPo1B8GTk,djP;I(_-#Xsd=lM2Au
%@(K@2H7/\YJ*k&+EhsG#?S^`L,rWJ``**E7T5YHdj(Yd?F__'mkg`J;6@H!sV\/$*?1oOLMNj%U0jtV=7ERkg*E'uu\p(+:m0+d+
%Wg2]TcC8>X,>h$dL,rH.L&Ic24k=JpKZ"X;p$m5X=M]S$Fc&kI[L1AGnH)AIR("J5kgWt)i2uD_J`WfQAei=^ItX$lV+ZiK,k:Qf
%20,P:g8Te1inFbTlRNhfO6saV,\0'T[g(Z9]IP9\qG'l$pk#!FM9,kQJXa,G#[Qb;j_9nYnmb(k#B/E'FGJN`7:jJ$CSBJ#0,O$G
%7"kQ75@%*=f[jaN#JlZi1C2A\>lVemZfepLeb2^c0B-3&^4'Wb^GBGE>usui?FQKj8,B)VY>_buoT*%Y.enAf^KDHf=R0d7RtfZ]
%-?bF98FpQmrl+OS*DE>9i[ZQLjEG4rP.R[7PSccJeAHHj[r*r?<WR@c$-_itYPle[ZAF.Zh%I#/&fXEWo_H/LA@0k2PK]&)h\^Y=
%oH";lZ2>WXg6aMjJR2$2Adcj_ZL9CQo$`@Tp.5':bV^;QFE<GmV8NDoKefV"om?;E6?!K1WcnH5O<0c]*^T@@KQT!hQ&+?B2afD\
%L)7b`IptNg(6#1u_?oa?bBJ]C\$9Ls#ZuFdnfC3\rsV8_rWIC[&+*"hq4CJ*pu2X(@G>5ZOKBumT[N!UiRF]\;=?#^N!R$?4jFeL
%dVc4\e>@ZPQ4JS$6I4cb]`Il6CY!0NOhHY"%h7(fM,tKhFdW+tk222E2qs"f/o2%C3bF)%;1*3(/=BIn(_UD)@*5h7=[@Qhc\eKY
%eA2sGQQ=Cj2dbdSoB_p-97s$k/[#-&I4^,.QRIl;0b`OK>DUhp`.43S$Cb\hf8\G9p(mVoq3QnmRppS_`>tZ)H>]&GoL%(Ziqnr<
%3`ZX0oY[('3B)U8"05EKrH;"QSO#_;DhpiXW2qE[o55K=NF!<A,X!b$&e)P>;kog7rtGco'6IaM4s*1Tlt\WPiZgC'No&)^<=C0&
%Utb2VRRJQ8O7MIZTjTOFRT!@"gHMD,eA2rHKNK1O5sh+L^:Zc_D[q8iV-Rg(-6[I^l]JGBikZChX&-^YbN=GeT'L/:K2a#!p&g)5
%G\ZT8Ji1i>h.22q;]kg-+tNG//LB'?i+FslCTqj"<Cj%G$=/[)[)49UdY/%U`#qp5L8qgTa;D`;3B_p*[3A29pR03/:8j5fddr=8
%NT>0]=CCf)N92cpX3Md)\04Q:F.n%9q+hmAV`sU8A,2WJ&e`Jk`:rdI=F=K<Mh9iVYCtb2=2(Wi^Gf*eB()lbF-^%&L@BtS,[K/I
%'[K4jZt20f6r\DL!0<`0QQ[9<]\.QR=PLN$FAsRtoTXnm1U'CgilOqCkmLtWPaGC,1>tN]O%I"t:_''j!M8lT-M+uRdia^'=*,fW
%&LWp%q.Eih-[G6PC]!A(>A7"dQpBf+e.O'$4n@^\HEmG*)r:th>cmeGY!r3rg\N^OKebC*[,q1AbS<#W+gf8U2eTDpBG[+2&3@DW
%0RD5j(N;Gi5HS%7.l>DW-PUl>)\n7AIo=`(fpuUHO^HtS'sj6M!_:7"[!-0X6DukJT=gp1)8<WT&/fgkgP'p>K$;QcAf9$3"kh+!
%cp)'USYq06>?RBI8VJ$*_BGS;IWL#E^b!Q3;[o-`YLDQ^]J[5B3E1PmdT4Ja]u<N+^btW31Y/;`(#7MGa[e!DlR.(?M751m-f33Q
%p3H;@Y:t%FO46Bn&=lQWFQm_LFU<;<g9]YN4@2i]0'/4i-G8\,"C)\eK7t,8O48/N:eX?,ra0p5`h]:Y=Yca(.R93.D398f/*%TO
%BG#U:qBU8CU\E8f=]*JbjH5Ob.3\-2Nh<=9Jp&mG6G192_T%0sABIH5(6l`o71BWH]9bZVrhD@sMYuSe2\\5Fh/<i`*6.,ogl[U)
%(7&4J$6so*-\V_"dCG76Mitqj]%j\`VI@L4C"#u*9^1H[(f%M]2u#HcgpkH=:[!!Q7%_+)E0IP6f`H<Q+`tLD&'-I*QQ#a__lo>8
%'NC=FJ/0Xk$SX9[h,A2'4`'YLW!Dkp`%L-:`efmH"J#OB_[Zp+g!#VC+21<Q;J&'E$lgBJcl8O*IetF:+:&/f6:AT9>nu8'[+6W3
%'Y*,,U_jG@YS.HEcFJQTc?S-<&_!2c6Tju`NgNu(dd1,8NZG%<?2s2;-a/D_",s$_46*]Df(J((@.tf2Wh-)?ABp-e^2#Bsd4)K(
%,"`>+lU-iJBq'9?qPZR]eZ5dOCo3h*;>?NM1.@P=K6[aI&]4&]okHHfq]P&WXpY7heP%F":/L13XP35Z2K`:B$m&<ZdHk%0DDK6*
%G%V<ISP,U^m=/%B25D>U:$,gr]:P0"nN*3;`')b7k<up5@<](C^<8'.MkAep@K,8@VpD!i4D$F1+K^oX3>2/.aSS:K0B8O4V@;;/
%,h#gt24r(nMYSM-XAUms">:NTU&F4O*d;')n8[7)/:+`Oab)*S2"B0qROb_Pb+n\n'3gcE4!Pe_Teg'.F1WT!So'oH\^[f=Y<gZ-
%99Wpp3i*.r,<g).EK6G=MY`28%72Gk<>\bZQ?"[pZg_ApSiZY(-Rp!1\RAqN\%L-!G&?!a_dM7jHcFPqHD7uf,lK>**'`M\UTX6R
%:Rf$]o<r6/PC@.E<^+E0D+TlSVe4bRTt`#hO+`4f6,_/(hgVTmMX8RC/Do0FEh)rdL-W2ab%[<]Lk/V>gC`q.0fq^MrML@@7*0T6
%.J82&8A]<f-*V;<MRW669/&`Z[[DrlbEU_MHq+&TGH.KiI_4h[p$0'@+K\1@3gkGDEtqnW*!P,Dg3.PIX3Ne)Iso%Yi$d'?[_!B=
%>3l\-iW>V#Om`P/>QmS/[q^.Gh2HZ+B)(Qq./5,^QhYh!@oH+Ak)isf'WFLCA9rTi1.cRM>%jS"FNH5';(\XTm"`og;fkser'W99
%%bqDpV\A1O@&2XR>Q6tbG2^Q/3'a7f""E6Qn8L)aA)3^V[r>"r0R@U?#I8?ZA-QfkEf,L-aDR^nETMf/MI4eaPjNo3RQZ,38Ho[N
%$hH^mS+GfAHre$li:Qf=&@n,*P;\Gtq4qBfK9teHA0J47BZcJ/DD0uXZHD)[d4SjADI$tE@"5I)G+Bq9W`K.0Nr3gU>J)W^\Cb?D
%B7a0i[O.<QZLt+il/g1,IGX5L9/2$8ebt):)<`=<i6-9`4&]f(]&CN!*`lK<+?<A6&%OJb@*RiiU%d'Qf:u+sHH:LrYWnst_\10\
%6MVWM<nSFe<jm26b?]o[l7^8C)ut?S#C(T]%FMg<89q*WW0W'AH1)EielG^9Na%!rT*P[h&5RX;3(NY3mf77)`+buK731Mbg(?md
%AiFYVib*$-SC09-\MO(QI9b+0d7[J\#JR9JCZ;D?flCZ?8/jPYFc!0fc?qYK8:BF>$`8CYE%<ulB*.HSGlptO<8u(?%1lm"5#Mp*
%>&iP.%=,=U?;`fIXSU,$%T`6%@_RqT01.X!HpSpS:\\D:0_&_/iH4!`:Q5l[L10=!F@$J)AXN6:oU\)r1Cqdo.ThpYiao?]Qkd))
%lX8A;^Gr[Z.bQ/)>o<V+aJd`e%,m2Y9%Q;2%Y^s;TW[-PfQMRX.=Il;Log/ZE9m$ZdJ,G?r&]4t0I6gbe8j2kro1S^GVq3%BP<N_
%O=l7[d#J+%Ue/EqX4TZR_#Fj)SjJQm6UT_aWk3Vu<H.R(nr:XR`G7cbk'[^M$`8S)YS9qb?3eH(4LJQb5Ki[n^.=h2'LID#a7?$X
%lUq7JQr]9-np3WHM$0/UmYHh%:jjPD_a!?,h%"VgGc7*jg77!s-M+U-Hsks#BY$N%/uUi*)ffm3+.:E*T8iiKgIE;d3ig?=U$3j9
%+`I1O?.os'(Y<`N=dS9B/>NosCskHX03jZUr0eoDkkiiXB4s"hlG8g"-^dF"qcD(ZfgMlf=PaCd51_mh-*e(A5Hob*7ADn(P5a5T
%5G::&$[!:I^+;R)pk%b&q',Klq(cpKMpQh9__o<)mBdbhX_5(=Cc\CkLB#!j2ugXO=PrqR]&ns])'pI;M^")SpJq*)5reus`T%1t
%TE]fo.*VN;h@p:P9(5Q2IsS8*n&\W`V.ul$:J7^`=lK9O!h7/bDFcGS4WtkN$i7,M2r:rB9M.pbMPOrq(+h&d_,*EQJY<,9r7b"[
%e-E^Nc[dA^bSd[Hj8$W+S1Goo[_gTe7)7G3Tg%Fn1ciA;U!YT%Y#^3F`#@G]M%pCt#hA-094IObqKN]'[^?4<.kc^(ainkH.DK\)
%1jYG&]OO+lCI3I1$NW]P[eI9XiW8Sc*NTG9^0)T<N:OEt:M82;1a4IEhXt@QG2QAAO4#K71`7\NX>/CHpJm4onmH=rVUD@)=!J$=
%h$bPki3&Io1X=["a25_lOM:nMP*P(@*%ArP.*-eU,%]6KTa?ITH,A\Hq'=:To/kb?&jRhQQjN*V=D)3-N2EE<e`5OnX.m.@&)M_L
%.qXL,ga-sH`-[Md0_]Ch8fA]u.:_,e)mcQ$kFcLll[G\ADkHH]nA:.&E'brFe(p*We$P.?h2(@]M=c"0G>%2ho]`0]>G'd_L15Fm
%qX<fhdrRd<Q2]*:SE93.-06kdlj&DCp$W:2.P"M)5IV:heg7%[5]+R>6mp-,PYQXmVX-/XoXX^K-iSTt%*O4"b9;VYZDVmX3A%&<
%jAc1<AUn/P`OGOclW5=FBtH7l\]FC&^62bg@)qD`#$VC!fn]dNI+HcnoEkJ-/$V(Ora]j&L[lEipHj4%5gB%g%3:%KDbirO:2[m(
%2iA@%ZFW'9k<4IjZt>\#Aqp,oMl1)Gp9_[Of'3V5qiedWgo^8<gYP*Bq9uHLXNY8aWpV\N\ZV8&@"$GoZC.ZeQ$I(BIO)/5>5WO>
%TO4U74kFe]duO/c8"8gGlF'6Hqte)tXkFKhNbo1;Y^C(J3BbhYRi2J)TW-tfA='N%8+=Pr]E%l36T5Q>9Tg81Th>=>-1$2+YGcdj
%I:c*ebAlF`Pebe(b>p,$cgMt##3IkS@h5rY]A7=2jF50XND7Iu$e$N[OO+kLkl+OW6`<*ZE&8`0DJ,S:WfP9KUAc6@2:TiDYc*W9
%JQjC4VUJdL'@PN><)4h"dh<Q!H<cu\P)tj('sA;-Sp5LC\W,IT<4O;qQl(cZ\[4q)pJN8]/nNM!-W"gQQ?ZR.REOe_40KqorAsRR
%qF?$M`^U3^rD$/3"@LA3"SS02;6i`_ZksCG,N&<uhXJYt#F4ha`.lA@Ns\)$qBS@WA.9.f("BP:Gt78h1:;6pPoHMBEV1VImO8Z/
%H*aEeP=(PDO>Q(t8@$&mn7JgKa/@`^Cr'ZKSi4*Q;DsYe8>UH*qBab0Z%lg[;0uZaH)csR(clq%%O[L)j"OdQ)V4iRL:/LKY0UYK
%cZ+3V^#dLc,3g[Ur@B)cFH`5QLB(5>^?N!1pc9I^$/WL/LAf456c-jp-X0qTn3?kHWJoIEC$2npL;>]Brk%S"#i^\:I*RE<D?JiT
%Si2ZeKPQ]XEVQ@"gTou,=QF7nRS`F;N;XF2,N1rZkE?Yss)itT-^]%]:6#MDe7LU_4O*k\)`u`tUNCW&A7-$khS>T1V5-CJM[N>M
%]?@WqhOU>CK+="le^$4VXI@rLo]bo"94B5SHQf3E*@8%2?gF?;`4s#Zlps`,q<!#,(S;tu5O4VHlCm1,][E<sQbhML3FQRK_%I5G
%^&ORVCeWY3.2S?u8>7_:1p>^j=,h^_f>02JU&Z3ZU^4X]ror*V"4=R[>IZpZ!Jj]_R%_:N.<XZMkSR@$?q*8XTOTRd1hBWDc`Iju
%Z"C8b7Vi?fd)H?cV&SSTpd-HoBT(0q[$'E=>-(>fR>)JkJPc-In6Y)0@2IDJ]cUr/)7q8Um6qZ:Wo\F//+g5Z(8SuZp)-b,4GI%S
%>s?s*M)Q[X)43b`rJi=&4sn<[;>iA)cq0Osk(ZUi`YutE8.SC6UHZBqO9\F92Tdc!YYALXkB8R>WQG?b<LHa#)>snL4j#B4XJ\7`
%It$8N<7CFsUfKTSA':e5D4IYOhGQ@)7j"_NCuY\Nk1ebogsVsc=MTMAlJ8"[C@/CWC0B<Y)>2<pBh+GbA56-<HEp_F,i2d'AVkO`
%<*A4=1p@55,>[kY(<]7he1.<5p9Zg_Ad7e$E3sHY\%@SX1#X+/X[!u-#@H,jB`7Qt2GAB(\(8a83De3J/HTM3e#NlDiap1X;\[g"
%I:q'eShDLPR4WtJKo`-ieP8dS1t6ES,gl0cR4B0&l>I0>#GtCDAB["n];b"n^O$U;b9o'tbC[_Af1RSgW"5B@]e-pG_Yl6#9UM*V
%2=un^O)*%*X>'$4I55/,J16%4hDi?[BBqi)Z,ops^h0V>Mo'@J39\`TFdE4!a[?_0=@_5SEBhU8L=.jUS5]J<h%K(qU^Q;2V#,7T
%S6AF=-_%+KnJ4M#4"a/GIaF3<p^3>q$?G2j,`72.g[g8Cm3QlLV#8U0P0SPYNqG^@ll#JW1=^=Lb\e(#hVFW0:,#UZ$lu$NP$tR2
%%:4Z#M.%(_s6=KQW@5o3V-2T\Jmu=>jUuG8`Rq3bXp*dq*?<qgfTm9'araB7J!,"*b&-X($_je9f\K0'd^a%@@!OF985H'0jJ)(K
%%Yj]^D,tu$Kl[_WRi1m-Y.7sa5;&e"^hr3phc>ZT^nr-^BOKGi1T2i9`:4+EoUbn5?a/O<#ACHhYoIba@&sd+!9o:8P2m(&:-TE7
%it>8C:&_<B;IWg+34"5p&*]SWV78n#J.4[%n^ABKi![<&([Pj1N>)*:,+5_qf(,K8:K+FEn)Cak8eSr+*ssId$i2H;#)@a?P9KFn
%H;1++OZVu=hE,p4^q?iQ2L`6.<Ym]tSIk7Fkj/+akVB's1o%]%iYIq:"S.L5p:*tU,C:1hr&CQ&_B-h>D#Vc;`sd`oN3a5n5LiNL
%Ibmc3fn0R#3-*Y)bU9X7@V1usXH!s,`/E`hb83BiAf[;5ij4$`'FN^$GI<h::hV;'F?N\e_pDD(rmN>Vmi7D45GNI6RSL5_ADTIs
%QX%p/lSd?YS@mK0op<pTpI!oJjPN_N_fP1GZ[B7'>`Nns_7g4l_7m:3h(TC%c<K_546(:8NPBLqiLY\C,7ZfFoW:Q[3q<F%Oc!jW
%o]G-B'7gLqN3h?k.or.Z%[jDA+b3a-I+<'cfeZo,Fnm-&"QmmR;\r4B28C8I&!AuM+j,\7"mL_2ZL(OO#]cS`QRKSa]_Y;ME7>D-
%,lJ5)#;r%>^mFFD!o<V$>ueM&C?q0-@$YpD_p7"\D4()i1EtaWD4>Nhm0?t<7(lnUcg'#.<9p^@ER[$Us$iP;+#E3P9m,X#rG8-4
%Fr/2P6jXj&pmNZ*^KK)\"s3elZI!ijL]"Mj;pWh^N4KH^fc."$j"KWrk"/9Jg5$u9R+^&"M/RMqh2^^-<:mE!`s/)*He/+Hrbi\u
%eYf)9MUjh.0YA"uI5'9NM!YiJ.7/IqqFLQ*pnI3Iba6oi,ehVK5.rqM_*%=C#4p&?TT@TXq;T-Ql$-@gFFFOjom,9Kd5O3/05I*'
%nikDjl6B[*Y^Q0u0'0ruV0A<^./*dmQ?aM7%V*O`#b;7WTc95(4nWgP_jtK4Kh/=b^X5j%rK[ZEs/ttQ3Ehg<nEA7qh&SLR+8F!F
%M1;a:-F)Uj3hU=_%=UX8`+@rcRBV%dn%_oF8-l(:,Cp>VB-bj,jhR5@.q3%@01PE0A$SYMYX`[d]N3j$Bk?''81P@N>Y_Zt\uVRe
%h57&/qFH%%0+ZAd^7JVob5G&VObFhr9WsLj`17M@XV(;ddQcdIR$i;k)`)2l#"S@kg@U1ql+hI3Bl4o=U`O;`&"Xa@jrq\Xg-h+W
%P*Tc7U]dLs[KInKmD'cWO'G6uP-spU4f]?YA>Z0a7gn9%neEL*aZaFLl'DLCImsVnLp#q!d`MuTK1i6:DOCU5rcdrHNWN\5d7<J?
%cPJMpk6Q$We+<REYT:=4XgNG`MkkUfEc90&@#q\8j\"+nR&r&+PGE7E[I;CWch<>lh99?:(qlh2ns,`B_,gfL6Es,1\],2.dIke4
%8b;_(]+\P1hGYNkP/*pc?IiO"=2]d2%4HAQehb&n&N5pMOseYgD/3HI6LUn/5mD)>?N+8lV$qrR/FUWCpo:Q.?*fdKjW.?mT!&JR
%\(nii1^1J\e*Re>l\,+f0=g/(;1RR#+c.lJBAR"mroh;mHp.0uA\N[YTq:7,k^)/L]NED!H[2EYli<LYSeH0OW/m^q$.`&<W"4?h
%PB3%m3PQfk$t;GlU"e<2&b(sl\utjskPj<E]#cZ^`>j#HY=0guCh:40mSVDt>^tJ%lBp0jBNuo93NrTcE,!#4a=>3n4nXm-jn=aI
%V"o1g2:S#V)+6:ecX9.Z,jSED(,=*k@-gR5A-o4t*E2j8L3DP_Xm;B&=M?kgg`T?c0mZV8CkX;J:R(<T.GJ>K+'$FN0)f\GJOT%>
%4^A-oe6V^I,9&?>IA@p3_3DGOHCoYuJ]483FuR7]Y`\\nGEA4raIKbuLZVb>FKhbuY(('5)u:ua5'R"jY-0$,=NF5:)u@>&^'\r'
%\,0@8E6Nd"IRb/!(3aA[Oj'KQ1<4d:`Y$8EjsX,"%gr,!5BZcgp0;@?^rM)Sl)4CERo#11JruPq,g":kXc3DS,iTQ-%Xg"r8X(ji
%H4lXj$+m)U>WkmZg2FF4q\t&V`=0\pr!&gBjDP%?aXU)Ih9d:AMCSeJ&71u*m]?"G6!^UQ'#UTJ.nZo7"Kdg356D/;)iTDiSH,/9
%E(Wf0<Z?XkFCGOqk".aW"RCmTX2QEU"PpM]oKtb(SehdeDtg68et`nI.%?<I#G+VQl*b^<n'@k8@,3]GEu,SO8:,m[+=T!\L/\*q
%+]!><AFL;4KPIpnG!NfMB[g$lO_N0sC+JJhXNMnB;-loJ`!<<7JK'X+%&k!YDB';aBUgo%SOl'Udj2sL@J46J:m%2C#eP/=Fp;_3
%DN*lkD;+KDn]UZ`ooYI>RucrlnlnW4@-UXf(+kS%eS886(#]#%QpUn##+[a).:OAjDN4ke<\iF/&Jb1T_3#DZn&Q3Bq'&,-%JTmN
%8shGbCjel^@[-&Z%6\"4c.2R+C-I'D_a`oP=o[gfX8i-:W;DaVp1SuoGtR%3]id,#b3&Qndad[21A;NlQTDXPNJStK.er87Lu7H'
%eH&+68m_9EGsL'lXFa(Ql+)$&/^R1;k919:mKVE(FZc5f]H1fA8DpE&gCefY+["MCg1W2L]g`Fd_$JS$(uFln1[Cm2?WIoYqof^D
%BG8KA<4_:\pG@S.P,d(Ia["A;jAe3["9!IfG];30Hrn!j[q`VlFtSW_QO*A^Db%$JOe.WGLY6F*^>r6Eje8:Qm71p>Cd;%EU*O(%
%DJdl(-,4C:OMuBYC8F6MW=8WJH%<op-#k'ReKG=m?;f/N!Bp=DgjJ@!'*#"F:r$'\5B`0s8%m9X``)A/0KW+Z)`E97,.U)h]%!U(
%aJ8(6)f/aOZO]p?Y#E`EArodA;:R#h7Jc9IpEkmT/r=N&o^#W2D-[V9)c#aD$@Ysj&_ME"l)0ltT.cY?!*H!K\KQ8R"'sL@3UH#*
%<9E;195@R:S$Y4iM^C#SomQpDG!XY]/u)Akl^%9<Ksb!&6^N6O.t5&D$+gl*dUjKP\!L<8?JF;2hbl[ApQeah-*,Ci'-,D+BBH&G
%VFb\*l#fXGlAI)+n^6$G7(f,Y8drZ(/uc0V6r"O0fB@'#Hh/e$2t9<^bB3i58aE0MjJdEI6e:Y2CcbR^F"7-OXAG_=S<Ou!;F?3f
%U>j:&f[^te2<"am_12gY&p5Ph$AR4OC?Pf?Pp[#(Q3ZSX_o`7>o5!P"QFaaba7SV&OH[c$Ch2bmI\Z%UQ?A>\C"n@\R2YQ^0EdWm
%[lYGc3H[7KZG;U#)0EeC,4Q-@\-nJ+e0RgC7%r'<,=q?g-bb2_&P@^=*&:pY>0oJ33P:3BB#r#S@a!AMO^P-NR[61S</Hd))5H(4
%bWLBdpG`i=I_$-&c"/"6kr63`ZopFGdOs.Cb;g+ukfE>:?g\g5r=mD,kS[:Sg0.@aSfrR(Wsj;D4i?TjX_H9G$`+R:j\5DW@q-(7
%]4/=QBVEAH?Y[%AkE/0L>H"Yc_SsT7eTT#L/`=V[5FJ=>\b1aM=4i2;.D,3gQrlGagmh!T][BE7(XN=fWr_cgo]=_$"uBV;5#Mp*
%/dlG]N7t`C>FZT&MAifX0$^Z*F[Qs@FlQ(4pp4fXG#*JG$F9(]JCU[<.k=2Dqid@t_L76B$FUTeCq0^c6@H]e3@?RaSJ05"R04/H
%d,/`e_N0h7<5ZV,]"M;283t7C#B6^t:#!Qa\S9tQUAP4T@Z$N)Y:ofQF6b1&0jgZ-4Xgm(X5J'FeKefO]_B&9XpQS!g1[`O+%>(Z
%qoE7;OXEXOA20eWl0$5KM",&/ct76+&Pa)D$gbFT$[gcg^"t$ZmRm'ckS*6t=4KOc*anFB>=T*rApNMG:OVBJD#>;PDCDID?0;\Q
%C5J=>IKuaC3HRq<j,^_@f*Tc'AGkssiH7Il3VJ."3)tdT2QhE=-m/@c'V;0Z5Wj51(Sgk'X^gOQqS61GVXuD0C^F4IZ60oS%Wn!d
%X>O/W./LBTaApRo-Ln&A]r+'>='3OgGA=?,08uhH[P`HIC4p84.1BZBqi%'PK:u;H!=8:5mlt=HL.>4+7B\'\,5;7b=GmeLY)<$&
%GKH6bCJUe6QDJ-aOo"Bka\h;64S&`_07PTj\]e-"O?9\ho1GuG+otUoImQ<\lOLCCHgs#.`)#n'XB$bKWG+)$?jc)W\KQ(p.?%OG
%l2tB74RuKkIHQn\'L+q&,4@CFGs$uSFfN>@dUD07'7*H&11*pZdM`Js?g^W^P@-jgScc8O#$^WOiY;acSi4+4Ubsgj(:T_]Gno@?
%VV1OpRq@S]>+R>7O!4n/le.tme-E_#nOp@'ciekGbEFbr[Q$3rB$56eJh9;2M3!QCm:&IVq@6oXRj9'50^E*UrQRjfA!)&X>=,9L
%5;VTn3*fQ]d&+uN%NXJPDG]AQ@91[Xj3&qkdL(64b6dj`1>4Ot>=Pf]b/EfA@$nV@HG0rQ-l$?42\Kf2d=hA+Nmo()6a`7jVKMNd
%dBIu#@(P8.V1m4jB0poH_k`gN;0:oacBg&Z,^EKPXl/BrF/a+>MQWIEW5fgBdt2YCL"CMK\(89M=)3JS#.A\\YG1Kpofbk.jSFq;
%EY%@somndI+@u;'N??ojoS%c-"/IS0!sq&Q!VrbU4?F8IVK@;&]HFGr'l7@EO<.J+`o+`6FBf\cL>8p-9V@Hr8%te]`bH++`#%FD
%=Zgra2gqhCa,p7/bD#!<25>u25TctXYG8g"9Cb)k4#!DPLbH9/dP;Yca4DrkAaQf6BrqA-)DO+C54XEe[`0*ffqca8e]'S048j2S
%rR'<4099L>6O4&_aFYjaa453FY5(#;lZokE%%_AfeZkGEEN(NigXp7hK7BhU&:J5bO45PX82&L%<iZJqi7=#!CZqtm7:8261o.lm
%8*[;LeSKn'@JT_26ThG4r(B#QBj@tAn8o7#rDL829PDI_4U=@sQa5,8>2<>_<sn=t\G0cCPs"24^a=0tZ.-C3Q3"ND%AqolOlTRA
%RUt=H$Dqg&(,6QD./E+6entSS^T5:5ZRd&O@f^'>e;j;RGdHlRks>'rm_khlZ`VdYP!4)81loN+3hED5T8o08)0iqaUYA0Bo12)7
%Gf^*%nPH$#-)?r`jO.ZaeF+4GNj!!`&.>qsYXTp_RWC,\P[U]VHH2A=@^!":Ng"$R'aj&W=q_N$JKNX$c(qNFC)QdQl`goFh+Jfu
%MoPI!.>[b8Afie5qjfL[r[@J`5,`73[p7IFmQ9$)Std6/js'j(FI7Rc>&c.7\ER&gO,AQ4rl_oDmRVu.\jaj-MK$"B@b'ePdd1+)
%>P_;dI_4i7"^%WXK,H_[nk]hR58Np3Q6!T>jnf="g"*ej@So/*5RJBISh4LM[pJ(5$[4JOhLr=WFYEF%1>f'E`2]n>k]Ji-X['9"
%6iNntCT+I[3<<p0H/f5O0Y79`]r)Ot@#?-UbhDXd/&c!@c;*@RSoY'/NA0Fg-8uE']nFEr.aKZhdA-Hc:$>4Je&D772?htJ/7p6>
%jOg(WG+o2O/D:/HAWHLthsnU1g14Zg_=<qT8'7Hd-OYY'rg!HX]@QYR^T>9g54,Di(JV-g<(WW/I@D7hPtGS/?*,"<42s?f&l<PZ
%CCp#2*Ol8`>S9#9l`6!(SHO>*JtFqcA=]>B:WgqWrh'&9;_7r#gs,eZoa16aF_G89`&e:,3U:b!;Z^19P75"#nJ:(Y"JTQWL0Cep
%K.PT15nWB-d.KNJl(s(p0f')X@Mje[0c6TZ1?>ES%>]*5g?^*sj;Z'?/^R(d\#R9k[9K:;&RchNK-K#?gr\:[$.eIqQV>M"3%.?h
%96[-eB2I0Erqj@Z3t5:VIp:2>=[GikNIN>mW21J\S<MaApXN3.ii(1S\B#HK,hG%#pCZT,5GL1cd0@l8L0fj\&hW5/!hG,h%Wl/6
%!hJV<p#WEaJ.Phf0QmqJWo3c[du?U?r[@o>jIreA#]9)s-](5ne0En&:@a4reT9Z":1A`5YCg8CqXXBhY6eE\T_jcET,-V.CIY!a
%ZF]q=g^KKSYcS(k3A()`pC"qIajrMSY<&D#l8I3Ri(lT!L=jcmr=lHPH7)>Jr\lGk0LS!nGs<UUq+3;E,0&mWP%'l_UZbJ;L`b&L
%hSCcll)M@ihF&3d`Pu0RJ@h/MTD*b8=4L*b3F07QT@+0ODsq=Kij.b\,(-"35jXZs'J<r)F%S+sF%T7:F!<ZT3uJ_u:(0"\]8X4f
%7Y2I)L/En.!h5mF58u=P7"mst"StANZ4Np,?@AmI,W.M(_^NGPJaK]l6Z/kk33u-V:'//5Jnf6V^klJ8i5B\0!DXY;`<d,CJ.oaY
%^e)=A@\Hb;$^[M04hun_'KqPn(?!,q?l\:c;1K=.V?]'eloM5/5mqX@A.!;@_#BTl8b#O!%`LBsLV!aU5Ge.P9Cg8*JI0#!QYHrl
%TN?pjV"'^)l>`e]P(#GjFst._-usj%J?(:)S[/JZ?(u^a$[ujV0@;m4?jL]aoOTQB(q'DlJN]ku6J\20=6B92']?oW_99X4&>:AR
%mC<3aJ<PKo;f2VJ^)4P]%_e`\<c1e6mD'Lq`4VQ7M8po@PCRRMAJ*iG,;rjFH_`fF70-.(\=)j7b*o.S/OMpf0O"g%@^Zis18@%l
%/"GK;\-4i<*\>)U_'24F"08SgLMW$I)>2VVMDI[%:*$k?3,*`L/!U=a,0I)a%rd[TlQO)?Rr<.5rSr8_G?FP^ahTL=N-n1'&FMmu
%=OC5cp)sb;]'g=<.[93eQ[D=[lCWO>fPF66Us3;cgseXmZY;hC<L$9*@[aKRhGXs!Wns/f9u[tRd/YQV$3<oG<<P99;[@?BQ\8]:
%57ug1,Q/*GOh$O@1,B2Wjj+R2.h?Sk;h\ijEQ-Qnm;]-S^aT`PWX&LPh!_l[']?oW0tRD7!h<lP#JN15M9cV4S;<P&..LH7!%.f6
%`POkk^kk64U%d'Wq/Z4?g78\?(<0U>BtntE'=$U.9:gROc@h0#W=#kAO/":71[6I""ZRed/OClq)Z`]c?6;DQ.;ddk_!:fC:ZrJW
%YOcmTSgs"\T)#YlVt@M8i0="o#c/$4nlun-qa=hm.ej\BR'0KuMsV#eh^$S/_=P.T-h.^AKh8%/FAnVFa/5Jtfmc?"kD<]<"M-]7
%3o2a[%?^5>,U1449`fc=<8_Ja:%=L%4HLWI.H6eP-]`%8T<E^Io_%1?$C9\&72$3eJT,R-,o>9&+fL5]atI4m-,6ZuQKWLg=[GZC
%%/;AdLHX',\DiSsqC[\>ib:_M'$h4[1snE/TS]$[m#gqEGSJJgTe2dk)*g/[#=CUO!a@VtO(cp7'@Q>/;%_$:50SVHd^3+1;h@Fl
%;Z^/W'?r[LR:aAblPHg"Gmk9/R0,Q,(`&f=$#H;/f<OQD9g>0\+'('>R52#&)BGZL5CF-%Pb>6Vd"(Bt*9ds6QW2<kI'/%?M/ibV
%KFI1=a/VlZej&Ec\c+T4NChk'[V%=K0P+pU?t)#G!\'*I!DER'Ec)Z,,fB#<[1KhMh4>cf%S4Iq/uN9Acm:&6H2pJLC.BEQT3h-m
%r_7qbekOT#An&eCP_krMD\>8=Pjqq[IR5)(%kLSn'!h^B/rK]t*78t.]Fph[3.72D`pRMmWEl]lT7b%H'%k'dQn*h?na&cQ&p&b?
%,oNtP$\V]jdZ!tB(.BbD+QeY"d"BhaqrJ7`UY+scrZS<HM)?:J.<<HC"Y9,I#ZfqB5dZZhT%dJ=+]q=_f+!-.>-&?dAmg\<-VI!k
%c4!_U#-m*@NXS:Z;$XP)6:9`U3hcO6?h^iP'C7Xsdp]K>?WsNDO%Vq^ROpk'+1>"B)/2dq+TXcToa:e%m10p_o[9BACXGU6Y(nLs
%%Rg)RN7Z!H668^NWGjpEBdFeB4YOrY0F_j:Lo[a1a\T*]m5BLMdjn<W9Se\X?_8m.5f$%oDWRaE,$9\''bO"7_%`sri%!!\rhhoU
%Ig-rB=Gc8c==O3uJsBs3NJCHV0W8L.JsH,;&?PL3HH-h+0C$>iV?tJ1NaRnXL<'ke$XeNkbC\.W.\faEk$GhLY_kqJpcSPOW>@AA
%@j=2'K:W2O<[)n$gMk5?mT7O>rM--Rj$kV4]Ae^^_:-@\7K6F,fWCa^mg$dA<"Os<3<i7QH$iX4L.gFY$%8TjHo2;u:Pr7`"GA>&
%3OG0MoYD-GPe\',PUOda.;"FR0fWc:euZD1INiAq@)ojC]Kp"D3F4suRd5Z)D')iLo)YpqlR'Q0X`Ml.IQngZ,g^-IpkbrEm[#MC
%7`K:GLS#9f`#L`ts&=E?'A?hDU*(XlM*id)ZQudRE#X\g<QO,mSf*Dj#q+"I69$2#UeU?M@eJDmrqp[>[Xb48(iM-!!bhZ?1f*7"
%hsD_BJ0fd&jg['d:\cg;'ELj`^'6+pkX([Q$Wrj+[s8TZP);O./1#CDW>YCT@-JF5^0;#."LBS9\"F`'=M2&$KD]h:]^EWdoq**B
%`J@kA[I&)Gr+R1=DNWD'2@u!IBlOgnCcMK1JNt6a"PBkMrMA:Ea&=`e.aD]7.F@A`h7L<1=0t&j2b)nW05<'cfK\rUU5%d%k^lo*
%U3:DNM)L+_h?qXIW-(0953:V.gh6I-W>r@F+o)`sVf'kn^4K,iTLnA,'&9V6K.(8gr:CQ8nsUC.?iG3rhAc<G-=?;2;W%2q<e$e7
%TDDKc'n=lr)3ZH8OjHkV?I"._Y-AU/WJ);qH>C<S5b$Lp@-FqVY0K_R_X)jhg??(_rTjZoB[DreY,d?TmmdiNpmHM>K%:7_&s'9I
%--FW&K#*LI-*CHEBU;`t?-fNt>[T-gmDnO]pXg,=<@&F,\c#E,%&L0;e/%46`E80b\>t'UV.n$R4t-BnY_N.MaCY9Ki]sZ1\\(?Y
%IQYUN[.d;l%.FcL[9#(E@RYe76pj.B/1S,khW/Y-PncT/>c9O/h"(S_p8=Nr.FcYG</.]YTD#Q89&=<FdF%*LSR"JBhPrido6Hh^
%A"<\_O<1H6HQ&u6qOp'BINf+fVP?`t^fmp`RCM@e2j$sUdsaqk(,4:-,09V`f7N;4XbX_E'p/mQ(=qM2H&kAID&t5Q0GlH$WLg`]
%R+RgG$\[l^`M1MVh%ad!Da![V?FAfAO1//k:LN$<?G&a'3hg*N/Q0Tg6f5ge<)c&OX(g=#/#BT8(<oX1DH9?+/sQq@`k7p"0auW[
%ZBGi;I3a@I'-^-i/<@!o@Y.>%QN]`d%+FEYZ&:g-+]-p/d``IFS#Bb9Tq$HqM5f(u+Kd,R%K3(Qard[)B@`WI-Ce"]+Ns5B2YRk3
%*('rJ.K`tQU4BAh5/84fAgXHj!-C6io%oZ$*au!qK>=96V.!$]2[aQ1JBIN-bKbprBW_U!K.YNUYqA1-=2\7Ma?5m"k0?fq9.C,7
%W<MY=)g<t3hMRrVrO"Z0:T0,YKH=3oJ9U5]-)V@"TFXV7B\,i3LR4GS)-o;q?5dJ;e>8&lmZF./47D;$dXH]QqBE19?KSB/(#Ds5
%/S.Wb8KkdQ-RKe@K\i_lIp=H^Y3471:LRmo_61#=*+t%U8^TYIk;'UbaO:k>cuHUBGj'njFPfkV(dr.f,Tt2Q/?Pp6;are<O!93J
%O3W(4=C+hB22Wp%>4@KuFtcTtoJ%c9b1'9Vg!CaeR!Xg$(,EZZ6ooJS(9g(\<;4;=QT`7;Lgm2pK/lD'5Ku<@gPgtcT5bne/LiAe
%O1q%b[@X#(Xn]"qLD7MUcj>)gi@6gM8:sr/P,QQh?$E7$&>Xm2\K]b4T/^OTZtA/t4&'*N29)XbLd1iuR[GP-AD!-3-WqK*X\_ZB
%'e'aG9q:B9co.&Rb2!,DT,U3DrUh?i9!#o'G``(]2j]bFdt2Z9Tu[["U'Jna0;rF\;gLVeD";WC7.d5[J`kI=E0C1nBTRap>Ak/Y
%2d%K3\eb?n,ecWRB6b&@eVk<JU=X/cEE$fDh@a%..3FN*;ci,0?_TJbilcYs-,.T;QM??oFGVYlcR$:2]r1iJ?P5AnQPpe7I2..'
%9oGQ-immpde%jgNj&Pa%C^oU_7hRnf8)g/4/_T"$UFl(n/HJqD+g1tlHj-sR-bQ"1O.s+TGQO2*`M07k>OorQ)*K3.ZA"=u*F&MN
%,.?q9cWq5F@]RAk`DfrK$XdG%Z$YJ<9>W4P9d,eU`!c0:E*30XIMi(<WfbDMUdFbqrC'qEeW6FGjkBa=,sbd%Ms`ktmKnq*8TM4L
%U1BQ>oTIQn@S*kp`DJra8]$D(drdcE(9rNg1/EkbP9-+FjcD&qk"1*r26a!l\ngJpi(61Vj6[j_!Z$3Q=A$XT@;mLC1lYq#hG429
%:OB'FmjFR7$>O465Eo>9$2Cr,5M#X%#/&3?+4p[0LkJEC>+JT3O(.?+I?p&J?,h,jo]RdU')DG;g[9f+/bta?:-Kf:bR4!a'B7"T
%qBe/>9SgGId<7J!/$u>@4!r[kdW>MY'`;d!R4#P8R^^J\XgBsWUZQ-C%A6pK1k4Np0(kPQg[sg)G6kQ*(H6tlNYoC'h)".S4>TF\
%3Gn;`O9ALbMIiY)9M?c!NqP/*Yj6^aB^8>\P6,kVK,X0IG(Ps'OI-"hmZ;$Wl#[JS4rpfGG12-,T!>o_[mID(jJ4b\#LGG5mYI</
%rX:.i6JQgkdodq!H,'@JL*s6d/T2Xl5A>k767Ps9VE#f\PXd/HlJf4QO<OfkT0(:T_AtG2+i!j*4;o*+`d@![[:ePk3gb4/1H\=3
%e%1+0(6>QTHTdE@?GpY[3q6\L8KUCA`#u"WmWjd^ma-=GT:R_)BV,#dmrLZTka\5&L3Am/>_O=N\4YC:m=D<4;Th#_XAT+&r<0UZ
%h1,"P\AbGRk+r+T-guStmecD!RDAqq`cjGdT,I=[$Oe0E]Aj9]he=UVXNE4aJ%M7c!TkE!CON?,#5!AY/6eq?,rM't+>n%?Z#nd`
%JjH'p%/nY7lLX*m$n3U>@/m;">84c>O\8tkY]Ur:_g\Ss[cq663FJ0?8,[i8l"8KV'FD6[dsrj`k'$J#7`ttBE_JUGPI*I6c]$2l
%`1!0i41=md6*t>N>#Je_Ye(,$I^29b"W>8S`5bnn6**jG[\,f*>?Fq<@uCmr5)jGt%DLWgP50,P+'_;(W=LL3*gj6L-WZbQ4p^;O
%_OBnXQ@"m-K"IX.pYdY9P&b[.,P@2&Uff$`$f+K#Gr,=^b>6U^55BS[+rG\2qFH$T6;Dhk`B#1ON[J,$S&coN:Z=[U@f@Sf#^[gR
%Z9US<3cJktQ>VBc[L<f.jPD#fd#X4_$M9HApi;S"HQ9d@\6`_ZkEV(&p#]"^a3\2TbE(='[aa>58#b2<B%12NX$3jKf(Y-,FXti7
%e@Eb(nZEpiZklh'FI<uKA[+pB<>@hBWIG,di$[peWo.s5egtSf0nK/;^$s-k+Tm>l$M9JWAA5,OG!B?C3]baCZ,YFD0u+Zt7D"(S
%1GTj=`9Z7,8*\!>H+I/@b:UuOEKP7\=-!&#Q4OAZMb#%fRsVsH,4q#oYj[dT+N=[k!M+:]+ONp)ecNDh@4c`:nPN[)Zq%"?H`c>N
%lARDq0_@/"eg.BX$#)]L<+(co7hHnu^mD0i&9q:G/h3TYk'a)9Fpn]2dTt9:1;im?nmqFGW_(Cs<_Za2[nF`LJ5u39kicUn<_Za^
%6LUlm?`U\a[%R:JEEAXUPmp(>0TK1f2%t?uhP#cO8H>;oQ&=ee9'?rR,@=#N#eiW6#\%f6a#YK"+dCafq?XeTI6rA!(MilcfA?GD
%M(R?9M64I^Mk2H_oZS&S-aY7+h<K"J\ajqqZ/s;;@`u.CT!.uq?d:%j"nW,oJM250A\QOi2=4pi&t='Hjd9Vf"C/)l?%G0_*c.*A
%n%#>+/30V8"X!JrPfE[5T6,9"V_Lo4V*;WLFB'pU/35X?Arb7de0i^V_;X8P][aWsT:>$1"<u4M:A!>1FOUc!QHfg0GF1&I<o&/Z
%'('`ckp-%%lO91V\`ld07COmlTjH,o0mZWDi(K;999LF+"M4!HSqWnMJ>DWkeb;dS$!9MGLoZ3bdDdA&Rta(+6o2"6g[&#0eqqKu
%&mZbT'MVV^[7ZpV.fhR>Z;=`NkK<!5ooUmeOZU:K;e[MfEQVp;_WTG5kkL=\I4af:p^6YUqS8F[]GG;,p?fZhp.e6_!s,U"TmsXR
%`"Sc0$r?d-ouVSqoNXUdX&tPZ//)G<k<i!1FVua=cnnse4j]co((&LKap%&`'%&(W"DS.15]s48I3]kM$&mDumpB"i7t/$4)Wc[/
%],>qL>8$mVkD6bJ;]i;8+8A/BX)0Fu6(l9slq-\OO%(,Z.bor:;LT<#$YH(G!ihULeRNg1K.2^7nk)]t'uhY"i:C1e=%*IDSu"[1
%n-(1J!2jm3?pa=]O*i,GUuP)l?HRQSCTY>Cp@@9-HR[d20*r_`U_)[Hd<k-\?XD4OX1MlV2"Is[i"g=S@9rS%Oe5XJ(P+ajZ9<uS
%?T-P$qGRI)-djJ)!!O@A%r&m,ptmppKjOJmIk/FPYB\noE!=Y-E,>H`C0Ah(EY4-sAQt4S5#NKtnt;f&=-A`dQb]cSjHb;"e4d6B
%j5<SGO+qI3?\CU@TC?Cr/`Z0(l6'uX@NLC15\AZVirUO2$b9On>gQ8ZeAl^5f54OLHllhG/,5?Pl05*h$e%<1MuAim>XJ1WeiW]?
%mlrVni(HC$XlZCU?@;e4&4_S1Yk&IS:\a/_^%$6D`ihKeHTADp.FRFgq^b2aG);AVpOAspI28=)l*K@e8O)l1JfmNY93s2>pRdm3
%IR\bDbC-/*f24ZP9O4O&muceRHOfT%+%>(hH7\X]=ILsj:OTMXIbC;m9Q#3KF5L:KG%40smaQqDNJQ28aWq>TfmcBh\(aEB<bguF
%Vh&Oljo`YH-/`Q'\r0G^,EsRNO48fcp:n<544Ii2UgGZiLp'p9,lO5dP("#XW):?]5#MVm*jG!lbO5FKJl!5\I6#&Dl%@G:9ON@Y
%(]?OD[a1nmHp+D$kWo]<c.B)>qNP.s$W1>Z]CGiHfq?cEc1Z2C12#sF2RnYCao7b<<rWU<K%_.M(=>,_fG)XgUh*\ge6hC>4n3h=
%n'm[tddc=D@k6$5@i\?K<KnJ*-tVN6]Cb;MojN(+]=$iD9R!Q/5UmD_:=RDQT_:Kk[bUg<TcIBDWtdZQJRi$9LKd?EMnZVtI?$,N
%fch0hD/7,YY0^CQ0+4kPe.0*gNA\BJ7`8umgNfYs]Yj43k9"_,8!43"Du(T%^UB;4C%CQ'dc@!ko#Ebj>5(5I.K[45V9bUH=I+OW
%mE&"5-h"C(p,h:a$m%Ncg,jQYh-^iE=Y#ZRL)XNiAneKSlofMfgZFBF]$%*:HG0a#p=5g9JsR8Ph+EId"K7_%M-Z_2qGCM@0+m\s
%?()&/map#7pS>XTY3*@Af!4UG!fQeA$lg'\L"2ObeShJs<a3Tk@`-`86Q`94?cXe[--Y9oL4n3#/pM#D^b]OhEc?*H$S=@5$?^PZ
%*IN/+U_grG._#Z5._)=P9+l)i"K_lD'ds3.*Sr'C9haTJBFO<)']Y<!S!3XqlKQQl#@C$_/W77eSM(pM^fsHg$=_jMJWiEYPj1/F
%:'GS1<>[9kH[AAGhGZAI,/qqgme<oLTBr&S_U_TbCW3+Rf'9r1d!-;=q9B`1F;[[#C=_&J]r1jtA=?/<.c'J@dp)sTbFVTkDWr]^
%PBY0u7I2M5\4'Jp>?$#J1M(L(d^1b$^?&Y%OX*,b"EPT!U=-7l)fWu7+]%D.!CAAdp5ra-eTMd6@fKKP4ukK4l]F;_k:Fj(,Jan%
%4Zh4:E?&eAir'Iqa`Zbi7H%VBNF@DkpRh0.o:@.epl7"CkogRt.eOn*9AS*]IhlmbrXncmp%k;HN7/%<X@a;m+70+@R.Ylja'ZO9
%:8L_D902Jh]!YK-fP:C+FK1(EX'GIW\-;\'1nI1XKZqJV4;YmRHIWqG?V8c&]g6pZRIcIBJ!F[.hoVcL&qPFCiY>LS"c4Z[s$^>I
%V)u-RaA]/+$ad498J5bC9H\DG1,:^?8RMpb?oAU.T3ueF2m!06i,^p2iV83X$L-EF\3Q'2):87FRJ".8X0s3:Xm_Na2Ect&m9l!)
%\QH4%%D:Lu`/ra>ko8a$=f["TeEbkmR"]6i$<tAJ,9)'@=-L!%htB4dP\%XY[D[$BCSibO#PBC6e6]!=?n9:8PcQQ>!bobNUCF0W
%\S%BUR=.^W[[_"0DH'=gFPBuj/'OW<RQ4%Gfp@!+;;6`<#&1.ZXC]4s3c)tXAO:qGUZ1XqoY'RI_3/;1$Bfosj&J2Y];N,ark!D0
%MDMJo5e4j:Ior6[d@fS>HR'l[;KrZ%d)FL@f(;mt.4shYnBBaNjSYPM/r->DgJ?qE2h2C]Btg<X5hmqXq\K3g^rjA9aa2KA,d:?e
%@:\#[*=J*uY?/JDNk4@R\;[D[OiJiEUOK,VT#EJHXWhJ28bFjp*Z\@XEd:3VI@@+<R`O$X9*gH@3L&7lGP\/f?m$;WaomH3:40o,
%Bn=;f?/EXqb;1N?<8Q#CT-$QhW=lUWa!\I?gotuQOs/Y,Wt&#b#AHJ30ldbf35d&t(4q!,JVY>AC@4QRqpd;-UkQpc,7O:+0!CsX
%QNND*7(#2NHe_H?0JfXcoQhn#-jh8'*_^0E7>hXFa6!=uFR)!Lafr6nfB'?aPcg@9<2EB`C<ukfq^VBLau'+YP+ID(J\bN^Ai/6r
%'7LYo>4uJA'U<PtcF$12WLH4)0mlfI8YNgC<FCS&728uI(p>a+Xk*VrR/]4O.^\1A/B==/8*[;LFmX'(BT$SP=[/o?3_3aJB^:t<
%`T*C:ohfO<_8()IQK?g^m%1Z1Q8BDjrS?2!o%sJLT.:i'YlU`uH\OEM=4&#s$PO&-Qf3V/c'F8\BdVH%U>L?7:FSdXMb#Uu_QHpl
%JJEX55\,dD1'9,n6I7+HN]&4W$Ci@D[*@-H\1L-b>L>*4aV^.)3b6cfo,^N=e=AWhDCgY>.7om*.eqfDbd`I/5eaVU8o28,C-oec
%M#8.1CjsJ9VN.#PPN;^=?6e]C-Dahm3a^V5ne^<Z:"sCE:!62:`J:Q:#:3\qmV3:Lc)FJS[LVgO6&*a^&lUsXa[FVT>oZ<!L!A%N
%]SQeS_!)p:AOi&tB2;`sHSLF3_0YA[^20im)o0EH&+$N$fQ/"/9<)PC!36s&Vo\.37fNpGKCo4'Pb`ZD;F%IXH/!lHj,L07I#*Ap
%r841IWsnbbrmn<Fmf76*,abe,ec6Qd/3Im`cgo5%[oE*,#5"KJplbKHCGM6('tg,>2A7hV[U[a-Rk=22^'Lg>9uL+(n<*Q/n-*8Z
%?WB0/Gjqi?W4RjMR'pY]0iAYL<$(s9*IX_)o6"kn$CJ9t.aJ4$HKIT-H*3lPp?bCbCj&6GpL2AKR%=9iXIWdZ[\6d!(C?0U>/=g5
%nnXtJAXN:01Jh"J,p@.l3icl&#3,^VaB#p'=4C,L3uA7D;I!+3:m*/NGnAdqRIF=9gQP@#,2KF*1gsQs:I*lY/^D9ukq"8[Kr0Kb
%4444,k4e1DWmGA!@[>qGA<u`;a=L>).f^5&0lA>n1Ba2c[g/p7/8,Em4pg[!-HL+/F9rT.EaLYrp-p%di`sN^f-4/.*RrkZ!^#"N
%JDjpQ*]Z:^r_(0F92=\S&/N`B,@hqAmlgeWb]%%4IOYm'o-kg2C/d.WnZMU?jBDtoXW.<4^82Y:#r9b,nuAO[5)++)311;/,=4>L
%)YF6aEeIn3>8Eg,oJ;pqWRQ88Zl&$PJc"2tS(%agCL/cOFUN*>]?Qc4+[>n@bR?H!+t.cGM]fLI3FTtPc;#dJ+j*p+P^;-.B&J##
%phL.\+?\V=*hO<d>$`nU*o[._&"iO_PfZsp)4.RR2$qr$T-SU<ch`-tgi4-DAk7jQ9R)WIl:Z''1;CE^I?Q3YLTmKbgHdU:;D15)
%1jgRiilE&D2*!%k5<W)2[s+AY/=++`>?@,TT$g>?/+(d.^?-FbcrMTQf7^DUg*9\_jS^+7Orq^'qiHc!]WWfdR-fIeoRPaLG[fa*
%o"^IAcB\S'T>:+;YaR!RA\_/#PE$_Y`G[fLS%Npe_d"MSSi4*9mA!\J^?GV7OQ]6ZLf@;_NmOB%Z^7C&+cBq(Nu/1m&DU&s5AF]N
%&$J,$\4r+QCK;sj/4/DX<h,<64A]]WlT(%pnY-,uTrN3?ej6;,e5e#G\"/%`4bj@:@?s?;?)/C6nT>P*V)rTgFs+N9M@k6PkjW2u
%id'dp7Hbt=n0NLlXi@Sf,5_r/Q5IVhTt+Ucm"XBeAQ`_&ib!?$:gJ$0I%7A3S0lqQ2C@sdSN/5h'YA/JKCnA^V2(-_#@sD4^<3IY
%d#UrE\pL>c9n!JpL7UXTo:Kp&D%ZQCYYp4j@!?r:H@NDZ6;NY:i,=/YqpShnYkuA5`fjnih(9@WftgX$fd&.T;iYj]Q5tb(eSH$F
%$+lrq$8j6YR4F?\-V5->[ke293V*qBSQO\nm%3oqfZm,'=h[I?FYM-AKg"p.@BR[h^iL5;L,a%$5#NKt6GFP)!B,\A3_[;q$u,]I
%b.4D&$>fPb8fNhuK.59Y]\6?*'e2U+/WZ.Y$Y&k=D!<Q<">me&,RATC8_\=O_&".@B]NZNiJE2q5A:V7O]n1T_uA`qMS;g_*^HKa
%)=`R%A?.+mXU)MQV'bkt*@C\G[aZV-)>Zn4*#=Z!Tfu4Q;L/W88e3N,UV5t2#2eF0k6n'U$A?$3UcrTJGE(\N7HS=\@//URMQhE7
%r=s<dM=ku.&:.-#j9qf,42/?g#4[Cf8B_la`6;:2cbUEmpXCR<RA/R0F_`qZ`0Y9.`7HS`?MB"(<.SSo.ae2CIqI2i0<#%u/?%Rm
%Qf96,,&Vr(;N/XZ8gu#S+cKk/@ZM^Pr'PH3/ntMC?.Fjop0%Z8P/`EP%!r;(>Bad&eLRcL%1u(KQkG'?fo/6<nj%==;BkDoX<QVI
%7Xa$71ljKj$,N^?>=,f>E]MVnR#e2)W/E+4'"4Y/bi]^]9%UX%9#"5i%NX;V7;?!:L"s6#QF73+DWO0oChm4`amT!q2r/If.%Y'<
%8b'pnTO1DLAaj?<H/k$_oAdrWjH<cSSTdDKPc>#9m4KQC-)V+aGpRjM/XuHLbBq:GaXTaC4nT+gC4#=#6?XT[FhhKXC`V4lWb:XZ
%L,#)H_X;*TDF3NNSY2c;X7_9mH>(#;p=fl[pNR=^gUp#J@BR7;:+&mb#XW\.o[CG=HOiJn2SRsD7@PAJ?7pSbhCCQuPl?Ji]eqk<
%Dc]I("cqO,=g/0VIFa%CD@+lms7FLuO\<A7@==1s&.F9kBBYo.(1n<48N611h<T"C]nU%q6b[lf&YOleD/#(F[j@_Tg&U/scO@Sq
%G&%PU)>0@MHl6,5I$9YNFEuGfX[`C&>[_2hr"2W\lSs$)@,d3NY*&R**$pd0p2,jphofit?YWdCLi!r`h^>a;<fLY%L(Tc!T56,B
%(Mj]Xj['SkMtnVi*Na_aCTRkJ5?XqP4/);mY[D.<dk)EP/H<A+(iM#:_i&U%28RA1_<=%)W*"&o,/a)Cms7cW-/HUgEm^DPhIJ"4
%4@_<T9V>1[:\^)R3p4SNJJ2CgK_BS:S_?r<kK@VG-GG!oTg%u-ceQa2]Q@AAg@WCk#-pgN>$p[+PJ<U\7V*I4*H5YuK.Em/r'4du
%`.MUaJ`s6D]#Q3AO0:i3&8;/-.;hJ#&5uoMqqH\LVi5li?=ODu4GBI2CSgMol0JGdm?Whr[Hn3ACJQKS37#[\Vj^/J.eh-7qDn+;
%H<<G[cCXtsqg6?3rKo%d\VMW>9"c6DW6H\*2sZ^j'`]W"-bFehL@FB!/m,s(r6+rn4F:2J2@UNT<,`4MVI-(TkqC]hV@16=#b<;W
%ILZ--aY-ocdEj,m-%dmn7/GC&$,=P$]j!gZk[%8n&rjOX/@Ks6XQ8Ch?W*&G.*<c1+J\\\hiY+BLm;ftpi:M2pl^^WOo!;R)39.,
%$fU9m(SUTQa8&'Y6H@\1"afY5!akh9)3;En,2J:To#*`KE.m(H+,pa]ZPX+=osES^.V$]<r?)"&[WhlM^?:9S=!FG5#,RhRq>CWk
%3'DB>A&G[k^ET'^FdkbbW?Wd?Oikkh=2+XtP0uB4J"+9VTfl+nPk3n<.NUpG-G[F(/m`s67X^Li87_LmJ`AaUW@"e.1JEBWXjdBB
%B?=/%N\%^e.CC/Wc]%^FpMt?iRk`:;PuJ3r\ARME*CY%%-88"'rpT%RekiBjW,pHEhqMnmN?\CE4-/P`oPPIb<$>s$mS]f_nZY8Z
%.EKb']?$`SM:Y!7WK2F4ieBJEShGR^o4m6lbo]UiF1,Rag1*:jTqd[uj4)`ocO\9FO8,c;\#2*eA1;<]-K"6-TJ7`uFD,>P,9C[S
%W=]=4\<ar4/!8?YR6JkGcSIJm%N[(il32DH42d7?#,\qs=R":Y[]A^pWJBT1f7of7rY_T%<HrhIRBqc`hb>4,lrU$l=U66nMpX'+
%Slm(Uq"P5]Pq7-ADV0MD%X&)hXPYFC'lWTa^T8C4G?fG$?W@s1al;U1&ncTAnq;6e#S1WdBR`=o(U4eKqrWIC#Vpf/CAN(W<pdEG
%4s_5ZKhsn[K&57q[D'j@l4^nK%[s)omR)PIopscn:euh7))Usc!Bm8"rIOTOo<=&rJ^sY>WspFlL,JU`.k(dHgtd:Mo[JQj43SGo
%og2#<(Grub/*pq0GV#5BH9A;T"3WBTFgj4ZeepNq8*Zk4LP3Fd(HGEa=S2#*iBeFAlm@O(e+k3[Onpb=U/A<rV&`ph+k9VW+SQeR
%bSQGR42/AG.e+8;,P?'&=/"#V3HXT.o#4s6;NN'n-*VGpcTt%Mqru=P&c,%H_Uh]kZOeMHbBa49^<ertq6D&/4^W//1LH/+;@gL7
%SKj+Y?frIt-Ea?(m]P#Te.ZY.$VTX\@Rs:Z[#`D=r<,9ijnA=b)E><Go,0(4S1j-RdKeFk$oD7Z`0%GU/UrODF70G.EOoQ'c$UhF
%b)bEP2ajZu`91rK+pP)2Qo,EPE^kE8I]!#mFqCBlSj\5!f?HONU$(*d$n(a^,K"5I5$:=_1sd_hd_LIc9a)dWg!UH+9ir<I'a_RO
%%cJ//M_O4qK%Er5L3iS?(2*tJB'EeO-/S&Qr)dec.<<0DHU]*VJ"3_5SC"eV'I9%/`Nm;C\g=MrMG(:p(0d4ZK`BQlDJO5u[7,Ec
%O/.QQ8cdiF.pB'7D?_*CRR"f--VXg8ij=MJ05<iP1Fs^Rr6lRqpQJ@M8+"c6@Y\^&jY?eBKRl;5*glNH9UVq0_aLE<b;I\5Xg$uC
%bqCDZJ'92[CroKAF")TNe;'UVTal?\;5=?:1'Csgkcm+,DRN@iO>[oKO46\6Oprf6OtPY<On:!(Umu6o<cP\193QYN*,=KVlTJ%B
%^E[)dhRVgm%7.oKdN"XX9=&D\^<echq/Z+i3p+W'6cB"QM\!o(65^Gej15`lACPl;fX=q]O_A.cV>Y/o4n4oic?CXnIdlb^oXETH
%p%!IT22`;\W98SnHekI4/t;(L8[8o9o+<tfdL^GH5Js)c49tLHB5QKQff+]Z"03Y0P*#8SH32jU,r%H5!WCog.%>H9m(at3hI80P
%Xt+=6)QPU\-LTb!*sJ(;8S@iV:T,4H@R1m"mMpG@d*<4Z@XGNmN/qV/o8;d+GrRr)LHRAZAM3()1"ZgmnsNtZT)-6([b&sGlrqL\
%W>YBM*SZ]hMaBH[fZ_%9;Z<+)WDBmP@jZg2]Im8dIs*jGVL&$BXNL3ETbA=!b92A,l[Jf#;'0?\@PU!VJk%)J>k5=J'D+6PCleQ<
%*kW$5"?lNH'ful"r,rl;P)o3WUa:*B^ns51ah0ZT*2>V_2fFgqf'3#J.0hIlfO+iphBb*NPV+38SI#0dS45ppY".>D%uOt4NqDi"
%*UWW@qB80=-b+Ga;&_.F1BK_*F&2WE>0`r^VYD!+%Ih[52eCnWPfJ2r8>h(4m-hXqQLog***GujhFiXRHOi%L[Q_KKF#rk_HJEV/
%,cAIm);eF\eGD@"DG)@A?tSjTb.q`M*IT1sYU(Z0fb+2A?flXU1]_$]N6`f6,/#"l"^A2GNCtV:8%(Ae5M5N\Hkqu<+!e9+-.fE`
%fn[K]U\D]Z/_nn_F8HI*f(V&lL&S=#(U]T@^?Sohr75j9'6[0!@*9KbIKsgb&*.B:k5j!s!d\J%U[(LqH'@:qnSu"aU#asF3A`AI
%*J4W#hH]cd:1('[F'Xr6N!e>Rl6BZGn@f"W0"92e%kS$YFCU4GIJEr#i)!TF`pRP:oJj:1panfj&3^;1_k909-4o>i/0L[tDg02B
%Btlf4.?T5COXElM:Jms;L2M51o/p]dWX0_g?$ZkO"FW%0Ckek@ElElq\D,Eq/=@C4pfbrH5;b5Zc'P2de0fXK4d,S\HR/.C#"@Op
%m#dp#0=OFa?Z+./W<Ze5,"VNkD$OFNA=Qh&3aEk@eH,,da=F>l?d=$*\3,P(0!&o_O4<'<0*G^*Hpo#E-n=nflhP@BcZ*bj!o"YX
%pgWleqS8GabfG0#aUC5mkUOR[JSmR*"1j*QeXf7M=$lAT@iZk_4]`g+G$lT@d3MCo;8fsHCU,A59bH">T,I$YX'6c][L6?B]1E=p
%'Ge;=>#H"[X+'m/A-BIo`l"7L8(tdZdH\gK[Z8sbgt&_9ESpW.q6lTi[-[%cY.E5)D`r8>Ht3U$8B4cd(;\QS&u;)g@#InmR'!U;
%"CI,E;]kf*^mjcm[_SB"F77r(0LL?]f'k_tGt>%i3h_S/-me;hpMYI!/h9>i"M&dnJAi2@,cjYpnnUhg"nYT^DJAEY[L6=-+sc-M
%9='kC`%bOt!OBLcp<s2pgk(A3JiQcgB1kHHn"%8^Fi.!4[U^N:oAmqO?Tq=gPCDaF@0?'jLYU3N15PJGdm5!dY1nU\QSo,Y^g<XB
%nhe>.;m8-OF[?QJ2;<8rFC(R"N*rSE'4N22l!?Cr($;@jBIUgeJGCATJTUC7_U/35p$&8rBq/FX>5G2^=Xr[Dcc0?V)2-dBrX=Q4
%4gb,4`']H9SA1;Y-SFsV4N0Ai4+WJ`deu9SP6(j2U>UqO^/"s(LGKW01EOJJYV>];-fToVQpOgrLrjj-`%_"oEu5Mr/e:=4aPQm<
%a<TYGZsuTmB"Y0lN-(q:HECEV*E:/_%\<gYH3)36k4\rB5Sj8[oa\2_F>hc8J!]cPohT$n\$sp73R6.KdmSu!-4"CheGk$$N'3>Q
%8#E5b(,LZ]T@CWm9+6Ump=tB2Op^(7$U;$-'&nhrHg29YXR,%m!$A&:J]*1@G3NC@2)Bm0-(X0fMoAAg.pn>C`+;A_9R,1m]Tb2g
%k_TB:;.o\(DsQ[l&;6b@]<M=>(SMlOF+31[M*W966]l:AE**Yi;i:R&??PkbI$5f<hP4t)E9Fb[0_U/gmmai%6V&kP>tgm6*rkIk
%4'o"(>RX)-g:I>L0OC0o2]Jh/YV&A:b<G1uSBr)qK.\042>Am282k4@^qH";gp7k;9]q.J>_$ZXr@a@H:Qm;3mG?7^VSs4!gDuGS
%49<Y89H.rdI&79$C,Q,5KM3EBkb_hmc,J;G:nm4'm(G#bJTHAP3"F2R@KgkYUtN/nU:KT37kB"6n8CmdVu/(+C=NCZM&5/&q;WnL
%Z&5!b"m';u27sO)p(f6UW1-Bd>2Q@k+@+?XgJ3cU@f69\Gbk$~>
%AI9_PrivateDataEnd
