%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 5.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For:  
%%CreationDate: 10/30/2017
%%BoundingBox: 0 0 1024 915
%%HiResBoundingBox: 0 0 1024 914.8663
%%CropBox: 0 0 1024 914.8663
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x243 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Untitled-1-05</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-10-30T12:53:07+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-10-30T12:53:07+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-10-30T12:53:07+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>232</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgA6AEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXyb/zk9ca+fP4g&#xA;vHmGkC3ifTI2J9E/DSVkH2eXOoY9enamWw5K9w/IabzHN+WunSa80rzlpPqj3FfVNqGpFyLfER14&#xA;1/Zp2pkJc1ehZFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWHfm75s&#xA;1Hyr5A1PWdNC/X4hHFbu45KjTSLHzodjxDVFdq9cMRZV8b2vnTzba6qdWt9Yu49RZ/Ue5Ezlmatf&#xA;jqaMPY7ZdSH275G12517ydo2s3UfpXN9aRTTqBQc2X4io/lY7j2ykhKeYFdirsVdirxH88lXU/zJ&#xA;/LrQyAyG8M86U5VjaeEGooduMTfxyceRV7dkFdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdiqA1/QtM17RrvR9UhE9hexmOeM7GlahlPZlYBlPYjEFXyp+Z/5KWvkCfS9S&#xA;mv5tS8u3d4ILsLGIp4krz4B6urM0avRuI3HTLYytX1lp1tZWun2ttYqqWUEMcdqifZWJFCoB7BQM&#xA;qVEYq7FXYq7FXinmI/pT/nJzy7alQ0Wlae0sm2/L055FPf8AadMmPpV7XkFdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYT+c/lpvMP5bazZxryuYIvrlqAKn1LY+p&#xA;RR4uisn05KJ3VIPJP5p6Lov5RaHq/mq4e0mWA28MMik3Fz6BKI0KfacMgX4/s+J74mO6sX1H8+/P&#xA;2rQ/WfLPl+30zSGJEera1MkMbgdSrSvbw1H8oZ8lwhWI6h+aX5gzM3178xdMshuBb2NvLMRWnSSC&#xA;0ddq9fVw8I7lQKfmZ5rjlrbfmYeSmga7tLj0zv1osFxt81xryQybQ/z+/MTSk9bVYbHzTpUe9xe2&#xA;DLHOidObrGFMa/8AGSBa9K4DEJZd+XS6R5s/NfUPzD0m/jubC408QNp8n7u8srgCGILJH8QZHSNy&#xA;HU0qadsB2FK9lyCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ks&#xA;c/MHzrpnk3yvda1fgScB6dra1AM87g8IxXxpVvBQThAtXyd5i8x3Jux5g8xrHf8Ami+jV9O0yRQb&#xA;PT7QrWBmhPwklTWKI/Dx+N+RamWgIS/Q/KP5h/mJqMt1ZwXGqSg8Z7+d+MKf5JlkIUUHRF7dBiSA&#xA;r0fSP+cWvO/AG71uz08nqLb1ZXoR0Y8Ya9OlcjxhKbXP/OMfmxYVNv5x9eRUosU8Uqx9a8P72X4d&#xA;h+z9GPGrzDzl5D85eSLyKbWrQWw5Utdb000jLU6fAIwO+zKjH3GSBBQlOjeZ9W0PWYde0iZbPWbb&#xA;42ES0guYv2qoKLQgfGuw7ihGGlfZH5feeNN86eWLbW7Iemz/ALu7tiamG4QDnGT36gqe6kHKSKSy&#xA;TArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfMP53+boNb/MGW1m&#xA;An0DybEZJrcn4J7xio9NvEGVkjYdQquRlkRsrzjyT5bufO/m6Q6nd+jZL6moa9qchCiK3U8pXLHY&#xA;MxPFfc+AyZNIfbOj6Ppmjabb6ZpdulrY2qBIYIxQAD8ST1JO5PXKEozFXYql3mKw0e/0K+tdZgW5&#xA;0t4XN3C4qCijkSKb1FKgjcHpiFfEfn3yuvlrXBBZz/WtHvY0v9Fvu8tpOKxselGX7LbDcZeDaGc/&#xA;840+c5NH87/oOZ6WGur6XE9FuYgWib/ZDknvUeGRmNkvrTKldirsVdir42/MfzH5v1T819VOj6hd&#xA;3M9tetb6YLGSU8FRgiLEE6bjenU165cBsh9f6Ub86XZnUABfmCM3gWlBNwHqUpt9quUpRWKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqdzcR29vLcSmkcKNI52+yoqetPDFXwZqepXF3pU95&#xA;K3K41fUpri8J7vCgZCPpu5K/Rl6HqPkjyNPcf84++atVtSVv79xLVf2rTTnWR4+ldyJDt1oMiTul&#xA;71+VPmZfMn5f6LqfMvcfV1t7sk1b17f91IT/AKzLy+RyuQoqyzArsVY3+ZV79S/L3zJchijppt0I&#xA;3XqHeFlQ/wDBMMI5q+cfNXlaWX/nHnylrkh53On3E6V7ra3c8lAT3o6JT/WOWA7q8q0jUp9L1ay1&#xA;K3NJ7GeK4iPT4onDr+IySH6CW88VxBHPEeUUqLJGw7qwqD92UJX4q7FXmX53fmLN5f0mPy9onKbz&#xA;Xrw+r2EUW8kSSN6Zl2NQzV4x/wCVv+zkohU4/KT8vIPJHlWOycK+rXZE+q3A35TEbIG7rGNh9J74&#xA;yNqzXIq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxrzB+ZXkXy9qS6brOswWd8yq3oNyYqrfZL8FYJX&#xA;/KphAKsgtbq2u7aK6tZUntp0WSGaNgyOjCqsrDYgjAqrirsVdiqSeebo2nkrzBdLXlb6beSilCap&#xA;A7d9u2Ec1fB88vK3tohxCorEgUryZzUtt1oB9GXofZH5D2Mcf5Q6HBKgZZ47h5VZaBhLcymjDv8A&#xA;CafLKZc0sU/5x7uptC13zX+Xt2T6ml3T3VnyAq0XIRO3yZfSYfPDLvV7dkFdirzD/nILzRo9j+XW&#xA;saW1/AurXaQxw2HqqLhledOTCMHnx4BqmlMlEbqlvmnRlX/nGWOzYANFpFjcHtR1aKdqUr3r88I+&#xA;pXydlqH3l+Xl2bvyF5cuSeTy6ZZs53+36Ccuv+VXKDzSyDAqU+avM+l+WNAvNb1R+FpaJyIH2nY7&#xA;JGg7s7EAYQLV5P8Akv5W1TzNrt1+anmlQ95fMy6LasPhiiHweqgboFUcI/ardwclI1sr27IK7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXwr+Z+m65p/n3W49aVxey3cs4kepEkUjkxuhPVCtOPh07ZfH&#xA;kh7/AP8AOLOu2U/kq70ZrpG1CzvJZVs60kW3kSOjgHqvqc9x075XMbpe15BXYq7FWMfmjK0X5b+Z&#xA;2UAk6Zdpv4PCyn8DhjzV8KZeh9v/AJM/+Su8t/8AMIv/ABJsolzSwLz5/wA6j+fnlnzOo4WPmJBp&#xA;983QGQUgLMfBVeFv9jkhuFe4MyqpZiAoFSTsABkFYF5x/Or8v/LtpcA6vDeakqN6FnaH6wxkoeKs&#xA;Y+SJv15MMkIlXxjqGoXuo3s99fTPcXly5knnkPJndjUknLkPf/y7v9V1H/nHLzXDqLvNa2KXUOnM&#xA;/VY0hSXgG6lUdtvu6CmVnml885Yh9z/lR/5LXyz/ANs63/5NjKJc0o/zv5rtfKflXUPMFzEZ47FF&#xA;YQKQpd3dY0Wp6VdxU4gWr5X1P8zNV/M3zZoOleaZI7HQDfIjW1mGUATOE5OzsxJA+Hl+yCSBltUh&#xA;9gW1tb2tvFbW8axW8CLHDEgoqIg4qqgdAAKZSlUxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqFz&#xA;p9hdMjXNtFO0ZrG0qK5U+K8gaYq8k/M/8nb46kPOvkCQ6b5otj6s1tCQiXFAeRQU4iRhsyn4X771&#xA;rMS6FU+/Kn83dP8AONudNv0GnearMFb7TnBTmU2Z4g3xU2+JTuvfxwSjSvRMirsVYp+a/wD5LXzN&#xA;/wBs64/5NnDHmr4Yy9D6o8sfm/5S8jflv5VtNYFzLd3GnrPFBaxByU9R0rydo16qe+VGNlLyT85/&#xA;zM1LzveWF3b2d1p+gWq0tEnWga4JJaTmvw14cQADtTJxFIZd+Xn5YedvzD8s2t/5m806hD5fJMdr&#xA;p5aSRpY4zQP+8bgBWoVirdMiZAJeueWPyR/Lby96b2+kpeXUZqLu+/0iTl2bi37tSO3FBkTIqgPN&#xA;H/OPn5c69d3F99Vl0+9uCzySWkhWMyMD8ZiPJOu5C0riJFXm/le/1nRPIn5g/lvrUVLjQ7G6ubOc&#xA;AgPBKCGpX9liyuh/yj4ZI8wVfP8AliH3P+VH/ktfLP8A2zrf/k2MolzSwb/nIjzUsumW35f6XbC/&#xA;17zA8VIAKmKJZQyN1ADPIlBXYKGJ7ZKA6q850X8rbbyP+cflTTPMUqajZ34E8EqqUjF0A4jjKkty&#xA;4zBPnUe4yRlYV9VZUrsVdirsVdiqG1PUrHS9PuNRv5lt7K0jaW4mfoqKKk4qwLyr+fn5feZddXRb&#xA;Oa4trqZuFo91EI453PRY2DOQx7Bwteg3yRiQr0bIq7FXYq7FXYq7FXYq7FXYq7FXjP5/+QrCLSZv&#xA;zA0hpNP8y6Q0MrXFtsZl9RYwz0Io8YavP+UUNdqTieivMPJv52/nTqurx6Lp99BqV/qBZbZLuK3j&#xA;CsoMjFXAhX7KnZiR4CuSMQr0geRf+ci9Z21fzjb6XA9AUsvhlUd6ehFD/wAnMjYVZJ+Xq+U/Lvmu&#xA;/wBW85S67q11oOo2SW11JShlj5fAskszl+UfH3xu1fMP1a4/30//AAJy1D7D/Kmbyj/yr7y3JqD6&#xA;f+kbezWMPcGH1owHLcav8S770ymXNLNrjW/KtzGYri/sZoiQTHJNCy1BqDQkjY4KVevmLy4qhV1O&#xA;zCgUAE8QAA/2WNK3/iTy7/1dLT/kfF/zVjSu/wASeXf+rpaf8j4v+asaVhH5n/4TufLHmTV7W8tp&#xA;dX/Qt1YkxTRszwmkoVlBJJVh8PzOEK+NkR3NEUsetAK5ch9qflxrtnb/AJZaDDbSw3WqxaZEIdNE&#xA;8UcskyxfDF8bDiWbbfplJG6WNfkr5G1uXWNU/MDzjAy+YtRmljtbeVSGt0VikhCtUr9n008EHg2G&#xA;R6BXf85L6PdHyzpfmmxAF75cvY5vV7pFMyjl70mWLbGCvVdD1W31fRrDVbY1gv7eK5i/1ZUDgH78&#xA;gVRuKuxV2KrZJI4o3llcRxxgs7sQFVQKkknoBirwn80/zPTznDc/l95Fsn1y7vuKXl9H/cRrHIrn&#xA;g2ykVXeQkKO1cnEVuVYP5A/IP8xY/Omm3Gq2A07T9Ou4bm5uXliYMsMgfjEI2cszcaA0oO+SMhSv&#xA;rDKldirsVdirsVdirsVdirsVdiqyeCC4gkguI1mglUpLFIoZGVhQqynYgjtiryrzp/zjz5Q1LTml&#xA;8swLoOuwv69pdQvIIzIDUK68m4ivQpQqfuyQmqWRfmv5i8r/AJfzx/mFbyW/mFpJ9P0swlRcXJjT&#xA;ibhh8KKkbMP3it8XUDxPDZ2V5B5c/MX8ubDSbSy1byDBqV3CnG51I3RDzPUnmU9I0r/rZMg96EVe&#xA;/mT+WMm9j5ISxYjiaNazj5gT28lDgoqlT+fPLBYlNEiC1+EGz0wkD3P1Yfqw0qgPOHlHmzyaJ6la&#xA;kIsdjEC3XqLd6D5LjSpvY/mZ+W9vDwuPy7t7yQmpkkvFSnsBHaoKfOuNHvVEf8rV/K7/AMthaf8A&#xA;Sc3/AGT4OE96qg/Nj8sHVIf+VX2VAdiLyjbnuwtqn6TjwnvVkvknyNf3Vrd60Py1stV0zWpvrukp&#xA;LqUUP1e2cfDEoKFmHepA+WAnzSm+u+TJodE1CY/lPYWAitpnN8mqxSNBxjJ9VUEY5FPtce+IPmrB&#xA;fJ3lHzJr3kCCTQ/JseoaiLv1I/M/16CGZDDMHMQilKN0WnLl3wk7ofSfkHzdceadDfULnT/0XdQ3&#xA;U9ncWfrC44SW78G/eKqBt/AfflZFJRPnbQE8w+UdX0UgM19ayxxV6CXjWJv9jIFOIKsC/wCcadfk&#xA;1H8uhp07f6Rot1LaFG+2I2pKlfpkZR/q4ZjdXrGRV2KpF5v87+WvKOmtqGuXi26UPowD4ppmH7EU&#xA;Y3Y/gO5AwgWrx5n/ADK/OeUrFy8tfl8zUZm/vruMGvT/AHYajtSMf5RGT2CvX/JfkXy35O0ldN0S&#xA;2ESmhuLh6NPM4H25XoKn26DsBkCbVP8AArsVdirsVdirsVdirsVYP+a35pWP5faVa3ctk2oXV7KY&#xA;7a1V/SBCAF2aQrJQLUfsmtclGNqh/wApvze0/wDMG2vFWzbTtSsOBntS/qo0clQro/FK7qagrt74&#xA;yjSvQMirsVdir5b/AOcr5rn/ABrpURP+jDTFZN/22uJee1fBEy2HJUr8t6Vp2peWtGnudKsmt5lu&#xA;F1O6EKRuscPNY3DrRgxKLU/PNRnySjkkBI3tW/e5EQCBsxzyBDYSRa+JLWC7S1tnntXuIY5GDKG4&#xA;n4wfDcZlawyBhuRZ6Frx9Ut/LvSbLU/NEFvexia3VHkaJvssVXYH2qa5brchhjJHNGMWU2dtO1ry&#xA;nr1zJptpa3WmSobaa0iWE8XenFuP2tgRvlI4seWI4iRLvZbEFdqFxpXlzTfLvp6VaXYvbaO7v5Li&#xA;JZZH5BSVRnDcPtHt4YIRlllP1EUaFKSIgbKn5b6dBq+n61bm0tXmVoWtppoI5Wi9YuHoWUmiqlQP&#xA;HBrpmEomz16rjFgsY8xXVnJrRtbK1S1s7KQwQKqBZGCMFLStTkzEivxdMzNPEiNk2T+NmuR3fZv5&#xA;Uf8AktfLP/bOt/8Ak2MZc0Jj52/5QzXv+2dd/wDJh8RzVgf/ADjP/wCSug/5i7n/AIkMM+apr+S0&#xA;rPouvqQKReYNTRaeBlDb/S2Mleg5FXh/kVz5U/5yA8z+WzRLLzEhv7RQKD1ADcAKPBQ8y/RkzuFe&#xA;4ZBXlX5jfnnZaJfN5c8r2x1zzXI3orBEGeKGU7cX4fFI4/kX6SOmSEVS3yh+Seo6xqa+a/zQuTqu&#xA;sycWi0olTbxKNwkoUcGp/InwePKuEy7lezIiRoscahEQBVVRQADYAAZBW8VdirsVdirsVdirsVdi&#xA;rsVYF+bv5VW35gaTawi7NjqOnu72VwQXjpIAJEdARs3Bd+op8xkoypXln5ZRT/lF+ZNx5Y8y+mbT&#xA;zBFCtlrC1EXNC3p7t9lWZyj16Hifs75I7hX0hlauxV2KvmX/AJywgQ+ZNFlGzixep8QJ6Af8Ocsg&#xA;rEdE8x+WLDRtCik1hln0ppZp4YYZqyetzb06lVXbnQ9s1uXBklOR4fq8w3RkABulvlTXfL8V15hu&#xA;L26XT49UWWO2h9KSQqspYg/u1YUXlSlcu1GGZEABfCxhIbqGh6p5b8t+Z7G5tbtr+z+rsl7cLG6E&#xA;SuWFVRwpoBw8e/yyWXHky4yCKN7LEiJXT6n5c0zy3rFhY6g2o3OqyoUAheJY0R+XxGQDfr0wDHkn&#xA;kjKQ4RHzWwAQt1DUfLWuaRpC3moPp9zpdsLWaEQNMZAgAUxlSF34/tEdcMIZMcpUOISN81JBAVPI&#xA;uv6Xoul6u0l+tvfXLRfU42jlYn0OTAsUV1AfnxpXI6vDLJKO1gc/isJAApd5vvND1HWYtV0qU1vS&#xA;Hu7R0ZWhlFAamnFufX4Sd65dpYzjHhl05HvYzIJsPsP8qP8AyWvln/tnW/8AybGTlzYpj52/5QzX&#xA;v+2dd/8AJh8RzVgf/OM//kroP+Yu5/4kMM+apl+SYI0jzICKEeY9TBB/11xkr0TIq+cf+ciPM0Pl&#xA;/wDM7yzrGmDlrmmW/rXAcfumhMrelGSpDHl+9DexGWQGyrLP8wPzU/OCug6DFDoWnQon6cv4XavG&#xA;QkD4j8YDBTSNNzQ1anRoBXsP5e/lb5W8j2Pp6bD62oSLS61OYAzyHuAf2E/yV+mp3yBlaswwK7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FWHfmn+XVh568syadKVi1CAmbTLsipjmp9k9+D9GH09QMMTSsb/I/&#xA;8xbvVrOfyl5jYw+bNCLQTRzH95PFEePP/KdPsv47N3wyCvVcirsVfNn/ADlQobzLoakVBs3BHsbh&#xA;MsgrxLSrNb+7itZrm2s1nPH6xPRYoxxY85DGruoBA6Lk0KUsQi2V4mVQRyHBgSqjoSKmrYVReraO&#xA;mnThIb+zvlmhWetsxcRF2I9GT1UTjIg+1So6bnArUOkJNpf6SN/ZxypIITpzEi5kBYgyRoEMRUD/&#xA;ACq+2KrNK0waneJZzXtnpwdv97bpuECAI7fG0KSN8RWgop3xVAO0oTf06Hb4RGT+G+FWc+W/Mmo6&#xA;B5R019AS3h1bUtTvYbu6lhtppGit4LUwoGuY5VjXlcP0yJCs+1/8zPzi8qskF9qFrKPTufTeOKEx&#xA;87N/RlQr9Xtm+GT4ar8J6ioyIAKUvP5x/nBqPlzV9Tc2Mmi6eyWmpPNbKEZrgmP0wtW51/a8AffD&#xA;whUl8i/mj+Zd3qVj5V8vX1joy3szJbolrbQQLK4J+L9xN9o7fZJPTExCHo/5H+e7HTPKnmPzB5jv&#xA;pEt5rlNQupXBcCe8lmjfjHCigGR4a/CtN8jIJX3X5x/mP51umsfy10F4bKpRtbvUBCnxqx9CP5Eu&#xA;fbHhA5qlusf84yeatYtjqOpealvvMkpBma4WR4eNPsLKSZNj0+ClOww8ao//AJxZtrTT081aXcI0&#xA;PmC2uoo7+FjsIoeaIFHisnqBj7jBNXvOQV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvGfzw8l6pY&#xA;X1r+ZflRfS1zRyH1JUFTNAq8fUZR9rgnwv4p/q5OJ6K9D8g+eNK85+W7fWdPYBmHC8tq1aCdQOcb&#xA;ffVT3FDkSKVkeBXzX/zlUvPzHoi1pysnFfncLlkFeS3etx39tBZWFmLO1T4nhjkeZ2uPTYNIZJFa&#xA;T4lUfArcQRUCtcmhdNImkRXmnz20cupkkJeJPITGhhUOoUD03LI3VhUHpviqnZmPTrkX2oW4u7KX&#xA;1Y2s5ZZYi4Uoa8kVZEUM6kFTvSnSuKoSQySyRXahkjeTmoqzID6poD8NO21TiqOupE1r6xd2FsLU&#xA;2sMb3ixzSMZZGkKNIispILGQVRBxAFRSmKoRtct28vDTLi2S4uIR6djeK7xNCjSmVwURUWXkWbeT&#xA;kQDQbAUaVD2mpzpbWMEYR/qV1LdIkgUoxlWFSGVqcgfQAIrvir0zX4vPvnaGDV7zy3dSWkkB9GW3&#xA;gu7uR0uLxLlykjBqxqvIRorUVdhkRQS1Fpnney/L/VfLV7okptbgLN+kXsdVi9ExzfWJZZQbPi5I&#xA;XjyJFABWoGO1oY75N0Pzgvma281+X/L11q9ja3rT2pjjcxMyOSqs61pxNKjCSr1z8gPJdtfaV5lt&#xA;Nd08TadFd29i1jdUbjc2Es9xJG6BmqIzdJ12JrkZFL3iCCC3hSCCNYYYwFjijUKqgdAFGwGVqvxV&#xA;4T5ur5B/PvSvMin09H81p9V1A9FWQlI3PyDelKT/AK2TG4V7tkFdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirmVWUqwBUihB3BBxV8+6pBc/kt+Yq6tZxs3kLzG4jvIFqVtpKk0FK7x1LR+Kcl6iuWcwr&#xA;1Hy7+b/5deYtXOk6TrCTXxBMcbxywiSnURtKiBiPAfRkDEq8f/5ykure6vPLlzZSx3CPBdCOaJld&#xA;WKTwrTkCRswIycFeQB9P02ztn0+ZpNb9RplvbQ3EcaRGIhYx6iwv6quCSVqKHY5NCGht7U2s11du&#xA;AyBwtswn9Z3eIBWVgpTisn2ubjbpXFVQSXOqXrpqdywCQ+hbXV2biWONUcMq/uxNJxpyCqi0qfCu&#xA;KqS3l2qpYwvL+inmDyQI0oiYpIQGKE8eVB1YVxVVndtMvzc6JOQaiWCS2NzHNCsnNfTdmETcwuzF&#xA;Kqa9Tiqlc22jtodtNCfq+oQoyX0U4mLTytM3BrfgpiVUhK8g7Kag0riqv5W8j+bfMjtJoelz30Vu&#xA;6iaWNRwUnehZiFrTtXElX2l+Xem32l+RdB06/iMF7aWUMVxCSCUdEAZSVJG2UnmlX87f8oZr3/bO&#xA;u/8Akw+I5qwP/nGf/wAldB/zF3P/ABIYZ81R/wCTM0Rl89xB1Mq+bNTdowRyCOYwrEdaMUah9jjJ&#xA;Xo+RV2KvN/8AnIDyvBrn5b387Msdzo/+5C2lYgf3QIkSv+WhNB3amSid1YJ5P/5ymsFi07TvMOmS&#xA;oUiigu9WjlEnKQAK0zQ8FIB+0aMT4DJGCvoJHSRFkjYOjgMrKagg7ggjK1bxV2KuxV2KuxV4J5u/&#xA;5ymtdO12ax0LSU1GxtXMcl7LMYxMVNGMQVWotejEmvhlggr1L8ufzD0fz1oA1XT1aCWNvSvbJzV4&#xA;ZQAePKg5KQaq1N/Y1AgRSspwK7FXYq7FXYq7FXiv/OVUOpv5I0+S3DGwivlN9x6AmNliLf5PIkfM&#xA;j2ycOavl6wsLzUL2Cxsomnu7mRYoIUFWd3NFAHzy1D2n/nIDy9Z+V9N8naLaF3t9PtLlVZ25MSZ4&#xA;XYk0XqzHtkIG0vK4tHa20lNWkdWt5J3t/qkqskpKwl+ZUMP3ZD0BDdckh1y97rN1NfXEn75lkkkl&#xA;EdI+KW4ahodmKLRR3OKqbyPepLZxLwhtvUm9KJGZmeR4kdgGZixPBa7gADpiqkRGslvZlVMySBFm&#xA;YMCAJWqNn40rXqpOKojnNoh1HT3/AHkU5W3u0eM8JVjk5qUIdH4+pEGDAjpiqHu9CltdJsNSeUSR&#xA;6hE8yLEC3pcJ3g4zHbgxMfIDf4SMbVPoL1/+Vc20VA31O91GdFZEeMM40yIM6MGBosjgEjvg6qjv&#xA;PdxHpN7pVro8l3Dc3NjHcXNtI8AkhN1V7aINawWpDiFkdv8AWp0xCr71bkeV9T1ma8vbWJbl7bSx&#xA;NPMYrsrKEeFF9ZpCUiJd3+x+z1IxVLfy+0XTtd12403XLqaK3hgkkitYpYY3lmDonpRPcB4gwR2Y&#xA;f6vXviSr6A/IDTLbSNT83aPCwdrC5SB5AqJzEN3ewIzKgUBisIrkJJexZBXYqk3nPy7/AIk8q6po&#xA;Ym+rtqFu8KTUqFciqkjuOQFcIKvlqz/5xq/M+XWFsri1gtrH1OL6oZ4niCD9tY1b1jUdAUHvTLOM&#xA;IepRf846a1ZKF0jz/qlgqU4KqyUFB2Ec8WR4/JLv+VS/nXZsDp/5iy3HH7P1szmu9dw5uMeIdytN&#xA;5c/5yisRWHzJp1+lSRGViqe25ktUPv8AaxuKtpq3/OU1gtH0fTNU41q7NCCRTrRJ7f8AVj6VaT80&#xA;fz4s/wDjo/l+LjiaN9UEu5A3pxa4x4R3q81j/wCcjPzLXzd9clZfqRn9N9A9FeITlxMQJAl9QePL&#xA;7Xam2S4ArGvOH5R+ePL+u3Fguj3d5beo31O7tYZJ45YuXwENGGo1OqncYRIIeieQPyn/ADz8v6K2&#xA;q+X9Rt9Iub2jz6Rc0MjKlQnNXiljVjyOxIp3IO2RMglkw/N784vLTFPOPklrq3Sga908OFA7szp9&#xA;aiJ9qrg4QeSsh8vf85HflnqwVbm6m0icjeO9jIWvekkXqJT/AFiMBgVei6XrOkatb/WdLvYL+3/3&#xA;9bSpKn3oSMiqMxV2KuxViH5vatBpX5aeYrqYKwezkto1YAgyXP7hNj1o0gOGPNWM/kH+X2iaV5K0&#xA;jXZ9OiHmC+he4a+deUoimdjFwLV4VhK/Zphkd1YV/wA5VkDVPLhbZRDcEn29aDJQV4b+j9R09o3v&#xA;LQJVecXqqvFlKN13Fa5NCI1K0junubrSrN00mJiPjEdULRL1YEj7VT16Yqt9N9QK2tlaK2pcpeSR&#xA;KhVo1MZTapPIfHyr7YqhuTwrBbmCIScv3rMFMgb1COK79Ke2KouC3/RsN3+lbOl5LDE2nJIIxHyM&#xA;m7yLVfhMYcCn7VMVS4adqcunvfC3P1KM/HOFVVBJ49RTuaYqtt7yT6s1lypFKWHSu7tGx7jvCuKv&#xA;ZNM/IHz75iisPNr6xYXU2pxW+oBbpp1ZxIiyIkpSNqfDRTx6dsjxBKZ6l+RHnq28uy2k17Zfom0h&#xA;lZ0a6aWRYvUFzIEcaZ6u8kYagO+DiCpL5F/JvzZrgHmvyz5ksYlmmkUzqtyCHDVcBZYV5cW3FR13&#xA;wmSvSvyI0tNGk8wvqWoJNql5q8+lCvIevLppllkkVpGdneRp5HNd6DIyV7BkFdirsVdirsVdirsV&#xA;dirsVY635d+R218eYDotr+mA/q/WwlG9SvL1Co+EvXfnTl74bKsiwK7FXYqkGveQfJWvl21jRbS7&#xA;lf7Vw0SibpT++XjJ/wANhBKvO9T/AOcZfLAn+t+WtXv9AvR/dvG/rIo9t45f+SuS41Qo0H/nJLys&#xA;SNN1W0812a7JDdketQd2Mpiev/PY42Crh/zkRrGhSra+efJ97pco+F7m3qY3avWNJgikfKVseDuV&#xA;mnl/87Pyy1wKLfW4bWdqD0L2tq4J2ArLxRj/AKrHAYlWC/8AOSXmKy1Ow0Tydpl3FPqOp38TzRRO&#xA;rlE48YhIFJoHaZWWvWmGA6q9r06xt9P0+1sLZeNvaRJBCvgkahFH3DIK+fP+crFDan5cU9GguQfk&#xA;ZoMsgrw7TdQaS0j0m9u5INGWd7mRIYY5ZFd4SjSKrNCWPFAOJkAyaFl3HJp128MN3FMUWWMXERV0&#xA;ZJIArAHcbq3H2PviqpqUNhAkkmnXj3EdzGY7pJ4o4ZElSSN2UKks9Y6leEhKlqN8Ipiq2L6h9Xgu&#xA;pLqYaqZFaKBYEaAp6hqzzeqrK1a/D6RHviq7T4rXU5r271e+NrAGFxdSxRxyzu0jEUhgaS3V25vV&#xA;hzWi1btTFUFd6rf3dpY2lxLzt9OjeGyTio4RySvMwqAC1ZJWPxV6+GFWReWvJlheaXHrWta5Boen&#xA;y3L21mZILi5lmkhVZJeMdujkKgkXc+OAlX035N/Mn8ttD8q6Vo7+YY5Rp1rHbtcvb3MCN6agcj6i&#xA;fDXwJyogpRHmD84Py1m0HUobfzDaSXElrOkMYZvido2Cr07nERKsC/I380PJHlj8vzY67qIs5oby&#xA;VgixT3BCSBSrM0EbqKtUZKUSSqXW1rc+efKPmefyddS/pfRfNF1r2nMitGZo7gsYvTLUZZCoLAEd&#xA;RTvjy5q9Y/Kb8zbPzzoJkcC31ux4xarZ0pxc7CRB14PQ/I1HuYyFKznIqo3t9ZWNs91e3EdraxCs&#xA;k8zrHGo8WZiAMVfLP5+/m5/iDVodJ8s6tJJoFvCPrRg5xJNc82rUkKXRVC8f2a1I8ctjFWZf84re&#xA;ZNd1Cx1vSr6eS5sLAwSWbyln9NpfUDxhjX4TwBC9t/HIzCvesgrsVdirsVdirsVdirsVdirsVdiq&#xA;2SOORGjkUPG4oyMAQQeoIOKsK8wfkt+Weuc2utDgt533M9nW2evjSLirH/WU5ISKvk7zp5B1zy15&#xA;wvdCFvJJJB6lzZtH8bPZpydZvg8I0JbwoctBtD65/K/z1ovmzytZz2N4bi9tYYodRilos6TKgDM6&#xA;1OzkEhhsfvymQpLx/wD5yskL61oFuPhYWszB/wDXniH4ccnBXk0Mv+KJLLTrXT4V1t3+rQy28dtZ&#xA;RPH6bcEdF9JPU5ciZXap2B6DJ8kIGC/FrY3OmTWsLxTFizmCF51dIhxaOc1dByozKrfF0xVFz2Gp&#xA;+UtWjuL+0gae5tReWcVwltewmKd+Ku8RaaM7BqK4DKaGnTHmqguhX91px8xxW4/RMNysMzBoU4vJ&#xA;JyCCPn6lKN1VKY2qtHb3nnDWINP0mzhjuGAgsraGO2tAY4VlkHqycoUeTgDykc8moPbHkqBOt2Se&#xA;X10u2soklmWt/dywwzTPIspdDBMy+rAvDirKh+LevWmKrri8jbyfploxqYdQ1GXjTp61vZKpr84s&#xA;VZL52sLUeb7uGztLazRNLsF9G2CrF608FtFMVEdQWEsz8vcGprgCp22laRqv5V6tqwWN79rm9uJr&#xA;+QPKIRDPbehbRsZVETTJK/H4G5DkPcDqlB/lXpul3C3sV1BZS3Q9ZdOF+IWRmW4svWotx+75LAXp&#xA;3oTTDJXqH/ONb2S655+trAJ9QivoTaGI1T0mkuVTiRWq8UFMhPorX5waDfeQvMcH5oeV3WAyzLDr&#xA;unk8Y5/VNSSO4kK/GOzUcb1OMTeytD/nI7W/MUSaf5H8q3F3rki/vPWPqQwVNOR9PjVf8pygx4O9&#xA;VS1/I3zj5vvY9V/M3X3moeUekWRHBAf2eQAij8DwQ1/mx4gOSvRV/Kb8uF0caOPL9obEMH4lKyFw&#xA;KcjNX1eVO/LI8RVO9A8t6F5esBYaLYxWFoGLmKFacmOxZj1ZtupOJKplgV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV4vq0aP8A85R6MWAJTSXK18TFcLt9BOT/AIVa/MD8pNb0bWW88flrIbLV46vfaREK&#xA;R3Cnd/TT7Lcv2ojseq/F1RLoVeafnf5kvfMFn5T1u8tRZ31xp0xubX4gEliu/TcUb4h8SdDuOmSi&#xA;EMFs/JnmKa2glKwW6XSFrWOeWOOSVeJ+JUrzb4TXKJauAJG5ryZiBQ+m+XdV1HS59RgmtktLf4Zz&#xA;JKiMmwUVB3XlTbxyeTURjIRN2VECRazXtA1PRJY2vXg9S7UyKkTrJVCahiu/wk9D7YcOeOS6vZEo&#xA;kIQ6bqJ0lNX4Us1m+rLINj6lDJ08N+uS8QcXD1q0VtaL0Xy9qWuRXBtHt1FuBJMJHSIhFB+Om3wi&#xA;u5yGXPHHV3umMSVGHQtSuNGuNTgEctpZuFuOBUyLXoxA+Ljv1/pkjmiJCJ5leE1bV3pV1p8NhJdm&#xA;Mx3yevAgerqjUHNgCCte1fA4YZRIkDopFPon8ufyL8oaz5I0nV5p761vr6BZZXtnhQq6ycxxLxO2&#xA;zIDuTgMt0JjrP/OOHkqDSr25jvL5pYIZJY14aeAWRCwB4WimlR2OImVY1+TH5O6L5j8pHVNeF9a3&#xA;q3kypEpEalSkdXUSxuwL9CykVp7YZSVnv5FeX9O0iy80JbITLHrt5YtcOzM7w2TenCGLE/Z5MfpO&#xA;RkVSf/nJDXpZtK0zyNp0S3Or+YriOkZAJSNJAEIr9kvLQBvANhgOqpfb+Xrr8kNUg1i2L6h5O1SO&#xA;3tfMJ4hpra4QUW4Wg5emWZqL7kdeON8SvcbO7tby1hu7SVZ7W4RZYJoyGR0cVVlI6gjIKq4q7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8Y1X/ANai0f8A7ZD/APJu4yf8KvZ8gr5o/wCcrVVde0cA&#xA;AD6jKaDxNwpOWQV55+ZcskV5okkLlGXT4ijoSCNz0IzD0IsSv+c2ZejXkz6l/gzzL9d9T6rW39X0&#xA;ePqU5GnHlt1x1V+LCue6w+kqf5pen+l9M9Ovp/o2Dhy605yUrTvh7P8Apl/WP6Fy8x7mUTaFOvk6&#xA;Ly0LSQu1g989yEYqLtXWRYuYHHkfiX5UzDGYeL4l/wAVfDvbOH00xX8uf+l//wBsuf8Ahmbrv4P6&#xA;wa8fX3I78uNWstM0bVJr5A9lNcW9vcV6BJQ6kkdwO/tlWuxmc4gc6JTjNAoL80bKCx1fTrO3JMEG&#xA;nxJESaniJZab99ss0EzKJJ5mX6kZRRfVf5LSI/5WeXGQ1AteJPursp/EZky5tbNcirsVecflLeRQ&#xA;Wvnye6lEdta+atXd5G2VI19N2JPgNzkpKxD8pLSbz7+ZGs/mXqETLY2bm00KJxsKLxB+aRHf/Kev&#xA;bDLYUr2+/sbPULKeyvYUuLS5Rop4JByR0YUKkHIK8l0O+u/yo8yReWNXnaXyJq0jHQNTlO1lMxLG&#xA;1mc9FNdifn/NSZ3V7DkFdirsVdirsVdirsVdirsVdirsVdirsVdirsVeK6hIr/8AOUumqoNYtLZX&#xA;r0qYZm29qMMn/Cr2rIK8H/5yg8kazqlvpvmDTrd7uGwjkgvo41LPGjsHWXiu5XqG8Njk4FXgsPm7&#xA;zAljDbF7eUQJ6dtNMkDzRIRTijvUjKzpYE3vv5suMqem+YtU0/TJtNgjtGtbk1nEixuX8ORJ349v&#xA;DJT08ZSEjdhAkQKX6l5m1XUbu0uruKzeWyoIfgi4lR0RhX4lHYYIaaMQQL380mZKIk88eZpNVj1N&#xA;pYfrMSGNVHARkGu5TlQtv1yA0eMR4eifEN2h9M8zarpst5LaxWam+r64KRFeLdUUV2T/ACemTyaa&#xA;MgLvbzQJkIaDWL+HSbnS0S2+q3T+pKSIy/IfZo1ajj28MkcIMhLewji2pQ1C9vb5LQXLo5s4BbRt&#xA;zWpjV2ZQd+3OnyycMYjddTaCbfUf5O/mR5C0v8utE0vUNes7W/t4X9eCWTgVLTOwBLUFaMMjIG1Z&#xA;zF+aH5cSk8fM+mCgqed3Cn3cmFcjwlULdfnF+WFtGZJPMlkygE0ik9Ztv8mMO34Y8JV4b5h82302&#xA;hav5e0KOWKbz/wCYprnT0ljMTyWM/pxmShHILPMvEHuFbLAFfRHkrytZ+VfK+n6DaUZLKILJJSnq&#xA;St8Ukh/1nJOVk2qd4FSvzP5Z0jzNolzo2rQiazulow6MjDdXQ9mU7g4QaV59+XfmbVvLGuD8tvOE&#xA;3qXcS8vLertsl5a9FjJY/wB4lKAe1OwLEi91eq5FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8Mu&#xA;9Rs5P+cp7HjNFSKwa3LKy/3voS/A2/26tSnXJ/wq9zyCuxVQewsXYu9tEzMasxRSSfc0xVRutIs5&#xA;raWKKOO3ldSqTpFEzISNmAdWU09xirxO487eaPy784mz8/2dtqPlzUTxtNdtLOKJhxOzMsaipUH4&#xA;4zVh1WvedWNlekD82fyst5obRPMWnoZQGjEci+kOX8zqPTQ+IYjI8JVlrJbXMSllSeFgHQkB1II2&#xA;I6jAqn+jdO/5ZYf+Ra/0xVK/M3l+a+0W5t9HeCw1FlJt55LeGaPkP2ZEkVgUboab/qwgq8q/Lbzp&#xA;Ztrc3kb8wtDsbDzGjFLWY2sCQ3CtuIyFX06kfYK/C426/akR1CvV/wDBPkz/AKsOnf8ASJB/zRkb&#xA;Kqi+X/KmmRSXSaZY2ccCmWWZIIowqoCWYkKKUGNq8i/Ka0bz5+Y2tfmXfRv9Rs5DZ6BHJtSiceVA&#xA;BukTf8E57jJS2FK9zyCuxV2KsX/MTyFp/nPQjYzObbULdvX0rUkqJLa4XdXUih4mnxD+IBBBpWE+&#xA;Wfzv03RLaTy/+Y8z6V5n0pxb3EnozTR3KUqk6mFH+0tK161qOtBIx7lerafqFjqNjBf2E6XNncoJ&#xA;IJ4zyR0bcEEZBURirsVdirsVdirsVdirsVdirsVdiqX+Y01GTy9qiaYxTUmtJ1sXFaicxMIiKU/b&#xA;piFfBEFvqv6VSCGOcaqJgscahxcCcNsAB8fPn9NcvQ++9GS+j0ixTUH9S/S3iW7fb4pggEh28Wrl&#xA;CUZirsVdirHfzF0tNT8ia9aG3juZWsLlraOZVdRMsTGJhy2DK9CD2OEc1fB+XofV3/ONfnGwvPJU&#xA;Og3epxSatZSyrb2TuRMLYkFAA1OQBLfZrQUGVTG6XsmQV2KsN/M38stG886OYZwLfVrZWbTNRXZ4&#xA;5KVVXIBLRlvtL91DhBpWE/l1+amqaHq0nkP8yJfqur2hK2OsTtSK4iH2PUlagNQPgkP2ujfF1kY9&#xA;QqG/On8z9O1rQ7byj5L1CLU9U165FnOLVhIBCaApzHw/vGZRWv2eWMY96vVvJXlaz8reV9O0K1oU&#xA;sogskg29SVvilk/2TknIk2qd4FdirsVdir5t/Of8jvPOt+fbrW9AtV1Cz1T0mf8AfRRNA8cSxsH9&#xA;Vkqp4cgVr4fOyMhSvZ/ys8p3nlPyJpeh3solvLdXe4KnkivNI0pRD4Lzp79chI2VZXgV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KqP1Ky+tfW/q8f1unH6xwX1OPhzpypiqtirsVdiqG1LUtP0yxmv9QuI7Wz&#xA;t1LzTysFRVHiTirzgJrf5pHlKJ9H/LzltFvFeasoOxbo0Ns3h9px8/hlyVNLr8i/yqub9L19AhWR&#xA;AB6cbzRwniAF5RI6xnp4b9648RV3m/8AJTyF5khjP1FdKv4Aotr/AE4LbyIEoEBVRwYCgpUVHYjE&#xA;SKvKPPvnP85Pyuht9EuNbttWt74O2m6tLDzu0SIqGV/UqtfiH2+fzyQAKpx/zj7+b/m3zLr115f8&#xA;wzi/H1d7q2vCiRyIY2VWRvTCqynnUGlR+oSjSve8grwr/nLG0VvLOi3YtQzx3jRtecasitET6fLs&#xA;HK1p/k5OCvm7RrrUbTV7K60wsNRhnjez9Opb1lcFKAdTyyxD9ArczG3iM6hZyimVQagNT4gD88oS&#xA;qYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxXzD+aXkTQZrm1v9WhOoWq1&#xA;fToT6tyzGnGNY16u3IUX+GERKsf0vyrrnne+g1/zzAbXSYHE2j+UWPJFI+zPf7fvJD1CHZeh7jDd&#xA;clelKqqoVQAoFABsABkVdirsVYx5/wDy78veedJTT9YWRTA/qWt1AVWaJiKHiWDCjD7QI3+YGEGl&#xA;S38uPyf8reQ2nuNOMt1qNyvpy31yVLiOob00ChVVSQCe58cJlas5yKoTVdJ0zV7CbT9Tto7yynHG&#xA;a3mUMjCtRse4O4PbFWI+XfyT/Ljy9qseq6ZpfG+hPK3kmlknEZrWqLKzqG8GpUdjkjIqznIq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXiMH/OO9zF+aY81/pWJtKXUTqq2x&#xA;R/XEvreusVa8eIf9rlWnbJ8eyvbsgrsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0aad53a0-43ea-e844-85ce-5b0be37026ad</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0aad53a0-43ea-e844-85ce-5b0be37026ad</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:57d5e168-724f-4a4d-b041-e593cb20d206</stRef:instanceID>
            <stRef:documentID>xmp.did:fcc9ff7d-a9f0-e649-9b2e-119eb0a0ed3d</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fcc9ff7d-a9f0-e649-9b2e-119eb0a0ed3d</stEvt:instanceID>
                  <stEvt:when>2017-10-30T12:30:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0aad53a0-43ea-e844-85ce-5b0be37026ad</stEvt:instanceID>
                  <stEvt:when>2017-10-30T12:53:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -914.866 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 914.866 li
1024 914.866 li
1024 0 li
cp
clp
572.665 226.005 mo
572.609 225.99 572.578 225.978 572.524 225.963 cv
572.512 225.999 572.499 226.034 572.485 226.069 cv
572.55 226.041 572.596 226.038 572.665 226.005 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.188235 .184314 .239216 rgb
f
564.144 862.935 mo
565.22 860.339 565.182 857.703 564.66 855 cv
564.502 854.177 564.007 853.496 564.253 852.44 cv
564.467 851.527 563.824 850.231 563.211 849.345 cv
561.995 847.587 560.56 845.978 559.168 844.348 cv
558.789 843.905 558.285 843.404 557.759 843.286 cv
556.812 843.074 556.386 842.213 555.583 841.859 cv
554.709 841.474 553.616 841.49 553.095 840.416 cv
552.987 840.194 552.321 839.99 552.117 840.115 cv
551.43 840.534 550.842 840.241 550.317 839.949 cv
549.251 839.355 548.093 839.398 546.965 839.369 cv
542.976 839.266 539.171 839.878 535.944 842.504 cv
535.074 843.211 534.163 843.868 533.263 844.539 cv
532.27 845.28 531.242 845.683 530.03 844.978 cv
529.504 844.672 528.92 844.609 528.521 843.958 cv
528.2 843.435 527.415 843.135 526.778 842.889 cv
526.195 842.664 525.325 842.859 524.946 842.492 cv
523.928 841.505 522.614 841.25 521.431 840.67 cv
520.095 840.016 518.676 839.375 517.518 838.538 cv
514.863 836.617 511.858 835.429 509.018 833.911 cv
507.058 832.863 504.826 832.263 503.011 831.027 cv
501.947 830.303 500.89 829.716 499.716 829.402 cv
498.461 829.067 497.631 828.013 496.485 827.663 cv
494.916 827.183 493.628 826.255 492.244 825.48 cv
491.47 825.046 491.027 823.798 489.813 824.599 cv
489.667 824.348 489.485 824.155 489.287 823.99 cv
489.856 822.242 490.147 820.41 490.225 818.498 cv
490.266 817.465 489.863 816.506 490.458 815.308 cv
490.972 814.271 490.564 812.532 490.078 811.295 cv
489.112 808.84 487.842 806.502 486.629 804.151 cv
486.299 803.511 485.835 802.767 485.236 802.478 cv
484.157 801.956 483.888 800.8 483.023 800.149 cv
482.083 799.44 480.764 799.15 480.441 797.714 cv
480.375 797.417 479.631 796.983 479.352 797.076 cv
478.407 797.386 477.784 796.868 477.236 796.369 cv
476.122 795.355 474.718 795.079 473.372 794.727 cv
468.607 793.478 463.864 793.14 459.245 795.385 cv
458 795.99 456.72 796.521 455.451 797.074 cv
454.048 797.684 452.7 797.878 451.442 796.688 cv
450.897 796.173 450.213 795.933 449.916 795.038 cv
449.678 794.32 448.82 793.738 448.123 793.262 cv
447.486 792.828 446.386 792.816 446.035 792.269 cv
445.089 790.796 443.583 790.12 442.324 789.089 cv
440.904 787.926 439.379 786.756 438.224 785.422 cv
435.576 782.366 432.302 780.091 429.317 777.466 cv
429.255 777.412 429.186 777.365 429.124 777.312 cv
428.662 777.314 428.249 777.326 427.771 777.326 cv
425.226 777.326 422.706 777.286 420.227 777.248 cv
417.659 777.21 415.206 777.169 412.734 777.169 cv
412.136 777.169 411.535 777.18 410.935 777.186 cv
411.398 777.583 411.849 777.996 412.276 778.439 cv
414.083 780.319 416.381 781.727 418.458 783.347 cv
418.215 784.476 419.499 784.076 419.894 784.787 cv
420.665 786.173 422.751 786.398 423.326 788.132 cv
425.496 788.191 426.073 790.701 427.983 791.159 cv
429.045 794.422 432.346 795.526 434.533 797.669 cv
437.513 800.59 441.24 802.748 444.648 805.23 cv
444.832 805.363 445.015 805.507 445.219 805.597 cv
446.278 806.06 445.905 806.6 445.537 807.425 cv
444.637 809.443 443.575 811.611 443.886 813.778 cv
444.181 815.833 443.395 817.982 444.468 819.934 cv
443.918 823.906 445.701 827.104 448.123 829.918 cv
448.17 829.973 448.211 830.035 448.257 830.09 cv
448.232 830.098 448.217 830.109 448.19 830.117 cv
447.695 830.252 447.46 830.993 446.798 831 cv
445.844 832.426 444.199 833.125 443.222 834.518 cv
443.274 834.66 443.267 834.749 443.26 834.838 cv
443.19 834.804 443.059 834.764 443.061 834.736 cv
443.068 834.66 443.11 834.587 443.145 834.513 cv
442.923 834.493 442.705 834.474 442.605 834.573 cv
442.104 835.069 441.738 835.814 441.147 836.083 cv
440.075 836.571 439.476 837.387 438.934 838.328 cv
438.875 838.431 438.75 838.566 438.654 838.567 cv
437.657 838.575 437.067 839.353 436.38 839.859 cv
435.542 840.475 435.035 841.491 434.076 842.011 cv
434.179 842.593 433.539 842.178 433.401 842.518 cv
433.297 842.774 433.047 842.991 432.819 843.17 cv
432.563 843.371 432.197 843.453 431.99 843.686 cv
431.55 844.18 430.722 844.422 431.015 845.256 cv
430.992 845.253 430.971 845.249 430.942 845.248 cv
430.943 845.284 430.945 845.32 430.947 845.356 cv
430.97 845.338 430.999 845.333 431.021 845.313 cv
431.21 845.32 431.227 845.415 431.213 845.419 cv
431.13 845.448 431.04 845.456 430.952 845.471 cv
430.95 845.433 430.948 845.395 430.947 845.356 cv
430.133 845.992 428.987 845.785 428.593 846.771 cv
427.022 847.533 425.787 848.697 424.672 850.013 cv
424.488 850.229 424.281 850.46 424.034 850.582 cv
422.898 851.14 421.915 851.878 421.114 852.865 cv
420.779 853.278 420.447 853.919 420.031 853.994 cv
419.257 854.132 419.047 854.772 418.56 855.146 cv
418.073 855.52 417.544 855.846 417.09 856.254 cv
416.651 856.648 416.319 857.162 415.875 857.547 cv
415.458 857.909 414.808 857.963 414.524 858.525 cv
413.66 858.406 413.897 859.516 413.519 859.572 cv
412.433 859.733 412.171 860.875 411.193 861.234 cv
410.363 861.54 409.891 862.578 408.999 863.099 cv
408.147 863.597 407.548 864.5 406.677 865.101 cv
405.554 865.875 404.627 866.933 403.613 867.866 cv
403.489 867.98 403.365 868.109 403.217 868.179 cv
402.073 868.722 401.144 869.515 400.279 870.44 cv
399.422 871.355 398.551 872.388 397.467 872.932 cv
395.314 874.011 394.04 876.051 392.123 877.371 cv
391 878.145 390.08 879.212 389.068 880.147 cv
388.505 879.927 388.604 880.623 388.203 880.767 cv
387.422 881.047 387.13 882.105 386.187 882.256 cv
385.973 883.37 384.629 883.456 384.231 884.403 cv
382.458 884.676 381.608 886.286 380.317 887.233 cv
378.558 888.524 377.129 890.266 375.561 891.815 cv
375.476 891.898 375.386 891.981 375.323 892.079 cv
374.995 892.586 374.748 892.348 374.353 892.088 cv
373.387 891.454 372.357 890.722 371.213 890.699 cv
370.127 890.678 369.085 890.091 367.987 890.48 cv
365.983 889.86 364.182 890.51 362.525 891.522 cv
361.634 892.067 360.586 892.377 359.861 893.202 cv
358.961 894.225 358.027 895.218 357.116 896.23 cv
356.925 896.443 356.621 896.685 356.62 896.914 cv
356.617 897.733 356.543 898.5 355.942 899.122 cv
356.297 899.875 355.529 900.381 355.522 901.068 cv
355.491 903.953 356.126 906.672 357.405 909.259 cv
357.558 909.567 358.248 909.655 357.847 910.214 cv
358.022 910.374 358.197 910.533 358.373 910.693 cv
358.562 910.705 358.75 910.716 358.939 910.728 cv
358.925 910.876 358.912 911.024 358.898 911.172 cv
359.074 911.332 359.249 911.491 359.424 911.651 cv
359.873 911.253 360.059 911.75 360.257 911.947 cv
361.54 913.23 363.121 913.859 364.861 914.216 cv
365.391 914.325 365.919 914.198 366.488 914.606 cv
366.98 914.959 367.912 914.896 368.591 914.749 cv
369.94 914.458 371.254 914 372.57 913.573 cv
372.928 913.457 373.351 913.28 373.551 912.996 cv
373.912 912.483 374.53 912.442 374.94 912.05 cv
375.385 911.625 375.646 910.969 376.415 910.924 cv
376.574 910.915 376.86 910.567 376.836 910.415 cv
376.756 909.901 377.076 909.624 377.38 909.383 cv
377.998 908.894 378.258 908.192 378.554 907.527 cv
379.601 905.174 380.176 902.754 379.408 900.181 cv
379.201 899.487 379.035 898.781 378.857 898.08 cv
378.661 897.304 378.674 896.592 379.395 896.043 cv
379.707 895.806 379.888 895.473 380.375 895.396 cv
380.766 895.333 381.139 894.939 381.443 894.62 cv
381.722 894.328 381.82 893.761 382.133 893.626 cv
382.973 893.262 383.449 892.542 384.087 891.979 cv
384.808 891.345 385.541 890.657 386.326 890.173 cv
388.127 889.065 389.578 887.567 391.185 886.249 cv
392.294 885.338 393.204 884.156 394.389 883.379 cv
395.083 882.924 395.695 882.438 396.172 881.816 cv
396.682 881.15 397.516 880.917 398.008 880.319 cv
398.681 879.502 399.553 878.963 400.357 878.33 cv
400.807 877.976 401.661 878.02 401.483 877.098 cv
402.801 876.921 402.998 875.214 404.31 875.028 cv
405.378 873.557 406.987 872.684 408.271 871.45 cv
408.564 871.168 408.915 870.947 409.225 870.681 cv
409.606 870.353 409.886 869.982 410.443 869.782 cv
410.95 869.6 411.254 868.852 411.647 868.353 cv
410.899 867.421 411.895 867.864 412.129 867.787 cv
412.291 867.733 412.578 867.972 412.696 867.899 cv
413.215 867.575 413.746 867.237 414.177 866.809 cv
415.114 865.875 415.906 864.811 417.092 864.122 cv
417.868 863.671 418.19 862.721 419.157 862.325 cv
419.938 862.005 420.283 860.879 421.263 860.633 cv
422.374 859.316 423.742 858.309 425.177 857.379 cv
425.369 857.254 425.663 856.999 425.633 856.866 cv
425.434 855.958 426.29 855.985 426.677 855.801 cv
427.646 855.342 427.668 855.394 428.303 854.491 cv
428.438 854.298 428.606 854.003 428.781 853.986 cv
429.454 853.923 429.72 853.373 430.146 853.004 cv
430.609 852.603 431.225 852.344 431.6 851.882 cv
432.484 850.792 433.878 850.285 434.669 849.1 cv
434.773 848.943 435.106 848.951 435.239 848.799 cv
435.675 848.3 436.75 848.479 436.681 847.421 cv
436.671 847.277 436.999 846.975 437.162 846.98 cv
437.764 847.001 437.931 846.496 438.251 846.188 cv
438.593 845.86 438.831 845.342 439.228 845.173 cv
440.016 844.836 440.676 844.505 440.717 843.52 cv
440.72 843.443 441.163 843.267 441.243 843.332 cv
441.579 843.606 441.741 843.417 441.959 843.189 cv
443.101 842 444.454 841.068 445.733 840.042 cv
446.964 839.054 448.128 837.986 449.422 837.069 cv
449.895 836.734 450.26 836.23 450.622 835.764 cv
450.893 835.416 451.631 835.504 451.51 834.805 cv
451.805 834.789 452.015 834.65 452.203 834.483 cv
454.38 835.849 456.515 837.282 458.679 838.67 cv
459.138 838.966 459.688 839.465 460.121 839.396 cv
461.667 839.147 463.137 839.049 464.498 839.992 cv
465.809 839.089 467.001 840.382 468.299 840.184 cv
473.752 839.351 478.688 837.311 483.173 834.1 cv
483.708 833.716 483.661 832.387 484.84 832.971 cv
485.008 832.711 485.177 832.452 485.346 832.192 cv
485.653 832.388 485.961 832.584 486.232 832.819 cv
489.054 835.259 492.729 835.874 495.755 837.833 cv
497.529 838.982 499.603 839.667 501.542 840.561 cv
501.559 841.496 502.498 840.943 502.941 841.431 cv
503.805 842.381 505.493 842.172 506.267 843.434 cv
507.99 843.079 508.909 844.951 510.501 844.958 cv
511.943 847.336 514.751 847.597 516.874 848.882 cv
519.765 850.634 523.104 851.646 526.252 852.973 cv
526.421 853.044 526.593 853.124 526.771 853.156 cv
527.691 853.326 527.497 853.82 527.359 854.54 cv
527.024 856.298 526.587 858.206 527.233 859.856 cv
527.847 861.423 527.625 863.264 528.833 864.604 cv
529.135 867.839 531.133 870.032 533.564 871.804 cv
534.873 872.756 535.939 874.072 537.549 874.621 cv
539.546 875.302 541.521 876.049 543.512 876.753 cv
543.929 876.901 544.456 877.193 544.784 877.058 cv
545.958 876.576 547.099 876.227 548.347 876.719 cv
549.214 875.763 550.394 876.563 551.381 876.166 cv
555.528 874.499 559.044 871.976 561.987 868.612 cv
562.338 868.211 562.055 867.171 563.093 867.414 cv
563.466 866.376 li
563.18 865.545 li
563.4 865.477 563.62 865.408 563.84 865.34 cv
563.964 864.994 564.088 864.648 564.213 864.303 cv
563.378 863.897 563.978 863.336 564.144 862.935 cv
cp
f
1023.96 568.236 mo
1023.54 566.671 1023.01 565.135 1022.59 563.571 cv
1022.53 563.363 1022.82 563.061 1022.95 562.802 cv
1020.94 558.488 li
1019.85 558.857 1019.9 557.843 1019.69 557.347 cv
1018.44 554.458 1015.98 553.063 1013.16 552.463 cv
1012.36 552.293 1011.42 552.229 1010.67 551.896 cv
1008.26 550.827 1005.82 551.913 1003.41 551.695 cv
1002.94 551.652 1002.13 552.038 1001.97 552.429 cv
1001.27 554.124 998.897 553.753 998.339 555.519 cv
996.484 556.06 995.231 557.135 994.805 559.132 cv
994.726 559.501 993.747 560.08 993.53 559.956 cv
991.673 558.892 989.646 559.808 987.838 559.392 cv
984.997 558.74 982.127 558.798 979.285 558.432 cv
977.399 558.19 975.495 558.103 973.607 557.877 cv
971.087 557.577 968.626 556.704 966.031 557.172 cv
964.623 557.426 963.255 557.28 961.918 556.723 cv
961.545 556.567 960.998 556.447 960.678 556.607 cv
958.947 557.473 957.328 556.309 955.626 556.406 cv
953.853 556.508 952.053 556.206 950.269 556.037 cv
948.162 555.837 946.055 555.387 943.955 555.426 cv
942.114 555.46 940.376 555.034 938.589 554.855 cv
936.793 554.676 934.835 555.418 933.26 553.945 cv
930.521 554.155 927.838 552.994 925.071 553.641 cv
924.371 553.805 923.533 553.94 922.894 553.71 cv
920.319 552.782 917.425 553.898 914.964 552.402 cv
910.931 552.781 906.976 551.973 902.986 551.651 cv
896.457 551.125 889.878 551.212 883.417 549.852 cv
881.671 549.485 879.843 549.321 878.061 549.367 cv
876.161 549.416 874.293 549.121 872.396 549.111 cv
868.821 549.093 865.222 548.808 861.687 548.273 cv
860.09 548.032 858.517 548.084 856.94 547.921 cv
855.473 547.771 853.617 548.207 852.614 547.464 cv
851.017 546.28 849.608 547.24 848.154 547.028 cv
847.856 546.985 847.471 547.268 847.23 547.163 cv
845.382 546.356 843.425 546.831 841.548 546.591 cv
839.119 546.283 836.62 546.45 834.25 545.575 cv
834.145 545.536 834.021 545.549 833.911 545.524 cv
833.839 545.365 833.817 545.212 833.731 545.051 cv
833.664 544.927 833.667 544.716 833.699 544.485 cv
832.23 539.655 829.84 535.243 824.375 531.315 cv
824.32 531.286 824.278 531.286 824.22 531.249 cv
821.154 529.337 817.63 528.871 814.174 528.622 cv
811.333 528.417 808.525 528.655 805.932 529.632 cv
804.225 527.177 803.81 524.186 802.53 521.56 cv
801.889 520.248 802.436 518.395 800.625 517.549 cv
800.392 517.44 800.424 516.727 800.363 516.289 cv
800.166 514.872 800.293 513.315 798.63 512.566 cv
798.491 512.503 798.34 512.116 798.405 512.007 cv
799.227 510.652 797.849 509.946 797.528 508.937 cv
796.565 505.913 794.929 503.171 793.864 500.193 cv
793.5 499.174 793.684 497.75 793.032 497.08 cv
791.057 495.049 791.229 492.099 789.631 489.957 cv
789.391 489.635 789.275 489.135 789.289 488.724 cv
789.341 487.11 788.468 485.866 787.821 484.496 cv
786.787 482.305 786.075 479.959 785 477.791 cv
784.042 475.859 783.548 473.782 782.759 471.832 cv
781.625 469.025 781.621 465.679 779.039 463.472 cv
778.714 463.194 778.574 462.7 778.441 462.197 cv
778.581 462.112 778.713 461.989 778.79 461.853 cv
780.545 458.71 783.828 456.309 783.463 452.126 cv
783.418 451.613 783.768 451.064 783.943 450.535 cv
784.7 448.242 784.576 445.194 783.646 442.857 cv
784.126 442.544 784.581 442.208 784.96 441.799 cv
785.864 440.824 787.327 440.663 787.805 439.763 cv
788.578 438.31 790.022 438.361 791.058 437.601 cv
791.325 437.405 791.749 437.371 791.943 437.134 cv
794.648 433.846 798.458 431.948 801.897 429.706 cv
804.521 427.996 806.876 425.921 809.557 424.261 cv
812.11 422.679 814.681 420.89 817.028 418.85 cv
819.061 417.083 821.722 416.037 824.111 414.684 cv
824.504 414.462 825.189 414.39 825.297 414.09 cv
825.92 412.352 827.951 412.437 828.98 411.037 cv
829.938 409.735 832.12 409.366 833.175 408.097 cv
834.553 406.44 836.886 406.322 838.063 404.47 cv
838.546 403.709 839.721 402.605 840.209 402.769 cv
841.988 403.365 842.103 401.755 842.931 401.136 cv
843.44 400.755 843.894 400.288 844.437 399.97 cv
845.118 399.571 845.964 399.401 846.545 398.905 cv
846.887 398.613 846.853 397.879 846.987 397.344 cv
848.972 397.945 849.329 395.284 851.092 395.312 cv
851.916 395.325 852.13 393.641 853.351 394.293 cv
854.709 392.635 856.574 391.574 858.181 390.209 cv
858.751 389.725 859.362 389.21 860.046 388.955 cv
861.688 388.341 863.887 387.048 864.83 385.939 cv
865.169 385.54 865.429 385.039 865.839 384.74 cv
868.683 382.664 871.527 380.527 874.454 378.644 cv
877.365 376.771 879.919 374.377 883.076 372.809 cv
884.571 372.067 885.88 370.792 887.494 370.102 cv
887.681 368.802 888.958 368.88 889.733 368.321 cv
890.594 367.7 891.382 366.965 892.282 366.409 cv
894.329 365.144 896.431 363.966 898.496 362.728 cv
898.753 362.574 898.908 362.257 899.131 362.039 cv
900.448 360.754 901.732 359.435 903.571 358.863 cv
904.526 358.567 905.357 358.037 905.797 357.083 cv
906.249 356.105 907.104 355.649 908.033 355.302 cv
909.181 354.872 909.977 353.982 910.923 353.285 cv
911.989 352.5 913.356 352.17 913.593 350.564 cv
913.61 350.445 914.336 350.428 914.734 350.367 cv
915.045 350.319 915.604 350.338 915.633 350.224 cv
915.971 348.852 917.245 348.678 918.224 348.354 cv
919.368 347.974 919.749 346.834 920.738 346.359 cv
922.885 345.329 924.735 343.897 926.46 342.248 cv
927.283 341.461 928.416 341.279 929.567 341.933 cv
930.796 342.63 932.382 342.939 933.286 343.908 cv
934.515 345.226 935.799 344.713 937.111 344.73 cv
937.737 344.739 938.364 344.655 938.99 344.613 cv
938.799 344.202 938.607 343.792 938.167 343.57 cv
937.569 343.683 937.318 343.626 937.067 343.57 cv
937.279 343.367 937.464 343.115 937.714 342.982 cv
937.846 342.912 938.089 343.05 938.282 343.093 cv
938.169 343.298 938.058 343.503 938.167 343.57 cv
938.74 343.54 939.065 343.7 939.389 343.86 cv
939.256 344.111 939.124 344.362 938.99 344.613 cv
939.659 345.383 940.398 345.49 941.337 345.04 cv
942.742 344.366 944.162 343.429 945.643 343.282 cv
947.88 343.059 949.596 342.11 950.885 340.489 cv
951.392 339.852 951.809 339.271 952.559 339.055 cv
953.54 338.771 954.005 338.133 954.248 337.186 cv
954.443 336.424 954.595 335.546 955.074 334.98 cv
957.548 332.053 957.393 328.672 956.954 325.218 cv
956.848 324.385 956.837 323.495 956.52 322.742 cv
955.599 320.559 954.566 318.422 953.516 316.297 cv
953.4 316.062 952.999 316.003 952.646 316.123 cv
952.587 316.236 952.532 316.319 952.51 316.146 cv
952.358 316.474 952.181 316.434 952.182 316.406 cv
952.192 316.238 952.245 316.073 952.283 315.907 cv
952.333 315.925 952.384 315.943 952.434 315.962 cv
952.113 315.088 951.841 314.478 951.251 313.953 cv
948.363 311.386 944.75 310.186 941.457 308.387 cv
940.49 307.859 939.767 308.243 938.937 308.604 cv
938.458 308.813 937.907 308.854 937.39 308.979 cv
936.054 309.3 934.629 309.037 933.333 309.715 cv
931.986 310.419 930.638 311.192 928.999 311.035 cv
928.767 311.012 928.457 311.357 928.249 311.591 cv
927.066 312.917 926.007 314.375 924.706 315.57 cv
923.329 316.834 923.636 319.203 921.621 320 cv
921.411 320.083 921.274 320.607 921.276 320.926 cv
921.292 323.75 921.397 326.573 921.368 329.396 cv
921.355 330.526 921.468 332.027 920.829 332.701 cv
919.673 333.919 918.033 334.712 916.524 335.556 cv
914.921 336.453 913.013 336.879 912.159 338.809 cv
912.009 339.148 911.536 339.416 911.153 339.566 cv
909.198 340.334 907.751 341.852 906.104 343.052 cv
905.353 343.599 904.457 342.989 903.907 343.715 cv
903.336 344.47 902.787 345.24 902.216 345.995 cv
902.155 346.075 902.005 346.08 901.916 346.145 cv
900.78 346.962 899.295 347.01 898.313 348.399 cv
897.728 349.227 896.679 350.749 894.964 350.142 cv
894.903 350.121 894.76 350.231 894.703 350.314 cv
893.639 351.856 891.789 352.434 890.521 353.714 cv
888.921 355.33 886.625 356.17 885.4 358.594 cv
885.434 358.606 885.468 358.618 885.501 358.63 cv
885.427 358.784 885.353 358.937 885.327 358.722 cv
885.174 359.051 884.996 359.011 884.998 358.982 cv
885.008 358.815 885.061 358.65 885.099 358.484 cv
885.172 358.511 885.246 358.537 885.319 358.564 cv
885.31 358.244 885.283 358.073 885.23 358.064 cv
883.042 357.705 882.288 359.985 880.616 360.612 cv
880.397 360.694 880.315 361.102 880.43 361.454 cv
880.562 361.52 880.671 361.582 880.48 361.605 cv
880.809 361.757 880.77 361.936 880.741 361.934 cv
880.573 361.923 880.408 361.871 880.242 361.833 cv
880.264 361.774 880.285 361.716 880.306 361.658 cv
878.297 362.04 877.188 363.367 875.866 364.325 cv
874.139 365.576 872.382 366.747 870.476 367.701 cv
870.425 367.727 870.477 367.921 870.987 368.341 cv
871.256 368.364 871.52 368.396 871.737 368.515 cv
872.278 368.812 872.736 369.262 871.889 368.989 cv
873.282 369.658 873.305 369.783 873.254 369.836 cv
873.108 369.985 872.886 370.247 872.777 370.211 cv
872.193 370.02 871.566 369.841 871.09 369.479 cv
870.915 369.345 870.81 369.119 870.719 368.875 cv
869.41 368.809 868.751 369.064 868.169 369.413 cv
867.933 369.554 867.879 369.963 868.263 370.147 cv
868.288 370.123 868.305 370.096 868.331 370.073 cv
868.451 369.965 868.734 370.038 868.323 370.187 cv
868.323 370.187 li
868.324 370.187 li
868.915 370.421 868.817 370.823 868.871 371.203 cv
868.953 371.77 869.821 372.405 868.75 372.81 cv
868.546 372.887 868.033 372.498 867.848 372.206 cv
867.376 371.465 867.633 370.815 868.156 370.265 cv
865.034 371.405 863.224 373.659 860.558 374.471 cv
859.793 374.704 860.1 375.513 860.659 375.666 cv
861.67 375.942 861.131 376.466 860.956 376.873 cv
860.767 377.311 860.621 377.332 860.073 376.431 cv
859.698 375.814 859.046 375.496 858.843 376.033 cv
858.353 377.337 857.117 377.337 856.244 377.949 cv
855.374 378.559 854.588 379.294 853.693 379.862 cv
851.564 381.214 849.47 382.6 847.211 383.773 cv
845.483 384.671 844.455 386.751 842.403 387.429 cv
842.189 387.499 842.048 387.985 841.993 388.299 cv
841.859 389.06 841.251 389.294 840.744 389.729 cv
840.039 390.334 839.755 390.959 838.436 390.883 cv
836.878 390.794 835.696 392.471 834.327 393.327 cv
832.668 394.365 831.394 396.033 829.365 396.473 cv
828.981 398.039 827.028 397.727 826.411 398.861 cv
825.711 400.149 824.327 400.062 823.363 400.766 cv
822.325 401.524 821.259 402.245 820.214 402.993 cv
819.259 403.676 818.368 404.466 817.356 405.048 cv
815.365 406.194 813.726 407.896 811.458 408.632 cv
810.851 408.83 810.446 409.656 809.97 410.213 cv
809.951 410.236 810.175 410.448 810.262 410.587 cv
810.388 410.791 810.492 411.009 810.605 411.221 cv
810.338 411.346 810.077 411.504 809.914 412.171 cv
809.92 412.19 809.936 412.208 809.94 412.228 cv
809.992 412.475 809.973 412.737 809.841 412.48 cv
809.622 412.824 809.328 412.608 809.298 412.36 cv
809.275 412.166 809.482 411.944 809.627 411.729 cv
809.461 411.185 809.355 410.952 809.251 410.728 cv
809.039 410.841 808.808 410.93 808.62 411.075 cv
808.372 411.266 808.19 411.556 807.926 411.709 cv
805.341 413.208 805.37 413.228 803.223 415.921 cv
802.892 416.337 802.117 416.411 801.539 416.616 cv
800.743 416.899 799.65 416.916 799.187 417.468 cv
797.285 419.735 794.471 420.747 792.355 422.701 cv
791.42 423.565 790.373 424.529 789.205 424.88 cv
785.707 425.934 783.902 429.442 780.526 430.592 cv
780.173 431.933 778.528 431.679 777.991 432.507 cv
777.783 432.827 777.541 433.066 777.288 433.277 cv
776.994 433.076 776.731 432.846 776.415 432.666 cv
775.108 431.924 773.541 431.655 772.523 430.385 cv
772.372 430.196 772.001 430.136 771.722 430.105 cv
769.093 429.818 766.463 429.53 763.829 429.29 cv
763.762 429.284 763.687 429.284 763.617 429.278 cv
763.371 428.464 763.124 427.652 762.908 426.839 cv
762.369 424.813 761.774 422.736 761.096 420.714 cv
760.476 418.868 760.516 416.727 759.614 415.071 cv
758.978 413.903 759.291 412.466 758.59 411.725 cv
757.458 410.53 757.968 409.178 757.578 407.953 cv
757.477 407.637 757.58 407.226 757.417 406.965 cv
755.162 403.354 754.577 399.138 753.548 395.164 cv
752.763 392.132 751.546 389.237 750.827 386.168 cv
750.142 383.243 749.265 380.237 748.079 377.362 cv
747.052 374.872 746.909 372.017 746.387 369.32 cv
746.302 368.877 746.453 368.205 746.203 368.007 cv
744.753 366.863 745.481 364.965 744.482 363.543 cv
743.553 362.221 743.898 360.035 743.032 358.63 cv
741.9 356.796 742.532 354.547 741.151 352.842 cv
740.584 352.141 739.913 350.676 740.223 350.265 cv
741.355 348.769 739.865 348.147 739.542 347.165 cv
739.344 346.561 739.045 345.982 738.917 345.366 cv
738.755 344.593 738.865 343.737 738.58 343.028 cv
738.412 342.61 737.705 342.41 737.241 342.112 cv
738.443 340.422 736.034 339.236 736.623 337.574 cv
736.897 336.797 735.369 336.057 736.377 335.107 cv
735.238 333.292 734.826 331.186 734.044 329.228 cv
733.768 328.533 733.474 327.79 733.45 327.061 cv
733.392 325.308 732.866 322.812 732.116 321.564 cv
731.846 321.116 731.453 320.71 731.3 320.227 cv
730.239 316.869 729.119 313.492 728.267 310.118 cv
727.465 306.943 726.146 303.914 725.596 300.641 cv
728.62 297.833 730.902 294.521 732.438 290.664 cv
732.633 290.175 732.028 289.303 733.071 289.187 cv
733.074 288.825 733.076 288.463 733.078 288.101 cv
732.898 287.875 732.718 287.649 732.539 287.423 cv
732.721 287.287 732.902 287.151 733.084 287.016 cv
733.086 286.654 733.088 286.292 733.09 285.93 cv
732.181 285.828 732.554 285.109 732.577 284.683 cv
732.723 281.918 731.822 279.483 730.449 277.144 cv
730.032 276.432 729.349 275.961 729.231 274.901 cv
729.166 274.314 728.715 273.708 728.181 273.176 cv
729.07 271.376 729.835 269.48 731.918 268.556 cv
732.147 268.454 732.277 268.012 732.355 267.703 cv
733.131 264.671 735.513 262.659 737.13 260.164 cv
739.257 256.88 741.412 253.611 743.647 250.4 cv
744.09 249.765 743.757 249.862 743.41 249.578 cv
743.014 249.254 742.779 248.715 742.542 248.237 cv
742.495 248.144 742.719 247.846 742.882 247.738 cv
743.044 247.63 743.4 247.538 743.474 247.619 cv
743.76 247.934 743.951 248.333 744.213 248.675 cv
744.336 248.835 744.538 248.936 744.704 249.064 cv
744.834 248.776 745.035 248.496 745.07 248.196 cv
745.093 247.997 744.812 247.776 744.789 247.553 cv
744.744 247.114 744.785 246.667 744.791 246.223 cv
745.062 246.427 745.306 246.71 745.611 246.809 cv
745.887 246.898 746.476 246.852 746.502 246.752 cv
746.746 245.84 748.495 245.356 747.327 244.001 cv
747.268 243.933 747.677 243.237 747.967 243.146 cv
748.353 243.026 748.983 243.798 749.133 242.756 cv
749.225 242.115 749.414 241.487 749.422 240.918 cv
749.133 240.904 748.982 240.827 748.83 240.749 cv
748.942 240.651 749.109 240.448 749.156 240.473 cv
749.313 240.556 749.428 240.721 749.56 240.854 cv
749.468 240.896 749.376 240.939 749.422 240.918 cv
750.808 240.535 751.745 239.583 752.105 238.567 cv
752.959 236.163 754.704 234.451 756.181 232.524 cv
757.088 231.341 758.204 230.283 757.972 228.678 cv
757.683 228.665 757.531 228.588 757.38 228.51 cv
757.491 228.412 757.658 228.209 757.705 228.234 cv
757.861 228.316 757.975 228.478 758.104 228.61 cv
758.821 228.21 759.528 228.091 759.915 227.285 cv
760.745 225.554 761.599 223.778 762.781 222.29 cv
763.926 220.848 765.784 219.923 765.535 217.659 cv
765.527 217.587 765.958 217.515 766.114 217.368 cv
766.568 216.939 767.079 216.53 767.404 216.011 cv
769.36 212.89 771.513 209.921 773.765 207.003 cv
775.213 205.128 776.222 202.913 777.291 200.914 cv
777.001 200.901 776.85 200.824 776.698 200.746 cv
776.81 200.647 776.977 200.445 777.024 200.47 cv
777.17 200.547 777.279 200.696 777.399 200.823 cv
778.023 200.302 778.576 199.86 779.022 199.339 cv
779.532 198.743 780.512 198.012 778.894 197.527 cv
779.01 196.239 780.375 197.446 781.034 196.327 cv
781.899 194.857 783.064 193.518 783.333 192.095 cv
782.758 192.186 782.44 192.028 782.234 191.777 cv
782.162 191.689 782.365 191.374 782.442 191.162 cv
782.859 191.395 783.277 191.628 783.694 191.862 cv
784.417 191.267 784.49 190.335 785.729 190.729 cv
786.96 191.12 788.426 190.83 789.782 190.749 cv
791.036 190.676 792.678 190.927 793.448 190.244 cv
794.892 188.965 796.878 188.301 797.924 186.72 cv
798.766 185.446 800.473 185.028 800.775 183.178 cv
801.026 181.638 802.035 180.234 802.585 178.725 cv
802.744 178.289 802.485 177.696 802.403 177.177 cv
802.175 175.721 801.531 174.178 801.819 172.834 cv
802.129 171.382 801.701 170.137 800.942 169.479 cv
800.039 168.696 799.562 167.819 799.101 166.845 cv
798.806 166.223 798.197 165.911 797.818 165.467 cv
796.436 163.842 794.343 163.646 792.774 162.573 cv
791.499 161.702 790.693 160.493 788.978 161.638 cv
788.679 161.837 787.958 161.309 787.419 161.265 cv
786.127 161.158 784.511 160.872 783.773 161.982 cv
783.129 162.952 782.674 162.859 781.736 162.924 cv
780.682 162.997 779.702 163.856 778.644 164.247 cv
777.534 164.658 777.113 165.687 776.396 166.45 cv
777.373 168.103 774.677 167.643 774.972 168.918 cv
775.012 169.092 774.879 169.452 774.908 169.46 cv
776.137 169.841 775.071 170.106 775.003 170.558 cv
774.775 172.078 773.791 173.222 773.365 174.623 cv
773.093 175.517 773.189 176.375 773.819 176.696 cv
774.952 177.272 774.52 177.414 773.783 177.82 cv
773.484 177.985 773.083 178.515 773.159 178.715 cv
773.601 179.876 774.163 180.992 774.72 182.104 cv
774.746 182.155 775.157 182.08 775.335 181.974 cv
775.868 181.657 776.374 181.297 776.89 180.953 cv
777.438 181.877 776.208 181.919 776.067 182.621 cv
775.764 184.121 774.958 185.337 773.539 186.247 cv
772.729 186.766 772.316 187.956 771.822 188.895 cv
771.458 189.588 771.459 190.692 770.928 191.03 cv
770.042 191.594 770.315 192.022 770.599 192.655 cv
771 193.548 770.606 193.414 769.905 193.306 cv
769.46 193.237 768.517 193.672 768.513 193.894 cv
768.484 195.603 766.578 195.891 766.111 197.319 cv
765.684 198.624 764.804 199.78 764.439 201.038 cv
764.509 201.083 764.541 201.122 764.402 201.139 cv
764.73 201.291 764.69 201.469 764.662 201.467 cv
764.507 201.458 764.355 201.412 764.202 201.374 cv
762.718 202.971 761.534 204.607 760.368 206.244 cv
760.163 206.531 759.991 207.853 759.909 208.402 cv
759.859 208.735 759.525 209.231 759.24 209.292 cv
757.276 209.715 757.267 209.685 757.509 211.229 cv
757.559 211.543 757.637 211.853 757.702 212.164 cv
757.428 211.954 757.178 211.677 756.869 211.566 cv
756.726 211.514 756.399 211.737 756.27 211.918 cv
755.655 212.778 755.081 213.667 754.49 214.545 cv
753.969 215.319 754.265 216.647 752.92 216.863 cv
752.605 218.726 750.837 219.528 749.948 220.938 cv
747.916 224.162 745.766 227.279 743.506 230.354 cv
741.197 233.494 739.378 237.001 736.879 240.041 cv
736.594 240.389 736.501 240.993 736.521 241.47 cv
736.558 242.372 736.554 242.507 736.34 242.407 cv
735.69 242.104 735.594 242.45 735.189 242.895 cv
734.309 243.862 733.474 244.795 733.074 246.066 cv
732.667 247.361 731.885 248.31 730.648 248.966 cv
730.138 249.237 729.686 249.857 729.487 250.417 cv
729.136 251.405 729.001 252.468 728.775 253.5 cv
727.117 253.035 727.18 254.726 726.47 255.408 cv
725.266 256.565 725.037 258.584 723.18 259.2 cv
722.367 262.33 719.664 264.283 718.298 267.06 cv
718.144 267.372 718.01 267.674 717.855 267.956 cv
717.803 267.948 717.756 267.926 717.703 267.922 cv
716.766 267.852 715.755 268.226 714.919 267.4 cv
714.747 267.229 714.06 267.258 713.912 267.441 cv
713.412 268.056 712.77 267.977 712.187 267.878 cv
711.001 267.677 709.939 268.097 708.882 268.44 cv
705.144 269.656 701.812 271.473 699.677 274.972 cv
699.102 275.915 698.471 276.824 697.856 277.742 cv
697.444 278.357 695.55 288.255 695.659 288.969 cv
695.925 290.712 696.146 292.626 697.289 293.948 cv
697.811 294.552 698.175 295.278 698.586 295.964 cv
698.537 296.111 698.453 296.217 698.416 296.376 cv
698.401 296.439 698.758 296.64 698.963 296.695 cv
699.01 296.708 699.063 296.702 699.111 296.709 cv
699.224 296.859 699.341 297.004 699.471 297.14 cv
699.438 297.174 699.417 297.226 699.378 297.252 cv
698.79 297.639 698.168 297.822 697.513 297.385 cv
697.132 298.877 695.19 299.503 695.708 301.401 cv
695.87 301.519 695.964 301.612 695.747 301.591 cv
696.206 302.049 696.192 302.245 696.18 302.441 cv
695.92 302.199 695.644 301.973 695.417 301.704 cv
695.408 301.693 695.427 301.661 695.429 301.642 cv
694.825 301.745 694.481 301.924 694.237 302.186 cv
691.896 304.691 690.598 307.896 688.6 310.635 cv
687.294 312.424 686.217 314.417 684.703 315.998 cv
684.052 316.678 683.602 317.314 683.319 318.129 cv
683.142 318.64 683.1 319.197 682.997 319.733 cv
681.943 318.974 682.265 320.454 681.671 320.544 cv
680.567 320.713 680.419 321.943 679.661 322.515 cv
680.449 323.625 679.182 324.073 678.812 324.658 cv
678.062 325.843 673.01 333.752 667.597 342.196 cv
671.62 343 675.014 345.627 676.926 349.182 cv
683.713 338.564 691.465 326.311 692.258 324.665 cv
691.662 324.777 691.411 324.721 691.16 324.664 cv
691.372 324.461 691.557 324.209 691.806 324.077 cv
691.938 324.006 692.181 324.144 692.374 324.188 cv
692.262 324.393 692.15 324.598 692.258 324.665 cv
693.504 323.548 693.92 322.054 695.36 321.561 cv
696.178 318.559 698.76 316.661 700.095 314.013 cv
700.986 312.246 702.073 310.766 703.585 309.532 cv
703.895 309.28 704.108 308.827 704.219 308.426 cv
704.692 306.709 705.907 305.455 706.793 303.992 cv
706.985 303.675 707.208 303.382 707.415 303.076 cv
708.821 303.548 710.162 304.288 711.717 304.27 cv
712.866 304.257 714.015 304.272 715.163 304.283 cv
715.791 306.296 716.334 308.314 716.628 310.402 cv
716.636 310.458 716.836 310.471 717.397 310.122 cv
717.504 309.874 717.619 309.633 717.801 309.466 cv
718.254 309.047 718.827 308.757 718.298 309.473 cv
719.376 308.366 719.502 308.383 719.536 308.449 cv
719.631 308.634 719.808 308.928 719.74 309.02 cv
719.373 309.513 719.003 310.05 718.508 310.386 cv
718.326 310.509 718.079 310.537 717.818 310.545 cv
717.338 311.766 717.37 312.471 717.515 313.133 cv
717.573 313.402 717.944 313.584 718.241 313.278 cv
718.226 313.248 718.206 313.223 718.192 313.191 cv
718.127 313.043 718.288 312.797 718.297 313.234 cv
718.298 313.233 li
718.708 312.748 719.058 312.969 719.436 313.039 cv
719.999 313.142 720.877 312.521 720.92 313.666 cv
720.928 313.883 720.396 314.246 720.06 314.328 cv
719.199 314.541 718.662 314.081 718.308 313.399 cv
718.387 316.734 719.964 319.167 719.884 321.959 cv
719.861 322.758 720.726 322.726 721.048 322.245 cv
721.633 321.374 721.958 322.052 722.287 322.348 cv
722.643 322.667 722.616 322.812 721.587 323.044 cv
720.883 323.203 720.374 323.72 720.819 324.083 cv
721.898 324.963 721.505 326.134 721.806 327.157 cv
722.106 328.176 722.553 329.156 722.807 330.185 cv
723.409 332.633 724.056 335.06 724.449 337.575 cv
724.75 339.499 726.393 341.136 726.381 343.297 cv
726.38 343.522 726.795 343.811 727.076 343.963 cv
727.754 344.333 727.783 344.983 728.033 345.603 cv
728.382 346.464 728.884 346.933 728.392 348.159 cv
727.811 349.606 729.023 351.261 729.399 352.832 cv
729.854 354.734 731.029 356.474 730.799 358.538 cv
732.162 359.4 731.244 361.152 732.123 362.099 cv
733.12 363.172 732.596 364.457 732.957 365.595 cv
733.345 366.82 733.688 368.06 734.063 369.289 cv
734.407 370.412 734.872 371.509 735.102 372.653 cv
735.553 374.906 736.644 377.002 736.62 379.386 cv
736.613 380.024 737.267 380.671 737.644 381.299 cv
737.659 381.326 737.931 381.18 738.091 381.143 cv
738.325 381.088 738.564 381.059 738.802 381.019 cv
738.834 381.312 738.901 381.609 739.481 381.977 cv
739.502 381.978 739.523 381.968 739.543 381.971 cv
739.794 382 740.037 382.102 739.751 382.145 cv
740.008 382.462 739.709 382.672 739.464 382.621 cv
739.273 382.581 739.128 382.314 738.972 382.108 cv
738.402 382.091 738.148 382.118 737.902 382.146 cv
737.942 382.383 737.952 382.63 738.03 382.854 cv
738.132 383.15 738.35 383.415 738.411 383.715 cv
739.007 386.642 739.035 386.621 740.904 389.515 cv
741.193 389.961 741.016 390.718 741.026 391.332 cv
741.041 392.177 740.708 393.218 741.084 393.833 cv
742.627 396.358 742.689 399.348 743.868 401.975 cv
744.389 403.138 744.968 404.438 744.929 405.656 cv
744.813 409.307 747.563 412.136 747.579 415.703 cv
748.737 416.465 747.971 417.943 748.585 418.716 cv
749.363 419.696 749.353 420.724 749.56 421.784 cv
749.659 422.294 749.795 422.919 750.146 423.229 cv
750.711 423.729 749.242 424.388 750.358 424.687 cv
750.766 426.7 751.931 428.484 751.945 430.642 cv
751.954 432.044 752.443 433.324 753.04 434.578 cv
752.876 434.806 752.699 435.014 752.555 435.275 cv
752.511 435.355 752.36 435.381 752.254 435.421 cv
750.564 436.06 750.122 437.719 749.142 438.97 cv
748.007 440.418 747.895 441.845 747.872 443.448 cv
747.867 443.764 747.92 444.131 747.783 444.386 cv
746.919 445.99 746.756 447.728 747.029 449.451 cv
747.158 450.264 747.164 450.692 746.344 450.936 cv
744.141 451.589 742.414 453.564 739.839 453.25 cv
739.495 453.208 738.834 453.598 738.762 453.895 cv
738.52 454.888 737.542 454.802 737.015 455.309 cv
736.014 456.269 734.513 455.747 733.428 456.844 cv
732.456 457.825 730.852 458.206 729.493 458.771 cv
728.671 459.112 727.654 459.109 726.951 459.591 cv
724.672 461.154 722.383 462.549 719.508 462.738 cv
718.771 462.787 717.722 463.177 717.417 463.737 cv
716.61 465.216 715.132 465.45 713.877 466.042 cv
707.583 469.016 701.258 471.93 694.974 474.923 cv
695.194 477.686 695.4 480.162 695.568 481.957 cv
695.661 482.961 695.793 484.616 695.943 486.583 cv
695.957 486.759 695.957 486.921 695.969 487.095 cv
697.068 486.488 698.293 486.146 699.314 485.159 cv
700.604 483.913 702.57 483.188 704.367 482.686 cv
706.903 481.977 706.924 482.118 709.139 480.385 cv
709.715 479.934 710.53 479.55 711.235 479.551 cv
712.9 479.552 714.043 478.816 715.254 477.755 cv
716.186 476.939 717.53 476.3 718.746 476.192 cv
719.829 476.095 720.772 475.751 721.492 475.208 cv
723.037 474.041 724.382 472.639 726.566 472.882 cv
726.814 472.91 727.246 472.616 727.353 472.368 cv
727.884 471.137 728.842 471.012 730.041 470.942 cv
730.985 470.888 732.395 470.58 732.726 469.936 cv
733.414 468.596 734.743 468.625 735.667 467.903 cv
737.354 466.582 739.76 467.023 741.398 465.351 cv
742.097 464.637 743.782 464.979 744.695 464.361 cv
745.657 463.711 746.407 462.716 747.593 462.367 cv
748.095 462.219 748.647 462.235 749.145 462.077 cv
749.727 461.892 750.608 461.736 750.775 461.328 cv
751.371 459.878 752.584 460.495 752.913 460.971 cv
754.489 463.26 756.974 464.017 759.16 465.373 cv
761.573 466.869 763.971 467.083 766.473 466.801 cv
766.909 466.752 767.354 466.713 767.797 466.672 cv
767.929 467.213 768.123 467.724 768.446 468.085 cv
769.076 468.79 769.363 469.449 769.658 470.319 cv
770.605 473.117 771.836 475.817 772.851 478.594 cv
773.14 479.385 773.567 479.641 774.306 479.736 cv
774.43 479.752 774.498 480.206 774.592 480.457 cv
773.337 480.518 774.042 480.83 774.282 481.507 cv
775.387 484.623 777.213 487.503 777.458 490.918 cv
777.492 491.386 777.983 491.81 778.218 492.276 cv
779.021 493.868 779.946 495.415 780.565 497.076 cv
782.116 501.236 783.654 505.399 785.487 509.445 cv
786.246 511.121 787.089 512.764 787.087 514.671 cv
787.086 515.379 787.578 515.813 787.909 516.372 cv
788.708 517.718 789.543 519.088 789.794 520.729 cv
789.952 521.761 790.391 522.772 790.826 523.738 cv
792.679 527.856 794.877 531.848 796.374 536.089 cv
796.576 536.664 796.802 537.228 797.014 537.798 cv
796.818 538.221 796.598 538.626 796.454 539.088 cv
794.822 539.802 794.275 540.988 794.329 542.804 cv
794.375 544.409 793.825 546.013 794.188 547.672 cv
794.452 548.874 794.956 550.269 794.583 551.301 cv
794.124 552.575 794.382 553.517 794.783 554.592 cv
795.347 556.101 795.873 557.624 796.478 559.115 cv
796.68 559.611 796.978 560.169 797.397 560.458 cv
799.119 561.649 800.921 562.724 802.648 563.909 cv
802.878 564.066 802.845 564.606 802.934 564.969 cv
808.522 567.538 li
809.284 566.266 810.085 567.305 810.711 567.614 cv
814.356 569.417 817.942 568.739 821.221 566.971 cv
822.155 566.467 823.133 565.747 824.151 565.446 cv
827.422 564.481 828.912 561.377 831.471 559.574 cv
831.973 559.221 832.45 558.162 832.281 557.643 cv
832.235 557.503 832.238 557.373 832.216 557.238 cv
832.626 557.267 833.036 557.298 833.446 557.341 cv
834.688 557.474 836 557.149 837.207 557.395 cv
842.838 558.542 848.583 558.335 854.254 558.961 cv
857.083 559.272 859.874 560.168 862.764 559.496 cv
864.364 560.41 866.089 560.259 867.819 560.104 cv
868.13 560.077 868.452 560.104 868.763 560.149 cv
873.37 560.816 877.979 561.436 882.648 561.452 cv
883.701 561.456 884.754 561.625 885.804 561.747 cv
887.912 561.99 890.012 562.395 892.125 562.477 cv
895.806 562.621 899.422 563.407 903.155 563.21 cv
905.869 563.067 908.717 563.283 911.319 564.008 cv
912.957 564.463 914.558 563.572 916.126 564.541 cv
917.732 565.532 919.677 565.42 921.457 565.061 cv
924.027 564.542 926.462 566.172 929.027 565.36 cv
929.381 565.248 929.919 565.457 930.279 565.672 cv
931.904 566.643 933.633 566.224 935.337 566.126 cv
935.756 566.102 936.212 565.825 936.578 565.927 cv
939.068 566.624 941.653 566.369 944.146 566.706 cv
948.666 567.317 953.22 567.392 957.732 567.969 cv
960.685 568.347 963.718 568.103 966.588 569.133 cv
966.865 569.233 967.213 569.158 967.525 569.132 cv
970.719 568.871 973.844 569.398 976.99 569.832 cv
978.962 570.103 980.892 571.053 982.988 570.23 cv
983.613 569.984 984.446 570.207 985.174 570.295 cv
987.39 570.565 989.595 571.002 991.817 571.104 cv
992.692 571.145 993.214 571.128 993.505 572.039 cv
994.356 574.702 996.203 576.742 998.117 578.62 cv
1000.54 580.994 1003.43 582.735 1006.96 582.799 cv
1009.34 582.841 1011.71 582.648 1013.81 581.318 cv
1015.13 581.713 1016.05 581.288 1016.93 580.189 cv
1017.7 579.219 1018.83 578.548 1019.45 577.388 cv
1019.9 576.547 1020.3 575.471 1021.03 575.048 cv
1021.94 574.527 1022.26 573.842 1022.56 573.007 cv
1022.99 571.834 1023.44 570.672 1023.83 569.489 cv
1023.96 569.096 1024.06 568.617 1023.96 568.236 cv
cp
f
571.951 222.737 mo
571.767 222.73 571.47 222.733 571.167 222.74 cv
571.064 222.742 570.963 222.829 570.861 222.876 cv
571.008 222.957 571.159 223.027 571.304 223.11 cv
571.503 223.006 571.729 222.903 571.993 222.801 cv
571.975 222.78 571.968 222.758 571.951 222.737 cv
cp
f
646.664 820.299 mo
646.621 820.201 646.59 820.028 646.534 820.019 cv
646.372 819.994 646.2 820.035 646.031 820.05 cv
646.074 820.148 646.104 820.32 646.161 820.33 cv
646.323 820.355 646.496 820.314 646.664 820.299 cv
cp
f
570.726 236.526 mo
570.71 236.568 570.695 236.611 570.68 236.653 cv
570.743 236.64 570.787 236.615 570.853 236.604 cv
570.801 236.579 570.775 236.551 570.726 236.526 cv
cp
f
467.608 816.581 mo
467.609 816.579 467.609 816.577 467.611 816.574 cv
467.596 816.541 467.582 816.49 467.566 816.452 cv
467.555 816.494 467.543 816.544 467.532 816.597 cv
467.567 816.597 467.601 816.595 467.608 816.581 cv
cp
f
462.687 240.296 mo
462.663 240.272 462.637 240.253 462.614 240.229 cv
462.591 240.273 462.573 240.315 462.549 240.36 cv
462.503 240.382 462.595 240.339 462.687 240.296 cv
cp
f
452.617 210.891 mo
452.638 210.855 452.657 210.828 452.679 210.783 cv
452.608 210.758 452.538 210.732 452.467 210.706 cv
452.482 210.763 452.485 210.818 452.503 210.875 cv
452.547 210.875 452.576 210.888 452.617 210.891 cv
cp
f
695.708 301.401 mo
695.66 301.367 695.609 301.332 695.556 301.295 cv
695.514 301.411 695.436 301.556 695.429 301.642 cv
695.532 301.624 695.626 301.604 695.747 301.591 cv
695.723 301.522 695.725 301.467 695.708 301.401 cv
cp
f
182.241 619.338 mo
182.222 619.302 182.21 619.271 182.184 619.229 cv
182.125 619.274 182.065 619.32 182.005 619.365 cv
182.061 619.383 182.109 619.411 182.167 619.426 cv
182.19 619.39 182.217 619.372 182.241 619.338 cv
cp
f
762.125 695.041 mo
762.147 695.045 762.168 695.051 762.193 695.057 cv
762.193 695.043 762.188 695.039 762.187 695.028 cv
762.167 695.03 762.145 695.037 762.125 695.041 cv
cp
f
764.439 201.038 mo
764.401 201.014 764.364 200.99 764.31 200.964 cv
764.261 201.098 764.212 201.232 764.163 201.367 cv
764.176 201.37 764.189 201.372 764.202 201.374 cv
764.274 201.296 764.328 201.217 764.402 201.139 cv
764.411 201.104 764.429 201.072 764.439 201.038 cv
cp
f
212.428 626.744 mo
212.396 626.75 212.366 626.762 212.332 626.768 cv
212.357 626.812 212.383 626.85 212.408 626.894 cv
212.401 626.944 212.415 626.844 212.428 626.744 cv
cp
f
809.914 412.171 mo
809.862 411.992 809.762 411.824 809.682 411.652 cv
809.667 411.677 809.645 411.704 809.627 411.729 cv
809.689 411.932 809.758 412.171 809.841 412.48 cv
809.86 412.352 809.889 412.272 809.914 412.171 cv
cp
f
310.819 681.087 mo
310.812 681.042 310.798 681.017 310.783 680.994 cv
310.723 681.014 310.657 681.044 310.593 681.071 cv
310.662 681.078 310.737 681.083 310.819 681.087 cv
cp
f
315.542 695.384 mo
315.575 695.392 315.606 695.395 315.639 695.404 cv
315.636 695.353 315.628 695.308 315.625 695.257 cv
315.652 695.215 315.597 695.3 315.542 695.384 cv
cp
f
363.855 334.206 mo
365.571 334.212 367.021 332.958 369 333.239 cv
369.904 333.368 370.83 332.94 371.797 332.639 cv
371.779 328.81 371.754 324.966 371.724 321.19 cv
371.637 321.206 371.547 321.208 371.46 321.227 cv
370.355 321.452 369.311 321.977 368.205 322.184 cv
367.168 322.378 366.043 321.837 365.033 322.491 cv
363.722 321.459 363.04 323.519 362.362 323.246 cv
360.414 322.462 358.877 324.09 356.917 323.738 cv
355.252 323.44 353.469 324.695 351.495 324.693 cv
349.608 324.691 347.745 325.602 345.729 325.75 cv
343.127 325.94 340.575 326.789 338.001 327.349 cv
337.686 327.417 337.357 327.509 337.044 327.481 cv
334.632 327.27 332.333 327.68 330.011 328.37 cv
327.713 329.052 325.277 329.912 322.963 329.761 cv
318.368 329.46 314.293 331.592 309.855 331.917 cv
309.188 331.965 308.524 332.061 307.861 332.182 cv
307.269 331.84 306.763 331.406 306.462 330.709 cv
305.373 330.758 305.15 329.574 304.324 329.218 cv
300.853 327.724 297.245 327.118 293.474 327.356 cv
293.023 327.384 292.569 328.174 292.096 327.407 cv
291.251 327.801 li
291.142 328.023 291.032 328.245 290.923 328.468 cv
290.751 328.376 290.579 328.285 290.407 328.194 cv
289.563 328.588 li
289.765 329.181 289.369 329.285 289.026 329.373 cv
286.617 326.955 284.286 324.458 281.485 322.457 cv
281.154 322.22 280.997 321.753 280.687 321.473 cv
277.5 318.597 274.406 315.615 271.236 312.734 cv
269.404 311.069 267.976 308.771 265.432 307.897 cv
265.204 307.818 265.179 307.267 264.951 307.045 cv
263.081 305.216 261.241 303.348 259.276 301.624 cv
257.848 300.37 256.047 299.591 255.239 297.618 cv
254.923 296.847 253.882 296.351 253.13 295.784 cv
251.706 294.708 249.881 294.103 249.086 292.296 cv
247.513 292.23 247.76 290.495 246.707 289.764 cv
242.661 286.956 239.126 283.499 235.534 280.135 cv
234.549 279.213 233.229 278.424 234.24 276.534 cv
234.939 275.228 235.065 273.608 235.395 272.117 cv
235.482 271.722 235.336 271.281 235.362 270.866 cv
235.573 267.408 234.949 264.094 233.695 260.881 cv
233.384 260.085 232.707 259.399 233.185 258.36 cv
233.31 258.089 232.711 257.101 232.4 257.079 cv
230.967 256.979 230.375 254.791 228.613 255.598 cv
228.504 255.647 227.94 255.143 227.979 255.003 cv
228.508 253.069 226.877 252.791 225.812 252.048 cv
223.172 250.208 220.194 249.415 217.005 249.452 cv
216.953 249.545 216.906 249.604 216.886 249.446 cv
216.734 249.775 216.556 249.735 216.558 249.707 cv
216.567 249.558 216.611 249.411 216.647 249.264 cv
215.638 248.466 214.573 246.821 213.562 249.131 cv
213.559 249.137 213.306 249.09 213.265 249.016 cv
212.428 247.492 211.744 248.52 211.024 249.134 cv
210.842 249.289 210.619 249.393 210.414 249.521 cv
209.606 247.847 208.269 249.204 208.059 249.562 cv
207.287 250.88 205.943 251.081 204.829 251.72 cv
203.97 252.212 204.03 252.771 204.866 253.101 cv
205.847 253.487 204.993 253.949 205.031 254.364 cv
204.814 254.357 204.413 254.375 204.407 254.338 cv
204.235 253.089 203.356 253.176 202.463 253.279 cv
201.487 253.391 201.115 254.017 201.39 255.004 cv
201.553 255.122 201.647 255.214 201.428 255.192 cv
201.887 255.651 201.874 255.847 201.861 256.042 cv
201.62 255.817 201.368 255.601 201.15 255.355 cv
198.713 256.591 197.18 258.337 196.55 260.781 cv
196.085 262.586 195.374 264.354 195.144 266.186 cv
194.633 270.239 194.361 274.33 196.686 278.027 cv
197.129 278.733 197.857 279.26 198.292 279.969 cv
198.82 280.832 199.144 281.817 199.626 282.712 cv
199.758 282.957 200.265 283.001 200.393 283.246 cv
201.344 285.066 203.562 285.324 204.762 286.846 cv
205.274 287.494 205.903 288.114 206.605 288.534 cv
209.659 290.36 213.138 289.25 216.38 289.838 cv
216.563 289.871 216.778 289.624 216.994 289.574 cv
219.478 289.006 221.964 288.447 224.451 287.895 cv
226.625 287.412 226.747 287.407 228.244 288.775 cv
229.478 289.903 230.591 291.164 231.839 292.276 cv
233.1 293.399 234.129 294.858 235.386 295.808 cv
236.779 296.86 238.187 297.723 238.996 299.321 cv
239.031 299.39 239.205 299.378 239.304 299.426 cv
240.149 299.833 241.918 301.045 242.083 301.431 cv
243.011 303.591 244.943 304.922 246.711 306.102 cv
248.514 307.304 249.975 308.746 251.444 310.245 cv
252.472 311.292 253.258 312.83 254.492 313.367 cv
256.96 314.44 258.173 316.827 260.304 318.242 cv
261.244 318.867 262.294 319.75 263.104 320.726 cv
263.84 321.613 264.583 323.052 265.452 323.155 cv
267.292 323.372 267.088 325.13 268.15 325.907 cv
269.41 326.829 270.277 328.266 271.928 328.748 cv
272.396 328.884 272.914 329.277 273.154 329.698 cv
274.35 331.785 276.628 332.707 278.146 334.488 cv
279.075 335.58 280.207 336.498 281.352 337.406 cv
281.283 337.643 281.228 337.88 281.187 338.101 cv
280.856 339.877 280.746 341.696 280.598 343.502 cv
280.557 343.994 280.557 344.595 280.8 344.98 cv
281.237 345.675 280.974 346.444 281.24 347.136 cv
281.529 347.889 282.19 348.536 281.857 349.488 cv
281.788 349.685 282.063 350.206 282.259 350.254 cv
282.919 350.417 283.094 350.944 283.231 351.433 cv
283.51 352.426 284.226 353.095 284.88 353.789 cv
287.195 356.244 289.829 358.161 293.327 358.533 cv
294.044 358.609 294.758 358.725 295.472 358.834 cv
297.758 358.806 299.809 358.749 302.319 358.292 cv
302.508 358.191 302.679 358.096 302.901 357.986 cv
303.009 357.933 303.122 357.89 303.23 357.838 cv
304.503 359.289 306.108 360.371 307.633 361.553 cv
308.047 361.873 308.51 362.162 308.838 362.558 cv
310.188 364.184 311.759 365.564 313.421 366.854 cv
314.083 367.368 314.779 367.86 315.345 368.469 cv
317.708 371.006 320.155 373.435 322.98 375.479 cv
324.072 376.268 324.863 377.476 325.959 378.256 cv
326.746 378.817 327.43 379.485 328.088 380.178 cv
329.118 377.675 330.409 375.293 332.051 373.099 cv
332.818 372.075 333.673 371.13 334.574 370.228 cv
333.854 369.386 332.975 368.611 332.083 368.106 cv
328.329 365.98 325.792 362.549 322.583 359.859 cv
320.564 358.167 318.969 355.968 316.93 354.426 cv
314.84 352.847 312.979 351.012 311.064 349.243 cv
312.413 347.395 312.631 345.281 312.379 343.127 cv
313.824 342.602 315.366 342.962 316.711 342.47 cv
318.613 341.773 320.572 341.727 322.511 341.46 cv
323.596 341.311 324.961 342.209 325.56 340.517 cv
327.905 341.5 329.881 338.874 332.223 339.835 cv
335.408 338.441 338.908 338.558 342.219 337.764 cv
342.975 337.583 343.767 337.557 344.534 337.418 cv
345.482 337.247 346.301 336.905 347.415 337.113 cv
348.428 337.303 349.651 336.362 350.782 335.92 cv
350.449 333.66 351.663 335.353 352.125 335.452 cv
352.442 335.521 352.686 336.192 352.951 336.186 cv
354.122 336.154 355.324 336.11 356.449 335.819 cv
358.897 335.185 361.232 334.196 363.855 334.206 cv
cp
f
318.522 682.769 mo
317.745 681.981 316.681 681.448 315.689 680.908 cv
314.948 680.505 314.887 679.084 313.606 679.528 cv
313.333 678.303 312.116 678.003 311.392 677.231 cv
310.029 675.777 308.198 674.81 306.96 673.4 cv
305.972 672.276 304.79 671.605 303.741 670.68 cv
302.693 669.755 301.778 668.632 300.616 667.895 cv
298.462 666.528 297.083 664.222 294.696 663.176 cv
294.62 662.055 293.316 662.153 292.838 661.262 cv
292.361 660.373 291.243 659.826 290.397 659.141 cv
289.798 658.656 289.211 658.146 288.595 657.689 cv
289.119 656.733 289.615 655.727 290.089 654.574 cv
290.107 654.36 290.12 654.165 290.147 653.918 cv
290.234 653.137 290.368 652.361 290.496 651.584 cv
290.396 651.398 290.404 651.127 290.396 650.8 cv
290.362 649.287 290.385 647.633 289.557 646.383 cv
288.772 645.197 288.629 643.636 287.393 642.742 cv
286.713 640.582 285.191 639.231 283.38 638.239 cv
283.418 638.163 283.438 638.076 283.479 638.001 cv
285.646 633.939 285.383 629.348 286.916 625.17 cv
287.814 622.723 288.073 620.04 288.619 617.462 cv
289.74 617.187 288.818 616.208 289.284 615.541 cv
290.192 614.241 289.48 612.267 290.788 610.99 cv
289.89 609.014 291.893 607.396 291.468 605.479 cv
293.936 603.094 293.482 599.643 294.451 596.738 cv
295.771 592.78 296.077 588.484 296.815 584.332 cv
296.854 584.109 296.904 583.881 296.895 583.658 cv
296.847 582.504 297.496 582.603 298.399 582.572 cv
300.607 582.497 303.021 582.502 304.833 581.273 cv
306.551 580.107 308.827 579.872 310.111 578.052 cv
313.922 576.806 316.017 573.802 317.485 570.392 cv
318.275 568.558 319.567 566.916 319.789 564.828 cv
320.063 562.238 320.424 559.656 320.728 557.069 cv
320.785 556.588 320.936 555.987 320.799 555.604 cv
322.586 554.848 324.52 554.413 326.183 553.431 cv
326.405 553.3 326.629 553.191 326.852 553.072 cv
326.842 548.9 326.831 544.74 326.818 540.592 cv
323.851 541.532 321.224 543.258 318.333 544.38 cv
317.549 544.684 316.778 545.028 316.006 545.369 cv
313.191 541.973 309.838 539.191 305.888 537.053 cv
305.309 536.74 304.134 537.365 304.143 536.049 cv
303.692 535.994 303.243 535.938 302.793 535.883 cv
302.485 536.074 302.178 536.264 301.87 536.454 cv
301.728 536.208 301.585 535.962 301.443 535.716 cv
300.993 535.661 300.543 535.605 300.093 535.55 cv
299.833 536.666 298.994 536.097 298.466 536.007 cv
295.047 535.42 291.885 536.186 288.773 537.551 cv
288.316 537.751 287.918 538.036 287.48 538.277 cv
286.904 537.502 286.407 536.639 285.87 535.834 cv
284.384 533.609 282.998 531.316 281.451 529.135 cv
280.296 527.507 278.892 526.059 277.711 524.447 cv
275.702 521.704 273.764 518.907 271.828 516.111 cv
269.881 513.301 267.289 510.926 266.112 507.587 cv
265.997 507.261 265.415 507.123 265.111 506.833 cv
264.581 506.33 263.975 505.847 263.618 505.229 cv
262.549 503.375 261.302 501.686 259.901 500.058 cv
258.454 498.375 257.697 496.229 256.072 494.553 cv
254.317 492.743 253.275 490.259 251.649 488.294 cv
251.258 487.823 250.95 486.03 249.458 487.028 cv
249.278 486.582 249.044 486.147 248.947 485.684 cv
248.914 485.527 249.225 485.297 249.378 485.101 cv
248.566 484.479 247.89 483.863 247.631 482.722 cv
247.411 481.751 246.734 480.828 246.089 480.02 cv
243.133 476.321 240.119 472.671 237.067 469.144 cv
236.847 469.331 236.683 469.376 236.519 469.423 cv
236.534 469.274 236.519 469.013 236.57 468.999 cv
236.724 468.958 236.898 468.99 237.067 469.003 cv
237.131 468.132 236.721 467.672 236.191 467.087 cv
234.777 465.524 233.344 463.863 232.436 461.99 cv
231.423 459.901 230.151 458.136 228.517 456.541 cv
227.919 455.957 227.569 455.124 227.073 454.429 cv
225.163 451.75 223.228 449.089 221.325 446.405 cv
218.367 442.234 215.082 438.3 212.563 433.804 cv
211.946 432.704 211.468 431.248 209.921 430.662 cv
209.26 430.411 208.528 429.374 208.493 428.662 cv
208.437 427.498 207.948 427.092 207.057 426.514 cv
206.321 426.036 206.254 424.797 206.998 424.105 cv
208.001 423.173 207.951 421.947 208.389 420.859 cv
209.28 418.649 209.409 416.584 209.264 414.216 cv
209.143 412.255 208.804 410.475 207.854 408.933 cv
206.762 407.161 205.198 405.685 203.884 404.044 cv
202.641 402.493 201.208 401.168 199.242 400.725 cv
197.389 400.307 195.485 400.083 193.593 399.872 cv
190.7 399.549 187.941 400.491 185.126 400.896 cv
183.666 402.717 181.538 403.755 179.921 405.464 cv
178.349 407.126 177.939 409.145 177.077 411.019 cv
175.364 414.739 175.197 418.44 176.961 422.339 cv
178.113 424.883 179.938 426.75 181.648 428.797 cv
182.227 429.489 182.807 430.01 183.659 430.354 cv
184.955 430.878 186.47 431.077 187.268 432.503 cv
187.397 432.735 187.952 432.965 188.172 432.871 cv
189.38 432.355 190.291 433.299 191.332 433.394 cv
192.354 433.486 193.418 433.13 194.462 432.959 cv
194.676 432.925 194.879 432.835 195.09 432.78 cv
196.805 432.328 198.076 433.159 198.799 434.51 cv
199.374 435.583 200.187 436.401 200.869 437.351 cv
202.422 439.511 204.03 441.646 205.385 443.928 cv
206.158 445.23 206.735 446.585 207.949 447.608 cv
208.82 448.341 209.495 449.326 210.178 450.257 cv
211.123 451.544 211.995 452.886 212.897 454.206 cv
213.8 455.524 214.655 456.88 215.62 458.151 cv
216.571 459.404 217.41 460.704 218.615 461.82 cv
220.211 463.297 220.54 465.933 222.876 466.891 cv
222.998 466.94 223.064 467.274 223.053 467.47 cv
222.984 468.751 224.482 469.314 224.464 470.547 cv
224.441 472.183 226.379 472.266 226.809 473.556 cv
226.891 473.802 227.458 473.9 227.52 474.14 cv
228.088 476.334 229.754 477.836 230.879 479.676 cv
231.78 481.15 233.638 481.724 234.162 483.542 cv
234.387 484.326 235.066 484.978 235.54 485.689 cv
236.014 486.401 236.41 487.183 236.981 487.805 cv
237.614 488.496 238.338 489.162 239.148 489.615 cv
240.085 490.139 238.069 490.441 239.27 491.32 cv
240.917 492.526 242.731 493.971 243.139 496.306 cv
244.876 497.349 245.357 499.205 246.124 500.882 cv
246.248 501.152 246.539 501.348 246.763 501.568 cv
248.819 503.598 250.307 506.061 251.857 508.456 cv
252.559 509.541 252.889 510.741 254.164 511.521 cv
255.179 512.142 255.611 513.843 256.64 514.291 cv
258.286 515.007 257.466 516.606 258.314 517.485 cv
258.605 517.787 258.911 518.074 259.188 518.386 cv
259.885 519.171 260.78 519.867 261.213 520.779 cv
262.152 522.754 263.979 524.086 264.915 525.949 cv
265.906 527.924 266.799 529.83 268.697 531.097 cv
268.934 531.255 269.015 531.684 269.114 532.004 cv
269.577 533.503 270.404 534.725 271.686 535.661 cv
272.098 535.962 272.439 536.406 272.712 536.847 cv
274.392 539.56 276.376 542.044 278.326 544.561 cv
278.495 544.779 278.667 544.998 278.837 545.216 cv
278.376 545.834 277.912 546.451 277.452 547.068 cv
277.021 547.645 276.556 548.388 276.558 549.053 cv
276.562 550.252 275.641 551 275.434 552.063 cv
275.209 553.218 275.526 554.531 274.376 555.451 cv
274.139 555.641 274.075 556.499 274.28 556.71 cv
274.973 557.423 274.781 558.21 274.572 558.921 cv
274.148 560.367 274.516 561.75 274.789 563.115 cv
275.754 567.944 277.528 572.356 281.57 575.524 cv
282.659 576.378 283.698 577.296 284.75 578.196 cv
285.913 579.189 286.679 580.316 286.161 581.968 cv
285.936 582.683 286.02 583.403 285.345 584.063 cv
284.804 584.591 284.657 585.617 284.535 586.452 cv
284.423 587.215 284.895 588.209 284.557 588.765 cv
283.647 590.26 283.699 591.911 283.324 593.494 cv
282.9 595.28 282.517 597.163 281.824 598.786 cv
280.237 602.505 279.627 606.445 278.575 610.278 cv
277.849 612.924 277.735 615.774 276.744 618.295 cv
276.163 619.774 275.744 621.207 275.687 622.705 cv
275.626 624.307 274.583 625.593 274.475 627.068 cv
274.326 629.088 273.561 630.891 273.005 632.768 cv
272.754 633.616 271.828 634.352 272.154 635.257 cv
272.105 635.27 272.036 635.252 271.998 635.278 cv
271.113 635.885 270.231 636.376 269.112 636.191 cv
268.565 637.135 267.448 636.683 266.703 637.187 cv
265.239 638.174 263.937 639.305 262.762 640.552 cv
262.365 640.452 261.968 640.352 261.579 640.228 cv
260.451 639.868 260.819 641.089 260.298 641.349 cv
260.213 640.78 260.16 640.204 260.023 639.647 cv
259.985 639.494 259.713 639.322 259.526 639.292 cv
258.52 639.128 257.485 639.092 256.502 638.844 cv
255.585 638.613 254.747 637.983 253.829 637.86 cv
251.434 637.54 249.201 636.907 247.132 635.599 cv
246.675 635.311 245.488 634.854 245.447 636.308 cv
245.221 636.285 244.996 636.262 244.77 636.238 cv
245.092 635.205 244.389 635.154 243.678 635.076 cv
242.89 634.989 241.827 635.152 241.373 634.707 cv
240.165 633.522 238.394 634.247 237.373 633.452 cv
235.963 632.355 234.417 632.667 232.959 632.274 cv
232.125 632.05 231.354 631.998 230.573 631.337 cv
229.756 630.645 228.305 630.082 227.355 630.329 cv
226.247 630.616 225.671 630.721 224.731 629.929 cv
223.98 629.297 222.559 629.733 221.829 628.699 cv
218.55 628.747 215.661 626.917 212.408 626.894 cv
212.241 627.13 212.094 627.215 211.947 627.301 cv
211.924 627.154 211.844 626.905 211.89 626.878 cv
212.017 626.806 212.178 626.793 212.332 626.768 cv
212.122 626.397 211.916 626.034 211.652 625.984 cv
210.327 625.733 208.756 625.967 207.691 625.33 cv
205.759 624.173 203.824 624.116 201.754 624.287 cv
201.528 624.306 201.179 624.255 201.074 624.106 cv
199.978 622.546 198.114 622.463 196.571 621.931 cv
194.691 621.283 192.542 621.588 190.682 620.645 cv
189.878 621.438 189.836 619.98 189.15 620.133 cv
188.635 620.248 188.021 620.09 187.491 619.926 cv
186.899 619.742 186.371 619.254 185.779 619.182 cv
184.522 619.027 183.236 617.962 182.241 619.338 cv
182.287 619.427 182.305 619.492 182.167 619.426 cv
182.361 619.731 182.231 619.86 182.208 619.843 cv
182.073 619.744 181.962 619.61 181.843 619.489 cv
181.897 619.448 181.951 619.406 182.005 619.365 cv
180.123 618.773 179.212 616.739 177.235 617.188 cv
174.33 615.545 171.154 614.866 167.874 614.542 cv
167.334 614.488 166.745 614.414 166.286 614.157 cv
164.172 612.975 161.943 612.229 159.521 612.042 cv
158.506 611.963 157.137 612.139 156.568 611.564 cv
155.51 610.498 154.274 610.863 153.156 610.502 cv
152.039 610.141 150.952 609.665 149.815 609.394 cv
148.719 609.131 147.55 609.166 146.46 608.886 cv
145.439 608.624 144.647 607.658 143.456 607.824 cv
142.703 606.335 141.215 607.914 140.716 607.379 cv
139.282 605.846 137.201 606.673 135.572 605.525 cv
134.19 604.551 132.044 604.936 130.255 604.1 cv
128.546 603.301 126.473 603.338 124.583 602.621 cv
122.145 601.694 119.473 601.386 116.903 600.805 cv
116.589 600.733 116.251 600.678 115.979 600.521 cv
113.883 599.31 111.626 598.71 109.23 598.354 cv
106.859 598.002 104.288 597.752 102.254 596.637 cv
98.2168 594.423 93.6226 594.634 89.4634 593.053 cv
87.0259 592.126 84.3462 591.837 81.7754 591.261 cv
81.5122 590.137 80.5229 591.047 79.8613 590.574 cv
78.5723 589.65 76.5898 590.34 75.3281 589.018 cv
73.3423 589.893 71.7471 587.872 69.8247 588.275 cv
67.4688 585.78 64.0122 586.193 61.1187 585.192 cv
57.1763 583.827 52.8843 583.471 48.7412 582.685 cv
48.519 582.643 48.292 582.591 48.0684 582.598 cv
46.9136 582.632 47.02 581.985 46.9995 581.081 cv
46.9492 578.872 46.9824 576.458 45.7744 574.633 cv
44.6284 572.901 44.4199 570.623 42.6143 569.318 cv
41.4121 565.493 38.4326 563.364 35.0396 561.857 cv
33.2144 561.046 31.5874 559.735 29.5024 559.489 cv
26.915 559.185 24.3384 558.794 21.7544 558.461 cv
21.2129 558.391 20.502 558.175 20.1406 558.423 cv
18.8491 559.308 17.563 560.025 15.9292 559.755 cv
15.1304 561.133 13.5 560.474 12.4116 561.208 cv
7.83887 564.294 4.25 568.25 1.56934 573.07 cv
1.24951 573.646 1.86182 574.827 .545898 574.804 cv
.485352 575.253 .424805 575.702 .36377 576.151 cv
.550781 576.461 .737793 576.771 .924805 577.081 cv
.677246 577.22 .429688 577.36 .182129 577.5 cv
.121582 577.949 .0605469 578.398 0 578.847 cv
1.11279 579.121 .534668 579.953 .437988 580.479 cv
-.1875 583.892 .541504 587.062 1.87061 590.189 cv
2.2749 591.141 3.04883 591.835 3.02441 593.172 cv
3.00342 594.33 4.11523 595.727 5.08447 596.637 cv
7.00684 598.443 9.15527 600.013 11.2573 601.619 cv
11.8291 602.056 12.5669 602.53 13.2324 602.536 cv
14.4312 602.546 15.168 603.475 16.2285 603.694 cv
17.3818 603.933 18.6978 603.63 19.604 604.791 cv
19.7915 605.03 20.6489 605.104 20.8623 604.901 cv
21.583 604.217 22.3677 604.418 23.0767 604.635 cv
24.5171 605.075 25.9038 604.724 27.2725 604.466 cv
32.1128 603.557 36.5449 601.833 39.7593 597.829 cv
40.6255 596.75 41.5557 595.721 42.4668 594.679 cv
43.4731 593.527 44.6089 592.774 46.2549 593.312 cv
46.9678 593.544 47.689 593.469 48.3398 594.151 cv
48.8618 594.698 49.8867 594.857 50.7202 594.989 cv
51.4819 595.109 52.481 594.649 53.0332 594.994 cv
54.5176 595.92 56.1685 595.887 57.7471 596.281 cv
59.5283 596.725 61.4067 597.13 63.0215 597.841 cv
66.7227 599.471 70.6553 600.126 74.4761 601.222 cv
77.1133 601.978 79.9619 602.125 82.4722 603.145 cv
83.9434 603.743 85.3716 604.179 86.8687 604.252 cv
88.4702 604.332 89.7441 605.389 91.2183 605.515 cv
93.2363 605.687 95.0303 606.473 96.9009 607.05 cv
97.9478 607.373 98.8052 608.764 100.063 607.483 cv
101.773 609.365 104.673 607.82 106.39 609.681 cv
109.866 609.764 112.989 611.347 116.325 612.027 cv
117.087 612.182 117.815 612.494 118.57 612.692 cv
119.501 612.937 120.388 612.973 121.31 613.633 cv
122.147 614.232 123.653 613.897 124.865 613.974 cv
125.519 611.785 125.904 613.832 126.281 614.118 cv
126.539 614.313 126.476 615.025 126.719 615.131 cv
127.794 615.597 128.901 616.065 130.044 616.277 cv
132.531 616.737 135.065 616.827 137.438 617.944 cv
138.991 618.675 140.835 618.15 142.51 619.242 cv
143.862 620.123 146.008 619.441 147.459 620.716 cv
150.739 621.034 153.81 622.092 156.832 623.338 cv
157.237 623.505 157.958 623.691 158.136 623.5 cv
159.347 622.199 160.235 623.576 160.944 623.985 cv
162.72 625.01 162.662 625.103 164.773 625.121 cv
165.223 625.125 165.87 625.067 166.085 625.324 cv
166.917 626.314 168.071 626.135 169.115 626.405 cv
170.249 626.698 171.325 627.385 172.459 627.474 cv
175.136 627.681 177.448 629.323 180.172 629.279 cv
180.532 629.274 180.882 629.806 181.265 629.849 cv
182.523 629.994 183.411 631.878 185 630.621 cv
185.216 630.45 186.047 630.637 186.216 630.9 cv
186.836 631.869 187.813 631.583 188.646 631.753 cv
189.532 631.934 190.606 631.746 191.304 632.186 cv
192.69 633.061 193.929 633.739 195.523 632.733 cv
195.647 632.655 196.406 633.161 196.39 633.356 cv
196.324 634.183 196.797 634.233 197.393 634.329 cv
200.504 634.832 203.44 635.95 206.444 636.847 cv
209.336 637.71 212.282 638.381 215.131 639.421 cv
216.171 639.801 217.36 639.828 218.488 639.891 cv
219.331 639.938 219.993 641.197 220.961 640.247 cv
221.732 641.238 222.96 640.989 223.945 641.377 cv
225.799 642.107 227.868 642.199 229.59 642.943 cv
230.963 643.537 232.319 643.638 233.663 644.025 cv
235.006 644.414 236.313 645.037 237.679 645.206 cv
240.21 645.52 242.444 647.014 245.048 646.938 cv
245.598 647.92 246.734 647.273 247.547 647.874 cv
248.358 648.473 249.603 648.49 250.661 648.747 cv
251.726 649.005 252.788 649.402 253.864 649.45 cv
255.037 649.502 255.825 650.478 256.863 650.547 cv
257.408 650.583 257.938 650.686 258.462 650.811 cv
258.165 652.986 258.627 655.028 259.482 657.04 cv
259.759 657.691 260.289 658.167 260.272 659.083 cv
260.258 659.875 261.02 660.833 261.684 661.457 cv
263 662.693 264.472 663.769 265.912 664.869 cv
266.304 665.168 266.809 665.493 267.265 665.497 cv
267.315 665.498 267.354 665.518 267.402 665.522 cv
267.272 666.369 267.736 667.419 267.031 668.265 cv
267.924 671.42 266.902 674.683 267.72 677.832 cv
267.991 677.933 268.111 678.052 268.232 678.172 cv
268.096 678.232 267.875 678.374 267.838 678.336 cv
267.736 678.232 267.682 678.08 267.617 677.938 cv
267.313 678.236 267.016 678.529 267.036 678.797 cv
267.136 680.143 267.767 681.6 267.426 682.793 cv
266.808 684.958 267.252 686.842 267.952 688.797 cv
268.028 689.011 268.07 689.361 267.953 689.501 cv
266.729 690.963 267.13 692.785 267.014 694.413 cv
266.874 696.396 267.723 698.394 267.292 700.435 cv
268.266 701.007 266.869 701.423 267.193 702.047 cv
267.437 702.515 267.443 703.148 267.421 703.703 cv
267.397 704.323 267.063 704.959 267.145 705.549 cv
267.319 706.803 266.623 708.321 268.21 708.927 cv
268.284 708.86 268.342 708.826 268.313 708.976 cv
268.558 708.709 268.716 708.801 268.705 708.828 cv
268.645 708.985 268.544 709.126 268.458 709.272 cv
268.404 709.231 268.35 709.189 268.296 709.148 cv
268.21 711.119 266.48 712.524 267.425 714.317 cv
266.588 717.549 266.752 720.792 267.285 724.045 cv
267.373 724.581 267.453 725.169 267.324 725.679 cv
266.728 728.026 266.583 730.372 267.027 732.76 cv
267.213 733.761 267.736 735.039 267.328 735.737 cv
266.571 737.035 267.243 738.134 267.183 739.307 cv
267.123 740.479 266.943 741.652 266.975 742.821 cv
267.004 743.948 267.339 745.068 267.35 746.193 cv
267.361 747.248 266.632 748.262 267.1 749.37 cv
265.856 750.482 267.765 751.511 267.378 752.132 cv
266.267 753.913 267.603 755.71 266.915 757.58 cv
266.331 759.167 267.256 761.141 266.911 763.085 cv
266.581 764.942 267.152 766.935 266.946 768.947 cv
266.681 771.541 267.073 774.202 267.175 776.835 cv
267.188 777.157 267.221 777.497 267.14 777.8 cv
266.511 780.138 266.514 782.474 266.789 784.88 cv
267.061 787.262 267.483 789.811 266.932 792.063 cv
266.533 793.688 266.467 795.302 266.517 796.911 cv
265.744 797.284 265.022 797.845 264.023 797.491 cv
263.79 797.408 263.169 797.732 263.111 797.965 cv
262.916 798.75 262.29 798.955 261.708 799.116 cv
260.527 799.444 259.729 800.291 258.903 801.066 cv
255.979 803.806 253.692 806.927 253.237 811.081 cv
253.114 812.2 252.926 813.312 252.756 814.426 cv
252.705 814.763 252.626 815.078 252.521 815.373 cv
252.76 815.994 253.032 816.597 253.225 817.24 cv
254.128 819.85 254.83 822.615 255.288 825.293 cv
255.384 825.423 255.481 825.573 255.591 825.738 cv
256.591 827.232 257.624 828.903 259.251 829.627 cv
260.794 830.314 261.934 831.786 263.744 831.893 cv
266.241 833.992 269.216 834.149 272.203 833.7 cv
273.81 833.458 275.5 833.647 277.038 832.904 cv
278.946 831.981 280.885 831.123 282.804 830.222 cv
283.207 830.033 283.789 829.871 283.928 829.542 cv
284.427 828.37 284.996 827.315 286.235 826.787 cv
286.181 825.492 287.588 825.231 288.014 824.251 cv
289.802 820.135 290.536 815.852 290.267 811.372 cv
290.235 810.837 289.298 810.294 290.211 809.735 cv
290.057 809.4 289.902 809.065 289.747 808.73 cv
289.483 808.6 289.22 808.469 288.956 808.338 cv
289.065 808.134 289.174 807.93 289.283 807.726 cv
289.128 807.391 288.973 807.056 288.818 806.721 cv
287.935 807.021 287.968 806.196 287.804 805.792 cv
286.742 803.178 284.855 801.321 282.576 799.756 cv
281.882 799.28 281.048 799.143 280.48 798.214 cv
280.089 797.575 279.144 797.153 278.237 796.903 cv
278.282 796.117 278.343 795.333 278.373 794.546 cv
278.415 793.451 279.538 792.264 277.975 791.379 cv
279.352 789.242 277.11 786.838 278.465 784.699 cv
277.647 781.32 278.371 777.894 278.166 774.495 cv
278.119 773.719 278.232 772.935 278.229 772.155 cv
278.225 771.192 278.031 770.326 278.431 769.265 cv
278.793 768.301 278.081 766.933 277.842 765.743 cv
275.559 765.676 277.437 764.775 277.615 764.337 cv
277.738 764.038 278.442 763.915 278.481 763.652 cv
278.654 762.494 278.82 761.303 278.729 760.144 cv
278.532 757.623 277.964 755.151 278.431 752.57 cv
278.736 750.882 277.753 749.235 278.375 747.335 cv
278.877 745.802 277.665 743.904 278.521 742.174 cv
277.981 738.922 278.211 735.683 278.635 732.441 cv
278.691 732.006 278.685 731.262 278.454 731.14 cv
276.885 730.306 277.986 729.092 278.198 728.302 cv
278.729 726.321 278.834 726.354 278.306 724.31 cv
278.194 723.874 277.971 723.264 278.164 722.989 cv
278.905 721.93 278.435 720.861 278.426 719.784 cv
278.416 718.612 278.802 717.395 278.595 716.276 cv
278.104 713.637 279.093 710.979 278.348 708.359 cv
278.249 708.013 278.672 707.537 278.616 707.156 cv
278.431 705.902 280.022 704.559 278.397 703.348 cv
278.176 703.184 278.142 702.332 278.353 702.102 cv
279.129 701.252 278.6 700.382 278.549 699.533 cv
278.496 698.63 278.036 697.642 278.282 696.854 cv
278.769 695.289 279.104 693.917 277.721 692.637 cv
277.613 692.537 277.906 691.674 278.099 691.638 cv
278.915 691.488 278.841 691.018 278.78 690.418 cv
278.461 687.282 278.784 684.157 278.875 681.023 cv
278.962 678.007 278.85 674.987 279.119 671.966 cv
279.217 670.863 278.936 669.708 278.706 668.602 cv
278.554 667.872 279.347 667.034 278.729 666.373 cv
279.477 666.168 280.198 665.909 280.897 665.608 cv
281.617 666.21 282.105 667.125 282.876 667.625 cv
284.904 668.94 286.652 670.467 287.962 672.535 cv
288.251 672.991 289.129 673.911 289.789 672.615 cv
289.983 672.732 290.177 672.85 290.371 672.967 cv
289.637 673.763 290.251 674.11 290.86 674.485 cv
291.536 674.9 292.566 675.208 292.786 675.805 cv
293.371 677.392 295.282 677.495 295.865 678.649 cv
296.67 680.245 298.201 680.624 299.35 681.603 cv
300.008 682.162 300.683 682.539 301.106 683.47 cv
301.549 684.445 302.62 685.575 303.583 685.759 cv
304.708 685.972 305.273 686.124 305.785 687.242 cv
306.193 688.134 307.664 688.349 307.881 689.596 cv
310.866 690.955 312.694 693.844 315.625 695.257 cv
315.877 695.115 316.046 695.101 316.216 695.086 cv
316.173 695.229 316.139 695.489 316.086 695.493 cv
315.94 695.503 315.789 695.446 315.639 695.404 cv
315.67 695.828 315.701 696.245 315.919 696.403 cv
317.01 697.197 318.529 697.657 319.219 698.689 cv
320.47 700.561 322.195 701.44 324.139 702.171 cv
324.352 702.251 324.646 702.445 324.677 702.625 cv
324.876 703.784 325.589 704.55 326.373 705.242 cv
326.394 702.735 326.412 700.212 326.432 697.698 cv
326.189 697.342 326.066 697.163 325.965 697.015 cv
326.122 697.002 326.283 696.977 326.438 696.968 cv
326.457 694.625 326.476 692.286 326.493 689.937 cv
326.088 689.56 325.685 689.182 325.273 688.812 cv
323.029 686.794 320.653 684.928 318.522 682.769 cv
cp
f
758.109 228.614 mo
758.108 228.613 758.106 228.611 758.104 228.61 cv
758.06 228.635 758.017 228.651 757.972 228.678 cv
757.926 228.7 758.018 228.657 758.109 228.614 cv
cp
f
777.428 200.85 mo
777.418 200.841 777.408 200.833 777.399 200.823 cv
777.36 200.855 777.329 200.882 777.291 200.914 cv
777.245 200.936 777.336 200.893 777.428 200.85 cv
cp
f
783.758 191.897 mo
783.736 191.885 783.715 191.874 783.694 191.862 cv
783.589 191.948 783.472 192.027 783.333 192.095 cv
783.374 192.076 783.566 191.986 783.758 191.897 cv
cp
f
868.263 370.147 mo
868.224 370.185 868.193 370.226 868.156 370.265 cv
868.216 370.242 868.262 370.208 868.323 370.187 cv
868.296 370.177 868.287 370.158 868.263 370.147 cv
cp
f
872.516 806.506 mo
872.123 804.682 871.503 802.903 870.924 801.122 cv
870.767 800.638 870.528 800.065 870.143 799.794 cv
869.448 799.306 869.393 798.468 868.863 797.914 cv
868.288 797.312 867.399 796.958 867.338 795.918 cv
867.326 795.703 866.856 795.315 866.65 795.348 cv
865.955 795.457 865.579 795.023 865.253 794.612 cv
864.591 793.777 863.642 793.424 862.742 793.023 cv
859.556 791.606 856.282 790.828 852.799 791.868 cv
851.86 792.148 850.905 792.373 849.955 792.613 cv
848.906 792.879 847.941 792.861 847.199 791.886 cv
846.877 791.464 846.427 791.218 846.322 790.559 cv
846.238 790.03 845.705 789.525 845.272 789.113 cv
844.877 788.737 844.11 788.603 843.927 788.18 cv
843.436 787.043 842.46 786.398 841.699 785.535 cv
840.84 784.56 839.909 783.568 839.255 782.505 cv
837.754 780.067 835.728 778.104 833.943 775.929 cv
832.711 774.428 831.111 773.196 830.059 771.593 cv
829.442 770.653 828.786 769.825 827.943 769.18 cv
827.043 768.489 826.726 767.361 825.917 766.695 cv
824.812 765.784 824.083 764.604 823.225 763.516 cv
822.745 762.907 822.806 761.752 821.558 761.992 cv
821.318 760.208 819.008 759.941 818.756 758.167 cv
816.765 756.721 815.583 754.542 813.913 752.805 cv
813.532 752.408 813.233 751.934 812.874 751.515 cv
812.429 750.998 811.928 750.62 811.656 749.865 cv
811.409 749.179 810.397 748.769 809.722 748.237 cv
808.461 749.249 809.06 747.901 808.956 747.583 cv
808.884 747.366 809.207 746.976 809.107 746.817 cv
808.669 746.113 808.212 745.395 807.632 744.812 cv
806.368 743.544 804.928 742.473 803.996 740.867 cv
803.385 739.817 802.1 739.381 801.563 738.072 cv
801.13 737.015 799.606 736.549 799.274 735.223 cv
797.491 733.719 796.128 731.868 794.869 729.926 cv
794.7 729.666 794.355 729.268 794.174 729.307 cv
792.946 729.578 792.982 728.419 792.734 727.896 cv
792.112 726.584 792.183 726.554 790.961 725.694 cv
790.7 725.511 790.3 725.285 790.278 725.048 cv
790.191 724.137 789.448 723.777 788.948 723.2 cv
788.406 722.573 788.056 721.74 787.43 721.232 cv
785.955 720.035 785.268 718.149 783.664 717.079 cv
783.452 716.938 783.462 716.487 783.257 716.308 cv
782.582 715.717 782.823 714.263 781.392 714.356 cv
781.197 714.369 780.788 713.925 780.795 713.705 cv
780.824 712.89 780.14 712.665 779.723 712.23 cv
779.28 711.768 778.579 711.446 778.35 710.909 cv
777.894 709.842 777.445 708.949 776.112 708.894 cv
776.008 708.89 775.77 708.29 775.858 708.182 cv
776.229 707.727 775.973 707.507 775.665 707.212 cv
774.055 705.668 772.794 703.836 771.406 702.105 cv
770.068 700.439 768.622 698.864 767.381 697.112 cv
766.928 696.473 766.246 695.979 765.615 695.488 cv
765.143 695.122 765.263 694.123 764.317 694.287 cv
764.267 693.399 763.451 693.05 763.034 692.429 cv
762.248 691.257 761.08 690.372 760.376 689.246 cv
759.814 688.348 759.065 687.744 758.439 686.978 cv
757.813 686.211 757.302 685.323 756.574 684.675 cv
755.227 683.474 754.526 681.706 752.979 680.702 cv
753.054 679.91 752.132 679.83 751.9 679.152 cv
751.668 678.477 750.95 677.967 750.437 677.392 cv
750.284 677.22 750.136 677.04 749.988 676.861 cv
750.294 676.424 750.492 675.858 750.857 675.5 cv
751.761 674.615 751.832 673.466 751.915 672.222 cv
751.993 671.053 752.525 669.9 754.021 669.498 cv
755.206 669.179 756.29 668.486 757.419 667.96 cv
758.706 669.278 759.125 666.434 760.329 667.354 cv
761.564 666.457 763.086 666.223 764.305 665.045 cv
765.595 663.799 767.56 663.073 769.357 662.572 cv
771.894 661.863 771.915 662.004 774.129 660.271 cv
774.705 659.82 775.521 659.437 776.226 659.438 cv
777.89 659.438 779.033 658.702 780.244 657.641 cv
781.176 656.825 782.521 656.186 783.736 656.078 cv
784.82 655.981 785.763 655.637 786.482 655.094 cv
788.027 653.927 789.372 652.525 791.556 652.769 cv
791.805 652.796 792.236 652.502 792.343 652.254 cv
792.874 651.023 793.832 650.897 795.031 650.829 cv
795.976 650.774 797.385 650.466 797.716 649.822 cv
798.404 648.482 799.733 648.512 800.657 647.789 cv
802.344 646.468 804.75 646.909 806.388 645.236 cv
807.086 644.523 808.772 644.865 809.686 644.248 cv
810.647 643.597 811.397 642.603 812.583 642.253 cv
813.085 642.105 813.637 642.121 814.135 641.963 cv
814.717 641.778 815.598 641.623 815.766 641.214 cv
816.361 639.765 817.575 640.381 817.903 640.857 cv
819.479 643.146 821.963 643.903 824.15 645.259 cv
826.563 646.755 828.961 646.97 831.463 646.688 cv
833.877 646.415 836.47 646.409 838.598 645.06 cv
840.158 644.07 841.529 642.786 843.317 642.156 cv
843.5 642.092 843.683 641.913 843.78 641.738 cv
845.535 638.597 848.818 636.195 848.454 632.012 cv
848.409 631.5 848.759 630.951 848.933 630.421 cv
849.888 627.532 849.464 623.423 847.758 621.08 cv
847.412 620.604 847.263 620.306 847.089 619.733 cv
846.156 616.648 844.225 614.154 841.405 612.552 cv
840.098 611.81 838.53 611.541 837.514 610.271 cv
837.362 610.083 836.991 610.022 836.712 609.992 cv
834.083 609.704 831.453 609.416 828.819 609.176 cv
828.201 609.12 827.44 609.034 826.961 609.322 cv
823.796 611.222 819.585 611.453 817.545 615.161 cv
817.501 615.241 817.35 615.267 817.244 615.308 cv
815.555 615.945 815.112 617.605 814.132 618.856 cv
812.998 620.305 812.885 621.731 812.862 623.334 cv
812.857 623.65 812.91 624.017 812.773 624.272 cv
811.909 625.876 811.747 627.614 812.02 629.337 cv
812.148 630.15 812.154 630.579 811.334 630.822 cv
809.131 631.476 807.404 633.45 804.829 633.136 cv
804.485 633.094 803.825 633.483 803.752 633.781 cv
803.51 634.774 802.533 634.688 802.005 635.195 cv
801.004 636.155 799.503 635.632 798.417 636.73 cv
797.446 637.711 795.842 638.092 794.483 638.656 cv
793.661 638.998 792.645 638.995 791.942 639.477 cv
789.662 641.04 787.373 642.435 784.499 642.625 cv
783.761 642.673 782.712 643.063 782.407 643.623 cv
781.6 645.102 780.122 645.336 778.868 645.929 cv
770.469 649.896 761.982 653.685 753.667 657.819 cv
751.891 658.702 749.361 657.873 748.245 660.2 cv
748.197 660.299 747.613 660.237 747.337 660.116 cv
744.495 658.868 741.496 658.182 738.432 657.961 cv
736.576 657.827 735.03 656.829 734.263 655.623 cv
732.298 652.533 729.255 650.284 727.739 646.864 cv
727.337 645.958 726.435 645.192 725.596 644.596 cv
725.064 644.219 723.967 644.501 723.595 644.076 cv
723.194 643.619 723.537 642.578 723.217 641.969 cv
722.425 640.462 722.331 638.39 720.125 637.899 cv
719.818 637.832 719.626 637.232 719.389 636.874 cv
719.032 636.332 718.749 635.724 718.315 635.254 cv
717.232 634.077 716.038 633.047 715.315 631.521 cv
714.885 630.61 713.673 630.116 713.444 628.954 cv
712.069 629.218 712.49 626.424 710.723 627.355 cv
710.65 627.213 710.494 627.055 710.517 626.93 cv
710.777 625.52 710.144 624.7 708.942 624.008 cv
708.456 623.728 708.303 622.867 707.998 622.27 cv
707.637 622.84 707.323 623.45 706.889 623.958 cv
706.738 624.134 706.277 624.12 705.982 624.064 cv
705.844 624.038 705.635 623.668 705.679 623.52 cv
705.832 623.004 706.045 622.496 706.303 622.022 cv
706.826 621.059 706.767 620.346 705.951 620.021 cv
705.488 619.837 704.904 619.975 704.392 619.879 cv
704.26 619.854 704.189 619.498 704.09 619.294 cv
705.455 618.838 704.663 617.963 704.294 617.462 cv
702.978 615.673 701.542 613.972 700.136 612.25 cv
699.873 611.927 699.448 611.71 699.259 611.358 cv
698.588 610.104 698.314 608.549 696.477 608.303 cv
696.21 608.267 696.018 607.6 695.809 607.215 cv
695.438 606.531 695.177 605.763 694.699 605.167 cv
693.596 603.793 692.279 602.587 691.161 601.225 cv
691.054 619.272 li
692.581 620.94 694.177 622.542 695.024 624.711 cv
696.679 625.687 697.423 627.377 698.504 628.845 cv
699.553 630.271 700.699 631.715 701.92 632.996 cv
703.266 634.405 703.891 636.375 705.47 637.465 cv
706.377 638.091 706.757 638.893 707.249 639.733 cv
707.35 639.905 707.785 639.882 708.002 639.812 cv
708.016 639.522 708.093 639.371 708.171 639.22 cv
708.269 639.332 708.472 639.498 708.447 639.545 cv
708.366 639.699 708.207 639.812 708.076 639.939 cv
708.809 641.107 708.726 642.686 710.288 643.105 cv
711.178 645.233 712.956 646.71 714.352 648.447 cv
715.804 650.252 716.88 652.358 718.748 653.864 cv
719.714 654.643 720.625 655.693 721.117 656.815 cv
722.058 658.962 723.229 660.81 725.158 662.209 cv
725.902 662.749 726.296 663.75 726.999 664.375 cv
727.471 664.794 728.123 664.873 727.605 665.753 cv
726.586 667.488 727.569 669.787 726.07 671.446 cv
725.906 671.627 726.193 672.254 726.323 672.658 cv
727.008 674.795 728.106 676.698 729.467 678.386 cv
729.107 679.769 728.521 681.111 727.265 682.075 cv
727.146 684.098 725.725 685.384 724.595 686.842 cv
724.413 687.077 724.375 687.426 724.283 687.727 cv
723.439 690.489 721.947 692.95 720.545 695.434 cv
719.909 696.559 718.999 697.409 718.899 698.899 cv
718.82 700.087 717.514 701.259 717.593 702.377 cv
717.722 704.168 715.925 704.184 715.54 705.343 cv
715.408 705.74 715.295 706.145 715.147 706.535 cv
714.774 707.516 714.574 708.632 713.966 709.439 cv
712.653 711.187 712.319 713.424 711.103 715.116 cv
709.813 716.91 708.539 718.585 708.297 720.855 cv
708.267 721.138 707.925 721.409 707.687 721.645 cv
706.573 722.75 705.875 724.05 705.64 725.619 cv
705.564 726.125 705.329 726.632 705.064 727.079 cv
703.441 729.825 702.16 732.735 700.834 735.63 cv
699.773 737.946 698.783 740.358 697.313 742.405 cv
695.591 744.801 694.532 747.454 693.359 750.084 cv
692.641 751.695 692.163 753.538 691.177 754.87 cv
690.273 756.091 690.004 757.417 689.415 758.67 cv
688.713 760.16 687.033 761.015 686.811 762.794 cv
686.799 762.889 686.621 762.964 686.61 763.058 cv
686.301 765.844 684.556 767.954 683.151 770.195 cv
682.37 771.441 681.761 772.616 681.971 774.12 cv
682.009 774.391 681.805 774.695 681.713 774.984 cv
681.065 774.096 680.579 774.637 680.319 775.25 cv
680.079 775.816 680.189 776.528 679.962 777.104 cv
679.65 777.893 679.262 778.691 678.734 779.346 cv
677.56 780.806 677.168 782.525 677.893 784.583 cv
678.077 784.656 678.133 784.696 677.911 784.657 cv
678.77 785.262 678.684 785.478 678.538 785.533 cv
678.348 785.605 678.029 785.639 677.907 785.531 cv
677.634 785.287 677.4 784.998 677.159 784.718 cv
675.703 784.923 675.478 785.608 675.66 786.51 cv
676.126 786.895 676.612 787.29 677.354 787.815 cv
677.385 787.778 677.415 787.742 677.445 787.706 cv
677.564 787.827 677.684 787.948 677.473 787.901 cv
677.731 788.155 677.634 788.309 677.608 788.298 cv
677.454 788.232 677.315 788.128 677.172 788.036 cv
677.208 787.992 677.246 787.947 677.283 787.902 cv
676.032 787.982 675.565 787.578 675.66 786.51 cv
673.785 788.625 673.247 791.468 671.753 793.748 cv
670.869 795.097 671.005 795.975 672.127 797.168 cv
672.149 797.142 672.171 797.115 672.194 797.088 cv
672.313 797.209 672.433 797.331 672.222 797.284 cv
672.48 797.537 672.383 797.692 672.357 797.681 cv
672.202 797.615 672.064 797.51 671.92 797.419 cv
671.961 797.37 672.001 797.321 672.042 797.272 cv
670.589 797.067 669.673 797.52 669.134 798.584 cv
668.563 799.711 668.203 800.969 667.498 801.997 cv
666.55 803.38 666.44 804.556 667.637 805.794 cv
667.722 805.881 667.632 806.287 667.501 806.391 cv
667.375 806.492 667.047 806.467 666.883 806.37 cv
665.637 805.64 665.619 805.619 665.268 806.39 cv
663.512 810.246 661.699 814.071 659.584 817.75 cv
659.226 818.376 659.236 819.217 659.416 820.216 cv
659.572 820.431 659.705 820.626 659.466 820.515 cv
659.745 821.101 659.667 821.281 659.59 821.461 cv
659.445 821.183 659.293 820.907 659.171 820.62 cv
657.575 821.177 657.469 822.745 656.701 823.886 cv
656.156 824.694 654.905 825.397 655.096 826.24 cv
655.194 826.675 655.171 827.058 655.091 827.412 cv
654.91 827.399 654.735 827.406 654.571 827.441 cv
653.399 827.696 652.475 826.954 651.392 826.974 cv
650.215 826.997 648.998 827.582 647.858 826.651 cv
647.623 826.458 646.77 826.576 646.606 826.821 cv
646.055 827.647 645.245 827.625 644.506 827.57 cv
643.003 827.459 641.729 828.108 640.451 828.662 cv
639.121 829.237 637.851 829.886 636.65 830.615 cv
635.733 829.979 634.724 829.466 634.125 828.699 cv
632.389 826.471 630 824.947 628.304 822.665 cv
627 820.91 625.56 819.109 623.633 817.887 cv
623.1 817.549 622.392 817.422 621.962 816.997 cv
619.691 814.747 617.508 812.408 615.246 810.148 cv
613.447 808.352 611.353 806.802 609.803 804.82 cv
608.122 802.671 606.481 800.625 603.978 799.402 cv
603.624 799.229 603.316 798.775 603.177 798.383 cv
602.743 797.158 602.092 798.611 601.586 798.333 cv
601.498 799.028 600.041 800.387 599.454 800.436 cv
599.359 800.443 599.116 800.098 599.153 800.028 cv
599.552 799.276 600.147 798.583 599.664 797.637 cv
599.639 797.587 599.75 797.395 599.811 797.389 cv
599.961 797.375 600.152 797.381 600.268 797.463 cv
600.727 797.789 601.164 798.146 601.586 798.333 cv
601.859 797.552 601.845 796.945 601.313 796.397 cv
599.295 794.319 597.375 792.137 594.955 790.805 cv
594.682 791.347 594.485 791.513 594.288 791.678 cv
594.255 791.387 594.167 791.086 594.213 790.808 cv
594.238 790.66 594.494 790.55 594.646 790.423 cv
594.741 790.637 594.836 790.85 594.955 790.805 cv
594.06 789.07 592.514 788.276 591.524 786.951 cv
590.88 786.088 590.517 784.843 589.5 784.473 cv
587.085 783.594 585.886 781.516 584.363 779.741 cv
583.934 779.24 583.673 778.473 583.144 778.202 cv
582.732 777.992 582.363 777.735 582.007 777.465 cv
581.793 777.459 581.579 777.448 581.366 777.442 cv
565.101 777.207 li
565.338 777.417 565.575 777.626 565.812 777.838 cv
567.126 779.015 568.733 780.034 569.7 781.379 cv
570.587 782.614 571.767 783.276 572.779 784.22 cv
573.983 785.344 574.282 787.205 575.909 787.961 cv
575.995 788.001 576.012 788.194 576.098 788.232 cv
578.656 789.379 580.131 791.687 581.834 793.709 cv
582.782 794.834 583.714 795.773 585.211 796.034 cv
585.48 796.081 585.708 796.368 585.954 796.543 cv
584.91 796.888 585.277 797.518 585.781 797.952 cv
586.247 798.354 586.959 798.466 587.437 798.859 cv
588.093 799.397 588.734 800.011 589.197 800.714 cv
590.227 802.278 591.743 803.178 593.925 803.117 cv
594.051 802.965 594.106 802.923 594.001 803.123 cv
594.839 802.49 595.019 802.638 595.026 802.794 cv
595.037 802.997 594.972 803.311 594.831 803.394 cv
594.528 803.571 594.196 803.699 593.871 803.838 cv
593.638 805.254 594.17 805.73 595.076 805.833 cv
595.585 805.506 596.11 805.165 596.837 804.618 cv
596.811 804.579 596.786 804.539 596.76 804.499 cv
596.913 804.422 597.064 804.346 596.956 804.532 cv
597.275 804.363 597.393 804.503 597.375 804.525 cv
597.265 804.652 597.123 804.751 596.992 804.86 cv
596.96 804.811 596.929 804.762 596.898 804.713 cv
596.591 805.929 596.063 806.249 595.076 805.833 cv
596.516 808.265 599.058 809.646 600.771 811.766 cv
601.786 813.021 602.663 813.16 604.143 812.457 cv
604.124 812.427 604.105 812.398 604.086 812.369 cv
604.239 812.292 604.391 812.215 604.282 812.402 cv
604.602 812.233 604.719 812.373 604.701 812.395 cv
604.591 812.521 604.449 812.621 604.318 812.73 cv
604.284 812.677 604.25 812.623 604.215 812.57 cv
603.576 813.89 603.727 814.9 604.575 815.74 cv
605.474 816.627 606.561 817.355 607.323 818.341 cv
608.351 819.667 609.436 820.131 610.981 819.37 cv
611.09 819.316 611.449 819.526 611.508 819.683 cv
611.565 819.833 611.441 820.137 611.299 820.265 cv
610.222 821.227 610.197 821.238 610.824 821.808 cv
613.958 824.66 617.044 827.555 619.901 830.694 cv
620.389 831.23 621.216 831.465 622.228 831.599 cv
622.466 831.522 622.668 831.468 622.497 831.653 cv
623.139 831.566 623.287 831.695 623.435 831.824 cv
623.125 831.877 622.817 831.938 622.506 831.965 cv
622.548 833.656 624.008 834.237 624.86 835.317 cv
625.463 836.083 625.75 837.489 626.61 837.565 cv
627.846 837.674 628.477 838.484 629.03 839.236 cv
628.619 840.013 628.213 840.793 627.796 841.566 cv
627.596 841.935 627.374 842.266 627.131 842.565 cv
627.149 843.382 627.213 844.192 627.17 845.016 cv
627.132 848.411 626.795 851.901 626.214 855.188 cv
626.271 855.378 626.321 855.593 626.38 855.829 cv
626.917 857.972 627.419 860.334 629 861.847 cv
630.5 863.282 631.208 865.458 633.257 866.333 cv
635.275 869.797 638.651 871.214 642.293 871.935 cv
644.253 872.322 646.129 873.241 648.217 873.02 cv
650.808 872.745 653.407 872.556 656 872.311 cv
656.544 872.259 657.285 872.312 657.583 871.991 cv
658.647 870.842 659.743 869.858 661.396 869.76 cv
661.87 868.24 663.606 868.522 664.505 867.565 cv
668.283 863.545 670.909 858.895 672.457 853.601 cv
672.642 852.968 671.784 851.952 673.072 851.684 cv
673.032 851.232 672.992 850.781 672.952 850.329 cv
672.701 850.068 672.451 849.808 672.2 849.547 cv
672.411 849.356 672.621 849.165 672.832 848.975 cv
672.792 848.523 672.751 848.071 672.711 847.62 cv
671.565 847.599 671.945 846.659 671.923 846.125 cv
671.779 842.659 670.368 839.728 668.38 836.971 cv
667.776 836.133 666.867 835.627 666.596 834.317 cv
666.451 833.619 665.853 832.94 665.158 832.354 cv
665.327 831.74 665.515 831.154 665.836 830.683 cv
667.426 828.348 668.146 825.607 669.8 823.294 cv
671.071 821.516 672.346 819.594 672.92 817.386 cv
673.079 816.775 672.982 816.061 673.256 815.523 cv
674.704 812.672 676.263 809.878 677.722 807.033 cv
678.881 804.771 679.716 802.303 681.129 800.221 cv
682.661 797.964 684.107 795.775 684.505 793.018 cv
684.562 792.628 684.9 792.196 685.23 791.944 cv
686.265 791.156 684.682 790.98 684.792 790.414 cv
684.103 790.542 682.363 789.571 682.138 789.027 cv
682.102 788.939 682.356 788.602 682.434 788.616 cv
683.271 788.766 684.114 789.12 684.866 788.371 cv
684.906 788.332 685.124 788.379 685.147 788.434 cv
685.207 788.573 685.259 788.757 685.216 788.892 cv
685.047 789.429 684.84 789.954 684.792 790.414 cv
685.618 790.435 686.192 790.235 686.551 789.562 cv
687.912 787.004 689.402 784.509 689.93 781.797 cv
689.331 781.704 689.112 781.566 688.895 781.429 cv
689.162 781.309 689.421 781.134 689.701 781.092 cv
689.849 781.07 690.032 781.281 690.199 781.387 cv
690.024 781.542 689.85 781.698 689.93 781.797 cv
691.308 780.414 691.591 778.7 692.55 777.352 cv
693.174 776.475 694.248 775.748 694.29 774.667 cv
694.388 772.099 696 770.321 697.224 768.329 cv
697.568 767.767 698.22 767.284 698.315 766.697 cv
698.649 764.646 699.886 763.011 700.619 761.154 cv
701.314 759.392 702.603 757.876 702.792 755.909 cv
702.596 755.927 702.381 755.984 702.075 756.218 cv
702.144 756.275 li
702.022 756.394 701.901 756.514 701.948 756.303 cv
701.695 756.562 701.54 756.464 701.551 756.438 cv
701.617 756.284 701.722 756.146 701.813 756.002 cv
701.883 756.06 701.953 756.117 702.022 756.175 cv
702.26 755.761 702.396 755.548 702.515 755.369 cv
702.607 755.548 702.7 755.729 702.792 755.909 cv
703.565 755.587 703.75 754.956 704.061 754.2 cv
704.79 752.431 705.869 750.804 706.832 749.134 cv
707.425 748.106 708.666 747.032 708.555 746.105 cv
708.349 744.382 709.768 743.613 710.101 742.252 cv
710.445 740.847 711.353 739.57 712.065 738.265 cv
713.348 735.917 714.736 733.625 715.95 731.244 cv
716.857 729.466 717.489 727.549 718.369 725.756 cv
719.867 722.704 721.446 719.69 723.025 716.678 cv
724.612 713.65 725.514 710.251 727.926 707.66 cv
728.162 707.406 728.014 706.828 728.129 706.424 cv
728.33 705.721 728.476 704.959 728.858 704.357 cv
730.004 702.55 730.923 700.661 731.716 698.665 cv
732.535 696.603 734.085 694.938 734.816 692.721 cv
735.606 690.326 737.324 688.25 738.31 685.899 cv
738.547 685.334 739.991 684.229 738.416 683.371 cv
738.727 683.004 739.003 682.595 739.369 682.294 cv
739.493 682.191 739.84 682.361 740.086 682.406 cv
740.105 682.297 740.137 682.201 740.159 682.095 cv
740.563 682.037 740.882 681.992 741.033 681.977 cv
741.904 681.89 742.78 681.799 743.655 681.709 cv
743.819 681.983 743.987 682.252 744.214 682.458 cv
745.479 683.608 746.526 684.875 747.205 686.469 cv
747.355 686.821 747.863 687.564 748.472 686.734 cv
748.594 686.838 748.716 686.942 748.838 687.046 cv
748.235 687.519 748.624 687.832 749.006 688.163 cv
749.431 688.53 750.115 688.863 750.2 689.305 cv
750.428 690.48 751.75 690.771 752.026 691.644 cv
752.406 692.85 753.432 693.291 754.123 694.105 cv
754.518 694.571 754.946 694.912 755.135 695.611 cv
755.333 696.342 755.952 697.254 756.604 697.492 cv
757.366 697.771 757.743 697.94 757.972 698.78 cv
758.155 699.45 759.158 699.768 759.168 700.664 cv
761.097 701.955 762.044 704.182 763.929 705.504 cv
764.121 705.434 764.241 705.443 764.361 705.452 cv
764.315 705.547 764.262 705.725 764.224 705.721 cv
764.121 705.712 764.022 705.655 763.922 705.608 cv
763.896 705.908 763.869 706.203 764.003 706.338 cv
764.674 707.018 765.683 707.513 766.047 708.313 cv
766.707 709.763 767.812 710.574 769.085 711.307 cv
769.225 711.387 769.408 711.557 769.409 711.686 cv
769.42 713.036 770.472 713.833 771.157 714.764 cv
771.991 715.897 773.366 716.583 774.07 717.881 cv
774.857 717.743 774.296 718.608 774.756 718.795 cv
775.103 718.936 775.396 719.274 775.639 719.583 cv
775.911 719.929 776.022 720.425 776.337 720.705 cv
777.007 721.301 777.328 722.439 778.461 722.037 cv
778.47 721.967 778.486 721.922 778.54 722.016 cv
778.549 721.76 778.676 721.737 778.683 721.756 cv
778.722 721.869 778.733 721.991 778.753 722.109 cv
778.706 722.112 778.657 722.114 778.609 722.116 cv
779.467 723.218 779.18 724.77 780.512 725.302 cv
781.543 727.428 783.12 729.101 784.9 730.609 cv
785.193 730.857 785.506 731.138 785.67 731.472 cv
786.426 733.01 787.424 734.34 788.76 735.424 cv
789.319 735.878 790.188 736.327 790.288 736.89 cv
790.475 737.937 791.342 738.221 791.848 738.881 cv
792.354 739.541 792.795 740.255 793.348 740.87 cv
793.881 741.464 794.576 741.914 795.098 742.515 cv
795.587 743.079 795.66 743.959 796.421 744.342 cv
796.26 745.512 797.762 745.191 797.838 745.703 cv
798.056 747.172 799.601 747.528 800.088 748.852 cv
800.501 749.975 801.906 750.614 802.612 751.82 cv
803.286 752.973 804.508 753.784 805.321 754.963 cv
806.368 756.483 807.8 757.737 809.063 759.109 cv
809.218 759.277 809.392 759.445 809.487 759.646 cv
810.221 761.194 811.295 762.451 812.547 763.622 cv
813.787 764.781 815.184 765.96 815.919 767.428 cv
817.381 770.341 820.141 772.066 821.928 774.66 cv
822.975 776.18 824.42 777.426 825.686 778.795 cv
825.386 779.556 826.329 779.423 826.524 779.965 cv
826.903 781.021 828.335 781.417 828.539 782.694 cv
830.047 782.983 830.163 784.802 831.445 785.34 cv
831.814 787.741 833.993 788.891 835.276 790.638 cv
837.023 793.018 839.38 794.952 841.477 797.075 cv
841.589 797.189 841.701 797.311 841.834 797.397 cv
842.52 797.841 842.198 798.175 841.847 798.71 cv
840.987 800.017 839.997 801.41 839.967 802.958 cv
839.938 804.428 839.143 805.839 839.67 807.325 cv
838.832 810.037 839.711 812.475 841.081 814.717 cv
841.818 815.924 842.238 817.342 843.354 818.323 cv
844.739 819.541 846.083 820.805 847.453 822.038 cv
847.741 822.297 848.068 822.708 848.377 822.709 cv
849.486 822.713 850.524 822.813 851.367 823.627 cv
852.386 823.146 853.07 824.186 854 824.195 cv
857.905 824.237 861.585 823.376 865.085 821.646 cv
865.503 821.44 865.622 820.506 866.378 821.049 cv
866.595 820.812 866.811 820.574 867.026 820.337 cv
867.042 820.081 867.058 819.826 867.074 819.57 cv
867.274 819.588 867.475 819.607 867.675 819.625 cv
867.891 819.388 868.107 819.15 868.323 818.913 cv
867.785 818.306 868.456 818.054 868.724 817.786 cv
870.461 816.051 871.312 813.911 871.795 811.555 cv
871.942 810.838 871.771 810.123 872.322 809.354 cv
872.8 808.688 872.714 807.427 872.516 806.506 cv
cp
f
222.813 637.646 mo
222.84 637.683 222.863 637.701 222.886 637.715 cv
222.932 637.671 222.978 637.615 223.024 637.564 cv
222.959 637.588 222.889 637.616 222.813 637.646 cv
cp
f
952.646 316.123 mo
952.66 316.096 952.672 316.083 952.686 316.054 cv
952.602 316.023 952.518 315.993 952.434 315.962 cv
952.459 316.031 952.484 316.073 952.51 316.146 cv
952.553 316.123 952.601 316.138 952.646 316.123 cv
cp
f
880.43 361.454 mo
880.414 361.446 880.406 361.438 880.389 361.43 cv
880.361 361.506 880.333 361.582 880.306 361.658 cv
880.37 361.646 880.416 361.616 880.48 361.605 cv
880.455 361.559 880.447 361.505 880.43 361.454 cv
cp
f
870.987 368.341 mo
870.823 368.327 870.656 368.317 870.499 368.292 cv
870.583 368.473 870.646 368.679 870.719 368.875 cv
871.067 368.893 871.433 368.919 871.889 368.989 cv
871.474 368.723 871.201 368.517 870.987 368.341 cv
cp
f
885.4 358.594 mo
885.373 358.584 885.346 358.574 885.319 358.564 cv
885.32 358.624 885.327 358.648 885.327 358.722 cv
885.349 358.676 885.377 358.639 885.4 358.594 cv
cp
f
622.228 831.599 mo
622.2 831.608 622.174 831.616 622.146 831.625 cv
622.226 831.751 622.312 831.987 622.386 831.983 cv
622.426 831.981 622.466 831.969 622.506 831.965 cv
622.504 831.861 622.488 831.767 622.497 831.653 cv
622.396 831.642 622.325 831.612 622.228 831.599 cv
cp
f
429.719 315.504 mo
429.775 315.377 429.815 315.239 429.892 315.126 cv
429.947 315.045 430.271 315.147 431.21 315.231 cv
430.68 315.708 430.401 316.024 430.059 316.236 cv
429.985 316.282 429.858 316.244 429.725 316.192 cv
429.742 318.39 429.759 320.591 429.775 322.797 cv
430.84 322.645 431.909 322.51 432.977 322.371 cv
435.962 321.258 439.1 320.732 442.214 320.996 cv
442.593 320.952 442.966 320.877 443.347 320.844 cv
444.45 320.749 445.539 320.271 446.588 319.852 cv
447.371 319.539 448.504 320.399 448.979 319.129 cv
450.098 319.702 451.105 318.957 452.161 318.893 cv
453.983 318.782 461.572 317.011 464.274 316.674 cv
466.47 318.879 468.96 320.584 472.211 320.93 cv
472.929 321.006 473.642 321.122 474.356 321.231 cv
476.642 321.203 478.692 321.146 481.203 320.688 cv
481.392 320.588 481.563 320.493 481.785 320.383 cv
482.491 320.035 483.216 319.728 483.938 319.416 cv
484.041 319.232 484.274 319.092 484.545 318.909 cv
485.8 318.063 487.204 317.189 487.81 315.817 cv
488.384 314.516 489.62 313.553 489.705 312.029 cv
491.157 310.291 491.47 308.28 491.328 306.221 cv
491.413 306.211 491.497 306.182 491.581 306.175 cv
496.17 305.805 499.893 303.104 504.236 302.139 cv
506.782 301.573 509.179 300.342 511.644 299.41 cv
512.481 300.205 512.807 298.9 513.62 298.932 cv
515.205 298.995 516.481 297.329 518.262 297.74 cv
519.44 295.917 521.884 296.729 523.268 295.335 cv
526.608 296.125 529.268 293.88 532.236 293.126 cv
536.28 292.099 540.061 290.037 543.954 288.417 cv
544.162 288.33 544.38 288.248 544.564 288.119 cv
545.51 287.456 545.776 288.056 546.291 288.799 cv
547.546 290.617 548.846 292.652 550.858 293.513 cv
552.767 294.329 554.194 296.118 556.419 296.216 cv
559.286 298.554 562.622 298.845 565.997 298.402 cv
567.288 299.062 568.481 299.064 569.582 298.411 cv
569.866 298.242 570.15 298.067 570.432 297.886 cv
571.231 297.769 572.021 297.597 572.775 297.219 cv
572.785 297.214 572.795 297.21 572.805 297.205 cv
573.375 298.233 574.053 299.07 573.971 300.222 cv
576.416 302.146 577.157 305.264 579.074 307.525 cv
580.354 309.035 581.293 310.613 581.839 312.487 cv
581.951 312.871 582.284 313.244 582.61 313.502 cv
584.007 314.607 584.688 316.215 585.69 317.602 cv
587.679 320.356 588.917 323.547 591.104 326.192 cv
592.535 327.922 593.764 329.85 594.843 331.833 cv
594.861 326.9 594.877 321.92 594.889 316.931 cv
594.567 316.595 594.258 316.354 594.225 316.099 cv
594.142 315.463 594.506 315.362 594.893 315.372 cv
594.894 314.8 594.895 314.231 594.896 313.659 cv
594.848 313.576 594.804 313.491 594.788 313.402 cv
594.708 312.97 594.728 312.564 594.898 312.209 cv
594.899 311.839 594.9 311.47 594.9 311.1 cv
594.176 310.08 594.032 308.618 592.388 308.402 cv
592.231 308.495 592.11 308.548 592.208 308.366 cv
591.607 308.61 591.432 308.522 591.257 308.434 cv
591.581 308.289 591.897 308.123 592.233 308.019 cv
592.242 308.016 592.257 308.038 592.268 308.041 cv
592.396 307.472 592.392 307.063 592.25 306.744 cv
590.855 303.612 588.411 301.167 586.668 298.258 cv
585.53 296.358 584.115 294.589 583.249 292.579 cv
582.971 291.933 582.638 291.421 582.237 290.951 cv
582.669 290.363 583.215 289.871 583.968 289.537 cv
583.878 287.947 585.603 287.601 586.108 286.389 cv
588.232 281.297 589.056 276.021 588.645 270.52 cv
588.596 269.864 587.436 269.213 588.547 268.51 cv
588.351 268.101 588.155 267.692 587.958 267.284 cv
587.632 267.128 587.306 266.972 586.979 266.815 cv
587.11 266.563 587.24 266.311 587.37 266.058 cv
587.174 265.649 586.978 265.241 586.781 264.832 cv
585.701 265.215 585.727 264.202 585.518 263.708 cv
584.166 260.515 581.813 258.267 578.984 256.385 cv
578.746 256.226 578.494 256.098 578.239 255.974 cv
578.234 255.754 578.252 255.535 578.233 255.314 cv
578.178 254.686 577.849 254.045 577.927 253.447 cv
578.338 250.276 578.873 247.121 579.296 243.952 cv
579.633 241.433 579.595 238.828 580.23 236.393 cv
580.918 233.753 581.55 231.207 581.003 228.475 cv
580.926 228.089 581.101 227.569 581.328 227.221 cv
582.039 226.132 580.488 226.497 580.402 225.925 cv
579.796 226.277 577.832 225.943 577.437 225.506 cv
577.374 225.436 577.501 225.033 577.579 225.02 cv
578.418 224.88 579.331 224.933 579.79 223.976 cv
579.813 223.925 580.035 223.897 580.075 223.941 cv
580.178 224.052 580.289 224.208 580.293 224.35 cv
580.313 224.912 580.294 225.476 580.402 225.925 cv
581.188 225.668 581.663 225.289 581.775 224.534 cv
582.203 221.669 582.773 218.819 582.364 216.087 cv
581.767 216.199 581.516 216.143 581.265 216.086 cv
581.477 215.883 581.662 215.631 581.912 215.499 cv
582.044 215.429 582.287 215.566 582.479 215.61 cv
582.367 215.815 582.255 216.02 582.364 216.087 cv
583.2 214.322 582.893 212.612 583.346 211.021 cv
583.641 209.986 584.41 208.942 584.088 207.91 cv
583.322 205.456 584.246 203.242 584.733 200.955 cv
584.767 200.797 584.82 200.638 584.878 200.479 cv
584.709 200.027 584.557 199.567 584.382 199.118 cv
581.904 192.738 578.821 186.816 575.281 181.48 cv
575.167 182.668 575.085 183.858 574.991 185.053 cv
574.853 186.811 575.018 188.708 574.535 190.292 cv
574.091 191.746 574.281 193.086 574.145 194.463 cv
573.981 196.102 572.684 197.469 573.07 199.22 cv
573.09 199.314 572.947 199.444 572.969 199.536 cv
573.609 202.265 572.669 204.837 572.095 207.419 cv
571.775 208.854 571.594 210.166 572.295 211.513 cv
572.422 211.755 572.332 212.11 572.341 212.413 cv
571.434 211.792 571.156 212.465 571.116 213.129 cv
571.08 213.744 571.422 214.378 571.4 214.997 cv
571.37 215.844 571.271 216.726 570.993 217.52 cv
570.374 219.289 570.58 221.04 571.951 222.737 cv
572.148 222.745 572.215 222.764 571.993 222.801 cv
573.004 223.084 572.996 223.316 572.876 223.417 cv
572.721 223.548 572.432 223.687 572.281 223.625 cv
571.942 223.487 571.625 223.293 571.304 223.11 cv
570.001 223.79 570.018 224.511 570.491 225.3 cv
571.059 225.507 571.649 225.717 572.524 225.963 cv
572.541 225.918 572.557 225.874 572.573 225.83 cv
572.726 225.904 572.879 225.979 572.665 226.005 cv
572.993 226.157 572.954 226.335 572.925 226.333 cv
572.757 226.323 572.592 226.271 572.426 226.233 cv
572.446 226.178 572.466 226.124 572.485 226.069 cv
571.334 226.563 570.759 226.337 570.491 225.3 cv
569.431 227.92 569.875 230.779 569.229 233.427 cv
568.848 234.995 569.269 235.776 570.726 236.526 cv
570.737 236.494 570.75 236.461 570.761 236.428 cv
570.915 236.503 571.067 236.577 570.853 236.604 cv
571.182 236.756 571.142 236.934 571.113 236.932 cv
570.945 236.922 570.78 236.869 570.615 236.831 cv
570.636 236.772 570.658 236.712 570.68 236.653 cv
569.242 236.945 568.53 237.678 568.378 238.862 cv
568.217 240.114 568.298 241.42 567.978 242.624 cv
567.546 244.246 567.836 245.39 569.378 246.156 cv
569.488 246.211 569.538 246.623 569.45 246.765 cv
569.365 246.902 569.048 246.988 568.86 246.952 cv
567.442 246.68 567.417 246.666 567.345 247.511 cv
567.21 249.057 567.047 250.599 566.883 252.141 cv
566.208 252.095 565.534 252.043 564.86 251.996 cv
564.142 251.945 563.265 251.955 562.707 252.315 cv
561.699 252.966 560.573 252.595 559.566 252.995 cv
558.472 253.43 557.539 254.406 556.144 253.934 cv
555.856 253.837 555.099 254.247 555.032 254.534 cv
554.807 255.501 554.04 255.765 553.329 255.973 cv
551.883 256.397 550.918 257.453 549.916 258.42 cv
546.373 261.84 543.618 265.716 543.134 270.829 cv
543.003 272.207 542.791 273.577 542.603 274.948 cv
542.395 276.464 541.86 277.717 540.19 278.173 cv
539.466 278.37 538.906 278.83 537.986 278.617 cv
537.25 278.447 536.306 278.878 535.538 279.226 cv
534.835 279.544 534.253 280.478 533.603 280.493 cv
531.853 280.535 530.492 281.47 528.958 282.009 cv
527.225 282.617 525.433 283.311 523.693 283.605 cv
519.706 284.278 516.061 285.892 512.266 287.077 cv
509.647 287.894 507.187 289.337 504.529 289.865 cv
502.971 290.174 501.539 290.595 500.248 291.356 cv
498.866 292.17 497.221 291.988 495.92 292.693 cv
494.14 293.659 492.209 293.988 490.329 294.534 cv
489.48 294.78 488.361 294.399 487.775 295.161 cv
487.738 295.127 487.716 295.059 487.673 295.042 cv
486.684 294.624 485.795 294.148 485.346 293.106 cv
484.257 293.155 484.034 291.972 483.208 291.615 cv
481.585 290.917 479.931 290.431 478.246 290.116 cv
478.117 289.728 477.986 289.34 477.88 288.945 cv
477.574 287.803 476.745 288.771 476.246 288.473 cv
476.679 288.094 477.135 287.738 477.529 287.323 cv
477.638 287.208 477.635 286.886 477.56 286.712 cv
477.154 285.777 476.625 284.887 476.304 283.926 cv
476.003 283.029 476.08 281.983 475.688 281.145 cv
474.665 278.955 473.991 276.734 473.975 274.287 cv
473.971 273.746 473.714 272.501 472.468 273.251 cv
472.366 273.049 472.263 272.846 472.161 272.644 cv
473.205 272.357 472.868 271.738 472.55 271.097 cv
472.197 270.387 471.486 269.58 471.616 268.958 cv
471.96 267.301 470.394 266.202 470.511 264.914 cv
470.673 263.134 469.576 262.001 469.119 260.563 cv
468.858 259.74 468.485 259.063 468.62 258.048 cv
468.761 256.987 468.451 255.461 467.73 254.795 cv
466.89 254.018 466.491 253.59 466.649 252.371 cv
466.776 251.398 465.642 250.437 466.118 249.264 cv
464.306 246.53 464.286 243.111 462.549 240.36 cv
462.26 240.347 462.109 240.27 461.957 240.192 cv
462.069 240.094 462.236 239.891 462.283 239.916 cv
462.412 239.984 462.51 240.113 462.614 240.229 cv
462.813 239.852 463.008 239.482 462.907 239.232 cv
462.402 237.981 461.357 236.786 461.319 235.545 cv
461.249 233.295 460.251 231.636 458.99 229.986 cv
458.853 229.806 458.706 229.484 458.775 229.315 cv
459.496 227.55 458.559 225.937 458.174 224.352 cv
457.704 222.419 456.287 220.775 456.076 218.7 cv
454.975 218.452 456.178 217.629 455.68 217.135 cv
455.305 216.763 455.106 216.161 454.958 215.626 cv
454.792 215.028 454.918 214.32 454.66 213.783 cv
454.111 212.642 454.313 210.984 452.617 210.891 cv
452.567 210.977 452.522 211.027 452.503 210.875 cv
452.352 211.204 452.173 211.164 452.175 211.135 cv
452.186 210.967 452.238 210.803 452.276 210.637 cv
452.339 210.66 452.403 210.683 452.467 210.706 cv
451.949 208.803 453.17 206.937 451.724 205.516 cv
451.538 202.183 450.394 199.144 448.896 196.208 cv
448.649 195.725 448.394 195.188 448.362 194.664 cv
448.215 192.247 447.639 189.968 446.489 187.828 cv
446.251 187.385 445.915 186.903 445.656 186.433 cv
443.82 189.593 442.223 192.757 440.833 195.824 cv
441.058 196.061 441.296 196.285 441.513 196.529 cv
441.53 196.549 441.506 196.621 441.495 196.674 cv
441.139 196.559 440.864 196.427 440.619 196.288 cv
439.988 197.696 439.395 199.078 438.852 200.422 cv
438.851 200.456 438.865 200.495 438.855 200.525 cv
438.471 201.76 439.245 202.635 439.582 203.659 cv
439.947 204.771 439.95 206.048 440.488 207.051 cv
441.759 209.416 441.626 212.249 443.133 214.517 cv
443.332 214.817 443.074 215.399 443.243 215.745 cv
443.801 216.882 442.695 218.646 444.611 219.305 cv
444.872 219.395 445.164 220.195 445.033 220.479 cv
444.552 221.525 445.322 222.192 445.628 222.985 cv
445.954 223.829 446.692 224.631 446.698 225.456 cv
446.711 227.095 446.809 228.504 448.516 229.302 cv
448.649 229.364 448.633 230.276 448.46 230.369 cv
447.729 230.76 447.942 231.185 448.183 231.738 cv
449.44 234.628 450.084 237.703 450.952 240.716 cv
451.787 243.616 452.813 246.458 453.477 249.418 cv
453.718 250.498 454.338 251.513 454.894 252.497 cv
455.309 253.231 454.607 254.468 455.93 254.77 cv
455.512 255.955 456.385 256.854 456.59 257.892 cv
456.976 259.847 458.017 261.637 458.32 263.488 cv
458.563 264.965 459.209 266.161 459.609 267.501 cv
460.007 268.841 460.189 270.277 460.784 271.519 cv
461.887 273.818 461.835 276.505 463.306 278.657 cv
462.776 279.649 463.934 280.256 463.868 281.265 cv
463.801 282.271 464.459 283.328 464.814 284.357 cv
465.172 285.393 465.411 286.501 465.952 287.433 cv
466.542 288.448 466.146 289.638 466.649 290.549 cv
466.913 291.028 467.112 291.529 467.291 292.037 cv
465.299 292.962 463.83 294.454 462.599 296.259 cv
462.2 296.844 462.086 297.547 461.306 298.028 cv
460.631 298.444 460.236 299.602 460.07 300.498 cv
459.74 302.274 459.63 304.094 459.481 305.9 cv
459.472 306.02 459.481 306.151 459.479 306.279 cv
457.11 306.713 454.477 307.142 453.927 306.992 cv
452.894 306.71 451.34 306.813 450.584 307.438 cv
449.701 308.167 449.224 308.505 448.036 308.185 cv
447.09 307.93 445.985 308.925 444.887 308.296 cv
441.935 309.726 438.544 309.288 435.585 310.641 cv
435.533 310.925 435.436 311.065 435.339 311.205 cv
435.257 311.081 435.079 310.889 435.109 310.845 cv
435.194 310.726 435.334 310.646 435.463 310.559 cv
435.116 310.312 434.776 310.069 434.515 310.135 cv
433.208 310.468 431.884 311.343 430.649 311.216 cv
430.312 311.181 430.002 311.209 429.684 311.217 cv
429.693 312.319 429.702 313.424 429.711 314.522 cv
429.714 314.848 429.716 315.178 429.719 315.504 cv
cp
f
604.143 812.457 mo
604.167 812.494 604.191 812.532 604.215 812.57 cv
604.244 812.512 604.25 812.461 604.282 812.402 cv
604.23 812.428 604.192 812.433 604.143 812.457 cv
cp
f
778.461 722.037 mo
778.458 722.065 778.452 722.088 778.45 722.124 cv
778.503 722.121 778.556 722.119 778.609 722.116 cv
778.584 722.083 778.567 722.047 778.54 722.016 cv
778.511 722.027 778.489 722.027 778.461 722.037 cv
cp
f
666.67 873.115 mo
666.691 873.276 666.713 873.444 666.735 873.611 cv
666.833 873.568 667.006 873.538 667.015 873.481 cv
667.04 873.319 666.999 873.146 666.984 872.979 cv
666.886 873.021 666.788 873.064 666.67 873.115 cv
cp
f
763.857 705.583 mo
763.878 705.592 763.901 705.598 763.922 705.608 cv
763.926 705.572 763.926 705.54 763.929 705.504 cv
763.953 705.478 763.905 705.53 763.857 705.583 cv
cp
f
596.956 804.532 mo
596.91 804.567 596.881 804.585 596.837 804.618 cv
596.857 804.65 596.877 804.682 596.898 804.713 cv
596.915 804.646 596.94 804.606 596.956 804.532 cv
cp
f
673.866 844.279 mo
673.917 844.396 673.96 844.495 674.002 844.592 cv
674.128 844.479 674.276 844.381 674.368 844.246 cv
674.4 844.198 674.294 844.058 674.252 843.959 cv
674.122 844.067 673.992 844.175 673.866 844.279 cv
cp
f
593.925 803.117 mo
593.808 803.259 593.629 803.497 593.452 803.742 cv
593.391 803.825 593.398 803.958 593.374 804.067 cv
593.541 803.993 593.702 803.909 593.871 803.838 cv
593.909 803.606 593.917 803.411 594.001 803.123 cv
593.974 803.124 593.952 803.116 593.925 803.117 cv
cp
f
376.132 62.7183 mo
376.555 63.8174 377.52 64.7617 377.032 66.1514 cv
376.932 66.4385 377.333 67.1997 377.619 67.27 cv
378.584 67.5068 378.838 68.2764 379.039 68.9897 cv
379.446 70.4399 380.491 71.4175 381.446 72.4302 cv
384.826 76.0127 388.67 78.8125 393.776 79.355 cv
395.153 79.501 396.521 79.729 397.89 79.9326 cv
399.402 80.1582 400.649 80.707 401.086 82.3828 cv
401.275 83.1084 401.728 83.6743 401.505 84.5908 cv
401.327 85.3262 401.747 86.2744 402.086 87.0469 cv
402.396 87.7529 403.322 88.3452 403.331 88.9961 cv
403.353 90.7461 404.271 92.1177 404.793 93.6587 cv
405.381 95.3975 406.055 97.1973 406.329 98.9404 cv
406.956 102.936 408.528 106.599 409.669 110.407 cv
410.456 113.035 411.871 115.512 412.368 118.175 cv
412.659 119.737 413.064 121.173 413.811 122.474 cv
414.608 123.864 414.407 125.507 415.097 126.816 cv
415.656 127.875 415.987 128.986 416.276 130.105 cv
419.255 127.108 422.364 124.33 425.568 121.728 cv
425.194 120.71 424.863 119.678 424.638 118.609 cv
424.101 116.057 422.897 113.646 421.994 111.171 cv
422.798 110.342 421.498 110.001 421.539 109.189 cv
421.62 107.605 419.969 106.31 420.4 104.534 cv
418.591 103.334 419.431 100.9 418.053 99.5005 cv
418.881 96.1699 416.667 93.4844 415.947 90.5083 cv
414.967 86.4526 412.948 82.6484 411.373 78.7368 cv
411.288 78.5273 411.208 78.3081 411.083 78.1235 cv
410.43 77.1699 411.032 76.9101 411.782 76.4048 cv
413.614 75.1694 415.664 73.8935 416.547 71.8911 cv
417.386 69.9917 419.191 68.5854 419.314 66.3613 cv
421.884 63.2837 422.067 59.6265 421.503 55.957 cv
421.2 53.9829 421.425 51.9053 420.505 50.0181 cv
419.365 47.6763 418.302 45.2964 417.187 42.9419 cv
416.954 42.4477 416.751 41.7334 416.348 41.563 cv
414.905 40.9541 413.606 40.2588 412.952 38.7378 cv
411.361 38.8096 411.035 37.0815 409.829 36.562 cv
404.762 34.3799 399.496 33.4956 393.991 33.8428 cv
393.333 33.8843 392.67 35.0371 391.979 33.9175 cv
391.568 34.1089 391.157 34.3003 390.746 34.4922 cv
390.586 34.8164 390.427 35.1411 390.267 35.4658 cv
390.016 35.3325 389.765 35.1997 389.514 35.0669 cv
389.103 35.2583 388.692 35.4497 388.281 35.6416 cv
388.652 36.7261 387.639 36.6885 387.144 36.8916 cv
383.934 38.207 381.659 40.5332 379.745 43.3408 cv
379.163 44.1948 378.996 45.2207 377.858 45.9228 cv
376.872 46.5303 376.296 48.2207 376.054 49.5278 cv
375.572 52.1211 375.411 54.7773 375.194 57.4136 cv
375.135 58.1309 375.135 59.0078 375.489 59.5708 cv
376.128 60.5854 375.744 61.707 376.132 62.7183 cv
cp
f
584.861 292.575 mo
584.957 292.443 585.057 292.307 585.156 292.17 cv
585.056 292.134 584.909 292.037 584.863 292.072 cv
584.733 292.172 584.645 292.325 584.54 292.458 cv
584.64 292.494 584.74 292.531 584.861 292.575 cv
cp
f
443.163 834.465 mo
443.156 834.481 443.152 834.497 443.145 834.513 cv
443.171 834.516 443.195 834.516 443.222 834.518 cv
443.241 834.536 443.202 834.5 443.163 834.465 cv
cp
f
201.39 255.004 mo
201.343 254.97 201.291 254.934 201.237 254.897 cv
201.187 255.037 201.051 255.249 201.099 255.306 cv
201.114 255.324 201.135 255.337 201.15 255.355 cv
201.25 255.305 201.326 255.241 201.428 255.192 cv
201.403 255.123 201.409 255.07 201.39 255.004 cv
cp
f
217.005 249.452 mo
217.024 249.418 217.042 249.395 217.062 249.354 cv
216.927 249.306 216.793 249.257 216.658 249.208 cv
216.654 249.227 216.651 249.245 216.647 249.264 cv
216.727 249.327 216.807 249.396 216.886 249.446 cv
216.926 249.446 216.965 249.453 217.005 249.452 cv
cp
f
598.217 85.5732 mo
598.171 85.5952 598.263 85.5522 598.354 85.5093 cv
598.34 85.4956 598.326 85.4844 598.312 85.4697 cv
598.275 85.5039 598.258 85.5391 598.217 85.5732 cv
cp
f
584.348 110.787 mo
587.945 112.99 591.44 115.401 594.821 118.021 cv
594.843 117.724 594.886 117.433 594.88 117.128 cv
594.823 114.607 595.748 112.077 595.891 109.531 cv
595.925 108.919 596.917 107.396 595.146 107.113 cv
595.316 106.664 595.44 106.186 595.683 105.78 cv
595.766 105.642 596.15 105.685 596.397 105.645 cv
596.224 104.637 596.146 103.725 596.732 102.713 cv
597.23 101.852 597.363 100.714 597.438 99.6826 cv
597.786 94.9614 598.056 90.2344 598.217 85.5737 cv
597.928 85.5601 597.776 85.4829 597.625 85.4053 cv
597.736 85.3066 597.903 85.1045 597.95 85.1294 cv
598.091 85.2036 598.197 85.3457 598.312 85.4697 cv
598.951 84.875 598.962 84.2588 598.972 83.4692 cv
598.998 81.3623 599.076 79.1694 599.683 77.1787 cv
600.361 74.9585 600.628 72.7988 600.514 70.5176 cv
600.472 69.6826 600.782 68.8345 600.891 67.9873 cv
601.312 64.7241 601.701 61.4575 602.129 58.1958 cv
602.796 53.1255 603.062 48.0078 604.271 42.9976 cv
604.566 41.7715 605.206 40.3789 604.47 38.8975 cv
604.156 38.2637 604.324 37.0054 604.782 36.46 cv
605.533 35.5674 605.45 34.938 605.189 33.9082 cv
604.975 33.0571 605.768 32.103 606.784 32.1016 cv
606.933 32.1016 607.055 32.0547 607.192 32.0342 cv
608.309 31.8652 609.065 31.1118 610.011 30.667 cv
612.167 29.6518 613.664 28.2251 615.168 26.3892 cv
616.413 24.8696 617.375 23.333 617.726 21.5561 cv
618.129 19.5146 617.986 17.3686 618.138 15.2725 cv
618.281 13.29 618.13 11.3437 616.99 9.68261 cv
615.915 8.1162 614.672 6.6582 613.427 5.21679 cv
611.525 3.01318 608.862 1.82861 606.522 .21093 cv
604.213 .553703 601.947 -.131355 599.6 .0229416 cv
597.316 .173332 595.644 1.37499 593.737 2.16259 cv
589.952 3.72655 587.313 6.32714 585.957 10.3857 cv
585.071 13.0351 585.14 15.645 585.004 18.3086 cv
584.958 19.2095 585.028 19.9858 585.418 20.8174 cv
586.013 22.0825 586.989 23.2588 586.604 24.8472 cv
586.542 25.105 586.793 25.6509 587.018 25.7314 cv
588.255 26.1743 588.281 27.4853 588.98 28.2632 cv
589.659 29.0166 590.664 29.4775 591.538 30.0522 cv
591.549 30.0596 591.561 30.0654 591.571 30.0727 cv
591.751 30.1924 591.961 30.2656 592.153 30.3682 cv
593.718 31.2017 594.085 32.6758 593.697 34.1582 cv
593.389 35.3359 593.43 36.4883 593.284 37.6484 cv
592.954 40.2886 592.682 42.9473 592.124 45.5425 cv
591.806 47.0229 591.308 48.4087 591.503 49.9844 cv
591.644 51.1133 591.468 52.2949 591.337 53.4419 cv
591.155 55.0288 590.881 56.6055 590.646 58.1865 cv
590.413 59.7676 590.118 61.3428 589.96 62.9311 cv
589.806 64.4961 589.538 66.02 589.663 67.6572 cv
589.83 69.8267 588.278 71.9829 589.341 74.2734 cv
589.396 74.3921 589.218 74.6821 589.077 74.8184 cv
588.155 75.7109 588.871 77.1426 588.02 78.0342 cv
586.891 79.2183 588.255 80.5962 587.694 81.835 cv
587.587 82.0718 587.936 82.5288 587.818 82.7466 cv
586.743 84.7417 586.944 86.9766 586.518 89.0903 cv
586.177 90.7837 587.149 92.4683 586.296 94.1572 cv
585.929 94.8848 585.985 95.8252 585.848 96.6694 cv
585.711 97.5127 585.47 98.3559 585.466 99.2002 cv
585.462 100.137 585.539 101.118 585.826 102.001 cv
586.156 103.022 584.472 101.874 584.755 103.334 cv
585.144 105.339 585.492 107.631 584.204 109.62 cv
584.32 110.021 584.341 110.405 584.348 110.787 cv
cp
f
401.477 204.199 mo
399.386 211.179 398.507 218.539 397.765 225.942 cv
396.502 237.1 li
396.016 240.787 395.608 244.483 395.285 248.195 cv
394.656 255.617 394.242 263.075 393.785 270.532 cv
393.649 263.063 393.562 255.59 393.831 248.107 cv
393.95 244.367 394.155 240.621 394.438 236.882 cv
395.08 225.726 li
395.523 218.265 396.191 210.687 398.128 203.263 cv
400.102 195.977 402.495 188.802 405.408 181.809 cv
411.252 167.845 419.503 154.749 430.176 143.743 cv
435.519 138.253 441.585 133.424 448.201 129.456 cv
454.806 125.468 462.063 122.496 469.43 120.469 cv
476.822 118.44 484.291 117.209 491.712 116.083 cv
499.165 114.984 506.687 114.133 514.267 113.848 cv
529.361 113.332 544.954 114.734 559.195 120.555 cv
573.438 126.262 585.869 135.729 595.755 147.13 cv
605.527 158.664 613.017 171.979 617.874 186.11 cv
611.86 172.452 603.97 159.615 593.742 148.944 cv
583.696 138.181 571.394 129.477 557.684 124.529 cv
543.963 119.579 529.149 118.261 514.503 119.077 cv
507.165 119.469 499.829 120.285 492.521 121.423 cv
485.195 122.574 477.909 123.836 470.903 125.793 cv
463.87 127.691 457.173 130.396 450.961 134.092 cv
444.735 137.754 439.035 142.313 433.872 147.428 cv
423.509 157.673 415.509 170.208 409.28 183.516 cv
406.224 190.21 403.647 197.141 401.477 204.199 cv
cp
595.078 172.69 mo
591.303 166.846 586.982 161.363 582.128 156.423 cv
572.472 146.56 560.726 138.508 547.431 134.863 cv
534.19 130.963 520.075 130.856 506.244 131.969 cv
499.304 132.519 492.375 133.449 485.479 134.546 cv
478.578 135.581 471.735 137.037 465.131 139.391 cv
471.509 136.451 478.381 134.704 485.235 133.213 cv
492.118 131.839 499.043 130.668 506.039 129.853 cv
513.028 129.009 520.105 128.74 527.175 129.02 cv
534.241 129.315 541.329 130.275 548.194 132.21 cv
561.945 136.219 574.128 144.565 583.666 154.969 cv
588.438 160.197 592.64 165.916 596.223 171.981 cv
599.733 178.088 602.742 184.475 604.992 191.114 cv
602.164 184.706 598.934 178.492 595.078 172.69 cv
cp
421.538 350.276 mo
421.621 339.398 421.521 326.844 421.42 314.592 cv
421.292 299.083 421.159 283.047 421.416 271.114 cv
421.647 260.346 421.867 250.176 422.928 240.206 cv
423.266 237.025 423.519 233.82 423.768 230.611 cv
424.327 223.456 424.854 216.698 426.455 211.037 cv
430.386 197.14 442.535 163.584 470.37 152.177 cv
477.076 149.43 484.919 147.916 492.394 146.687 cv
509.06 143.954 530.45 141.651 548.094 148.156 cv
566.65 154.999 583.104 172.929 592.111 196.117 cv
601.539 220.397 602.97 248.091 603.125 271.982 cv
603.285 296.306 603.17 325.797 603.052 351.024 cv
610.927 351.053 619 351.048 626.605 351.005 cv
633.187 350.972 639.155 350.91 644.51 350.822 cv
644.628 325.578 644.741 296.127 644.582 271.711 cv
644.4 244.051 642.618 211.655 630.754 181.108 cv
617.315 146.503 592.415 120.316 562.439 109.261 cv
535.699 99.396 507.37 102.221 485.678 105.779 cv
475.789 107.403 465.185 109.501 454.65 113.816 cv
423.183 126.714 398.365 158.036 386.564 199.755 cv
383.843 209.374 383.097 218.943 382.437 227.387 cv
382.217 230.208 382.001 233.025 381.703 235.82 cv
380.458 247.531 380.209 259.065 379.969 270.235 cv
379.699 282.773 379.834 299.123 379.965 314.933 cv
380.067 327.313 380.169 339.994 380.077 350.689 cv
393.988 350.419 407.762 350.294 421.538 350.276 cv
cp
f
397.321 649.792 mo
397.321 657.256 li
407.16 657.256 li
407.16 649.792 li
397.321 649.792 li
cp
f
370.378 494.778 mo
370.378 488.568 li
364.167 488.568 li
364.167 494.778 li
370.378 494.778 li
cp
f
450.153 606.799 mo
451.617 606.799 li
451.617 602.961 li
450.153 602.961 li
450.153 606.799 li
cp
f
451.617 649.792 mo
451.617 643.581 li
450.153 643.581 li
450.153 649.792 li
451.617 649.792 li
cp
f
428.656 596.051 mo
428.656 596.326 li
431.308 596.326 li
431.308 596.051 li
428.656 596.051 li
cp
f
377.012 628.295 mo
377.012 636.946 li
385.663 636.946 li
385.663 628.295 li
377.012 628.295 li
cp
f
437.941 602.961 mo
437.941 606.799 li
439.405 606.799 li
439.405 602.961 li
437.941 602.961 li
cp
f
417.908 628.295 mo
417.908 636.946 li
428.656 636.946 li
428.656 628.295 li
417.908 628.295 li
cp
f
410.998 649.792 mo
410.998 643.581 li
407.16 643.581 li
407.16 649.792 li
410.998 649.792 li
cp
f
460.901 510.064 mo
458.25 510.064 li
458.25 515.089 li
460.901 515.089 li
460.901 510.064 li
cp
f
385.663 501.414 mo
377.012 501.414 li
377.012 510.064 li
385.663 510.064 li
385.663 501.414 li
cp
f
385.663 542.31 mo
377.012 542.31 li
377.012 553.058 li
385.663 553.058 li
385.663 542.31 li
cp
f
370.378 535.398 mo
370.378 531.561 li
364.167 531.561 li
364.167 535.398 li
370.378 535.398 li
cp
f
385.663 585.302 mo
377.012 585.302 li
377.012 596.051 li
385.663 596.051 li
385.663 585.302 li
cp
f
471.649 596.051 mo
471.649 596.326 li
471.926 596.326 li
471.926 596.051 li
471.649 596.051 li
cp
f
503.894 628.295 mo
503.894 636.946 li
512.545 636.946 li
512.545 628.295 li
503.894 628.295 li
cp
f
458.25 596.051 mo
458.25 596.326 li
460.901 596.326 li
460.901 596.051 li
458.25 596.051 li
cp
f
478.559 574.554 mo
478.559 576.018 li
482.397 576.018 li
482.397 574.554 li
478.559 574.554 li
cp
f
417.908 553.058 mo
417.631 553.058 li
417.631 555.707 li
417.908 555.707 li
417.908 553.058 li
cp
f
482.397 649.792 mo
482.397 657.256 li
492.236 657.256 li
492.236 649.792 li
482.397 649.792 li
cp
f
407.16 606.799 mo
410.998 606.799 li
410.998 602.961 li
407.16 602.961 li
407.16 606.799 li
cp
f
439.405 643.581 mo
437.941 643.581 li
437.941 649.792 li
439.405 649.792 li
439.405 643.581 li
cp
f
482.397 643.581 mo
478.559 643.581 li
478.559 649.792 li
482.397 649.792 li
482.397 643.581 li
cp
f
370.378 562.342 mo
364.167 562.342 li
364.167 563.806 li
370.378 563.806 li
370.378 562.342 li
cp
f
407.16 574.554 mo
407.16 576.018 li
410.998 576.018 li
410.998 574.554 li
407.16 574.554 li
cp
f
482.397 606.799 mo
482.397 602.961 li
478.559 602.961 li
478.559 606.799 li
482.397 606.799 li
cp
f
410.998 562.342 mo
407.16 562.342 li
407.16 563.806 li
410.998 563.806 li
410.998 562.342 li
cp
f
417.631 596.051 mo
417.631 596.326 li
417.908 596.326 li
417.908 596.051 li
417.631 596.051 li
cp
f
439.405 649.792 mo
439.405 657.256 li
450.153 657.256 li
450.153 649.792 li
439.405 649.792 li
cp
f
460.901 628.295 mo
460.901 636.946 li
471.649 636.946 li
471.649 628.295 li
460.901 628.295 li
cp
f
385.663 628.295 mo
390.688 628.295 li
390.688 623.272 li
385.663 623.272 li
385.663 628.295 li
cp
f
370.378 576.018 mo
370.378 574.554 li
364.167 574.554 li
364.167 576.018 li
370.378 576.018 li
cp
f
385.663 510.064 mo
385.663 515.089 li
390.688 515.089 li
390.688 510.064 li
385.663 510.064 li
cp
f
503.894 628.295 mo
503.894 623.272 li
498.869 623.272 li
498.869 628.295 li
503.894 628.295 li
cp
f
417.908 582.652 mo
417.631 582.652 li
417.631 585.302 li
417.908 585.302 li
417.908 582.652 li
cp
f
417.631 623.272 mo
417.631 628.295 li
417.908 628.295 li
417.908 623.272 li
417.631 623.272 li
cp
f
428.656 628.295 mo
431.308 628.295 li
431.308 623.272 li
428.656 623.272 li
428.656 628.295 li
cp
f
397.321 606.799 mo
397.321 616.637 li
407.16 616.637 li
407.16 606.799 li
397.321 606.799 li
cp
f
482.397 606.799 mo
482.397 616.637 li
492.236 616.637 li
492.236 606.799 li
482.397 606.799 li
cp
f
492.236 531.561 mo
492.236 521.724 li
482.397 521.724 li
482.397 531.561 li
492.236 531.561 li
cp
f
471.649 628.295 mo
471.926 628.295 li
471.926 623.272 li
471.649 623.272 li
471.649 628.295 li
cp
f
385.663 596.051 mo
385.663 596.326 li
390.688 596.326 li
390.688 596.051 li
385.663 596.051 li
cp
f
458.25 623.272 mo
458.25 628.295 li
460.901 628.295 li
460.901 623.272 li
458.25 623.272 li
cp
f
471.926 515.089 mo
471.926 510.064 li
471.649 510.064 li
471.649 515.089 li
471.926 515.089 li
cp
f
439.405 606.799 mo
439.405 616.637 li
450.153 616.637 li
450.153 606.799 li
439.405 606.799 li
cp
f
417.908 510.064 mo
417.631 510.064 li
417.631 515.089 li
417.908 515.089 li
417.908 510.064 li
cp
f
407.16 521.724 mo
397.321 521.724 li
397.321 531.561 li
407.16 531.561 li
407.16 521.724 li
cp
f
431.308 515.089 mo
431.308 510.064 li
428.656 510.064 li
428.656 515.089 li
431.308 515.089 li
cp
f
407.16 481.105 mo
397.321 481.105 li
397.321 488.568 li
407.16 488.568 li
407.16 481.105 li
cp
f
450.153 531.561 mo
450.153 521.724 li
439.405 521.724 li
439.405 531.561 li
450.153 531.561 li
cp
f
407.16 563.806 mo
397.321 563.806 li
397.321 574.554 li
407.16 574.554 li
407.16 563.806 li
cp
f
390.688 542.033 mo
385.663 542.033 li
385.663 542.31 li
390.688 542.31 li
390.688 542.033 li
cp
f
385.663 553.058 mo
385.663 555.707 li
390.688 555.707 li
390.688 553.058 li
385.663 553.058 li
cp
f
390.688 582.652 mo
385.663 582.652 li
385.663 585.302 li
390.688 585.302 li
390.688 582.652 li
cp
f
482.397 488.568 mo
478.559 488.568 li
478.559 494.778 li
482.397 494.778 li
482.397 488.568 li
cp
f
450.153 488.568 mo
450.153 494.778 li
451.617 494.778 li
451.617 488.568 li
450.153 488.568 li
cp
f
471.649 510.064 mo
471.649 501.414 li
460.901 501.414 li
460.901 510.064 li
471.649 510.064 li
cp
f
492.236 488.568 mo
492.236 481.105 li
482.397 481.105 li
482.397 488.568 li
492.236 488.568 li
cp
f
450.153 488.568 mo
450.153 481.105 li
439.405 481.105 li
439.405 488.568 li
450.153 488.568 li
cp
f
512.545 510.064 mo
512.545 501.414 li
503.894 501.414 li
503.894 510.064 li
512.545 510.064 li
cp
f
407.16 488.568 mo
407.16 494.778 li
410.998 494.778 li
410.998 488.568 li
407.16 488.568 li
cp
f
428.656 510.064 mo
428.656 501.414 li
417.908 501.414 li
417.908 510.064 li
428.656 510.064 li
cp
f
439.405 488.568 mo
437.941 488.568 li
437.941 494.778 li
439.405 494.778 li
439.405 488.568 li
cp
f
498.869 510.064 mo
498.869 515.089 li
503.894 515.089 li
503.894 510.064 li
498.869 510.064 li
cp
f
503.894 596.051 mo
512.545 596.051 li
512.545 585.302 li
503.894 585.302 li
503.894 596.051 li
cp
f
503.894 585.302 mo
503.894 582.652 li
498.869 582.652 li
498.869 585.302 li
503.894 585.302 li
cp
f
498.869 596.051 mo
498.869 596.326 li
503.894 596.326 li
503.894 596.051 li
498.869 596.051 li
cp
f
478.559 531.561 mo
478.559 535.398 li
482.397 535.398 li
482.397 531.561 li
478.559 531.561 li
cp
f
482.397 563.806 mo
482.397 562.342 li
478.559 562.342 li
478.559 563.806 li
482.397 563.806 li
cp
f
503.894 542.31 mo
503.894 542.033 li
498.869 542.033 li
498.869 542.31 li
503.894 542.31 li
cp
f
498.869 553.058 mo
498.869 555.707 li
503.894 555.707 li
503.894 553.058 li
498.869 553.058 li
cp
f
503.894 553.058 mo
512.545 553.058 li
512.545 542.31 li
503.894 542.31 li
503.894 553.058 li
cp
f
482.397 574.554 mo
492.236 574.554 li
492.236 563.806 li
482.397 563.806 li
482.397 574.554 li
cp
f
519.179 602.961 mo
519.179 606.799 li
525.391 606.799 li
525.391 602.961 li
519.179 602.961 li
cp
f
460.901 585.302 mo
460.901 582.652 li
458.25 582.652 li
458.25 585.302 li
460.901 585.302 li
cp
f
471.926 585.302 mo
471.926 582.652 li
471.649 582.652 li
471.649 585.302 li
471.926 585.302 li
cp
f
519.179 643.581 mo
519.179 649.792 li
525.391 649.792 li
525.391 643.581 li
519.179 643.581 li
cp
f
439.405 531.561 mo
437.941 531.561 li
437.941 535.398 li
439.405 535.398 li
439.405 531.561 li
cp
f
417.908 585.302 mo
417.908 596.051 li
428.656 596.051 li
428.656 585.302 li
417.908 585.302 li
cp
f
417.908 542.033 mo
417.631 542.033 li
417.631 542.31 li
417.908 542.31 li
417.908 542.033 li
cp
f
407.16 531.561 mo
407.16 535.398 li
410.998 535.398 li
410.998 531.561 li
407.16 531.561 li
cp
f
519.179 576.018 mo
525.391 576.018 li
525.391 574.554 li
519.179 574.554 li
519.179 576.018 li
cp
f
370.378 643.581 mo
364.167 643.581 li
364.167 649.792 li
370.378 649.792 li
370.378 643.581 li
cp
f
431.308 542.31 mo
431.308 542.033 li
428.656 542.033 li
428.656 542.31 li
431.308 542.31 li
cp
f
460.901 585.302 mo
460.901 596.051 li
471.649 596.051 li
471.649 585.302 li
460.901 585.302 li
cp
f
370.378 602.961 mo
364.167 602.961 li
364.167 606.799 li
370.378 606.799 li
370.378 602.961 li
cp
f
539.49 481.105 mo
525.391 481.105 li
525.391 488.568 li
536.139 488.568 li
536.139 494.778 li
539.49 494.778 li
539.49 521.724 li
525.391 521.724 li
525.391 531.561 li
536.139 531.561 li
536.139 535.398 li
539.49 535.398 li
539.49 562.342 li
536.139 562.342 li
536.139 563.806 li
525.391 563.806 li
525.391 574.554 li
536.139 574.554 li
536.139 576.018 li
539.49 576.018 li
539.49 602.961 li
536.139 602.961 li
536.139 606.799 li
525.391 606.799 li
525.391 616.637 li
539.49 616.637 li
539.49 643.581 li
536.139 643.581 li
536.139 649.792 li
525.391 649.792 li
525.391 657.256 li
539.49 657.256 li
539.49 684.2 li
512.545 684.2 li
512.545 671.288 li
503.894 671.288 li
503.894 663.892 li
498.869 663.892 li
498.869 684.2 li
471.926 684.2 li
471.926 663.892 li
471.649 663.892 li
471.649 671.288 li
460.901 671.288 li
460.901 663.892 li
458.25 663.892 li
458.25 684.2 li
431.308 684.2 li
431.308 663.892 li
428.656 663.892 li
428.656 671.288 li
417.908 671.288 li
417.908 663.892 li
417.631 663.892 li
417.631 684.2 li
390.688 684.2 li
390.688 663.892 li
385.663 663.892 li
385.663 671.288 li
377.012 671.288 li
377.012 684.2 li
350.069 684.2 li
350.069 657.256 li
364.167 657.256 li
364.167 649.792 li
353.419 649.792 li
353.419 643.581 li
350.069 643.581 li
350.069 616.637 li
364.167 616.637 li
364.167 606.799 li
353.419 606.799 li
353.419 602.961 li
350.069 602.961 li
350.069 576.018 li
353.419 576.018 li
353.419 574.554 li
364.167 574.554 li
364.167 563.806 li
353.419 563.806 li
353.419 562.342 li
350.069 562.342 li
350.069 535.398 li
353.419 535.398 li
353.419 531.561 li
364.167 531.561 li
364.167 521.724 li
350.069 521.724 li
350.069 494.778 li
353.419 494.778 li
353.419 488.568 li
364.167 488.568 li
364.167 481.105 li
350.069 481.105 li
350.069 454.159 li
377.012 454.159 li
377.012 467.072 li
385.663 467.072 li
385.663 474.47 li
390.688 474.47 li
390.688 454.159 li
417.631 454.159 li
417.631 474.47 li
417.908 474.47 li
417.908 467.072 li
428.656 467.072 li
428.656 474.47 li
431.308 474.47 li
431.308 454.159 li
458.25 454.159 li
458.25 474.47 li
460.901 474.47 li
460.901 467.072 li
471.649 467.072 li
471.649 474.47 li
471.926 474.47 li
471.926 454.159 li
498.869 454.159 li
498.869 474.47 li
503.894 474.47 li
503.894 467.072 li
512.545 467.072 li
512.545 454.159 li
539.49 454.159 li
539.49 481.105 li
cp
556.247 671.428 mo
555.487 652.669 li
555.105 643.284 li
554.915 638.589 li
554.819 636.242 li
554.795 635.655 li
554.783 635.362 li
554.777 635.215 li
554.792 634.896 li
554.837 634.044 554.966 633.18 555.231 632.281 cv
555.817 630.532 556.624 628.459 559.49 626.62 cv
560.241 626.186 561.098 625.81 562.11 625.604 cv
562.599 625.496 563.126 625.441 563.656 625.426 cv
564.007 625.419 564.021 625.419 564.06 625.414 cv
564.208 625.402 li
565.399 625.31 li
570.17 624.939 li
573.625 624.677 li
573.412 612.276 573.278 602.404 573.306 597.042 cv
573.322 593.714 li
566.471 593.314 561.705 592.946 559.487 592.714 cv
558.949 592.657 558.395 592.364 558.091 591.752 cv
557.789 591.145 557.838 590.31 557.897 589.546 cv
558.008 588.123 558.113 586.773 558.216 585.456 cv
558.13 585.449 558.048 585.474 557.961 585.457 cv
556.976 585.259 556.286 584.41 556.247 583.448 cv
555.487 564.688 li
555.105 555.304 li
554.915 550.609 li
554.819 548.262 li
554.795 547.675 li
554.783 547.381 li
554.777 547.235 li
554.792 546.916 li
554.837 546.063 554.966 545.2 555.231 544.301 cv
555.817 542.552 556.624 540.479 559.49 538.64 cv
560.241 538.206 561.098 537.83 562.11 537.625 cv
562.599 537.516 563.126 537.461 563.656 537.446 cv
564.007 537.439 564.021 537.439 564.06 537.434 cv
564.208 537.422 li
565.399 537.33 li
570.17 536.959 li
573.598 536.699 li
573.747 505.759 li
566.666 505.349 561.75 504.971 559.487 504.734 cv
558.949 504.676 558.395 504.384 558.091 503.772 cv
557.789 503.165 557.838 502.329 557.897 501.565 cv
558.008 500.142 558.113 498.792 558.216 497.476 cv
558.13 497.469 558.048 497.494 557.961 497.477 cv
556.976 497.279 556.286 496.43 556.247 495.468 cv
555.487 476.708 li
555.105 467.323 li
554.915 462.629 li
554.819 460.282 li
554.795 459.695 li
554.783 459.401 li
554.777 459.255 li
554.792 458.936 li
554.837 458.083 554.966 457.219 555.231 456.32 cv
555.817 454.571 556.624 452.499 559.49 450.66 cv
560.241 450.226 561.098 449.85 562.11 449.644 cv
562.599 449.535 563.126 449.48 563.656 449.466 cv
564.007 449.459 564.021 449.459 564.06 449.454 cv
564.208 449.442 li
565.399 449.349 li
570.17 448.979 li
574.023 448.687 li
574.379 374.986 li
561.99 375.122 517.527 375.39 485.905 375.579 cv
484.799 375.585 483.708 375.592 482.635 375.598 cv
466.59 375.694 454.055 375.768 450.901 375.793 cv
386.167 376.208 li
383.4 376.273 380.208 376.023 376.813 375.809 cv
369.958 375.375 362.239 374.9 355.69 376.037 cv
355.725 376.964 355.752 377.893 355.79 378.827 cv
355.798 379.056 li
355.829 379.818 355.235 380.462 354.473 380.492 cv
354.454 380.492 354.436 380.494 354.417 380.494 cv
353.678 380.494 353.067 379.91 353.037 379.167 cv
353.027 378.937 li
352.997 378.16 352.974 377.387 352.945 376.614 cv
348.854 377.702 345.915 379.486 343.998 382.04 cv
338.111 389.909 339.322 404.92 340.295 416.982 cv
340.619 420.992 340.924 424.779 340.958 428.05 cv
341.173 446.456 341.344 466.133 341.511 491.852 cv
341.778 533.11 341.872 576.051 341.787 619.481 cv
341.669 660.933 341.384 702.209 340.943 742.166 cv
340.829 752.52 349.161 761.196 359.516 761.506 cv
364.489 761.657 li
379.643 762.12 393.957 762.557 408.83 762.281 cv
412.748 762.211 416.609 762.266 420.339 762.324 cv
425.578 762.404 430.521 762.48 435.648 762.226 cv
450.539 761.519 463.418 761.043 476.123 761.043 cv
478.401 761.043 480.674 761.06 482.952 761.092 cv
575.209 762.428 li
575.766 750.26 575.292 716.138 574.68 681.773 cv
567.093 681.343 561.849 680.941 559.487 680.694 cv
558.949 680.637 558.395 680.344 558.091 679.732 cv
557.789 679.125 557.838 678.29 557.897 677.526 cv
558.008 676.103 558.113 674.753 558.216 673.437 cv
558.13 673.429 558.048 673.454 557.961 673.437 cv
556.976 673.239 556.286 672.39 556.247 671.428 cv
cp
f
428.656 553.058 mo
428.656 555.707 li
431.308 555.707 li
431.308 553.058 li
428.656 553.058 li
cp
f
428.656 542.31 mo
417.908 542.31 li
417.908 553.058 li
428.656 553.058 li
428.656 542.31 li
cp
f
437.941 574.554 mo
437.941 576.018 li
439.405 576.018 li
439.405 574.554 li
437.941 574.554 li
cp
f
471.649 555.707 mo
471.926 555.707 li
471.926 553.058 li
471.649 553.058 li
471.649 555.707 li
cp
f
519.179 494.778 mo
525.391 494.778 li
525.391 488.568 li
519.179 488.568 li
519.179 494.778 li
cp
f
460.901 542.31 mo
460.901 542.033 li
458.25 542.033 li
458.25 542.31 li
460.901 542.31 li
cp
f
471.926 542.31 mo
471.926 542.033 li
471.649 542.033 li
471.649 542.31 li
471.926 542.31 li
cp
f
451.617 535.398 mo
451.617 531.561 li
450.153 531.561 li
450.153 535.398 li
451.617 535.398 li
cp
f
519.179 562.342 mo
519.179 563.806 li
525.391 563.806 li
525.391 562.342 li
519.179 562.342 li
cp
f
428.656 585.302 mo
431.308 585.302 li
431.308 582.652 li
428.656 582.652 li
428.656 585.302 li
cp
f
519.179 535.398 mo
525.391 535.398 li
525.391 531.561 li
519.179 531.561 li
519.179 535.398 li
cp
f
450.153 574.554 mo
450.153 576.018 li
451.617 576.018 li
451.617 574.554 li
450.153 574.554 li
cp
f
451.617 563.806 mo
451.617 562.342 li
450.153 562.342 li
450.153 563.806 li
451.617 563.806 li
cp
f
458.25 553.058 mo
458.25 555.707 li
460.901 555.707 li
460.901 553.058 li
458.25 553.058 li
cp
f
471.649 553.058 mo
471.649 542.31 li
460.901 542.31 li
460.901 553.058 li
471.649 553.058 li
cp
f
439.405 563.806 mo
439.405 574.554 li
450.153 574.554 li
450.153 563.806 li
439.405 563.806 li
cp
f
439.405 562.342 mo
437.941 562.342 li
437.941 563.806 li
439.405 563.806 li
439.405 562.342 li
cp
f
575.825 767.929 mo
575.213 767.234 574.918 766.316 575.014 765.399 cv
575.861 757.082 575.355 719.567 574.682 681.773 cv
574.681 681.773 574.681 681.773 574.68 681.773 cv
575.292 716.138 575.766 750.26 575.209 762.428 cv
482.952 761.092 li
480.674 761.06 478.401 761.043 476.123 761.043 cv
463.418 761.043 450.539 761.519 435.648 762.226 cv
430.521 762.48 425.578 762.404 420.339 762.324 cv
416.609 762.266 412.748 762.211 408.83 762.281 cv
393.957 762.557 379.643 762.12 364.489 761.657 cv
359.516 761.506 li
349.161 761.196 340.829 752.52 340.943 742.166 cv
341.384 702.209 341.669 660.933 341.787 619.481 cv
341.872 576.051 341.778 533.11 341.511 491.852 cv
341.344 466.133 341.173 446.456 340.958 428.05 cv
340.924 424.779 340.619 420.992 340.295 416.982 cv
339.322 404.92 338.111 389.909 343.998 382.04 cv
345.915 379.486 348.854 377.702 352.945 376.614 cv
352.937 376.393 352.93 376.17 352.921 375.95 cv
352.65 375.835 352.381 375.711 352.145 375.526 cv
351.384 374.927 350.923 374.024 350.883 373.056 cv
350.846 372.149 350.817 371.245 350.781 370.338 cv
345.437 371.838 341.458 374.374 338.689 378.064 cv
331.298 387.942 332.621 404.341 333.684 417.515 cv
333.998 421.406 334.293 425.081 334.326 428.122 cv
334.54 446.519 334.711 466.188 334.878 491.894 cv
335.146 533.134 335.239 576.056 335.154 619.466 cv
335.036 660.897 334.751 702.153 334.311 742.093 cv
334.158 756.035 345.375 767.718 359.317 768.137 cv
364.287 768.288 li
379.526 768.75 393.916 769.196 408.952 768.912 cv
412.757 768.846 416.56 768.897 420.238 768.957 cv
425.348 769.033 430.635 769.116 435.968 768.853 cv
453.403 768.024 468.049 767.521 482.857 767.723 cv
581.558 769.153 li
580.451 769.121 579.334 769.076 578.234 769.05 cv
577.31 769.029 576.437 768.621 575.825 767.929 cv
cp
f
574.023 448.687 mo
574.026 448.686 li
574.381 374.985 li
562.115 375.12 517.583 375.389 485.905 375.579 cv
517.527 375.39 561.99 375.122 574.379 374.986 cv
574.023 448.687 li
cp
f
573.603 536.699 mo
573.752 505.759 li
573.75 505.759 573.749 505.759 573.747 505.759 cv
573.598 536.699 li
573.603 536.699 li
cp
f
376.813 375.809 mo
380.208 376.023 383.4 376.273 386.167 376.208 cv
383.431 376.242 380.208 376.023 376.813 375.809 cv
cp
f
573.625 624.677 mo
573.628 624.677 li
573.416 612.275 573.282 602.404 573.313 597.042 cv
573.329 593.715 li
573.327 593.714 573.324 593.714 573.322 593.714 cv
573.306 597.042 li
573.278 602.404 573.412 612.276 573.625 624.677 cv
cp
f
677.647 375.294 mo
676.872 375.294 676.057 375.292 675.21 375.287 cv
675.229 390.495 675.717 425.134 676.149 455.917 cv
679.054 455.451 681.249 453.407 682.733 452.301 cv
682.297 421.336 681.827 387.396 681.844 373.695 cv
681.844 372.034 681.141 370.616 680.003 369.645 cv
680.597 370.244 680.964 371.067 680.964 371.977 cv
680.962 373.81 679.478 375.294 677.647 375.294 cv
cp
f
575.201 700.072 mo
575.309 699.314 576.021 698.781 576.764 698.9 cv
578.505 699.121 li
579.262 699.229 579.786 699.928 579.678 700.684 cv
579.58 701.374 578.988 701.871 578.313 701.871 cv
578.247 701.871 578.181 701.867 578.115 701.856 cv
576.373 701.635 li
575.617 701.527 575.092 700.828 575.201 700.072 cv
cp
679.222 681.247 mo
678.181 681.335 677.071 681.418 675.969 681.502 cv
675.996 686.128 676.034 690.752 676.097 695.357 cv
676.271 708.379 676.623 725.187 677.063 741.484 cv
677.12 743.399 677.388 745.322 677.647 747.18 cv
678.348 752.209 678.63 755.415 676.645 757.511 cv
676.64 757.515 676.638 757.519 676.634 757.523 cv
674.306 760.004 670.572 761.584 665.496 762.226 cv
664.003 762.434 662.486 762.589 660.991 762.744 cv
660.769 762.768 li
656.89 763.173 652.955 763.475 649.231 763.66 cv
649.036 763.66 648.862 763.674 648.694 763.7 cv
642.909 763.986 636.855 764.107 630.696 764.046 cv
620.325 764.014 609.721 763.581 599.464 763.16 cv
593.681 762.925 587.736 762.68 581.84 762.51 cv
582.385 749.713 581.924 716.049 581.321 682.125 cv
578.944 682.007 576.728 681.889 574.682 681.773 cv
575.355 719.567 575.861 757.082 575.014 765.399 cv
574.918 766.316 575.213 767.234 575.825 767.929 cv
576.437 768.621 577.31 769.029 578.234 769.05 cv
579.334 769.076 580.451 769.121 581.558 769.153 cv
587.448 769.323 593.397 769.551 599.192 769.789 cv
609.51 770.209 620.181 770.647 630.656 770.679 cv
631.665 770.689 632.671 770.694 633.674 770.694 cv
638.96 770.694 644.138 770.568 649.01 770.322 cv
649.206 770.322 649.38 770.307 649.548 770.282 cv
653.504 770.086 657.51 769.778 661.454 769.364 cv
661.673 769.343 li
663.245 769.18 664.84 769.014 666.369 768.801 cv
672.97 767.969 678.048 765.703 681.461 762.073 cv
685.781 757.509 684.951 751.536 684.216 746.265 cv
683.972 744.504 683.74 742.841 683.694 741.295 cv
683.256 725.037 682.903 708.26 682.727 695.268 cv
682.662 690.37 682.62 685.451 682.593 680.526 cv
681.821 680.888 680.963 681.127 679.986 681.193 cv
679.671 681.214 679.413 681.232 679.222 681.247 cv
cp
f
679.986 593.212 mo
679.671 593.233 679.413 593.252 679.222 593.266 cv
678.281 593.347 677.272 593.421 676.281 593.498 cv
676.053 631.891 li
678.759 631.499 681.034 629.749 682.706 628.591 cv
682.921 592.379 li
682.07 592.839 681.104 593.137 679.986 593.212 cv
cp
f
603.052 351.024 mo
596.859 351.002 590.786 350.959 585.177 350.895 cv
585.164 350.893 585.151 350.893 585.139 350.893 cv
585.133 350.893 585.128 350.895 585.123 350.895 cv
585.14 350.895 585.155 350.895 585.172 350.895 cv
586.088 350.904 586.957 351.292 587.577 351.963 cv
588.197 352.637 588.509 353.537 588.443 354.448 cv
588.369 355.479 588.317 356.518 588.274 357.56 cv
600.34 357.681 614.135 357.71 626.642 357.639 cv
630.301 357.62 633.756 357.591 637.046 357.556 cv
637.034 354.32 li
641.394 354.265 645.633 354.126 649.106 353.851 cv
649.119 357.37 li
652.016 357.311 654.723 357.242 657.179 357.165 cv
659.511 357.095 661.688 357.008 663.716 356.917 cv
663.791 359.265 663.729 361.623 663.663 364.099 cv
663.625 365.551 663.591 367.015 663.582 368.523 cv
668.798 368.601 673.729 368.659 677.647 368.659 cv
678.08 368.66 678.491 368.749 678.87 368.9 cv
678.167 368.56 677.377 368.342 676.508 368.307 cv
674.637 368.245 672.79 368.311 671.003 368.373 cv
670.738 368.383 670.472 368.392 670.211 368.4 cv
670.222 367.026 670.258 365.65 670.294 364.273 cv
670.373 361.355 670.451 358.335 670.281 355.238 cv
670.067 352.286 667.546 350.105 664.636 350.232 cv
662.304 350.343 659.753 350.451 656.975 350.534 cv
653.32 350.65 649.142 350.746 644.51 350.822 cv
639.155 350.91 633.187 350.972 626.605 351.005 cv
619 351.048 610.927 351.053 603.052 351.024 cv
cp
f
573.628 624.677 mo
579.705 624.216 li
579.883 624.206 580.074 624.186 580.253 624.175 cv
580.045 612.002 579.916 602.331 579.946 597.078 cv
579.96 594.076 li
577.573 593.955 575.359 593.833 573.329 593.715 cv
573.313 597.042 li
573.282 602.404 573.416 612.275 573.628 624.677 cv
cp
f
579.705 536.236 mo
579.878 536.226 580.063 536.207 580.238 536.195 cv
580.382 506.117 li
577.999 505.997 575.787 505.877 573.752 505.759 cv
573.603 536.699 li
579.705 536.236 li
cp
f
579.705 448.255 mo
580.016 448.238 580.346 448.204 580.66 448.184 cv
581.012 375.044 li
583.042 375.075 li
576.033 374.965 li
575.581 374.972 575.009 374.978 574.381 374.985 cv
574.026 448.686 li
579.705 448.255 li
cp
f
679.986 505.232 mo
679.671 505.253 679.413 505.272 679.222 505.286 cv
678.44 505.353 677.595 505.414 676.779 505.478 cv
676.786 506.684 676.788 507.663 676.785 508.38 cv
676.574 543.838 li
679.287 543.267 681.573 541.407 683.23 540.342 cv
683.419 508.414 li
683.424 507.437 683.417 505.965 683.404 504.123 cv
682.446 504.751 681.319 505.143 679.986 505.232 cv
cp
f
584.602 374.954 mo
584.601 374.954 584.599 374.954 584.596 374.954 cv
584.037 375.063 583.549 375.078 583.231 375.078 cv
583.233 375.078 li
583.552 375.078 584.042 375.063 584.602 374.954 cv
cp
f
588.198 362.786 mo
588.183 361.064 588.201 359.347 588.27 357.646 cv
588.202 359.348 588.183 361.063 588.198 362.786 cv
cp
f
588.213 363.756 mo
588.241 365.29 588.295 366.826 588.389 368.364 cv
588.392 368.364 588.395 368.364 588.397 368.364 cv
588.303 366.827 588.24 365.29 588.213 363.756 cv
cp
f
352.145 375.526 mo
352.381 375.711 352.65 375.835 352.921 375.95 cv
352.885 374.954 352.842 373.958 352.815 372.956 cv
352.795 372.193 353.397 371.559 354.16 371.54 cv
354.946 371.429 355.558 372.117 355.578 372.884 cv
355.606 373.939 355.651 374.988 355.69 376.037 cv
362.239 374.9 369.958 375.375 376.813 375.809 cv
380.208 376.023 383.431 376.242 386.167 376.208 cv
450.901 375.793 li
454.055 375.768 466.59 375.694 482.635 375.598 cv
483.708 375.592 484.799 375.585 485.905 375.579 cv
517.583 375.389 562.115 375.12 574.381 374.985 cv
575.009 374.978 575.581 374.972 576.033 374.965 cv
583.042 375.075 li
583.229 375.078 li
583.229 375.078 583.23 375.078 583.231 375.078 cv
583.549 375.078 584.037 375.063 584.596 374.954 cv
582.279 374.965 579.987 374.97 577.637 374.989 cv
575.804 374.986 574.319 373.502 574.319 371.671 cv
574.321 369.853 575.784 368.38 577.596 368.358 cv
576.027 368.334 li
567.575 368.448 527.921 368.693 495.792 368.886 cv
491.202 368.914 486.766 368.94 482.596 368.965 cv
466.542 369.061 454 369.135 450.852 369.163 cv
386.123 369.577 li
383.625 369.577 380.508 369.396 377.233 369.188 cv
373.395 368.944 369.296 368.685 365.201 368.685 cv
362.564 368.685 359.927 368.793 357.362 369.082 cv
357.234 365.79 357.113 362.5 357 359.219 cv
356.984 358.753 357.215 358.437 357.354 358.289 cv
357.495 358.138 357.803 357.883 358.28 357.868 cv
400.333 356.519 440.308 356.872 482.626 357.237 cv
497.834 357.371 513.13 357.505 528.609 357.556 cv
532.75 357.57 537.44 357.414 542.365 357.254 cv
549.693 357.014 557.269 356.766 563.43 357.078 cv
566.221 357.229 572.898 357.377 581.632 357.485 cv
581.492 361.08 581.527 364.726 581.739 368.371 cv
583.973 368.377 586.191 368.376 588.389 368.364 cv
588.295 366.826 588.241 365.29 588.213 363.756 cv
588.207 363.433 588.201 363.109 588.198 362.786 cv
588.183 361.063 588.202 359.348 588.27 357.646 cv
588.271 357.617 588.273 357.588 588.274 357.56 cv
588.317 356.518 588.369 355.479 588.443 354.448 cv
588.509 353.537 588.197 352.637 587.577 351.963 cv
586.957 351.292 586.088 350.904 585.172 350.895 cv
585.155 350.895 585.14 350.895 585.123 350.895 cv
574.817 350.782 566.84 350.619 563.774 350.453 cv
557.333 350.13 549.614 350.381 542.151 350.625 cv
537.289 350.783 532.721 350.963 528.628 350.92 cv
513.164 350.872 497.881 350.738 482.685 350.604 cv
461.916 350.424 441.709 350.25 421.538 350.276 cv
407.762 350.294 393.988 350.419 380.077 350.689 cv
372.786 350.831 365.467 351 358.068 351.237 cv
355.942 351.305 353.969 352.199 352.512 353.754 cv
351.06 355.307 350.299 357.326 350.372 359.446 cv
350.496 363.07 350.637 366.704 350.781 370.338 cv
350.817 371.245 350.846 372.149 350.883 373.056 cv
350.923 374.024 351.384 374.927 352.145 375.526 cv
cp
f
353.037 379.167 mo
353.067 379.91 353.678 380.494 354.417 380.494 cv
354.436 380.494 354.454 380.492 354.473 380.492 cv
355.235 380.462 355.829 379.818 355.798 379.056 cv
355.79 378.827 li
355.752 377.893 355.725 376.964 355.69 376.037 cv
355.651 374.988 355.606 373.939 355.578 372.884 cv
355.558 372.117 354.946 371.429 354.16 371.54 cv
353.397 371.559 352.795 372.193 352.815 372.956 cv
352.842 373.958 352.885 374.954 352.921 375.95 cv
352.93 376.17 352.937 376.393 352.945 376.614 cv
352.974 377.387 352.997 378.16 353.027 378.937 cv
353.037 379.167 li
cp
f
576.373 701.635 mo
578.115 701.856 li
578.181 701.867 578.247 701.871 578.313 701.871 cv
578.988 701.871 579.58 701.374 579.678 700.684 cv
579.786 699.928 579.262 699.229 578.505 699.121 cv
576.764 698.9 li
576.021 698.781 575.309 699.314 575.201 700.072 cv
575.092 700.828 575.617 701.527 576.373 701.635 cv
cp
f
604.629 374.861 mo
613.356 374.797 622.082 374.736 631.125 374.736 cv
632.931 374.724 634.959 374.731 637.112 374.75 cv
637.087 368.131 li
635.109 368.113 633.247 368.101 631.573 368.101 cv
622.398 368.08 613.467 368.165 604.581 368.228 cv
599.208 368.268 593.841 368.334 588.397 368.364 cv
588.395 368.364 588.392 368.364 588.389 368.364 cv
586.191 368.376 583.973 368.377 581.739 368.371 cv
580.375 368.367 579.019 368.367 577.637 368.354 cv
577.623 368.354 577.609 368.358 577.596 368.358 cv
575.784 368.38 574.321 369.853 574.319 371.671 cv
574.319 373.502 575.804 374.986 577.637 374.989 cv
579.987 374.97 582.279 374.965 584.596 374.954 cv
584.599 374.954 584.601 374.954 584.602 374.954 cv
591.349 374.924 598.017 374.908 604.629 374.861 cv
cp
f
663.582 368.523 mo
660.657 368.479 657.644 368.43 654.664 368.381 cv
652.833 368.352 650.991 368.321 649.162 368.292 cv
649.188 374.923 li
650.97 374.954 652.766 374.984 654.556 375.014 cv
661.829 375.133 669.319 375.257 675.21 375.287 cv
676.057 375.292 676.872 375.294 677.647 375.294 cv
679.478 375.294 680.962 373.81 680.964 371.977 cv
680.964 371.067 680.597 370.244 680.003 369.645 cv
679.684 369.323 679.298 369.07 678.87 368.9 cv
678.491 368.749 678.08 368.66 677.647 368.659 cv
673.729 368.659 668.798 368.601 663.582 368.523 cv
cp
f
637.087 368.131 mo
637.112 374.75 li
637.411 452.152 li
641.628 453 645.705 452.561 649.486 451.728 cv
649.188 374.923 li
649.162 368.292 li
649.119 357.37 li
649.106 353.851 li
645.633 354.126 641.394 354.265 637.034 354.32 cv
637.046 357.556 li
637.087 368.131 li
cp
f
649.85 545.606 mo
649.7 506.854 li
645.764 506.972 641.731 507.064 637.629 507.13 cv
637.782 546.2 li
641.707 546.02 645.821 545.817 649.85 545.606 cv
cp
f
649.905 621.285 mo
649.731 599.504 li
647.334 599.91 645.303 600.189 642.788 600.013 cv
641.285 599.908 639.58 599.992 637.991 599.709 cv
638.125 634.165 li
638.209 634.161 638.294 634.156 638.379 634.153 cv
638.331 621.751 li
642.208 622.314 646.051 621.424 649.905 621.285 cv
cp
f
645.907 701.759 mo
645.94 701.759 645.961 701.731 645.995 701.731 cv
647.572 701.538 649.139 701.234 650.705 700.819 cv
650.629 682.786 li
646.702 682.909 642.672 683.005 638.57 683.076 cv
638.644 702.118 li
641.076 702.173 643.497 702.063 645.907 701.759 cv
cp
f
649.905 621.285 mo
646.051 621.424 642.208 622.314 638.331 621.751 cv
638.379 634.153 li
642.311 633.971 646.416 633.767 650.423 633.556 cv
650.372 621.265 li
650.216 621.268 650.06 621.28 649.905 621.285 cv
cp
f
682.184 459.621 mo
682.252 459.754 682.294 459.894 682.31 460.035 cv
682.311 460.051 li
682.884 465.437 683.419 470.699 683.916 476.034 cv
684.616 484.027 li
684.849 486.668 685.137 489.426 684.898 492.233 cv
684.788 493.634 684.563 495.05 684.106 496.459 cv
683.865 497.162 683.57 497.866 683.128 498.542 cv
682.696 499.197 682.025 499.928 681.108 500.268 cv
680.665 500.438 680.225 500.511 679.821 500.541 cv
678.798 500.581 li
676.789 500.633 li
672.768 500.71 li
667.407 500.805 662.046 500.802 656.694 500.715 cv
662.021 500.059 667.337 499.486 672.655 499.01 cv
676.643 498.659 li
678.638 498.496 li
679.616 498.404 li
679.876 498.37 680.099 498.312 680.276 498.229 cv
680.934 497.964 681.494 496.855 681.83 495.736 cv
682.159 494.587 682.325 493.339 682.38 492.074 cv
682.492 489.534 682.189 486.952 681.934 484.275 cv
681.184 476.293 li
680.773 471.512 680.363 466.686 680.038 461.929 cv
679.372 462.169 678.691 462.375 677.992 462.516 cv
676.709 462.8 675.396 462.816 674.233 462.855 cv
667.016 463.067 li
662.204 463.195 657.394 463.144 652.579 463.054 cv
654.968 462.746 657.36 462.499 659.753 462.256 cv
666.924 461.499 li
674.091 460.801 li
675.323 460.692 676.425 460.617 677.479 460.317 cv
678.545 460.029 679.583 459.622 680.582 459.107 cv
681.166 458.807 681.883 459.037 682.184 459.621 cv
cp
643.748 479.174 mo
643.662 481.627 643.636 484.084 643.5 486.532 cv
642.791 501.249 li
642.763 501.841 642.282 502.304 641.7 502.321 cv
641.644 502.323 li
635.841 502.48 630.035 502.619 624.229 502.684 cv
621.325 502.744 618.425 502.693 615.523 502.669 cv
606.814 502.548 li
606.102 502.542 605.529 501.958 605.536 501.245 cv
605.541 501.145 li
606.079 494.999 606.721 488.864 607.406 482.711 cv
607.749 479.638 608.031 476.559 608.503 473.5 cv
608.94 470.438 609.352 467.375 609.858 464.32 cv
643.949 471.806 li
643.748 479.174 li
cp
599.329 501.179 mo
599.324 501.239 li
599.273 501.816 598.77 502.245 598.196 502.208 cv
594.057 501.945 589.921 501.64 585.792 501.306 cv
583.727 501.13 581.67 500.875 579.609 500.663 cv
577.55 500.453 575.493 500.214 573.439 499.943 cv
573.438 499.943 573.438 499.942 573.437 499.942 cv
567.665 462.266 li
573.188 462.127 578.76 462.072 584.237 462.147 cv
586.98 462.158 589.783 462.268 592.56 462.331 cv
595.364 462.368 598.053 462.618 600.802 462.756 cv
601.493 462.791 602.024 463.379 601.989 464.069 cv
601.988 464.082 li
601.986 464.115 li
600.77 482.645 li
600.356 488.813 599.873 495.004 599.329 501.179 cv
cp
676.149 455.917 mo
675.924 455.953 675.703 455.997 675.468 456.012 cv
668.338 456.73 633.162 458.622 620.132 458.87 cv
616.997 458.858 613.697 458.795 610.386 458.684 cv
606.09 458.54 601.769 458.309 597.712 457.933 cv
591.12 457.322 585.182 457.52 578.577 457.02 cv
575.476 456.796 567.617 456.582 563.718 456.435 cv
562.457 456.392 561.34 457.859 561.188 459.764 cv
560.855 463.965 560.299 471.026 559.998 474.903 cv
559.339 483.37 558.831 489.645 558.216 497.476 cv
558.113 498.792 558.008 500.142 557.897 501.565 cv
557.838 502.329 557.789 503.165 558.091 503.772 cv
558.395 504.384 558.949 504.676 559.487 504.734 cv
561.75 504.971 566.666 505.349 573.747 505.759 cv
573.749 505.759 573.75 505.759 573.752 505.759 cv
575.787 505.877 577.999 505.997 580.382 506.117 cv
582.121 506.205 583.938 506.292 585.852 506.379 cv
601.534 507.203 620.103 507.411 637.629 507.13 cv
641.731 507.064 645.764 506.972 649.7 506.854 cv
659.714 506.553 669.002 506.086 676.779 505.478 cv
677.595 505.414 678.44 505.353 679.222 505.286 cv
679.413 505.272 679.671 505.253 679.986 505.232 cv
681.319 505.143 682.446 504.751 683.404 504.123 cv
687.303 501.562 688.269 494.913 687.675 487.21 cv
687.53 485.301 687.402 483.699 687.312 482.727 cv
686.662 475.746 685.471 459.157 685.026 453.515 cv
684.836 451.083 684.068 451.307 682.733 452.301 cv
681.249 453.407 679.054 455.451 676.149 455.917 cv
cp
f
585.862 499.906 mo
589.637 499.903 593.406 499.933 597.173 499.988 cv
597.413 494.146 597.693 488.316 598.056 482.465 cv
598.369 476.685 598.842 470.92 599.362 465.161 cv
592.381 464.529 li
584.171 463.853 li
578.624 463.389 573.169 462.873 567.665 462.266 cv
573.437 499.942 li
573.438 499.942 573.438 499.943 573.439 499.943 cv
573.438 499.942 573.438 499.942 573.437 499.942 cv
577.586 499.837 581.722 499.95 585.862 499.906 cv
cp
f
609.858 464.32 mo
609.802 467.417 609.648 470.503 609.521 473.591 cv
609.119 482.849 li
608.861 488.544 608.572 494.256 608.204 499.959 cv
624.224 499.96 li
629.67 499.913 635.118 499.938 640.567 499.975 cv
642.022 486.419 li
642.268 483.976 642.625 481.542 642.921 479.104 cv
643.219 476.667 643.541 474.232 643.949 471.806 cv
609.858 464.32 li
cp
f
682.184 547.601 mo
682.252 547.734 682.294 547.874 682.31 548.015 cv
682.311 548.031 li
682.884 553.417 683.419 558.679 683.916 564.014 cv
684.616 572.007 li
684.849 574.648 685.137 577.407 684.898 580.214 cv
684.788 581.614 684.563 583.031 684.106 584.439 cv
683.865 585.142 683.57 585.846 683.128 586.522 cv
682.696 587.177 682.025 587.908 681.108 588.249 cv
680.665 588.418 680.225 588.491 679.821 588.521 cv
678.798 588.561 li
676.789 588.613 li
672.768 588.69 li
667.407 588.785 662.046 588.782 656.694 588.695 cv
662.021 588.039 667.337 587.466 672.655 586.99 cv
676.643 586.64 li
678.638 586.476 li
679.616 586.384 li
679.876 586.35 680.099 586.292 680.276 586.209 cv
680.934 585.944 681.494 584.836 681.83 583.716 cv
682.159 582.567 682.325 581.32 682.38 580.054 cv
682.492 577.514 682.189 574.932 681.934 572.255 cv
681.184 564.273 li
680.773 559.493 680.363 554.667 680.038 549.909 cv
679.372 550.149 678.691 550.355 677.992 550.496 cv
676.709 550.781 675.396 550.797 674.233 550.835 cv
667.016 551.048 li
662.204 551.175 657.394 551.124 652.579 551.035 cv
654.968 550.726 657.36 550.479 659.753 550.236 cv
666.924 549.479 li
674.091 548.782 li
675.323 548.672 676.425 548.597 677.479 548.297 cv
678.545 548.01 679.583 547.603 680.582 547.088 cv
681.166 546.787 681.883 547.017 682.184 547.601 cv
cp
606.813 590.605 mo
606.065 590.605 605.458 589.999 605.458 589.25 cv
605.462 589.144 li
605.464 589.119 li
606.95 570.654 li
607.482 564.49 608.086 558.34 608.825 552.203 cv
608.831 552.154 li
608.897 551.601 609.398 551.206 609.951 551.267 cv
615.266 551.853 620.631 552.167 625.999 552.421 cv
631.368 552.737 636.748 552.871 642.135 553.058 cv
642.133 553.058 642.132 553.058 642.13 553.058 cv
642.135 553.058 li
643.949 559.786 li
643.949 559.786 li
643.949 559.786 li
643.949 559.786 li
643.949 559.786 li
643.36 574.501 li
643.159 579.403 642.84 584.307 642.587 589.212 cv
642.561 589.698 642.169 590.078 641.692 590.096 cv
641.641 590.098 li
635.839 590.308 630.035 590.465 624.229 590.569 cv
618.425 590.688 612.621 590.604 606.813 590.605 cv
cp
599.033 576.441 mo
584.55 588.535 li
584.549 588.535 584.548 588.535 584.547 588.535 cv
581.296 588.614 578.048 588.613 574.799 588.623 cv
571.548 588.65 568.297 588.639 565.051 588.576 cv
564.619 588.568 564.276 588.211 564.284 587.78 cv
564.285 587.764 li
564.287 587.707 li
564.567 581.444 564.765 575.176 565.145 568.92 cv
565.463 562.66 565.897 556.408 566.289 550.152 cv
566.329 549.409 566.971 548.838 567.713 548.867 cv
573.261 549.132 578.818 549.357 584.253 549.699 cv
592.565 550.245 li
595.355 550.438 598.037 550.784 600.783 551.046 cv
600.843 551.052 li
601.353 551.101 601.726 551.553 601.677 552.063 cv
601.677 552.071 li
600.404 564.257 li
599.954 568.317 599.561 572.382 599.033 576.441 cv
599.033 576.441 li
cp
676.574 543.838 mo
676.213 543.914 675.844 543.967 675.468 543.992 cv
671.886 544.353 661.225 545.01 649.85 545.606 cv
645.821 545.817 641.707 546.02 637.782 546.2 cv
630.729 546.523 624.297 546.771 620.132 546.85 cv
616.997 546.839 613.697 546.775 610.386 546.664 cv
606.09 546.52 601.769 546.289 597.712 545.914 cv
591.12 545.302 585.182 545.5 578.577 545 cv
575.476 544.776 567.617 544.563 563.718 544.416 cv
562.457 544.372 561.34 545.839 561.188 547.744 cv
560.855 551.945 560.299 559.006 559.998 562.884 cv
559.339 571.35 558.831 577.625 558.216 585.456 cv
558.113 586.773 558.008 588.123 557.897 589.546 cv
557.838 590.31 557.789 591.145 558.091 591.752 cv
558.395 592.364 558.949 592.657 559.487 592.714 cv
561.705 592.946 566.471 593.314 573.322 593.714 cv
573.324 593.714 573.327 593.714 573.329 593.715 cv
575.359 593.833 577.573 593.955 579.96 594.076 cv
581.825 594.171 583.782 594.266 585.852 594.359 cv
614.343 595.856 652.356 595.334 676.281 593.498 cv
677.272 593.421 678.281 593.347 679.222 593.266 cv
679.413 593.252 679.671 593.233 679.986 593.212 cv
681.104 593.137 682.07 592.839 682.921 592.379 cv
687.219 590.06 688.292 583.198 687.675 575.19 cv
687.53 573.281 687.402 571.679 687.312 570.707 cv
686.662 563.727 686.512 547.137 686.068 541.495 cv
685.874 539.016 684.854 539.298 683.23 540.342 cv
681.573 541.407 679.287 543.267 676.574 543.838 cv
cp
f
599.234 564.173 mo
599.319 560.41 599.555 556.658 599.729 552.9 cv
597.273 552.781 594.791 552.621 592.375 552.576 cv
584.155 552.261 li
568.944 551.676 li
568.519 557.481 568.12 563.289 567.621 569.089 cv
567.167 575.069 566.547 581.038 565.991 587.011 cv
568.946 587.198 571.9 587.415 574.852 587.675 cv
578.084 587.942 581.319 588.199 584.55 588.535 cv
584.549 588.535 584.548 588.535 584.547 588.535 cv
584.548 588.535 584.549 588.535 584.55 588.535 cv
599.033 576.441 li
599.033 576.441 li
599.033 576.441 li
599.029 572.35 599.16 568.264 599.234 564.173 cv
cp
f
625.974 553.735 mo
620.929 553.775 615.88 553.666 610.821 553.379 cv
608.304 587.875 li
640.746 588.154 li
641.213 583.574 641.634 578.993 642.163 574.41 cv
642.758 569.532 643.213 564.646 643.949 559.786 cv
642.135 553.058 li
642.13 553.058 li
636.755 553.476 631.368 553.61 625.974 553.735 cv
cp
f
643.949 559.786 mo
643.949 559.786 li
643.949 559.786 li
643.949 559.786 li
cp
f
682.902 669.7 mo
683.6 666.207 683.216 662.531 683.163 658.891 cv
683.726 662.484 684.393 666.108 684.037 669.863 cv
683.81 671.713 683.527 673.684 681.949 675.329 cv
681.097 676.191 679.713 676.295 678.939 676.343 cv
676.215 676.557 li
672.581 676.824 668.946 677.153 665.303 677.358 cv
654.375 678.014 li
653.654 678.058 653.035 677.509 652.992 676.788 cv
652.992 676.782 li
652.989 676.738 li
652.644 670.463 652.369 664.186 652.123 657.907 cv
651.896 651.627 651.687 645.347 651.608 639.06 cv
651.608 638.998 li
651.602 638.48 652.015 638.055 652.531 638.045 cv
663.99 637.829 li
667.808 637.784 671.625 637.675 675.459 637.707 cv
671.67 638.221 667.863 638.594 664.056 639.031 cv
660.578 639.391 657.096 639.624 653.615 639.906 cv
654.083 645.862 654.444 651.822 654.782 657.784 cv
655.095 663.617 655.373 669.453 655.603 675.29 cv
665.171 674.941 li
668.802 674.796 672.441 674.775 676.079 674.691 cv
678.81 674.635 li
679.82 674.615 680.404 674.596 680.925 674.16 cv
681.99 673.21 682.556 671.379 682.902 669.7 cv
cp
623.89 678.258 mo
618.202 678.469 612.509 678.48 606.814 678.518 cv
606.106 678.523 605.529 677.953 605.525 677.246 cv
605.528 677.149 li
605.531 677.104 li
605.971 670.948 606.377 664.801 606.904 658.631 cv
607.174 655.551 607.381 652.462 607.701 649.389 cv
608.674 640.169 li
608.679 640.126 li
608.742 639.523 609.263 639.078 609.859 639.091 cv
626.904 639.523 li
629.745 639.577 632.585 639.74 635.427 639.854 cv
638.267 639.971 641.108 640.098 643.949 640.281 cv
641.404 669.02 li
641.404 669.02 li
641.424 671.71 641.398 674.399 641.355 677.085 cv
641.351 677.292 641.188 677.458 640.985 677.47 cv
640.949 677.472 li
638.106 677.617 635.264 677.831 632.421 677.919 cv
623.89 678.258 li
cp
599.329 677.14 mo
599.324 677.199 li
599.273 677.776 598.77 678.205 598.196 678.169 cv
594.057 677.906 589.921 677.601 585.792 677.267 cv
583.727 677.09 581.67 676.835 579.609 676.624 cv
577.55 676.414 575.493 676.174 573.439 675.903 cv
573.438 675.903 573.438 675.903 573.437 675.903 cv
567.665 638.227 li
567.666 638.227 567.667 638.227 567.667 638.227 cv
567.667 638.227 567.666 638.227 567.665 638.227 cv
573.188 638.088 578.76 638.033 584.237 638.107 cv
586.98 638.118 589.783 638.228 592.56 638.292 cv
595.364 638.328 598.053 638.578 600.802 638.716 cv
601.493 638.751 602.024 639.339 601.989 640.03 cv
601.988 640.042 li
601.986 640.075 li
600.77 658.605 li
600.356 664.773 599.873 670.965 599.329 677.14 cv
cp
676.053 631.891 mo
675.858 631.919 675.667 631.959 675.468 631.973 cv
671.946 632.327 661.581 632.968 650.423 633.556 cv
646.416 633.767 642.311 633.971 638.379 634.153 cv
638.294 634.156 638.209 634.161 638.125 634.165 cv
630.938 634.495 624.365 634.75 620.132 634.83 cv
616.997 634.819 613.697 634.755 610.386 634.645 cv
606.09 634.5 601.769 634.269 597.712 633.894 cv
591.12 633.282 585.182 633.48 578.577 632.98 cv
575.476 632.756 567.617 632.542 563.718 632.396 cv
562.457 632.352 561.34 633.819 561.188 635.725 cv
560.855 639.926 560.299 646.986 559.998 650.864 cv
559.339 659.33 558.831 665.605 558.216 673.437 cv
558.113 674.753 558.008 676.103 557.897 677.526 cv
557.838 678.29 557.789 679.125 558.091 679.732 cv
558.395 680.344 558.949 680.637 559.487 680.694 cv
561.849 680.941 567.093 681.343 574.68 681.773 cv
574.681 681.773 574.681 681.773 574.682 681.773 cv
576.728 681.889 578.944 682.007 581.321 682.125 cv
582.774 682.197 584.281 682.269 585.852 682.34 cv
601.815 683.178 620.77 683.379 638.57 683.076 cv
642.672 683.005 646.702 682.909 650.629 682.786 cv
659.943 682.495 668.605 682.061 675.969 681.502 cv
677.071 681.418 678.181 681.335 679.222 681.247 cv
679.413 681.232 679.671 681.214 679.986 681.193 cv
680.963 681.127 681.821 680.888 682.593 680.526 cv
687.166 678.384 688.308 671.379 687.675 663.17 cv
687.53 661.261 687.402 659.659 687.312 658.687 cv
686.662 651.707 686.279 635.126 685.834 629.483 cv
685.625 626.799 684.514 627.339 682.706 628.591 cv
681.034 629.749 678.759 631.499 676.053 631.891 cv
cp
f
585.862 675.867 mo
589.637 675.863 593.406 675.893 597.173 675.948 cv
597.413 670.106 597.693 664.276 598.056 658.426 cv
598.369 652.645 598.842 646.881 599.362 641.121 cv
592.381 640.49 li
584.171 639.813 li
578.625 639.35 573.17 638.833 567.667 638.227 cv
567.667 638.227 567.666 638.227 567.665 638.227 cv
573.437 675.903 li
573.438 675.903 573.438 675.903 573.439 675.903 cv
573.438 675.903 573.438 675.903 573.437 675.903 cv
577.586 675.797 581.722 675.911 585.862 675.867 cv
cp
f
635.427 640.708 mo
632.585 640.821 629.745 640.985 626.904 641.038 cv
610.962 641.442 li
609.621 658.85 li
609.216 664.536 608.723 670.242 608.246 675.943 cv
623.889 676.305 li
632.414 676.424 li
635.136 676.44 637.858 676.567 640.581 676.643 cv
640.832 674.1 641.095 671.559 641.404 669.02 cv
641.404 669.02 li
641.404 669.02 li
643.949 640.281 li
641.108 640.463 638.267 640.59 635.427 640.708 cv
cp
f
532.854 474.47 mo
532.854 460.794 li
519.179 460.794 li
519.179 474.47 li
532.854 474.47 li
cp
f
512.545 467.072 mo
512.545 474.47 li
519.179 474.47 li
519.179 460.794 li
532.854 460.794 li
532.854 474.47 li
519.179 474.47 li
519.179 481.105 li
525.391 481.105 li
539.49 481.105 li
539.49 454.159 li
512.545 454.159 li
512.545 467.072 li
cp
f
519.179 515.089 mo
532.854 515.089 li
532.854 501.414 li
519.179 501.414 li
519.179 515.089 li
cp
f
519.179 494.778 mo
519.179 501.414 li
532.854 501.414 li
532.854 515.089 li
519.179 515.089 li
519.179 521.724 li
525.391 521.724 li
539.49 521.724 li
539.49 494.778 li
536.139 494.778 li
525.391 494.778 li
519.179 494.778 li
cp
f
512.545 501.414 mo
512.545 510.064 li
512.545 515.089 li
519.179 515.089 li
519.179 501.414 li
512.545 501.414 li
cp
f
519.179 555.707 mo
532.854 555.707 li
532.854 542.033 li
519.179 542.033 li
519.179 555.707 li
cp
f
519.179 535.398 mo
519.179 542.033 li
532.854 542.033 li
532.854 555.707 li
519.179 555.707 li
519.179 562.342 li
525.391 562.342 li
536.139 562.342 li
539.49 562.342 li
539.49 535.398 li
536.139 535.398 li
525.391 535.398 li
519.179 535.398 li
cp
f
512.545 542.033 mo
512.545 542.31 li
512.545 553.058 li
512.545 555.707 li
519.179 555.707 li
519.179 542.033 li
512.545 542.033 li
cp
f
519.179 596.326 mo
532.854 596.326 li
532.854 582.652 li
519.179 582.652 li
519.179 596.326 li
cp
f
519.179 576.018 mo
519.179 582.652 li
532.854 582.652 li
532.854 596.326 li
519.179 596.326 li
519.179 602.961 li
525.391 602.961 li
536.139 602.961 li
539.49 602.961 li
539.49 576.018 li
536.139 576.018 li
525.391 576.018 li
519.179 576.018 li
cp
f
512.545 582.652 mo
512.545 585.302 li
512.545 596.051 li
512.545 596.326 li
519.179 596.326 li
519.179 582.652 li
512.545 582.652 li
cp
f
519.179 636.946 mo
532.854 636.946 li
532.854 623.272 li
519.179 623.272 li
519.179 636.946 li
cp
f
512.545 623.272 mo
512.545 628.295 li
512.545 636.946 li
519.179 636.946 li
519.179 623.272 li
512.545 623.272 li
cp
f
519.179 623.272 mo
532.854 623.272 li
532.854 636.946 li
519.179 636.946 li
519.179 643.581 li
525.391 643.581 li
536.139 643.581 li
539.49 643.581 li
539.49 616.637 li
525.391 616.637 li
519.179 616.637 li
519.179 623.272 li
cp
f
532.854 677.565 mo
532.854 663.892 li
519.179 663.892 li
519.179 677.565 li
532.854 677.565 li
cp
f
519.179 663.892 mo
532.854 663.892 li
532.854 677.565 li
519.179 677.565 li
519.179 663.892 li
512.545 663.892 li
512.545 671.288 li
512.545 684.2 li
539.49 684.2 li
539.49 657.256 li
525.391 657.256 li
519.179 657.256 li
519.179 663.892 li
cp
f
498.869 494.778 mo
512.545 494.778 li
512.545 481.105 li
498.869 481.105 li
498.869 494.778 li
cp
f
492.236 494.778 mo
498.869 494.778 li
498.869 481.105 li
492.236 481.105 li
492.236 488.568 li
492.236 494.778 li
cp
f
498.869 481.105 mo
512.545 481.105 li
512.545 494.778 li
498.869 494.778 li
498.869 501.414 li
503.894 501.414 li
512.545 501.414 li
519.179 501.414 li
519.179 494.778 li
519.179 488.568 li
519.179 481.105 li
519.179 474.47 li
512.545 474.47 li
503.894 474.47 li
498.869 474.47 li
498.869 481.105 li
cp
f
498.869 535.398 mo
512.545 535.398 li
512.545 521.724 li
498.869 521.724 li
498.869 535.398 li
cp
f
492.236 521.724 mo
492.236 531.561 li
492.236 535.398 li
498.869 535.398 li
498.869 521.724 li
492.236 521.724 li
cp
f
512.545 515.089 mo
503.894 515.089 li
498.869 515.089 li
498.869 521.724 li
512.545 521.724 li
512.545 535.398 li
498.869 535.398 li
498.869 542.033 li
503.894 542.033 li
512.545 542.033 li
519.179 542.033 li
519.179 535.398 li
519.179 531.561 li
519.179 521.724 li
519.179 515.089 li
512.545 515.089 li
cp
f
498.869 576.018 mo
512.545 576.018 li
512.545 562.342 li
498.869 562.342 li
498.869 576.018 li
cp
f
492.236 562.342 mo
492.236 563.806 li
492.236 574.554 li
492.236 576.018 li
498.869 576.018 li
498.869 562.342 li
492.236 562.342 li
cp
f
512.545 555.707 mo
503.894 555.707 li
498.869 555.707 li
498.869 562.342 li
512.545 562.342 li
512.545 576.018 li
498.869 576.018 li
498.869 582.652 li
503.894 582.652 li
512.545 582.652 li
519.179 582.652 li
519.179 576.018 li
519.179 574.554 li
519.179 563.806 li
519.179 562.342 li
519.179 555.707 li
512.545 555.707 li
cp
f
498.869 616.637 mo
512.545 616.637 li
512.545 602.961 li
498.869 602.961 li
498.869 616.637 li
cp
f
492.236 602.961 mo
492.236 606.799 li
492.236 616.637 li
498.869 616.637 li
498.869 602.961 li
492.236 602.961 li
cp
f
512.545 596.326 mo
503.894 596.326 li
498.869 596.326 li
498.869 602.961 li
512.545 602.961 li
512.545 616.637 li
498.869 616.637 li
498.869 623.272 li
503.894 623.272 li
512.545 623.272 li
519.179 623.272 li
519.179 616.637 li
519.179 606.799 li
519.179 602.961 li
519.179 596.326 li
512.545 596.326 li
cp
f
498.869 657.256 mo
512.545 657.256 li
512.545 643.581 li
498.869 643.581 li
498.869 657.256 li
cp
f
492.236 643.581 mo
492.236 649.792 li
492.236 657.256 li
498.869 657.256 li
498.869 643.581 li
492.236 643.581 li
cp
f
519.179 663.892 mo
519.179 657.256 li
519.179 649.792 li
519.179 643.581 li
519.179 636.946 li
512.545 636.946 li
503.894 636.946 li
498.869 636.946 li
498.869 643.581 li
512.545 643.581 li
512.545 657.256 li
498.869 657.256 li
498.869 663.892 li
503.894 663.892 li
512.545 663.892 li
519.179 663.892 li
cp
f
492.236 474.47 mo
492.236 460.794 li
478.559 460.794 li
478.559 474.47 li
492.236 474.47 li
cp
f
478.559 474.47 mo
478.559 460.794 li
492.236 460.794 li
492.236 474.47 li
478.559 474.47 li
478.559 481.105 li
482.397 481.105 li
492.236 481.105 li
498.869 481.105 li
498.869 474.47 li
498.869 454.159 li
471.926 454.159 li
471.926 474.47 li
478.559 474.47 li
cp
f
478.559 515.089 mo
492.236 515.089 li
492.236 501.414 li
478.559 501.414 li
478.559 515.089 li
cp
f
471.926 515.089 mo
478.559 515.089 li
478.559 501.414 li
471.926 501.414 li
471.926 510.064 li
471.926 515.089 li
cp
f
492.236 501.414 mo
492.236 515.089 li
478.559 515.089 li
478.559 521.724 li
482.397 521.724 li
492.236 521.724 li
498.869 521.724 li
498.869 515.089 li
498.869 510.064 li
498.869 501.414 li
498.869 494.778 li
492.236 494.778 li
482.397 494.778 li
478.559 494.778 li
478.559 501.414 li
492.236 501.414 li
cp
f
478.559 555.707 mo
492.236 555.707 li
492.236 542.033 li
478.559 542.033 li
478.559 555.707 li
cp
f
471.926 542.033 mo
471.926 542.31 li
471.926 553.058 li
471.926 555.707 li
478.559 555.707 li
478.559 542.033 li
471.926 542.033 li
cp
f
492.236 535.398 mo
482.397 535.398 li
478.559 535.398 li
478.559 542.033 li
492.236 542.033 li
492.236 555.707 li
478.559 555.707 li
478.559 562.342 li
482.397 562.342 li
492.236 562.342 li
498.869 562.342 li
498.869 555.707 li
498.869 553.058 li
498.869 542.31 li
498.869 542.033 li
498.869 535.398 li
492.236 535.398 li
cp
f
478.559 596.326 mo
492.236 596.326 li
492.236 582.652 li
478.559 582.652 li
478.559 596.326 li
cp
f
471.926 582.652 mo
471.926 585.302 li
471.926 596.051 li
471.926 596.326 li
478.559 596.326 li
478.559 582.652 li
471.926 582.652 li
cp
f
492.236 576.018 mo
482.397 576.018 li
478.559 576.018 li
478.559 582.652 li
492.236 582.652 li
492.236 596.326 li
478.559 596.326 li
478.559 602.961 li
482.397 602.961 li
492.236 602.961 li
498.869 602.961 li
498.869 596.326 li
498.869 596.051 li
498.869 585.302 li
498.869 582.652 li
498.869 576.018 li
492.236 576.018 li
cp
f
492.236 636.946 mo
492.236 623.272 li
478.559 623.272 li
478.559 636.946 li
492.236 636.946 li
cp
f
498.869 623.272 mo
498.869 616.637 li
492.236 616.637 li
482.397 616.637 li
478.559 616.637 li
478.559 623.272 li
492.236 623.272 li
492.236 636.946 li
478.559 636.946 li
478.559 643.581 li
482.397 643.581 li
492.236 643.581 li
498.869 643.581 li
498.869 636.946 li
498.869 628.295 li
498.869 623.272 li
cp
f
478.559 623.272 mo
471.926 623.272 li
471.926 628.295 li
471.926 636.946 li
478.559 636.946 li
478.559 623.272 li
cp
f
492.236 677.565 mo
492.236 663.892 li
478.559 663.892 li
478.559 677.565 li
492.236 677.565 li
cp
f
498.869 657.256 mo
492.236 657.256 li
482.397 657.256 li
478.559 657.256 li
478.559 663.892 li
492.236 663.892 li
492.236 677.565 li
478.559 677.565 li
478.559 663.892 li
471.926 663.892 li
471.926 684.2 li
498.869 684.2 li
498.869 663.892 li
498.869 657.256 li
cp
f
458.25 494.778 mo
471.926 494.778 li
471.926 481.105 li
458.25 481.105 li
458.25 494.778 li
cp
f
451.617 494.778 mo
458.25 494.778 li
458.25 481.105 li
451.617 481.105 li
451.617 488.568 li
451.617 494.778 li
cp
f
458.25 481.105 mo
471.926 481.105 li
471.926 494.778 li
458.25 494.778 li
458.25 501.414 li
460.901 501.414 li
471.649 501.414 li
471.926 501.414 li
478.559 501.414 li
478.559 494.778 li
478.559 488.568 li
478.559 481.105 li
478.559 474.47 li
471.926 474.47 li
471.649 474.47 li
460.901 474.47 li
458.25 474.47 li
458.25 481.105 li
cp
f
458.25 535.398 mo
471.926 535.398 li
471.926 521.724 li
458.25 521.724 li
458.25 535.398 li
cp
f
451.617 535.398 mo
458.25 535.398 li
458.25 521.724 li
451.617 521.724 li
451.617 531.561 li
451.617 535.398 li
cp
f
471.926 521.724 mo
471.926 535.398 li
458.25 535.398 li
458.25 542.033 li
460.901 542.033 li
471.649 542.033 li
471.926 542.033 li
478.559 542.033 li
478.559 535.398 li
478.559 531.561 li
478.559 521.724 li
478.559 515.089 li
471.926 515.089 li
471.649 515.089 li
460.901 515.089 li
458.25 515.089 li
458.25 521.724 li
471.926 521.724 li
cp
f
458.25 576.018 mo
471.926 576.018 li
471.926 562.342 li
458.25 562.342 li
458.25 576.018 li
cp
f
451.617 562.342 mo
451.617 563.806 li
451.617 574.554 li
451.617 576.018 li
458.25 576.018 li
458.25 562.342 li
451.617 562.342 li
cp
f
471.926 555.707 mo
471.649 555.707 li
460.901 555.707 li
458.25 555.707 li
458.25 562.342 li
471.926 562.342 li
471.926 576.018 li
458.25 576.018 li
458.25 582.652 li
460.901 582.652 li
471.649 582.652 li
471.926 582.652 li
478.559 582.652 li
478.559 576.018 li
478.559 574.554 li
478.559 563.806 li
478.559 562.342 li
478.559 555.707 li
471.926 555.707 li
cp
f
471.926 616.637 mo
471.926 602.961 li
458.25 602.961 li
458.25 616.637 li
471.926 616.637 li
cp
f
478.559 602.961 mo
478.559 596.326 li
471.926 596.326 li
471.649 596.326 li
460.901 596.326 li
458.25 596.326 li
458.25 602.961 li
471.926 602.961 li
471.926 616.637 li
458.25 616.637 li
458.25 623.272 li
460.901 623.272 li
471.649 623.272 li
471.926 623.272 li
478.559 623.272 li
478.559 616.637 li
478.559 606.799 li
478.559 602.961 li
cp
f
458.25 602.961 mo
451.617 602.961 li
451.617 606.799 li
451.617 616.637 li
458.25 616.637 li
458.25 602.961 li
cp
f
458.25 657.256 mo
471.926 657.256 li
471.926 643.581 li
458.25 643.581 li
458.25 657.256 li
cp
f
451.617 643.581 mo
451.617 649.792 li
451.617 657.256 li
458.25 657.256 li
458.25 643.581 li
451.617 643.581 li
cp
f
478.559 663.892 mo
478.559 657.256 li
478.559 649.792 li
478.559 643.581 li
478.559 636.946 li
471.926 636.946 li
471.649 636.946 li
460.901 636.946 li
458.25 636.946 li
458.25 643.581 li
471.926 643.581 li
471.926 657.256 li
458.25 657.256 li
458.25 663.892 li
460.901 663.892 li
471.649 663.892 li
471.926 663.892 li
478.559 663.892 li
cp
f
451.617 474.47 mo
451.617 460.794 li
437.941 460.794 li
437.941 474.47 li
451.617 474.47 li
cp
f
437.941 474.47 mo
437.941 460.794 li
451.617 460.794 li
451.617 474.47 li
437.941 474.47 li
437.941 481.105 li
439.405 481.105 li
450.153 481.105 li
451.617 481.105 li
458.25 481.105 li
458.25 474.47 li
458.25 454.159 li
431.308 454.159 li
431.308 474.47 li
437.941 474.47 li
cp
f
437.941 515.089 mo
451.617 515.089 li
451.617 501.414 li
437.941 501.414 li
437.941 515.089 li
cp
f
431.308 515.089 mo
437.941 515.089 li
437.941 501.414 li
431.308 501.414 li
431.308 510.064 li
431.308 515.089 li
cp
f
451.617 501.414 mo
451.617 515.089 li
437.941 515.089 li
437.941 521.724 li
439.405 521.724 li
450.153 521.724 li
451.617 521.724 li
458.25 521.724 li
458.25 515.089 li
458.25 510.064 li
458.25 501.414 li
458.25 494.778 li
451.617 494.778 li
450.153 494.778 li
439.405 494.778 li
437.941 494.778 li
437.941 501.414 li
451.617 501.414 li
cp
f
437.941 555.707 mo
451.617 555.707 li
451.617 542.033 li
437.941 542.033 li
437.941 555.707 li
cp
f
431.308 553.058 mo
431.308 555.707 li
437.941 555.707 li
437.941 542.033 li
431.308 542.033 li
431.308 542.31 li
431.308 553.058 li
cp
f
451.617 542.033 mo
451.617 555.707 li
437.941 555.707 li
437.941 562.342 li
439.405 562.342 li
450.153 562.342 li
451.617 562.342 li
458.25 562.342 li
458.25 555.707 li
458.25 553.058 li
458.25 542.31 li
458.25 542.033 li
458.25 535.398 li
451.617 535.398 li
450.153 535.398 li
439.405 535.398 li
437.941 535.398 li
437.941 542.033 li
451.617 542.033 li
cp
f
451.617 596.326 mo
451.617 582.652 li
437.941 582.652 li
437.941 596.326 li
451.617 596.326 li
cp
f
458.25 585.302 mo
458.25 582.652 li
458.25 576.018 li
451.617 576.018 li
450.153 576.018 li
439.405 576.018 li
437.941 576.018 li
437.941 582.652 li
451.617 582.652 li
451.617 596.326 li
437.941 596.326 li
437.941 602.961 li
439.405 602.961 li
450.153 602.961 li
451.617 602.961 li
458.25 602.961 li
458.25 596.326 li
458.25 596.051 li
458.25 585.302 li
cp
f
437.941 582.652 mo
431.308 582.652 li
431.308 585.302 li
431.308 596.051 li
431.308 596.326 li
437.941 596.326 li
437.941 582.652 li
cp
f
451.617 636.946 mo
451.617 623.272 li
437.941 623.272 li
437.941 636.946 li
451.617 636.946 li
cp
f
458.25 623.272 mo
458.25 616.637 li
451.617 616.637 li
450.153 616.637 li
439.405 616.637 li
437.941 616.637 li
437.941 623.272 li
451.617 623.272 li
451.617 636.946 li
437.941 636.946 li
437.941 643.581 li
439.405 643.581 li
450.153 643.581 li
451.617 643.581 li
458.25 643.581 li
458.25 636.946 li
458.25 628.295 li
458.25 623.272 li
cp
f
437.941 623.272 mo
431.308 623.272 li
431.308 628.295 li
431.308 636.946 li
437.941 636.946 li
437.941 623.272 li
cp
f
451.617 677.565 mo
451.617 663.892 li
437.941 663.892 li
437.941 677.565 li
451.617 677.565 li
cp
f
458.25 657.256 mo
451.617 657.256 li
450.153 657.256 li
439.405 657.256 li
437.941 657.256 li
437.941 663.892 li
451.617 663.892 li
451.617 677.565 li
437.941 677.565 li
437.941 663.892 li
431.308 663.892 li
431.308 684.2 li
458.25 684.2 li
458.25 663.892 li
458.25 657.256 li
cp
f
417.631 494.778 mo
431.308 494.778 li
431.308 481.105 li
417.631 481.105 li
417.631 494.778 li
cp
f
410.998 494.778 mo
417.631 494.778 li
417.631 481.105 li
410.998 481.105 li
410.998 488.568 li
410.998 494.778 li
cp
f
417.631 481.105 mo
431.308 481.105 li
431.308 494.778 li
417.631 494.778 li
417.631 501.414 li
417.908 501.414 li
428.656 501.414 li
431.308 501.414 li
437.941 501.414 li
437.941 494.778 li
437.941 488.568 li
437.941 481.105 li
437.941 474.47 li
431.308 474.47 li
428.656 474.47 li
417.908 474.47 li
417.631 474.47 li
417.631 481.105 li
cp
f
417.631 535.398 mo
431.308 535.398 li
431.308 521.724 li
417.631 521.724 li
417.631 535.398 li
cp
f
410.998 535.398 mo
417.631 535.398 li
417.631 521.724 li
410.998 521.724 li
410.998 531.561 li
410.998 535.398 li
cp
f
431.308 521.724 mo
431.308 535.398 li
417.631 535.398 li
417.631 542.033 li
417.908 542.033 li
428.656 542.033 li
431.308 542.033 li
437.941 542.033 li
437.941 535.398 li
437.941 531.561 li
437.941 521.724 li
437.941 515.089 li
431.308 515.089 li
428.656 515.089 li
417.908 515.089 li
417.631 515.089 li
417.631 521.724 li
431.308 521.724 li
cp
f
431.308 576.018 mo
431.308 562.342 li
417.631 562.342 li
417.631 576.018 li
431.308 576.018 li
cp
f
428.656 582.652 mo
431.308 582.652 li
437.941 582.652 li
437.941 576.018 li
437.941 574.554 li
437.941 563.806 li
437.941 562.342 li
437.941 555.707 li
431.308 555.707 li
428.656 555.707 li
417.908 555.707 li
417.631 555.707 li
417.631 562.342 li
431.308 562.342 li
431.308 576.018 li
417.631 576.018 li
417.631 582.652 li
417.908 582.652 li
428.656 582.652 li
cp
f
417.631 562.342 mo
410.998 562.342 li
410.998 563.806 li
410.998 574.554 li
410.998 576.018 li
417.631 576.018 li
417.631 562.342 li
cp
f
431.308 616.637 mo
431.308 602.961 li
417.631 602.961 li
417.631 616.637 li
431.308 616.637 li
cp
f
437.941 602.961 mo
437.941 596.326 li
431.308 596.326 li
428.656 596.326 li
417.908 596.326 li
417.631 596.326 li
417.631 602.961 li
431.308 602.961 li
431.308 616.637 li
417.631 616.637 li
417.631 623.272 li
417.908 623.272 li
428.656 623.272 li
431.308 623.272 li
437.941 623.272 li
437.941 616.637 li
437.941 606.799 li
437.941 602.961 li
cp
f
417.631 602.961 mo
410.998 602.961 li
410.998 606.799 li
410.998 616.637 li
417.631 616.637 li
417.631 602.961 li
cp
f
417.631 657.256 mo
431.308 657.256 li
431.308 643.581 li
417.631 643.581 li
417.631 657.256 li
cp
f
410.998 643.581 mo
410.998 649.792 li
410.998 657.256 li
417.631 657.256 li
417.631 643.581 li
410.998 643.581 li
cp
f
437.941 663.892 mo
437.941 657.256 li
437.941 649.792 li
437.941 643.581 li
437.941 636.946 li
431.308 636.946 li
428.656 636.946 li
417.908 636.946 li
417.631 636.946 li
417.631 643.581 li
431.308 643.581 li
431.308 657.256 li
417.631 657.256 li
417.631 663.892 li
417.908 663.892 li
428.656 663.892 li
431.308 663.892 li
437.941 663.892 li
cp
f
410.998 474.47 mo
410.998 460.794 li
397.321 460.794 li
397.321 474.47 li
410.998 474.47 li
cp
f
397.321 474.47 mo
397.321 460.794 li
410.998 460.794 li
410.998 474.47 li
397.321 474.47 li
397.321 481.105 li
407.16 481.105 li
410.998 481.105 li
417.631 481.105 li
417.631 474.47 li
417.631 454.159 li
390.688 454.159 li
390.688 474.47 li
397.321 474.47 li
cp
f
397.321 515.089 mo
410.998 515.089 li
410.998 501.414 li
397.321 501.414 li
397.321 515.089 li
cp
f
390.688 515.089 mo
397.321 515.089 li
397.321 501.414 li
390.688 501.414 li
390.688 510.064 li
390.688 515.089 li
cp
f
410.998 501.414 mo
410.998 515.089 li
397.321 515.089 li
397.321 521.724 li
407.16 521.724 li
410.998 521.724 li
417.631 521.724 li
417.631 515.089 li
417.631 510.064 li
417.631 501.414 li
417.631 494.778 li
410.998 494.778 li
407.16 494.778 li
397.321 494.778 li
397.321 501.414 li
410.998 501.414 li
cp
f
410.998 555.707 mo
410.998 542.033 li
397.321 542.033 li
397.321 555.707 li
410.998 555.707 li
cp
f
410.998 562.342 mo
417.631 562.342 li
417.631 555.707 li
417.631 553.058 li
417.631 542.31 li
417.631 542.033 li
417.631 535.398 li
410.998 535.398 li
407.16 535.398 li
397.321 535.398 li
397.321 542.033 li
410.998 542.033 li
410.998 555.707 li
397.321 555.707 li
397.321 562.342 li
407.16 562.342 li
410.998 562.342 li
cp
f
397.321 542.033 mo
390.688 542.033 li
390.688 542.31 li
390.688 553.058 li
390.688 555.707 li
397.321 555.707 li
397.321 542.033 li
cp
f
410.998 596.326 mo
410.998 582.652 li
397.321 582.652 li
397.321 596.326 li
410.998 596.326 li
cp
f
410.998 602.961 mo
417.631 602.961 li
417.631 596.326 li
417.631 596.051 li
417.631 585.302 li
417.631 582.652 li
417.631 576.018 li
410.998 576.018 li
407.16 576.018 li
397.321 576.018 li
397.321 582.652 li
410.998 582.652 li
410.998 596.326 li
397.321 596.326 li
397.321 602.961 li
407.16 602.961 li
410.998 602.961 li
cp
f
397.321 582.652 mo
390.688 582.652 li
390.688 585.302 li
390.688 596.051 li
390.688 596.326 li
397.321 596.326 li
397.321 582.652 li
cp
f
410.998 636.946 mo
410.998 623.272 li
397.321 623.272 li
397.321 636.946 li
410.998 636.946 li
cp
f
417.631 623.272 mo
417.631 616.637 li
410.998 616.637 li
407.16 616.637 li
397.321 616.637 li
397.321 623.272 li
410.998 623.272 li
410.998 636.946 li
397.321 636.946 li
397.321 643.581 li
407.16 643.581 li
410.998 643.581 li
417.631 643.581 li
417.631 636.946 li
417.631 628.295 li
417.631 623.272 li
cp
f
397.321 623.272 mo
390.688 623.272 li
390.688 628.295 li
390.688 636.946 li
397.321 636.946 li
397.321 623.272 li
cp
f
397.321 677.565 mo
410.998 677.565 li
410.998 663.892 li
397.321 663.892 li
397.321 677.565 li
cp
f
417.631 657.256 mo
410.998 657.256 li
407.16 657.256 li
397.321 657.256 li
397.321 663.892 li
410.998 663.892 li
410.998 677.565 li
397.321 677.565 li
397.321 663.892 li
390.688 663.892 li
390.688 684.2 li
417.631 684.2 li
417.631 663.892 li
417.631 657.256 li
cp
f
390.688 494.778 mo
390.688 481.105 li
377.012 481.105 li
377.012 494.778 li
390.688 494.778 li
cp
f
377.012 481.105 mo
390.688 481.105 li
390.688 494.778 li
377.012 494.778 li
377.012 501.414 li
385.663 501.414 li
390.688 501.414 li
397.321 501.414 li
397.321 494.778 li
397.321 488.568 li
397.321 481.105 li
397.321 474.47 li
390.688 474.47 li
385.663 474.47 li
377.012 474.47 li
377.012 481.105 li
cp
f
377.012 481.105 mo
370.378 481.105 li
370.378 488.568 li
370.378 494.778 li
377.012 494.778 li
377.012 481.105 li
cp
f
390.688 535.398 mo
390.688 521.724 li
377.012 521.724 li
377.012 535.398 li
390.688 535.398 li
cp
f
390.688 542.033 mo
397.321 542.033 li
397.321 535.398 li
397.321 531.561 li
397.321 521.724 li
397.321 515.089 li
390.688 515.089 li
385.663 515.089 li
377.012 515.089 li
377.012 521.724 li
390.688 521.724 li
390.688 535.398 li
377.012 535.398 li
377.012 542.033 li
385.663 542.033 li
390.688 542.033 li
cp
f
377.012 521.724 mo
370.378 521.724 li
370.378 531.561 li
370.378 535.398 li
377.012 535.398 li
377.012 521.724 li
cp
f
390.688 576.018 mo
390.688 562.342 li
377.012 562.342 li
377.012 576.018 li
390.688 576.018 li
cp
f
390.688 582.652 mo
397.321 582.652 li
397.321 576.018 li
397.321 574.554 li
397.321 563.806 li
397.321 562.342 li
397.321 555.707 li
390.688 555.707 li
385.663 555.707 li
377.012 555.707 li
377.012 562.342 li
390.688 562.342 li
390.688 576.018 li
377.012 576.018 li
377.012 582.652 li
385.663 582.652 li
390.688 582.652 li
cp
f
377.012 562.342 mo
370.378 562.342 li
370.378 563.806 li
370.378 574.554 li
370.378 576.018 li
377.012 576.018 li
377.012 562.342 li
cp
f
390.688 616.637 mo
390.688 602.961 li
377.012 602.961 li
377.012 616.637 li
390.688 616.637 li
cp
f
390.688 623.272 mo
397.321 623.272 li
397.321 616.637 li
397.321 606.799 li
397.321 602.961 li
397.321 596.326 li
390.688 596.326 li
385.663 596.326 li
377.012 596.326 li
377.012 602.961 li
390.688 602.961 li
390.688 616.637 li
377.012 616.637 li
377.012 623.272 li
385.663 623.272 li
390.688 623.272 li
cp
f
377.012 602.961 mo
370.378 602.961 li
370.378 606.799 li
370.378 616.637 li
377.012 616.637 li
377.012 602.961 li
cp
f
377.012 657.256 mo
390.688 657.256 li
390.688 643.581 li
377.012 643.581 li
377.012 657.256 li
cp
f
397.321 663.892 mo
397.321 657.256 li
397.321 649.792 li
397.321 643.581 li
397.321 636.946 li
390.688 636.946 li
385.663 636.946 li
377.012 636.946 li
377.012 643.581 li
390.688 643.581 li
390.688 657.256 li
377.012 657.256 li
377.012 663.892 li
385.663 663.892 li
390.688 663.892 li
397.321 663.892 li
cp
f
370.378 643.581 mo
370.378 649.792 li
370.378 657.256 li
377.012 657.256 li
377.012 643.581 li
370.378 643.581 li
cp
f
356.702 474.47 mo
370.378 474.47 li
370.378 460.794 li
356.702 460.794 li
356.702 474.47 li
cp
f
370.378 474.47 mo
356.702 474.47 li
356.702 460.794 li
370.378 460.794 li
370.378 474.47 li
cp
377.012 481.105 mo
377.012 474.47 li
377.012 467.072 li
377.012 454.159 li
350.069 454.159 li
350.069 481.105 li
364.167 481.105 li
370.378 481.105 li
377.012 481.105 li
cp
f
370.378 515.089 mo
370.378 501.414 li
356.702 501.414 li
356.702 515.089 li
370.378 515.089 li
cp
f
356.702 501.414 mo
370.378 501.414 li
370.378 515.089 li
356.702 515.089 li
356.702 501.414 li
cp
377.012 521.724 mo
377.012 515.089 li
377.012 510.064 li
377.012 501.414 li
377.012 494.778 li
370.378 494.778 li
364.167 494.778 li
353.419 494.778 li
350.069 494.778 li
350.069 521.724 li
364.167 521.724 li
370.378 521.724 li
377.012 521.724 li
cp
f
356.702 542.033 mo
356.702 555.707 li
370.378 555.707 li
370.378 542.033 li
356.702 542.033 li
cp
f
370.378 555.707 mo
356.702 555.707 li
356.702 542.033 li
370.378 542.033 li
370.378 555.707 li
cp
370.378 562.342 mo
377.012 562.342 li
377.012 555.707 li
377.012 553.058 li
377.012 542.31 li
377.012 542.033 li
377.012 535.398 li
370.378 535.398 li
364.167 535.398 li
353.419 535.398 li
350.069 535.398 li
350.069 562.342 li
353.419 562.342 li
364.167 562.342 li
370.378 562.342 li
cp
f
356.702 582.652 mo
356.702 596.326 li
370.378 596.326 li
370.378 582.652 li
356.702 582.652 li
cp
f
370.378 596.326 mo
356.702 596.326 li
356.702 582.652 li
370.378 582.652 li
370.378 596.326 li
cp
370.378 602.961 mo
377.012 602.961 li
377.012 596.326 li
377.012 596.051 li
377.012 585.302 li
377.012 582.652 li
377.012 576.018 li
370.378 576.018 li
364.167 576.018 li
353.419 576.018 li
350.069 576.018 li
350.069 602.961 li
353.419 602.961 li
364.167 602.961 li
370.378 602.961 li
cp
f
356.702 623.272 mo
356.702 636.946 li
370.378 636.946 li
370.378 623.272 li
356.702 623.272 li
cp
f
370.378 636.946 mo
356.702 636.946 li
356.702 623.272 li
370.378 623.272 li
370.378 636.946 li
cp
370.378 643.581 mo
377.012 643.581 li
377.012 636.946 li
377.012 628.295 li
377.012 623.272 li
377.012 616.637 li
370.378 616.637 li
364.167 616.637 li
350.069 616.637 li
350.069 643.581 li
353.419 643.581 li
364.167 643.581 li
370.378 643.581 li
cp
f
356.702 663.892 mo
356.702 677.565 li
370.378 677.565 li
370.378 663.892 li
356.702 663.892 li
cp
f
370.378 677.565 mo
356.702 677.565 li
356.702 663.892 li
370.378 663.892 li
370.378 677.565 li
cp
377.012 657.256 mo
370.378 657.256 li
364.167 657.256 li
350.069 657.256 li
350.069 684.2 li
377.012 684.2 li
377.012 671.288 li
377.012 663.892 li
377.012 657.256 li
cp
f
444.779 361.062 mo
436.641 361.105 428.503 361.199 420.365 361.549 cv
412.227 361.872 404.089 362.347 395.951 363.255 cv
404.089 364.163 412.227 364.638 420.365 364.961 cv
428.503 365.311 436.641 365.404 444.779 365.448 cv
452.917 365.41 461.055 365.316 469.193 364.967 cv
477.331 364.646 485.468 364.168 493.606 363.255 cv
485.468 362.341 477.331 361.864 469.193 361.542 cv
461.055 361.193 452.917 361.1 444.779 361.062 cv
cp
f
586.467 475.828 mo
586.522 474.631 586.234 473.614 585.603 472.778 cv
584.972 471.942 584.074 471.497 582.908 471.443 cv
581.742 471.389 580.806 471.749 580.101 472.523 cv
579.395 473.298 579.015 474.284 578.959 475.48 cv
578.904 476.677 579.192 477.693 579.823 478.529 cv
580.454 479.366 581.352 479.811 582.518 479.865 cv
583.611 479.916 584.528 479.567 585.269 478.818 cv
586.01 478.07 586.409 477.072 586.467 475.828 cv
cp
585.949 487.033 mo
586.004 485.837 585.716 484.82 585.084 483.984 cv
584.454 483.147 583.556 482.702 582.39 482.648 cv
581.224 482.594 580.288 482.954 579.582 483.729 cv
578.877 484.504 578.497 485.49 578.441 486.686 cv
578.386 487.882 578.674 488.898 579.305 489.735 cv
579.936 490.572 580.834 491.017 582 491.071 cv
583.093 491.121 584.01 490.772 584.751 490.023 cv
585.492 489.275 585.891 488.278 585.949 487.033 cv
cp
590.275 487.894 mo
590.184 489.871 589.406 491.34 587.943 492.3 cv
586.48 493.26 584.454 493.68 581.867 493.56 cv
579.352 493.444 577.386 492.839 575.969 491.746 cv
574.551 490.653 573.888 489.117 573.979 487.14 cv
574.041 485.821 li
574.146 483.551 575.219 481.95 577.26 481.017 cv
575.314 479.898 574.393 478.205 574.498 475.934 cv
574.559 474.616 li
574.65 472.638 575.452 471.171 576.964 470.213 cv
578.477 469.256 580.49 468.835 583.005 468.952 cv
585.592 469.071 587.57 469.677 588.939 470.768 cv
590.307 471.858 590.946 473.392 590.855 475.37 cv
590.794 476.688 li
590.689 478.958 589.624 480.56 587.599 481.495 cv
589.529 482.611 590.441 484.305 590.336 486.575 cv
590.275 487.894 li
cp
1 1 1 rgb
f
619.81 487.249 mo
625.748 487.383 li
626.021 475.326 li
625.635 476.16 li
619.81 487.249 li
cp
623.525 494.85 mo
623.564 493.127 li
624.937 492.938 625.626 492.722 625.632 492.478 cv
625.691 489.875 li
616.052 489.657 li
626.245 470.271 li
630.569 470.369 li
630.182 487.484 li
632.125 487.528 li
632.068 490.02 li
630.125 489.975 li
630.067 492.578 li
630.062 492.797 630.703 493.057 631.993 493.355 cv
631.955 495.041 li
623.525 494.85 li
cp
f
665.141 493.25 mo
665.138 491.123 li
666.506 491.122 667.191 491.023 667.191 490.827 cv
667.17 472.828 li
666.486 473.293 665.436 473.526 664.019 473.528 cv
664.016 471.438 li
664.407 471.438 664.792 471.364 665.171 471.217 cv
665.549 471.07 665.885 470.868 666.178 470.611 cv
666.471 470.354 666.709 470.055 666.892 469.712 cv
667.075 469.37 667.166 468.991 667.166 468.575 cv
671.602 468.57 li
671.626 490.822 li
671.626 491.042 672.287 491.152 673.606 491.15 cv
673.609 493.24 li
665.141 493.25 li
cp
f
580.555 581.396 mo
576.38 581.203 li
584.933 558.956 li
579.22 558.691 li
578.928 558.678 578.61 559.703 578.271 561.767 cv
576.623 561.69 li
576.442 556.067 li
590.284 556.708 li
580.555 581.396 li
cp
f
617.368 582.665 mo
617.501 576.764 li
617.544 574.858 618.07 573.238 619.078 571.904 cv
620.086 570.571 621.585 569.682 623.576 569.238 cv
625 568.928 626.056 568.457 626.743 567.824 cv
627.429 567.193 627.787 566.229 627.816 564.934 cv
627.854 563.248 627.571 562.001 626.967 561.193 cv
626.363 560.385 625.39 559.965 624.049 559.935 cv
623.073 559.913 622.208 560.095 621.455 560.481 cv
620.702 560.867 620.034 561.543 619.451 562.507 cv
618.358 560.539 li
619.26 559.606 620.264 558.957 621.371 558.591 cv
622.479 558.225 623.69 558.057 625.009 558.087 cv
625.229 558.092 li
627.595 558.17 629.338 558.802 630.46 559.988 cv
631.581 561.175 632.113 563.026 632.056 565.543 cv
632.054 565.653 li
631.955 568.951 629.947 570.996 626.033 571.787 cv
623.366 572.313 622.001 573.981 621.938 576.791 cv
621.842 581.006 li
628.883 581.166 li
629.15 581.171 629.446 579.894 629.772 577.335 cv
631.458 577.374 li
631.771 582.991 li
617.368 582.665 li
cp
f
665.261 564.582 mo
665.29 568.615 666.264 570.63 668.183 570.627 cv
669.129 570.626 670.137 570.149 671.205 569.194 cv
671.199 564.172 li
671.195 560.629 670.185 558.858 668.169 558.86 cv
667.076 558.861 666.317 559.278 665.893 560.109 cv
665.469 560.94 665.258 562.346 665.26 564.326 cv
665.261 564.582 li
cp
675.647 575.605 mo
675.599 576.607 675.348 577.487 674.893 578.245 cv
674.438 579.003 673.859 579.639 673.157 580.153 cv
672.456 580.667 671.658 581.053 670.763 581.311 cv
669.869 581.568 668.97 581.698 668.066 581.699 cv
666.893 581.7 665.786 581.478 664.748 581.033 cv
663.708 580.588 662.785 579.908 661.978 578.993 cv
663.295 577.488 li
663.858 578.124 664.409 578.568 664.947 578.825 cv
665.484 579.081 666.034 579.208 666.597 579.208 cv
667.183 579.207 667.751 579.085 668.301 578.841 cv
668.851 578.598 669.345 578.263 669.785 577.836 cv
670.224 577.411 670.572 576.906 670.828 576.322 cv
671.083 575.738 671.211 575.105 671.21 574.424 cv
671.245 571.907 li
670.219 572.789 668.973 573.229 667.507 573.231 cv
666.627 573.232 665.789 573.075 664.995 572.758 cv
664.2 572.441 663.503 572.002 662.904 571.44 cv
662.304 570.879 661.821 570.213 661.454 569.444 cv
661.086 568.674 660.902 567.838 660.901 566.933 cv
660.896 562.424 li
660.894 560.444 661.515 558.94 662.76 557.913 cv
664.006 556.885 665.813 556.37 668.184 556.367 cv
670.774 556.364 672.663 556.979 673.85 558.212 cv
675.037 559.445 675.631 561.357 675.634 563.947 cv
675.647 575.605 li
cp
f
576.817 669.166 mo
576.916 667.042 li
578.283 667.105 578.971 667.04 578.98 666.844 cv
579.812 648.864 li
579.106 649.296 578.046 649.479 576.63 649.414 cv
576.727 647.327 li
577.117 647.345 577.505 647.289 577.89 647.16 cv
578.275 647.031 578.621 646.845 578.925 646.603 cv
579.229 646.36 579.482 646.072 579.681 645.739 cv
579.88 645.405 579.989 645.031 580.008 644.616 cv
584.439 644.821 li
583.411 667.049 li
583.4 667.269 584.055 667.409 585.373 667.47 cv
585.276 669.557 li
576.817 669.166 li
cp
f
629.181 663.565 mo
629.255 659.216 628.327 657.019 626.397 656.976 cv
625.371 656.952 624.358 657.418 623.359 658.374 cv
623.235 663.834 li
623.147 667.719 624.104 669.684 626.108 669.729 cv
626.621 669.741 627.069 669.659 627.452 669.485 cv
627.835 669.31 628.147 669 628.39 668.553 cv
628.632 668.106 628.817 667.517 628.943 666.787 cv
629.07 666.056 629.146 665.141 629.17 664.042 cv
629.181 663.565 li
cp
633.499 665.606 mo
633.454 667.585 632.797 669.074 631.527 670.072 cv
630.258 671.07 628.438 671.542 626.069 671.488 cv
623.479 671.43 621.605 670.788 620.447 669.564 cv
619.288 668.341 618.739 666.471 618.795 663.954 cv
619.057 652.409 li
619.148 648.377 621.991 646.425 627.586 646.552 cv
631.508 646.641 li
630.958 651.505 li
629.309 651.468 li
629.111 649.386 628.866 648.341 628.573 648.334 cv
627.546 648.311 li
624.932 648.252 623.571 650.046 623.465 653.694 cv
623.409 656.138 li
624.406 655.28 625.65 654.868 627.141 654.902 cv
628.02 654.922 628.853 655.101 629.64 655.436 cv
630.427 655.771 631.113 656.227 631.7 656.802 cv
632.286 657.378 632.752 658.054 633.102 658.833 cv
633.451 659.61 633.615 660.452 633.595 661.355 cv
633.499 665.606 li
cp
f
670.393 650.871 mo
670.391 649.258 670.151 648.067 669.674 647.298 cv
669.197 646.528 668.432 646.145 667.381 646.146 cv
666.355 646.147 665.598 646.532 665.11 647.303 cv
664.622 648.073 664.379 649.265 664.381 650.878 cv
664.394 662.902 li
664.397 666.055 665.401 667.63 667.405 667.627 cv
669.409 667.625 670.41 666.048 670.406 662.895 cv
670.393 650.871 li
cp
674.842 663.33 mo
674.847 667.363 672.417 669.382 667.554 669.387 cv
667.407 669.387 li
662.446 669.393 659.964 667.379 659.959 663.347 cv
659.945 650.443 li
659.94 646.41 662.418 644.392 667.379 644.386 cv
667.526 644.386 li
670.043 644.383 671.889 644.888 673.063 645.901 cv
674.238 646.914 674.826 648.422 674.828 650.426 cv
674.842 663.33 li
cp
f
369.161 416.234 mo
369.161 433.792 li
369.411 433.843 369.598 433.881 369.724 433.906 cv
369.848 433.931 369.936 433.943 369.986 433.943 cv
370.887 433.943 li
371.262 433.943 li
375.963 433.943 378.315 431.08 378.315 425.353 cv
378.315 425.126 li
378.315 419.198 375.714 416.234 370.511 416.234 cv
369.161 416.234 li
cp
371.787 393.873 mo
371.086 393.873 370.211 394.023 369.161 394.323 cv
369.161 411.132 li
370.286 411.132 li
372.387 411.083 374 410.356 375.126 408.956 cv
376.252 407.556 376.814 405.429 376.814 402.577 cv
376.814 396.775 375.264 393.873 372.162 393.873 cv
371.787 393.873 li
cp
355.879 435.594 mo
358.68 435.044 360.081 434.543 360.081 434.093 cv
360.081 394.773 li
360.081 394.073 358.68 393.148 355.879 391.997 cv
355.879 388.62 li
364.133 388.62 li
365.683 388.47 367.159 388.395 368.561 388.395 cv
379.565 388.395 385.069 392.998 385.069 402.202 cv
385.069 407.355 382.992 411.057 378.841 413.308 cv
384.543 416.26 387.395 420.436 387.395 425.839 cv
387.395 426.064 li
387.395 430.316 386.178 433.543 383.745 435.744 cv
381.312 437.946 377.587 439.045 372.571 439.045 cv
355.879 439.045 li
355.879 435.594 li
cp
.721569 .666667 .427451 rgb
f
398.95 439.045 mo
398.95 435.519 li
401.551 435.069 402.852 434.618 402.852 434.168 cv
402.852 393.573 li
402.852 393.123 401.451 392.623 398.65 392.072 cv
398.65 388.62 li
415.984 388.62 li
415.984 392.072 li
413.482 392.623 412.232 393.098 412.232 393.498 cv
412.232 433.943 li
422.137 433.943 li
422.737 433.943 423.287 431.817 423.788 427.565 cv
427.165 427.565 li
428.065 439.045 li
398.95 439.045 li
cp
f
463.332 403.027 mo
463.332 399.726 462.731 397.287 461.531 395.711 cv
460.33 394.136 458.379 393.348 455.678 393.348 cv
450.575 393.348 448.024 396.574 448.024 403.027 cv
448.024 424.638 li
448.024 431.092 450.575 434.318 455.678 434.318 cv
460.781 434.318 463.332 431.092 463.332 424.638 cv
463.332 403.027 li
cp
472.411 427.04 mo
472.411 435.294 466.934 439.421 455.978 439.421 cv
455.678 439.421 li
444.522 439.421 438.944 435.294 438.944 427.04 cv
438.944 400.626 li
438.944 392.372 444.522 388.245 455.678 388.245 cv
455.978 388.245 li
466.934 388.245 472.411 392.372 472.411 400.626 cv
472.411 427.04 li
cp
f
513.081 434.615 mo
511.329 436.144 509.391 437.338 507.265 438.202 cv
505.138 439.064 502.774 439.496 500.174 439.496 cv
498.323 439.496 496.484 439.22 494.659 438.67 cv
492.832 438.121 491.181 437.32 489.706 436.269 cv
488.23 435.219 487.029 433.918 486.104 432.367 cv
485.178 430.817 484.716 429.041 484.716 427.04 cv
484.716 401.001 li
484.716 392.748 490.419 388.62 501.825 388.62 cv
512.78 388.62 li
511.88 400.101 li
508.428 400.101 li
507.927 395.85 507.377 393.723 506.777 393.723 cv
501.675 393.723 li
496.422 393.723 493.796 396.956 493.796 403.42 cv
493.796 424.696 li
493.796 431.161 496.471 434.393 501.825 434.393 cv
505.427 434.293 508.678 433.168 511.58 431.017 cv
513.081 434.615 li
cp
f
552.925 439.045 mo
549.523 439.045 547.097 437.496 545.646 434.393 cv
537.918 416.384 li
537.918 434.168 li
537.918 434.618 539.269 435.094 541.97 435.594 cv
541.97 439.045 li
524.636 439.045 li
524.636 435.594 li
527.437 435.044 528.838 434.543 528.838 434.093 cv
528.838 393.573 li
528.838 393.123 527.512 392.623 524.861 392.072 cv
524.861 388.62 li
542.12 388.62 li
542.12 392.072 li
539.318 392.623 537.918 393.123 537.918 393.573 cv
537.918 409.781 li
546.847 392.447 li
548.097 389.896 550.123 388.62 552.925 388.62 cv
558.103 388.62 li
558.103 392.147 li
555.626 392.147 li
554.076 392.147 552.85 393.047 551.95 394.849 cv
544.371 409.631 li
555.401 433.868 li
555.601 434.468 556.702 434.769 558.703 434.769 cv
559.829 434.769 li
559.829 439.045 li
552.925 439.045 li
cp
f
383.306 740.842 mo
381.554 742.371 379.616 743.565 377.49 744.429 cv
375.363 745.292 373 745.723 370.399 745.723 cv
368.548 745.723 366.709 745.447 364.884 744.897 cv
363.057 744.348 361.406 743.547 359.931 742.496 cv
358.455 741.446 357.254 740.146 356.33 738.594 cv
355.403 737.044 354.941 735.268 354.941 733.267 cv
354.941 707.229 li
354.941 698.975 360.644 694.847 372.05 694.847 cv
383.005 694.847 li
382.105 706.328 li
378.653 706.328 li
378.152 702.077 377.603 699.95 377.002 699.95 cv
371.9 699.95 li
366.647 699.95 364.021 703.183 364.021 709.647 cv
364.021 730.923 li
364.021 737.388 366.696 740.62 372.05 740.62 cv
375.652 740.521 378.903 739.395 381.805 737.244 cv
383.306 740.842 li
cp
f
414.746 745.272 mo
414.746 741.821 li
417.497 741.321 418.873 740.821 418.873 740.32 cv
418.873 722.611 li
408.143 722.611 li
408.143 740.395 li
408.143 740.796 409.543 741.271 412.345 741.821 cv
412.345 745.272 li
394.861 745.272 li
394.861 741.821 li
397.662 741.271 399.063 740.771 399.063 740.32 cv
399.063 699.8 li
399.063 699.35 397.662 698.85 394.861 698.299 cv
394.861 694.847 li
412.345 694.847 li
412.345 698.299 li
409.543 698.85 408.143 699.35 408.143 699.8 cv
408.143 717.509 li
418.873 717.509 li
418.873 699.8 li
418.873 699.3 417.497 698.8 414.746 698.299 cv
414.746 694.847 li
432.155 694.847 li
432.155 698.299 li
429.353 698.85 427.953 699.35 427.953 699.8 cv
427.953 740.395 li
427.953 740.796 429.353 741.271 432.155 741.821 cv
432.155 745.272 li
414.746 745.272 li
cp
f
459.393 732.216 mo
471.324 732.216 li
465.021 712.781 li
464.495 715.258 li
459.393 732.216 li
cp
470.348 745.272 mo
470.348 741.821 li
472.75 741.472 474.025 741.07 474.175 740.62 cv
473.975 740.121 473.825 739.72 473.725 739.42 cv
473.624 739.12 473.449 738.519 473.2 737.619 cv
457.817 737.619 li
457.767 737.72 457.716 737.844 457.667 737.994 cv
457.616 738.144 457.542 738.345 457.442 738.594 cv
457.517 738.594 li
456.841 740.62 li
456.841 740.871 458.091 741.271 460.593 741.821 cv
460.593 745.272 li
442.884 745.272 li
442.884 741.746 li
445.635 741.247 447.086 740.695 447.237 740.095 cv
462.019 694.772 li
465.696 694.772 li
480.403 740.095 li
480.553 740.596 482.028 741.146 484.831 741.746 cv
484.831 745.272 li
470.348 745.272 li
cp
f
494.96 745.272 mo
494.96 741.821 li
497.761 741.271 499.162 740.771 499.162 740.32 cv
499.162 699.8 li
499.162 699.35 497.761 698.85 494.96 698.299 cv
494.96 694.847 li
512.444 694.847 li
512.444 698.299 li
509.642 698.85 508.242 699.35 508.242 699.8 cv
508.242 740.395 li
508.242 740.796 509.642 741.271 512.444 741.821 cv
512.444 745.272 li
494.96 745.272 li
cp
f
559.866 698.149 mo
557.064 698.7 555.664 699.325 555.664 700.025 cv
555.664 749.175 li
533.378 714.507 li
533.378 740.32 li
533.378 740.771 534.703 741.271 537.355 741.821 cv
537.355 745.272 li
523.398 745.272 li
523.398 741.746 li
526.199 741.296 527.6 740.821 527.6 740.32 cv
527.6 700.025 li
527.6 699.325 526.199 698.7 523.398 698.149 cv
523.398 694.772 li
532.627 694.772 li
549.886 721.861 li
549.886 694.772 li
559.866 694.772 li
559.866 698.149 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.0
%%For: ( ) ()
%%Title: (5.eps)
%%CreationDate: 10/30/2017 12:53 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7&XZdP1TJ51d4B!Lsg*3>`",NK%dkE/ju&a95qgbg(T\If!@"h#_#;OjC_I"s;-\R>"P<\gqm!DMc?OW82;)X[Y<cs1ROS
%78<@W"B!`tK#A&2!&$p\?iO864L!,Up2Etg.#B/:_@OeHU>nsf]?m[LND??^(X.%aB%QBMHcm6&AMeeT7N&?G^)OCZZ[_hG25=!%
%HQjp7.;@>VUtr$i*M3u*#Z,mm2d`rN/g,\:$!_mNeH(ml3us\)cpmZHoDPV78:Zjf.sL/gfkP_77`VeR&$(L)8L]mGenc8s!Y>J%
%i6Ma8oYo(<dB.QTR(ba"I-ds2OMna![#'l&\P%L)"EHTErp]Q@ecRm]!^-IsO7rPdIMR=*:SQl[13":$TEknfP@V0SYT*@]!slt)
%R3YBYB@`P0ULR3hko:M(@=7q/_6;,nTEg?*lOp."ckW/qE!i8[SA^Nc3];Iik0GX:JS>hC(/ne?e]D"06"R^EETA3biOiAN>8IaL
%"&`&'9W*1r[Yn`,nG<?O21oSn`?b8G@H<AJg$F63g9iQ5@EYSA7QK_ae&F$SNK.Y(S2SV]cFtQ&<<WtZ&N&=a"]`O^X1ITFH-+I!
%WkjXb!Js8`=epT_*82mB-NeO:g9Sk%@nQgtJ@m_,@n+&eZAO&LQ$aMG91T:Ff3dA0b9dUuG<0?RR6<2c`K"64c39983-:llN7i@'
%66![/_9*_$!,?\F?1!+bf768ua`ntZV\:"eYSp(-YQ(->CYD^aeqK%Z/\Bb22+mRLs&k0mmC_\q1^b>9"aVcs:@g..A_"7VetFbK
%1($8K^@uSuL=KNL6P0$/R6Gp3mNl52s*D3t(+K$:4ol!b1k(fL]BLM5n[q]Be;T.0nrX;CJnaNU>VSK=I?KD"G-4!U"Cl.t=9oXn
%o7m5L#d-g,L.Y[0G9dI<BQ\dXXXYg%<pLB*BX`TUhrZnUfrE^S<8Q&6d/Si8]@6/7fjs5S+6bVA!gnO=X2,VA"#UI68@HmNnt+LY
%(nD"e&@55MpOl,Qp(`;(UG+>8@g:/NgbP<5X5JoE]'YA.BA9g8oc_q6,It"?96dA$6*n>kH+R[rlb-`^O:4\5.b)]/YBIr+B>d3L
%<uELD/#rsHa``Vhe+r\dflkS?j0V++r*C'GiN3g0F45J"-%^Vj[,,*+7Y6QI1eP2A,Vs7q_+VI](jH*PEKltA>2Vq@36MhPZ9Je;
%9PH"AB!nD$93)/-NA'%o3bEkmg[unj]=r+#BUWK-3LJJ`8bi[eX#kV3!b:7?cd@[(bC+>S*R'd,H_5^jnEp'3I0+*oq&HjNR+3%U
%?Xk^BHn0]uCCRcj!6N%A"pY.bE!$XrXd8JmVbjX5`Ko1"(kQZ^"[T87&c_+n6FJgL-`O"7X][BMpf63`(.^C,K;_"n>*n2O`=Y'=
%UJ=Zo%Z%L^7Ef_/j-f\s!tTlW2@I8^YjguE=Pu1m9N4]d>j6Lk`'Ko0G(*oYotV$Sq^Q2oP1$sWrUHDCM!lPLS-T#tYW'5"12/qW
%@:qY;7%!MMBbNV1V7jr^!;ifJT[Rc>a"u:%gYJ<be`e3*,s,DRr!VY3VW_;q=m?V!&r))0Ho/G-dmD+MiQ:<=aBo_4Jt+rpXh<%>
%P:cC6$ek4ciniU?F>fmRi'64/]TY0nisa<mooJe8,q@'kh,_AIVhM7.<3Y=-'l6RTS$O$.QJ3N(_UgLt;UR0Um&!@c1*1])UOM`Z
%+Z3Ak<+R,:b9*/V8QNi,?o)\dI%dMgjeQ$.2_4!%V;-RDcE*8"Q#a3/mb_ZTe2![nWL_[Bqn!P`*[:+g(3:O#`Nr`c<m/a&\QLLC
%X6'?H=tXRh0Pf@!;7(h%Mp8e_n-s+nDbNiN<@<3uWm28>T<IOWZ/21JT<s0`6/_L!5.<Vm\G=#da*'VrD/T!Li[\C%Nf$g9a273o
%Z[dJ!gMU4b,<D:*aj-A=Qs7srCG1.1Dth,$QP`s)_BA/]GtbmFZ:h%&g%f#59^u:N-+lt6.eg.\h<q^D7`!:aN1-(SdieKgR9L-,
%0Kc16+OA%)XGj=&#3+f!D`gq1R7m<>Z%9sn:V3CQbqq=q4]J<"FLPkh@WnO&0cFB.H@O,)n],of0_'A9DO@&*Y^ai\(*$-^_uIa"
%kdLejr;ORE?M;=VUj"22Dp%S+TD6PK,@ar;:>/nc@cPd/,KlBfR`3mX9R8f+Sr!uOTBpOp:[\T`[])u*c1AJON_/gB*l:6d<&3W;
%"sQc\Z<7pUn0!0#%pnl^WeiOIK/D8-nD\\n?g)^KgEu_D,5fC"7&+=9.Wr)X757^U)f&K0]OG7a*</gOT=!8IR833`*6D83o[muF
%9pF^<Ainicg@s+;+.^C;Pg;R<asUfU[:m`?Is^D0:]:qJH#`\-BV%t_bYIs2X6f>^k;N=KT%ib_gRE;'a9OjjbM=q2<nE71*Q5.`
%QbU_cZD*%k9DiDPV$Ft5>?Q5f\!e%Z^S-F54+Ut!QcBkRDJ[2@aNSp(kYdg/YCBUuhr:W!mr55We'i4Km^0W/e$L^r.6[p)pCPh%
%IW9`*:m8UI^@`u`]U7C%S9=db0.?=/(k)g!:uK1RAhPS-b2>)@ONoZd*tLK@]fn^P[82g1M_OEFTpbhR04'sae-+!:&%dCtMU?+)
%[B*LU5:YZ(F7A!;?c?Bj_a`VJq0RV7(Ist)eS`rsJr)]YF)3\21ZWqAQQl-PrQ4g%,<t[;4L=+DQ^#c]S7I[?q9d<:q+ZiQY8]aP
%_m]5N/"j*<EV0"I5%8?FrL8R7DW:Va-RV(A9ARc)YuCJH&e>cOV]*(/[b>Is__aIqp4^)\J3SAD5pCa,Y>VSe.N<>FQ$@S^$cSRm
%oiGn]FY=!!#hiAM@FT`E^HAFtQ;Yb:H!GG*o?/]/6dB(daVaBJj.U%I>%g#G7^6Xc:HEg[ViU[S>a7Dm5q\:,EV+8SZ1`=a2!fr5
%r=fUpHM<&U'E]7o+b(52*jPu/Hd:OsKT5LA%cVt@M<i"<jit*//<Jh=Bk:^0XL]bmg\=]'p]`B`.t!8=.,+#5b!ZqW?E@ja''8"L
%a*0M"ilOP^qSN$Y-W.ODg!k+O^Yq`u0/$Lu_P8Nc+$Q4enFI[GU3K3\VrTDO[g8e$;OY]lMrJ;^9MNTuSOJs;7@BC%o.A:_nG`T'
%;*6-4'-EcWB2Q\#5dRdFrs&Z'%VJX$3U'+BlJM7cMAHYi[MJ9q\P"`<B50PSNDD+8YLMZU^HBik=i-RRVXJ@:e"_^`3fC23_0:6U
%@@XugjQRb(U/#4ro$T(YQFGq&\!LV)kr7aPWFPn^>@qJrm5'2cRJA]N,+/26R9uHZ[AiY2M&&?gl.R[oRq0!?U63a6g<?UGcE#3Q
%[99dno4g(bp0G>"HUm;a+$MJ9NR#e$#l_$>R8^Ko3*SkE?Uj<s)0le0C`1K`dG&5sZ2QXsR@<[3krV"e.<@]+_oY<H`H+h1'4&+T
%`RX=aKffX_C)"pUeJS6hPlletR\nJhH[>"7$hp^oheqGCBu[J:<UZdC]t>"d$=6Et%:A>i4^Wrl1@+YTWQnh)1(c0,)&JZQDaG?@
%-Bt_(i''=ME'@T_IlSVK%Dc]PD[7ujrljCG?WVf+k)D$XQ5\kurIjj>-hlNa[gN.hH@:C)m=4pKrrfB6i`FC&GE4*MEU8f3rs(HC
%^?17_]ABpL:ktZd7kO3ZFp'OT];bE(*dV>H;11^=1(`]ndS:<8N&h/"^k;E9<Ib;q7dZ*Cn/tH6*kZaTl;t\-j&<[,8tr*D%!giB
%UX?A.Q+GZ=''cAQ7Xi8L(B.f0EZ-k\5,m;iPCBhcr?c"RpH-$lF12*1^u9,0G>p\qWr:gnq7@oYrSJ-K\CplMTAXIms#]!8SaHIV
%ZcO!N!"3&QA)]B#o:<,aSk2`AB7%A!4l<I.GYJ(-Dp^&"\mBhX@,g!mLHZVd2J+ljHZ"'_ZZgUe0R%V1A3IZoI/s/F\GBdfCA-!D
%XOXCmV#q!S!kof-"*\[%pp0h<K/`8-8l/*)e_;5CA:*p)&%8(ChuCjFgWhij;q<,h-9p<Jl]B@PA?ud!5N_2mA4s6ef`\_)BHA-C
%[nO+?K&"KW5p3VYG3F]mf?@!gAJRXVb@ljif:MZ]^>bD>*kIbO%DI+(e@9J4/>(9On7;I*lJ9aa+,_-.'Fs7A[qXh;.GrV<(r,]Z
%8t6Y:C$)+edd4dfIH-3UT9\aV?*^r/Ac_J'efT6Zi/:>kGd'6Kq'Xm_mr+WXA]88Npq$ihq55(rh_Ju[bSi.@`lkIR12FPH)DD-)
%VjfPMVQ97(g+9W$_R_Fss"\B&9Q1/=qk/tAVBZJT#1BT(oZ;r#=huoE*McK]n.X]AphimWI_3'`r:-*#=*gb.IbBC@(BdG.b9jm7
%W+#D*M94[adU+p&h1#1:qsi[fO,Moh9bTCbP;0/$rUsB5S7%+1l+qB5-DnljNo/ei9]#`t`5fhm<ku&opsh8]HNVakH3;VDoK%?r
%dd6?o?Y-*se5Neb'^_OMihq!40.HJI!r+C/Z[6q,f^*VOM+J#Nrc*)l5878mn4TS\l)RM$$P0!pk5Z$B:\sXLGjf418o:neX.a)?
%4hB]g>P"bGa8a*si4m\-pFHLq9f%9<)e=8Z198d!X$Z[n0?4Oko&=mP]OW*kR!a-g_FkgBKioNOEZUUHR,1T6oanls*Q\[N5HUZX
%@t>&,f#O09m-8rj0pGf_@u>#iWUF>1hk6%hKnieQ@q$tEBj:285/s[b0km)EoeC',N%+%%F::qMGUC._0rrV_#c[;6qGi6!q#&DR
%4Un%N=Im=-`lC?$M0M%]k34nd!UMJgO9[S2Rb.1r>"52qe4si'b;0V"^9LB)aA;/lLDo"F.Id;RPL[4+^PXHmki$YOH)#4'>NT_Q
%C_XP3dVnWQeEtRg1c/Jk)YtfL)=k-Y9.ddD-2Sm"?cC,GHt*d*o^Jn;*SX4<ZbMNYfmB@(<A(WP55jMI@LnmF5Pj*3YA=,bk-[L)
%Wpu;=[dr5maEfn:Jt<><8Zu9000T,mQ[oCn^9Uc9\VIh0NRI?_&kP7Z*RN96B:#NqM<<o1c@d;8o"r8>+8Fj0f7>SNm*#rep!WE1
%hba+!D<qbBr,:*+mYjf4VlbsGiNU]DG-ST7Bk,J(\c7:dQrS46C2R(s9gLZ"_;3D:\]J5f<m=>[40r[><mAmh\UU6BDg3hT_b2\\
%Yb(I%eZ>:1Q#j9PDNLJn3B&JO4I:+j[TtGn$njLpn[2VPrs%#D2^TlbSs-oj4m.Zm=ZuM-l8ao$1/GJOr,+`\iLqH_]iSZPShZl6
%pIa'[4X<6dIUMlDce/[]AhV7#JeqsFc&l^Y^Sa3a?E7%XifsF'oN&\<'WN;u"kcVF@!-p8H"mr"425N:3k,UeX-iRYZtW`68Q=>A
%Y+dh":M&m^X<k&6iB)dcs7)]JeECW#I+rcC?Cpm5S"+TXk2EEhN7jTS+MUV<V+c,\`rpHRf0cuSGY3&^YeQ'rT+t/j<2d&DD@_+/
%^YI&H^#?$eo5HUjh//F9K'?9PKBTWKp>9k=Ijud>=u7Afju^699(DD**jZ(.4>r"$\6g!P6kA.mpheQnT(\e&QsZ@I`@V^*e(ut`
%2u_l+LbhT.cnUg=gao&Bioq8jW)*@Yn'mjAooOJ]N.7S-G^mo'n`M&r3jVQYh6\-`V\ndX1<iD</16nJ7/qTo;3n?CWD8=7q7H/1
%*b/jGPUF-,rPt+p=gRu9AocF!3,W:MdT;j'LEKnDon'"@*lQ1_@FUnJ!"[LgoAIU`<km#UI^as'hD_bf5;!j+X&H!eSpjpRWo@O5
%l=:<=A-k7(NYCd+-9X>7$1P:Z3#R%0o\erh:JH4Ar+#snMiEp=F8rSOE>gp[ZQC-Ve>29R3;Mgd`ugkk<*I67q?cS.rC3Nd02@qT
%h<&YN?D;B6F(quTbYG_skC"?I1[J$N11#n"UDLOa&?!>f:429ZLV):_SDou,k?^)tS;10_I+GELD.QeT>K7g?2VE!-HR4'sp"^JB
%q\c]=In)uD6S^Lgn!46,LR1[3\Lu?tY]KY*n-%ti^LZ=;8_UX1[40`Zq0!#0E%:ssPl"rDV#D,K,u^J+M0B9=QXA[Bb'_pF-k?i9
%:>77eqLn],"]i"<l]Tpn>-1$=baHIF@DV-#/`&5Q2=o73s)A&9X0bSJn\&+2a_mkm5*^"2W;8L2bfls)bk@s`bkRS^RjKYDId,f&
%;W?UZ_7>lZBU?C0P/7@Ur9(ASM,2P`r@H$knaR>08(I7>RImTR0ha[iaBPH@RoMHJXhE#?=T4^5Q@EQPTDT:s`CPmLSe@#ln&LLq
%9LdCXM;?5Q(%RBY!/!edZINo$q<L6m9l`t'f.s`dr-M%baTNq).GB'r(N"<L(#Q:D0Zn"NGM4O`*62@WdAo!s<jTq*!]&8qD:^])
%heo,CjRVH50?>IC9FO\Z&$Rs$I`T@()6U8d:kIcg3KF$V56="GoZp<?Vq3,p:)734h.Anp1^G!e4(Hda:<3:u5<-n]*r[*X-!_79
%Q(Xl:]Io<W*5LKbcLI(!ZL_<OGNV5bh._uUlbb24oQC*OjRD<K?iS4^kQ(6_)#h'(!:PfX7#P@E4>+0%MXMqmmqt;GiI(Ol2nHm]
%!h!_/<'>e[:B"tcpUpo[d/QSQY_L9=m&t`lXs'eEcb6dE5Y$gLjr(W9h)Z5OEMEUk=FAhE!9h/elTh6IJ1HQf\NDo$!-0_Dr**_2
%Ti":)n&;18U[R3kb#5#5oYY@M6XrJ:+QJ0\AU/2PmD5u)0<,6+UL'`qZO9cSm#.IV9H;QAM-r#U2=QC8`h.DX>d0Wtff:52G[T$\
%r_FHOs'7#p-9-oZhF(d\$cpf>n=o/#2h]L=KrlHRh#cS2L;>+,Kl4M4f-eB4rD=6aC)chXc,:G+ld38?rYt/M48rL6^HJ4X[?TFB
%T+bVi;rGdP2664pgc3A"$DlVbr9!AVpqF+<lC>;ao(^cCREYPt-Gl2BU8I`EcV<FEL;t@ZV%]4-Q3)XdX$K;kq6>m<4Z6$3nS:H.
%ds3C@.>fgF/T8E$94m2[jkm7SOQQa\/9@D3"dhuXs#\"0j<nZnQM`f55NX`99<":=fb^H[h5VFSh\lLY-*(X,LcoD]DY/c>GAbL`
%!<tVTX))r%Z,6303u.M.k51X^;`eE8FRJ)4GLL5NGqPHkCuC%>Z&CDB>)eQqWYku$*>:C.6u]XkT-XI.ZHcmtG0H"r-ZG/K2u5r3
%3aS9bqtP4p%c/lc>gdI@Nu$J?Ss]:95!8eUQ1prLT84rLc&Pf5IZo2QM4,7qo+Nj>]%Jfq7VC6B:S4&6rdUN`I$*e&H!6=_m#@\k
%VWS!69tU#J/(BQ%Q,,l-8b/??Z1o*^W*.E_Q5GA\]B4>uO`Rh*@ab\X-PoAM,2J:H4#bmO2QYg)]M^#oo0.p3T@LAc7`Y/_CF3cP
%1MfLG7@DPaUi`6VlJufW<V2CqkOJ)V^-e%e8^Kr%$GLQ(m&=_N>rV=Vb+G%h^9;C&,bEUZ\qgYF4Epc-N*&MUH`[.G%D,HE],e\r
%]?U)[]!#g)bna-UGAI0?H!L.eTpKJ]D6roQo]=<342+,1l54fIAp'V+N`SVClqQ$`!K@tV+%A=R0M-#?d@+bbYt&m"=si]Zi5'Z%
%2/<Fd#Df93a\'P,jRVfmeAG#8"f$ek3s4,QN#X`UEThWCj+XB^X>'Ko#eN'dM^[gK\bU3&:A&21bpGubm3?uK^=+09X4ae)Md(3N
%3*F.(UOhjlXD=JRI;/;.=W=)Ec<$a]TK>tgc"`W[G,JnQHbk#^Q\&JhIAFCl8L;!VR\QEHZdm(Zd:j&`YINd8NK3+Qknn8u'Bt%0
%3"&7B8Ljo'2,2He%s&hOpBfBBpq,#LF!'>3A+O42\L6HS_e=X8CZP5nqB"etojdk(>^gE+SP"5S;S6T=oK]3hQ;N=1kqG5p;5i-L
%N,A6-LF%nm1B_Z2'7Xhs71O0)g241F4u.Ts0eBfhS'L<+*TM0Sb->OP%5$SP"$]&fi,J6VbolK0q,"VURahNOL"eG6K4c_;$gjVq
%,%ijjX'tKA;5F)pls/DNfeAP0Ze;Igqei?N]u1HSc;m3Udqq,R#%g@F<6+1U_<m5?/*ki(=*c$J\2iHW$)+?anot6qS9?tgn=&BU
%EQ%`lDJ>kCmM]ZcQa*#CchlS<]`n&A:H!L[43/G?I857SbJgZhdrsYe-#t*cB:D_R[b?RaZh#\ZenU5ZKFdKBeR?bD7MGa_n8L)B
%SjoF)/`PGbpS-S0\n0bo_qN,ZPqYhEp9mmUPT+Z8C7qj(&\>kNY+M[bj(3@@K=:/:a/F9u#97Hu.eN-GY@D"&BGT?f^*Iq4@_]Y6
%ZNWO_]C2?O,U[[&Fs"qE+Qdtlb:sRqP7nWM1XSF4,O^Td=cpf*m>[i%Qi1$FUD,c!I^00hqU&e6ZI(hl25!+o;aWQg,&j0cN?=k-
%0t2ua<&!Gm`OYAW@atChd72g2R+p,7ae5!4\9GA=>0B:"B=ut%CW(h(InS:m!#9iOQA0T;hs7m<c4"pI0t[8)(GuP"X8j0XiCFc%
%P<)B.=7[`ML51Xh)JLAIh-4:I%V!$pn$&2A*ip^pUZ8tl)FaPd]0,@Ai^Lc]Haj46=N<niXU8="Xauq;LI">Q1tD&kN/qBiZrf6`
%QJ)>a.#GU%-Fp+Z,UV?+dG%\@OqtRS8VI3Hdc_+]id*QUPoOKKYm<cu<IpLW%lBM\(Xa8bH[+r]klW*Xr7@:AI=:@o[;!iR!?o<0
%kMAak_%l<;d4>ci]5R;ZmL3Fbh1]gcmcVn[X$Lc3p*^GW$$XF%dH]:gC#HnEZJYmn,W.2%F]DPr9#8q*Ju)J^kSQMomn72s*tC,0
%]d#EI=cB3Gk6's1n'5ASp[i;?i@]t,g@#U.N):!a$Kh2]i;5Mp8D/R2Q%)Hmj/EP2GEClF46T=]ZetE3CmOD;i/=/p=IjXBl8q,7
%JJDC/*#`P]jGha&d`IJOBGH/5MD_.HXE[230lH2;emII!g6cE36Ya.Q65[mbbO2d/Jq?+D$\DG:9;jiE;1`45O^gXm6<4!],ICV^
%7,7jjFKe7r?J;OPLB=82(-&LKU50a[OM(=`VnB9jcIh]DZ&'_%=PAI@ZP=`;_@N&'XGY9Zei!a$k?GTmEior;N4g<R=O$-NJoqhS
%0#bij"(Mn#B%ndogo;4*Je>IHi-n1WCUE\6Vf"K6.XZo=B;\?k1YlDX+N%U3/:!>cbOe#<8G#0O91\uBR?eb^@'MUb1P:m-\MU+@
%7'@Q3C)bP^G14X7qTs^$:1/V3:fH]!k<+#\Bf%U,^Y(*ir>=XI-^UEZCS9L_0a0D'`=M$jGi6u.DQVAX*).&b:fk%Z[Ye*P8,lt1
%6t/NEEG-A.Y[9F*WEgo/g>aTh$dDlD9ZJQ0[(H/--g]#nNoNO_,0)<^q,<f8I91$0o?o+Wp?&UhWP@[mUBXi)CGh;$#d+m,")ZHE
%)FJh1D\YQqVf>A+O6El6<>S-`%erqU+,T0(-m,,0U#"`-?u1]oce(;L#'!#k0)G.RI.<NqA)Mpl\+briE&<+m$t2"cp.%U/%d#?:
%k<ACdKmF='A2QQV,!^1[kCraca/,lEchF3K<$J4/\tT=\+@""hn90#o)NNAu[bBbC/eE)LljkK^NJ?h0lFj&#QIEE`^MPj@a6Y\k
%j)>4ogG(RCqsM4gDP[kB'O\<$-J;2M,Ps/'!4(E3G/n#*lu<m0O6dE3E7`8MXNZDJ%5=>@PE[%s:a'u[aSaf/)IFW#MN>#Ma:<LN
%DmWa:)n+S%R&tB#l9tV]')HdU@?qAXQ"*qUnAH(RgD-Js[`jeK&$a=gR]4J$LY?g5>-eT2*L8.,J-YhSqM,pETX@sA[rQ_="D[`Q
%l3Kdi#-Q3HEJ02SpN21fR5>^#2Y=L1C;;cTLpI3Y6[e>%q/4rGgBFmL2pgJ+LBOi&&om@3\b=O`OgVs)6(mpu:UHLe]5O1*FIP$H
%TNX90V>(Yr@,hEqLNQqC[0];O$hK.)f%X$&(9"ps2XOQ8_psRAmAe]i'Xps<5V;rOV</WDkT\).@KPY"q;VHBaPs6H>aXQ+GGl$2
%LdO7rJnXR1#LQZlC!`9s`9WteFuOR)Ib-8`rGC+@AufGXL7X>BU9Kop<3=^tXU6`gQ54p!$QR/Ins5+[T:A8'XtfEV$kSF:9mT"C
%1-]k_T@fGO0bFF668tt8<(s'NU$2igOKiS%0.S.4$6<0-m=noF[-Th)m[jsb0]p"'mZ46,m21gl^Cr]Y:H=(#%f^oM=$g04f6jf1
%S13N&7^G)bP>$LKZ(q7EgdatcHX>k[>frGapo#rjE0Hr1W)##to;@dNjXOY65,2]c+CP(KD<#CngC6@tB#E5tgD!,pLK:lVP>u5P
%W-=l]`f'J#.kj`e,Zp/8s#XbI2SF$Zn1VE>CP'Cum"Wi^<_TAVM3\UOiNjHp5+g$V2gd;uO$EgBpN:9t<%r_9BqlW]RR-E>L$-fJ
%7q@A_cVq4@KeEY%+,H,8:7i@DR>hGp"B!3PQhhB$g:hI"g&P=dN`aPd<<2,IbA*&qT`Zc,+&dLZm>,@Ki5%Nhr7ihFA'jm2NMnoo
%O%7NEQoFc0(ART&^UX+G2:o/!mMQO.BAB5+]>=3'kj[ETI91K#os^VYoMaF\*nE[kZJT^[+fD9#PqbYbY<3:T'/@^=@%!+dQ#h.>
%5$Z4ZJ*5ZQh=@6>d,RLAOK3Khq1`>.>]$JO=c)fMFdL`M9Q8cA^(4Zll#EBmErupVNKbB%W\KY=j4jijcd4MUk@$rG3=3M,f$R:*
%<DAP?_DsuhQQc;GgU2#]")r(2[i#/=NWG/(*esr1&4UZ4CHl;.j6_0)EqadRTll2RDYKJ0g"_SJm2oZ?(S\+l92H\gCqQ=6qa>A\
%bn>WoF=Yh:S<&s<1V$r[@<adkh"u=jF?H.Lr01okM@c8ZP1;&h5.=M(8#ejHZ/`f`rtIpJVaH.1cGh,*C#oUPH-!-5KpJ8g3bdW@
%g%qq<5>k&N_"]XZDcXe<:;&(L>nZSAa"V=MP38D%oO*Tpc[V"[s"W]E57XMX6>p>tkB%:Vf52?:l37]@7,,i\_;1/A*``Yop+1,u
%khX$N)?UoNEj8rel'/MOb:.!IfiT`#a`/_AM^Gtam@>lcX`%S6/;K2MNC.^M1_:,*p?S!GEl3BooP^f^a"/If?;N6a'$C,QpgSaI
%=PDM%h_-(,>MXn"9F/\m+tlOZ*7p4c`60+T69+TS>RPIg1u%!_Og#/0KL9I'bJ?7+7*>gJl0u,lAn0E;DBU&0/skITPqLq/J8.3W
%\>A'MGN(7d;<^!C&ZOOLFsN@?<7Z8Yq/.r?/R1_OC<K[49YA:ak(ci=;"]utH$4BRai/juUITIeD*<Q]X3$.d<]aDjO)HRmP:QOL
%&e%.gQ$e>*))"-XWR4nZG.gn5<][LCHHQgijEW1\i7"mgmChU38dHd"N]i[MD>:L1)G_)Hrb+QD=bpSjo*ma;CSTO9@J#nOog5Aq
%T<6$]dSjg@Z7%?-7o)%7f>FlTMe(&uY3fO:c<!>dJl0K_ep='TY0`kfDUVEdf#%$EolsStee\"G"0M7nDBtcYH:8$=_kFu*#fA'a
%bD1&4;-:!)mi7*@eb]6)V5g$POr.mJ;Z(i`MslcZ`"1Uh+?=St<3J]m\7NW;%8\g0]X&7'0V^K_;l;b5U_gqReFrf?@RHLPeX#aT
%SMIs\`pCb=mE=MFQB7_g+EVfHMnmcDZ8RbY\PoYqZNc;%2d0Ke!mEn_MeS3$Qp6UL)V[nVs8$R?LJdQX,G@G#?l1L\Q]fFVp"e[e
%qm:d:3262QNPmWL-JSkUYi';7I<RWT+iO,t4,hP:c??/]Eq2c.fpa_C4,qD.0Rsm$lqQH456ZLIk8^a#M83YO2#]n]%6<=;UtdFQ
%Kh*iqZ5tZ9*k`m/@sK5tj=efe&)pBsO^+a0M.@A/a,ul7U'X6;LRWS!WHaoBIbsDaUdU2d^fhh\I;2q;fK*u9G%8QcfgLsY'^-I9
%laub^/#jnk%)X?^q";h/FFBMb[p#%)C$YP/O(_+KXd0#,>h`AAgA9i6Bb%H:(;1qBWa$eQ_h?Tb\gtmINK8+8neV/0cWQLZY*-93
%Tj24_Our#Phb3R#2I3&$["$p&,:nU6m58QGhMS=[Y+*OuV<2NoU7C*fo%`qBghaAV3&@lSlHOuSUaM2pIcTaT-T8FSGY[7]4UT2-
%0<2k$!7e*8IB=S[:*67Oa]Re(j7oBs0c;LmDhob]U5/\\:"d)B'3@6ZS_N?oDLUcn,[_IVLNsfqY:c7tf%DrB)j)Xf?.n]0q\H@8
%T/Jb-c+1KiYD8p;2_k]9g3+oW[4R*BcG3^T=Ii5.o_Ai^>>'*@e*!cFAB4!tLUW&aW9&BqBd-ef9X!i-Sr323pA$DVC$huI.=oq<
%JJ-'FgZ@p9/nH:Ag=\=lZb=X1mX#R\-8t3(+h=Cb?%_.KHD45a?#iCW$`.H32na=BS-E?2ZQ)!/2:pW.B>st^_IZ;%YH.mP7lT**
%%--pB%`2.(V_4O[d]YZ[+G?gJ`Cl?Ta+9=kSkM>MqC@42E52nrQBn%jF4DuG7&US`*nTdp&6APm`($o6"+iYIJgGlZYeI`ELu`:r
%]+Jr!/F0BnbkVhs(I'rA#UHkmng_1B\1+U=.":SD]GRakE^A4,?%8QJg7G]!KeN%eC?FILSBjE+7)UDO6:+d[G`;1iZ#ggIm=M2+
%4.M_rg>b+m@XC8j/dsO\'1F3$r#/!7)'a?gY=^])SDi!=EdM_X(rE#3<+J(P<96CC>^3hs-4j`-4Z).C,i0IjMHD6S6?F%aE0*Q!
%2uVRh*?g#de&d\3O\$ZS5U\rHK:Gi2EEXc`*5Y$q>(7AUj/nPbd_eO#?QGg`am>Zca\<qk8f67I99UR[m&2$Gjj7.+#[&A"hD!]%
%DYb:,rD:8#Q17<W0[(JId$mj<IH#nl,-!qclk$o-?O<^gd/3c5^bCBJh&U*P+0(#iRXFDj77Z`pAX57(4?V7#,,]d8p$LkCjYC^C
%b%le'8lh#uOe"\fLjV6WY&BUW%+>mMc5TN*@bDZqYr=Y5=T;]Jp!'FqDYaafAN'^kh<c.75t59NL+J`hDi0sS)kj.O\4I<9'"VDg
%m@(tK7RNu3-@iDg&`4Vk%1.*h2>T=C,W]@#g[:%dApLOmr9>a,6rhUo<E1Z(-#i$#+q''MU_,U?Q&d'H4DMTe+-G@?;'Qt@q'lfZ
%^UX:H@Za_+=2rZO>MMt;F`M9V&=;pj-SDS5SCeTZE9.q>9]9h+ji0Z?`k$^J2%Z&)?,[bd6U>c-<L+dU>eM(ZDQ0>aF>>%@(Cj$%
%0Z_['.3Dq7bs(4<6suc8`K0_!-20+@-Sof"aBh9?SQ%bWT&*]i]NRs_ou3e,F.BH-b;21Gl7VfL3K6H`,dUo^=+*=l:o7]F2TVpL
%"&VF>Mt;aNIs<#!Cooi2,7otJ*`A,qX#%tng"\1qX8D9_Zc-t%ZkA'hINRpA(;Z&)Mi[02P&`OY"]A:LM[/i%?92k72m(:EUst7Q
%(er"=@IERDC2%4X"N.aMV7rWIF0lLnNgqHV03:q(lUBJ8Q0O9=8:B*7&BjLJWh(#DS6_e[2R*ZL>C5Rt6A&n"^/s9eXS!J:]CBoL
%FcVQ%-LO&b!dD3qX/t3s2Qbf+/Z,^;;%8a><NuI1Z<o2Y:NPhFF$N\)UPeZqAOobSB/]%Daf(Y<BpY98IiW&0C05`QbCdXb^bo-*
%C*(?EV;cglq.Wokn)(&iW7hmd-gXLHDs<kh=7>%r0[.rXcG7b=n^>DQ5'ZI*>Z`R)kY`\f/;=:u3jH`mV<Y#PV'[9+f&i0Q7e^%f
%eE`Q5!o"Y%Rs1<)80:=I11B,'VLHB#!Ss6aaOs/Y1)XFN3Z%WND_H*F[@>K]l(`X4?V/"L:'e=/e4m#bn)%=+h1'`km->f#C().P
%X2jOfph*4t`Ogh0RE&u@f^\\hoGRqh<j>uk0W(A5^i0*u&M+9EN;cT`bn?rgpEFJZcdqhCNE9bGS/MkXh980A=n*"85E04JM_C`m
%SX'i$nEWIQ6jYq*?,8qH/!15'e+P9Y0%%%T"tg[GGr1%@Y+9fPo(d7g@QEXeWX3]_/l_+J?6Zofis&!*Wc?/XYR&]<#kWN;gK"RQ
%dqVId1s0_2*bru'`boN4Qa&NsK`$'@F+P$-MWZ9A4*DLRAqJ49N!>hXc.#)%\9og.n(p1.]dN'<)rRH[FtM`fqPceLMRqJ@%_M8h
%Gqfle3dI^u@TH6l9/^7\Rg:>XBYN2$I.KB5G!roXDH>!%B,#'Lc#,b[_qaM,Nf9*-Lt5@G0rth[,:?C]Zn(!b\BiodoeiT,$=SAK
%6\A8Pk$POcf%$f9.NRTniN;FARhYPQ[)CSffS@Hp^:eN]*"_,4Gg9-r'e&6,"jl4F-uLq=dj2t1k0qa@_M%\]mWbm!^3WpTk90?_
%/L6pt`^@D'MdqB!Z!e_u,B>baQRHBZX)G9lf$,a!<l)E5F)$'nj>)lkLN,KBJbRXN?4"(BH8h!IhgF(^*jlVorFudaj2u[]I+m6V
%]1K1lg2_\*HjWk3hi92Q^=GU!AUjJtY@.&WTY@uL/`/)aq1Hj""p6_mSsET*%4#"kIJ(iB5+bRVI2]e\Mj$=26u-qJ"@c>'<HbiH
%Do/3FcG+"Pi=XlGWiDWCCEp(ib#Yd7IsmAu)i/S3m;aso.b.'BDXc&B2Qq,;`iBj23^'MUV7E/A4'No@)`rc>4'4W8j2cKur;,88
%k1_V+kI;Ph8hM%)SoVLd4,I82p!Q=KM)X_.<Odsb$KmhUF<u%cC&`20&&Eo\9<K9&V=fK<A;;JP9T_Up[j*2@Zk+\*bOZ7-]%%5/
%+A&liqP7dcLt#%oNOF&?]t1HCKLW\HaD]on#Ld]S2_DMGOA.p`04f^Pp%u\f9;b&/QL@8Rhaun(CF_*_f($=r(Wkd)qu\:PQg2sm
%Z_eMENAPe"cI_q*<cTmdN("d1G7:CR4.(tFjQ'X:Oj7%37M<7fWh5W#krDoP2P]%u'T<D(el&Q"`^[+t[R$IM]A0HA[s+=O9ba]e
%\>:?*b\2.0Eu:0[jt7-em\OJj]X%HRJBCLRSd\OlSNqI`Yh][`$/6:=&$\D-%*RWm<"QNbT>hYMq+m0S2jmG%k_:b%7bp'c.E79g
%I:H[*"6R#n:B.\)mX&I/P3qFilrp^.]asCWf2(b"GY(-$`UdlrU7QgOD'pR9`Z46:^+gN_!Se7A3f._1a,c7h2e`aLS7MfE"CG>(
%DFMk6*3EPL5Tn-b.QbbnDH'bTb41]n>C>UkC7/(`cGMY'emSD(22@0o2_/ThURSecL:PSC.)(g>qU[WMW,jW]-=)-:,X0+lgs]MM
%`O1t2>(EV5p!MIl$89-H_IITl-!+";LgIVVR8:gYa4]N_;Z]1)AX:5CoN(618sUL6VgdJk2?G+<G!6[m^B``b5]Cl@0Sm-DO%nb`
%^e0FO(Ya<p,-=6d&hEAI"8W`2Xh;1;`[t$hXPgn=k[Cd]W3BIJ%Aglo*u;,c5)S!Xdku>`p!JpKf&%tb5?n3%^AT)*5sTi)E?i)F
%^V@;YTRkKi].W/>3r&b&&7-LT$/+Sh3OBD_NX&?1gFhOB<As4)g?OCofo`WIPt&8Qp+/S.?FXPCGfo!!Roag;@S]OL2WjjYrd.:Z
%L[o&^P[$6&fA2lB-@9o#Nu)PnCqa&H"f7m9Q)""4mDY>UKb'WU^#dq.2e8:+ESF;WB;_.g[X011%kr#SSuQ"3Lh"gn9X1H?T8sf]
%d94<Mei#Ft@`QI[r,A2gM2%n^RtX8e4p[+`b:R!_,`Lp9>dV5ZjGMVR9692?HRIF<DTd/4i!hQq!dr$=#+3gP..Ud5("2X%8M<UJ
%BDU%[^.p;'Rq>Xb7\LNJK%sA;'9r?N#4==8W't'"1?!JXGh.]nY,img5;blRSg$%e:,8\7B.;qdL-EQCeKK3TH<>421>LH.&Zosr
%EjkZE0sa^>h9Pi#gYl%SqqH%TKu4@q/VW!2a^`&SI!udpBPCpoDuS=):ci:='b,-$;b8N\eN8R%f.6C>;KH1/*-HFf:UT-Ci%WaB
%7N"&2?;n<Sf<_u^[/O)bibCi6,XF10ddj]Go2eGO&T,;=_/fmDkbX7(E-q8(/q.p;n/=6p+6WJmUD:VO"C\pl"Aa'QWGLZlQb;18
%pZbS'*?6>s3Y-dPGhL:MmcZ*1]eF*Ze.!:Of&8k_K)mq)pM[IpI3P;A>fFnWP4chYophE0^NtI#\h'_E"AoDqI_`)0=QOGt2&XMh
%Rp3r#Y!(E3<0UHj5E?Ui7Q%nlD&1W<0juDH9;t=_V+FLhYkGCpN)`>8$O#XsCU-_u(_p6:<m<cLCaS2u#he&sK/@+!&5P2.`t2*h
%X3kZq42B:12^HT)m'>GPZ%!UDH:CBrCb@3@-LmU#U::pk]3H^NaNZM41\"a=cL(81ZMV4:FViUWk32AZ3jJ2dou"I0^#.6anq(P&
%DkYO$?e5eJq.oRAQJLuFrlnC5R5iFI1)_>7Sq:'WE<k9E+??X4c49Oj+kd$RIInF(F6^/4KsR$S>1L'%OXY1bP.fL=0(LMh?([[+
%`"2emcHQG[DXts3CFMRo6uk#aDS74M6Uj^A0&;g4nWNjT:)Zho)rJm27lBW_kOuO(k%!K9G#djt!$3Rk:)(9\O4riLR+'$6_bfo<
%j)XH;2a'L<K`*6^%ha2KPq0sfgdBZt-J]on<;%R1CO6_UN1@m0XIK$:Xm`tSfK(iAO8C+<.(7GE2a0thmk6!ulFjb8.]BD%@/Otl
%??QiblRX:gq2HRYQ>e/:0lVPY$+9edM;7eiO8M9QLE6QR81pc'6"O5Q6@:Rs7-o_tm*C\i&Q^0ME9Q7)W]!a855nB-&?mgLXbA\S
%C>_-.79GAs2XihjV'_?uqrq_mW)M'XUgGUoTiG-6JX]jei=A=8.ug:.TU2ic0\HPUEG1St=oQ$E>W:taL"A;n&87/e0Df6p4Hp9I
%3@G(ao)%'W?0'!)\,07q3A^c/5kCP07mPeB3-cnHi,`LKh_pC2EHN>W;K^Sa4pOZi%RI8i+1S"Wqs_9b2T:%?N[QiC;/]2#q!b!-
%W7K[n@);7h5!C^I&DMn>WV-,M.D8]UlGHu@*V$dSf(`YpGAA5"=Yh:@*qXM:W@)X,5,m^o.JB5IV)F<&mr?tj:I+dTr^9i6*(HRu
%2nQ\2I.Qtq%jd4SekS&+3hB-*TbG2UFiF0CUkA:.enMXh>KPq&hqI<h[mJ=,p[@!gs6=[\mpB:joD;T!kHJYEV\>uCqu;:Wr'Io9
%QK$l@64:Opanei:_2#ucph*@VO+to-3hrMY,08`dLY#Q$Ye3ZD-CtUE6i7iH?_a>2g;C+l'KLAAfYXfqnhm/4M,!cL15EfW,?j6+
%"J8_=n1-uBrT.Et"2:i[f%`8&q2#BL2GWc8"QXI2:&IV\.YHIb[,FB&-W_HQD8"r\$iCo64R^"ei!0A`dH.<'ag]>mb)HmP;ri6H
%!Ks(1S_jt]RhZ4igg"k=JmqPMn#_Gobs3V=HYkD_'@AZ<jLt,Ga=hAcO`EI2e.j'^e;-4Uik.PZl]HIB7>Rk[@j/R*\&CL;o&mc;
%0/XPLiHJ%i^:Wgs"E)9[&4N?$01nolCXlVrFBr0cJTU&;:tFr."GjMhr")t95'd?VeT-c7[STDj:N.V&hOh#EN$`k:h:'=>P9@U^
%]t$:eS/:pcU5@-?M9KWZ=FP['O7-+n&khrkg4&[#H&bq7MAtO+)_:3ZW'8m5Zo=fI&j^N:MG:Bs2n>JQSLVcZ!DgBMCoo(Fdl]Pg
%eFc3jH(p*&h88X<S(5D$M"mO,lF>!S/Ts%O>f<8Q<pTLl5qM8"aF'.JOu%"tQ.@7hI`Gg.REok$eNPsH34@3<2a(LLID2dQ"8^[k
%*d:m:Xc[QsN7R(/r4km&r;d_Wgt<j0S[K^'J_1l8#c7J*h[8;@f=[;Mh2CgenaZ$O`A3GP-H>u<5JP>Gr:?D3\ppl-nDa2_Y9YgY
%<m:$i47(m!kEs+ef,j)PX!cN&rj=>+N>Ob-/tfH!]CLL0+S=A+pKP08eCGed/SfS[J4As6o$8mND#*6Qi[=^/@6O'd<+-Lpm@7X8
%gV:D?mJBuYC3T[-7+V(8*JK+EF\(<c)jcVPrkNsA`?3;/<rJM!CWFcO1M;0NXdX]Y^9c`6],-?3?J7U8.i\)@I[,Ctq6f^skgu$H
%JUd"&s6't.aD]Q)GF#C2s6f=6WIOAWVsFpQpiV(.CG"t8h9A1['2,G2IkpU6p)bhDn,967k.L^"_QuID/3`l*p=<=DR3a0@5KcPJ
%Il;F#q(K8D$iaf4A^5dBD^>7i:HMY^qX:U@<<(u]mG@l5P;iF8bO_gMGhlWoQ\rChJ&O<,rot,?i3.(T]__$Ei4f6!E:rMbC^:8e
%rfkg$Rr:cWkE_k6962VKl\i=HfH)sfBJ2QqEQ:O^:?7K%0[-'bZ?8.)SLgtgKshooF1]W8p0>+Mo/[\gS7h#JO%7W'l60/s9A^h]
%cCG`3V7H3O=_$loF.&N0iIK:'Uc(1+Pk@8cjm+UB.?kJ-X:$.IT5Qp;2)?/Z2<HsC(WuY\[^@g(,jeUo=0;DNHm#I0bk'hR2D6_?
%lgn<9B[:T]LJ%0so9\5-prVLZr'?WAcDRkG47em;1MK&IZ4iV?R9s6kJ'a[+o1$`5c(!g2IJuYpH@]Me)s=KKI![;??C3h1.kN;j
%`6&JRO8G1G/p-`k+T!hW$i9hNlb`'ee%ZHPo?.LH@O/0s]RD.[S8YcY(9W6nq[<.fQ^J"eC]84FFF7%jW'7]&$dHtGE7#cmi\@.G
%V<a?;id,ed;Xb?pZ)Dagl\jLF9=p*ZY*<5IYFJT.O,nHb(UIj1]Qc6a\R'Zb<F6Q#0:&p=o(8GTCmGG$-%F=(QBnSjZ_cSX]t#Df
%F.oG4%"G`#[NaA"=kZq0O-Yg0X,Wt2d`0S\mFcr;al"^aWGK_$99&^HE2adY]in`W?Nl_tk2u?BFSQJQ%\8=AQ_R'Z[%'2%(7-iO
%]6h_&ek1#ZZ!04p/h&aFbOouBBt7.On"D[FhVI_*"AAUaMP;V*.m#CfB-iZK?*>6#O'KdaZ:c_BpI8SfGh>]ne=rJ=dYT$iXY*,g
%_Wk`L4gV/ce%;Z-O6tljrbK0[RL*#QX4N-3X4:k;J$`tXk&?^<f:"%i/]M/Lf7HY>o4uK9r,llF5cUt-L^WA!fog3Rh:UlM>/"V(
%Y>q][]=![tFLSuq>(0Qi2#CuMF>0%gO$@]^ookA[D>ibp]!ZG"[27G%Nj[ekBC9#Y@5_/Xk+`k^13Kn-*O+uj'()L&EE[&%DqmHc
%`/VX?R+SA#X&jk_7]mX8/FKYGe?(t]&35$L$67SgG2Q94(B`"X=3#l,n@TCtQ>a=lHM$VbW%@%G_/Q6-_ZZ#Q=0@.Al0X1tEHH13
%X;s36RraAEp1E7\4MRj1kN0rjpY^&_FK6X(hHh0cDLsmkS$/7#4L_U/g#g52q'rj$)bKJ%PF:SdbOI)8IjW<C!s[m(;_-K+i;&Se
%9n"J%>2`BaGKaFHWkdfnR*@Q"17,l;Wtc5"S`P!&f1shKUY+UdE4m%B(Q)g*'jfA\bMm8!gCP*6oi[6qcPL%[N?3rfqEe;38XD;K
%mckKFTr$"/CgGcJ<gTW"S+Sf+H>T?#R5YLjW@]a0jn7nB8(Oln3I*h)>Egd!:KQXETZkN])f)IZ[MI[t2#d;98ObYF9("h=UuZ;A
%2<@iQ=]3l>,t6?cMr[Rkro;D6HFYP*eRH^.;qj_L2TM^sg@i?K;`fk*-1,k7FJ;o.i>6qA1b@jBH'H^O9:&BO/5b*OT?ROAq:bP^
%es^`&[^DBjo7QqogY]Rs.o;_rG2dbH@c=7tLSWRO1),d&[mR_$6TS2Z3a</;%.7l">FChe_m("n4&[T([LMVQFo/Rgqn*Tp]8>qA
%Xqb#^:5heRkNR$GBW$,(Mn9r*8$1U<GlD.GjCg-QqfI1D-Eu73RS/!Y5chQ+Hd[5m4)LiNHU`$#^=R*<H?f%'Ikr'A`T;&^A^MSP
%euR&Os7)d$&WJk&Oso1O,?O!-;WMEBW'lu]X"R?KXBU`,27Zc[0tKRkD70f;=DS1;f#1ZY8FOR(S^(ZFPi'6703i^ZEV8t"*BuXq
%#3-4qPt8R`I%3oI0'ui!W4'.'\@D9''%U7b-FnNsdS>NT.sgd)XBm1DVk*OqIqs1>?Ogb1ql/*Z*+o4ZZ#IAU]"ZlZi:Nes5s3Vr
%*aDbZ]*J#:=uj!Q45*Ct<``X+(O(R8l:'TK*NjR>PJ^[IIf1siX#qA&0$W4IQ.*A=dE_.>jjCVQkhnS*:3o?Eh5#7d"?abnc7VW<
%dZr"fQfD*&IsJ\B7:XBK$VNI.M2(pUlY<tN&lB9c-Wfm:a[ppX5(4D4:52O(O.:082qQkFI8*\-1IB'Jc_U:&]:#SBA*;)9;!OWd
%8UKml<*rd]@EqL2b3JfFAqiD)'498\95Sb=]RFm@R,'Tc0!bADkP=K)l"W$;T=\IVBt:qE>\7d51fs+0neZ(qbP@([h9jfmD)Qcb
%dE70CQh'/HIsG;P4h`I!-!m`TUKInX\VcVE(K\*"inRP7[%"R+%N\rZ:Y/Z7fB):;iF`%66+r+>>i]fEmKDq.DcijjX\*p.2Rfr&
%hprIAkrZW/?Fr93bE$kda8GB(l;#0F+'Z*in*fkmh$<sI&.].4KMJuH%i8m3oRi^8WK349bWh]qDbH.W\p!TX]XUKpV,hj6WGl-G
%IpSC<h<.mmY<G2-FUH,T.XuC'KeKWggMeKTFAnU6I-<\Va^5f:1\oU*rk+npFRV+b+ku/J$MI?>-n61tQf;/!CDH0%GH7T_aN8%+
%k;I)+@\NCVGjnlbSR,TG9@ZpB/;o+I.\C=>T$#TlmB;=YNDLq-=hh&fWi_R5h62R7Z\tqIX)X<B`:QL?'N-U;qt9eYZ^faKl:\No
%oeIRcX6l7N;;4j9BsjE_Dq=*SlauiZG.(_,'U"62jV<3SO]^c7)hh"(a50XF*W,=k]Ws'`h<h)TS^'/Mfr+#1^$\+<@:$A)?2=.C
%A^%R[@aJqFK+F<NV_rV3]t.=o#Q"r.!gl1!l#&D8]Hk$,$1Dh=h1W&JD:<u"gNcfII`j/!lY1c:UWB%TIf&?&l_-o5Xu&?@#t7"f
%Mu9s2q^3Zp`hIBTqXe1f2@lR2q?L"e6TQM:lpdiDVaR<4qdCLA"D1m=,/abAr"M$3<eEM;r7?FC+8s*n+8f3jICu6K"BgI41.'Ic
%^](Q+YjiMCdLFX/!.K\$FR)@Fmb@;0lmKTG-GhnHqSfZT*P#L(:.Mh$gA&9.+2.r-i._8#'Z&7*s5A>;r9*q>?iTARs)UB&5e3Pf
%EY:&%i.E.lRK=RA?4h]lp`N*=L#E-;Bn@as%h]^4Hk8\Oi"b.WJTRi`JG(YoFpO^H!;=m^F1u/Ah#lgjrWO+a6*@f9"VjIhI0!YO
%[%OK-K!4UX3Sa_ZMWQ-;=]H1A-qQH%$BjTQ"^UlA(]g&fHcV'q:h3/LSC&%2;]/Dq*DAn$pc\kLj*Sjd*sLqefE4a'D^Z8aTnGgE
%+im<Nl3dkA-O45.iD15A!j>P4&C`]XB*(>)j(/8pOX`D4%29Kn#CqE/![ETh.ko+"4.X0PTINMq7HQQuAO'!&'FGQD=60uA_f\uG
%;32Wt']a?J`@:CE:bALn"BA`-.8\r2d34S^l9)7J!g4VSF\3HD5mAn@%+V0f!ZENpKdNcb*]/Zq"`BZPFurB%ds2.a<$!Cp5XCS?
%]:'_h<=WR_a[&qX70_7Pd@hZd24f#R'o>9n!%;S;R?f1N3U=b<,R.fhUd9Qp+DZo;0ZiPhS0L@bpn5LIWWN?c;]l<s+@&bjesc^G
%?W;lu<J;eei.@]=W=12u.Kb8gl3mq+M+LRo@6Q_@"p<e&$DJ<c,d8#@X)T$[ML9=jR?r%c5R%*aok:!>5p47AI[r2%5_Ua);1_TL
%!u#6Y#/Gj@CCIA&+qbGPBdtdBd3OQN\f_3"C<e5H:?<;rJ9.a/1UsH"aKPZQY6^;d?]e4d>>dkh8f3*]<Ds64n1''*&eR.-#6dU'
%)R)aX_eVP5?j]i[#r#lOi<q#)$nd>ST`F4%E"4Xa4;+=R-jMt/CdA),i&Jas3KAoXQ\,o($P$[:J;j#3<iX#eP3aRui+Tn7/r2Xd
%**rbPOE:^F?_RNc0Hj#-aDs&[Q;U!HWBG;j:BEe#00BoN#R1ed_!;tBNC_k,!!UbQe/ZO7(854`RXf_IPb=bn4_'QV637"H@no."
%_N?,=,>FktU[$d!cnB(D%a.TlaJoTJ?9sqsjEQpq;T8=0;DDkKA7Us-N[j'?"[iQp!hFoMWtnqM!b"sr*1<l8$PXpW.;1c"LJim(
%<'gV%!%peN.,\hETGgdL+Wq?@>^%U3KLc(dE(.^mcp`aQ0g-9,\:u-q"WCANJA@4[luiF.'Oa;T_=u:_!$Qpa$Z9:g(PVo$DF5YE
%5Ye$]63G>$$=2/=$L0u9+HV6?&>0XM'lYN#"FK;8#889e%6k,"'^@OjoU:q<OWda3%&f>cN^,::LF`at%L!<4(W%J?+t,-FK7H?A
%9E?J?7A<%5TSl;@PpgH?&@b''$SdYTH&YO#&]l#'?q;"M"\GT2,f=c4:I&Pf6rq+0W,)gH6:E5RWT]dGJK.lm&-b"G<u;+&#qo+c
%4t'jX#3nA?#U,"&1bpWh[%gPBLk]!!.KL#N!RK\oWY(B0&0gf0&6hP"&h$Qfl(S;'3"q-G!'_f/q*Jn["nVg<Dm2]jbR7m<W2L-G
%#rL(>@,Y\;)F/NUQNUul03F.TU]@Y'jss7N"EG[i#T&*40e!*-<$c!!&2#+%&.0o@ZbV*QX2kt\N(FGVJA5M,'GR/&:lkhpU]N/C
%F)\r]lP'P$+>=77"C'A`6+fHo%e0bY310e&aU#[m,R%`e(*ooE#E2?faHe(gJ-$dO^_IP:Ne[@a6@G>Zr`)6*+C>*XoZ!%7><r.,
%e8pNn.mtFD-*"a@;W'C+?VlS)F)"JX*0UG]T/oIVYDgSW#+lT8G@W=W485Gt6U`s;^eWPs0JMfLLr2__i_]%38\c(dk(Q)(J1u%N
%EL9RA=@rV.W72YL%,e'\%/>[W=VH19<0=(DY^Ar!i%d_j!M$0eL^YnF_uUum4aitM;A^cZG2X\$a.shEZt>/]Lpeh,(dsrb$Nspb
%66(W6M2Xij!:SMQK)hc7K9(g;2=Z?]0Sh3DUS,MA`'4V:H58gIY3S%s,lm?SOsL0bUdQJ,J/gi8W6c]3:h7EG"Eop*Ys:Pr,Vgh<
%R.X;-%>f\>&gmZE0L,ji$4I((1Dom)R<h@/pPL0a%UA%V?d&NrbomE[M\*jdL)Q6XUb`"#+j_@j6KZXP*LKNJ"c)MGm1%$-9SsC4
%R<Jfg3'Y'J"/;=P&5YfL&-/H!1]X<S+JfeL'F:uOTir3XB=b*r#,^[qQMV@=lQK.kA5UsGE$<6bPQ8WiOTB#eiQ+h,c)DVsbAiPL
%J8BdHM)FKj,;Fp?>GT):5jq@Y($$JMb9-pYm!4^/C'YW#W^j9)bX):6@?.JpYTIhI4G?)n(E&em9?`Pa\57S#$'5lN0J1@&e>&um
%A;NQl,sikf<XW\LA<m5@6Dl"DnNL]2,lLWo)M-6d;bPK.2'RY,OW=cgE>hS[dHX[<B[)_#8>3[_WZWK'D4N[0;.1V;^g'Qp=Z#)/
%]aFoGC%dK/MC4"lPpoQRJs4.$L+[/$4NhO@%/E#*+0`n5C'P@U=,FdZs"]5sMWbTO2*og=i/mo:'NsT9!?Es0OTK*V-5E?S'DUDu
%J/T"#(83if"8W^sb!:^V6"@*SOcrr]KEP.m<Wc/`D%\g]4'cK*8Rs8-QJRe%;CP-DFeK.C_6DdP)FQ,Ol12l6V\6IlMW/;l"K@oc
%^@A99gdq]@VZ:\$P8RU@knMK0*F+:CIKEq5NMZu7P+Tua_6i)k>SY6JirW!Y*s-0!KgTR#%hg2!j4kAMB4C/LPNX-!1.qq(p_>8_
%LjQ_QpOFa:)hD?jU:D8>5.XME0Zk0TOoTJ%JLLZO17\I`YU4'I0`joO:-9<rZ?0&7O">&VOF\\DKfJhU^'#X[,V&m,'KNH$'KL=q
%VpP>FJXhoP&@eb5`hsC]M"7'7JFKkc..ECqof1kL2*aInkSN.aNRI$YA^LOAAcVrJ:@=6Ub7UC0-T]^V7%#Vs<MUK^,c`-!'++kd
%Xt_'bc!YdLogWKm#W1oPY9g/)>c=$@M)('Oi#-3NaFStb#XCShni[!%V''047sBhM?6jeTqF?d("*?"@!CKM`eE8-PDuanc[9>*`
%GuDTfkc>(]T[da05"gK+F)pVrp`qn['e&SdlHqSV<O*82kEoJoia:6+:'$Sm"I[;!`GegK;CP<!kd&6,\@36Y;4p#FM\<93N'*9_
%eC(YHOp6p7%AZ%=YXUsGkS3'gW2^Q"G<-k.9F<UY?q/BDMsK(g0QbnG,@Hd1QIiA)@NZ]A7IV9]MnKM>Sleh9E:jMIS0pqi8O:i2
%auTX1A<R!>(Bpei/(&$^:Oo_Qdo6Rj)Jke1]4[cl%TI7"10e+KHS?'^O9L3%H:0b@Y!E2"MiJ8o;.M&D5meOVAE]i)"K:fQ+n?hH
%!\=[bG(sL0#6IJWK_(@\*hoUDG`XpU#.iZTU=<gBTt/ok.I\PIKONCrb"_42Z'lP\U.jnm4$u&gc5Pb4:iS2s@$dtgd3/[)F+Ccp
%;,boj%?gM1UOT21e00A7!]5s8L/+,C<>C'/_`B'Ekot9T'FKM`?"-&?mU?mW4/b2m6TRh[+rqU)KJd&P*h>cOX=(#XpVeSQ+A[Rp
%Y;!I5&P[4HD`[8p;H+2E-ZVsl)57T38K9)41lMH?d>@+-kXedP3t7cTTW+O3"4j_Aj(,2mIT&[#3m).DaVAB'i]09ZGp"f>:G`:)
%"NN)]?E(01:.KYp-'iAQ2E3[0!P@uk7"_U&NHCb9.X;NI64u'd/ubXQ`I8W$3lnTlZjT.I)+5TjI[Me(B1:c!!kLuR$iklo,TlF8
%6T2#DTZiTF)M,QbkRkiM8bWAH5XhQl2,>_2&Z7%N4_#DU;encD&>WdR<1]=j#`#45F;)I:?k0"#^jQEY\5k:>>VH3].LKCE#R?,R
%R=gR=FB'=rU!br/bX?5G_5cFG"&ot7AJ?7L:er\V'B7+R"RM0]R#^u(W?nd8:9#t0-_.O?_<KET*eIg*T&PV7$.&rW8@K@c!puF$
%:rT:\V8/cZ&LftO09DE&eb%^9$a(_6-U=WEW8U+$9Y2s2!]UKX&0qJ38\M-57p+n%=id1F>U:lnD&"N(lj%%<MGb!?0.6<Zf0R")
%WeLnKmd,Je;2Aa*L9l8+,^$*+'S-]Zg2[rP19!BJHRe95;;"4I"!",:16isnRk>>U@\IIgr0JZD#`#ESp(8FC4@G8BZ7/XeDUTI'
%#`<;m88QW[K#6FQE^P@>m4C]q%uLo(:r:Z7!GZimSH6fl(.t;di[d\1;d'eC_""/fe0k`J`IK3f;$%`G%d@f7nUjuVMQ&X,="5Io
%:e)`6Kku999W1fKN`d%[H>5hYQojSDq'a#]h'`h+H%]'p8G5^_OF@Kd?4\a:,R33?)Bf-=N*u^<NG8kM:pU7s_J0l%>H,2%EA?4a
%MA:[loo4c#41GP1A\eBsZKt89a3bmDOI6Y$TS/Q/f!06?d9`*cohc5d.T9t[6d`j$p,%>!(Ed3k/2JFtfTc[Y<j?HhbjE3OM'?IB
%4,Y:MQ3?PFWjmVZOgn)H<C.DUV!LcT@sods:*EUQHa:JK!/-H7.D-l.X@rVM/S#K':gBYpArRGUK`d*p9BU:Om.q#<j]BEM-*C/p
%M0Z[&-Xn/-h(PT)@gE^$j5SM/*3_<EaUBT=]Zbo=XtcTFYqS],KE,':\unq9=X(DPM#2^[6C>R%0G8XBW+\$X79kXpKOG2]blinR
%e(upuF:$8(:`rO\!$;r<2$adHl1BE.@u*H!^^JWoJWp=8Q`(<<>+^^`gK&JW^snb**GS@qmN)%%R=!!Q@"EP+#nm?&_]VdpOs\3@
%^^65_)<]0t4n(M_")_)ul6AQV`cM=jZEEjKa9pbG7^u&ZY0a9b#1Q%l!d0XrMa1RrHPCQfQ5CV&aQB/e%KT_qF:-K17Z0MH,:t47
%ioYp:i.*"Lb7c/$#oRLqlpr6qU>$aq'Q?jkTqG8,K*2=;VtS?V4TZgNGR73>3s5hRGufXXMNC9lb$i\KQ'156obcM7'P0hH8D'&E
%c]&_Y9\!5oN(['uBfO!.':hN)>c0^WCktcF2Q/D!A>p7V[lW32">FAG3Wm:"eX6L^B-R[Y;M]!t9R_8D!J)uGX^FMQ`\V]`W"SBJ
%Qu5aJKJ2]<-u:;*0K@+Z@54oG4@$>Nr$]':RBCWLNDL?=:o52b#aB<Bdd`;N?]Dl^M(Au"r.oGl,EO.a&cJr/8#7R9ilPb%B0;G'
%!#<'K95Fnn_Z:$@Us2G>FLpKH'J++#CI:(\Gn?pZBS$UYPSd(nS@,8)s2H2^&f)<(aqPVc39o=>Sa%2IM(3X@12bY-NXS0c/BPhY
%0SL`,^iEGM1Vh;40)Ja-UfiP5eV`GO!I#]c?W"((WmHQZU^7S:`]b2)Pc2hu,_E#/qZY\E6TBi1=9@POa`2pj_aHNfN@bCj>`f`2
%(T/F'G$M1>1'N?YP62*NAZA5Ml2%)t=8E?(oPb1)7?o2,Wj<4k5Z1Y27"MdM0P!GV`Kh1jF(<&-.=O#%i+XYkiY_g'TG?8]@A/d!
%.6')u&qdbQgp5=A8Cu6L3'bPd8-XaLH,0eu]FuMiY*U_#HTD-0Kef!Uf`NKR1gT)teVURe*f6O(8@d_JDk6!KfWLnc)od=m@Mp+q
%=osWFA?W#KE^jAC=U"5Q;[P!$YQVs+0nX<Bdrg:7)".SEh"0*rKaFQYJ;1*j(=#KHHD_)q"bL8%r3>Z8LQ\E)lmZX*TF*G[B*>0s
%2#kTk'dJWb@mOL:Vhj/Q8c]\eb=`stKpl5CM)kc`-_$B7J0B\.B]PpM'[@[44G4q73/7O)'Etd9o/kC%,!h62#ZN0GfCWAQTqNq=
%#)>&`dMbMNW&5]Zm-c)o@]:*'f-M2@TSe<;:1/#lp'FFEWC?EGmuSZiA$*fZ-CCOQdXS457$[>_PFaZ_g7UF'6tP08P\;WsW,*^b
%I(WraUr6n'$q=$%d5j@.5_1\m$?YXRdZPGk^2U&M$KtQi&&Da-1e_@AWl[:(aqF5<=Q$MB$@nl"gE;ta[)[f<]$Z&iY9:/T%b:lg
%aV:]#*Y2;(3q&j`fI!8b#?rC@-Eq><k!Vc)8NMZ0Ba_Vk'E#;f)*jDJSD"Y!Ejk-WX0`/K.M]9(!X(#r$<$A1:193;.ePeaDP`K@
%4THWi&_Y)Z4J5)g$g9Da&0-ta*t_Z9L=XiUD.MjP2\>:n;:Scm7&SEDch1s&Gt,;5gZAbX(pZJTn^mgQ1lZ@TnLQia,aqXkr>f1>
%<>:5I:1-/M>-A/S8[:r-9]/r^"sdiY@]W!E109Jf&WQ46U'0+b3BS.Qe(trM44ppf-)^'fB;H<rbLMGJA]P31-4qXVUhPHHOm_N"
%G]^b^k(%f(%NLO^P)^B?.CfPDGm7`;%>".M1hHtT*[@J-JNCA#g0_h]M<;Sfeg_AJ<t\:paj/9]*m_CESLIZ.RR5:4i(c'upU\I]
%U[:EBo/NZ@-MIo\<k$"njJ4(l>Kk_g@gt;;UU8dt9<nX$n)Q<1nPgu$"p8gNFo&_%+?;qT+_HNE.-lhj6j&P"30uJU@7KuX'F)9J
%UFQBBQ^Z.![.UWLAit6^']p,BXK"qtfEC6eecF)GI3@c"$[CTamRiVu:Ohg61.nJ#Wfatc!VZtD#F33U+U"aj8`>4TbrP;]H5?,Q
%MM>?gj8^-j118.Q!%?kN)mUW=B:F7`hVJ8KV/2n.9hpm#Z7`G(K6Z[;[/'3=K?R(^6?452V`Y+18p6626LhoNCG`<Jr7=N1a))uN
%SLVOpCsIbh2Tlg?<T6QE&V(3M1ne>t6[=2jSR\K'G#bpk"]ab.B;?KP\6[)!DW*lb;PMWgB#3/#d<*F&!#uF%Ttm^n@6@H'3tud_
%3`*Wj/D\up+c3A.PK.a7ZXZDK0%8W\R\/TjOs8%b@p3F_j*3PLl^`17'<CK8.3?5KQ:nZ).5%4>->2X4d`nQ!He=,;*S=5[."H9F
%1QLRcmd0#63cT;0BMqdEh*$mA+8?G<X[$/:Rh^1Fa>lhJh)_.ETV1Q<HOA&),l7JrcDO>u!bB9qQ4`P(da`m8##99K6TNiQb`jf:
%@MH%6Nm0"8od'.7__*sP6-_tLXMp7RR-5A#T"elD8].>n@#(g+FuZCV3KY[Slljd55<1SP0K!6RVn[:Dg5k=](,%.#h2kN:_s0]m
%Hfn19kE#jJd%'5p<q$g)7d;nW_:9j;GlT^rF']@f<6OWa0chiDA\gC0Wq0c16m2SmGJp0&o7]<X^Jp;Pb:s$&jYZ/5.N"dGO]bCF
%[``5kc^84#Ci^YfX6:P%`:boI"=mt\R1R/97X(!qaRSmZ,</FiG,RaSPBmoWFqgR--F7cK]!Dp-bsQM:&OMd33(&O+mj'&[L?'0X
%GSEQsn6lcL1);YNP3Kd9;It%6QbtCUB$cniZZD<05@8>lXN?GQCX,T6m3+A!'_KY;e%:MPW>YFp/cSepE*2qW4%T`nqSDV1LBH,+
%WNd;Y_E4-(OWl#BX)5]-A29*ZbA8$j4HH8Mo_Dd+?op$5`<>/ZfTF">5rr\okNrV#L_XrM[p,$`'ug!a!V<2O*l_C2/T:ue\)/a+
%,oEcGAu>&Z@WYuHnT)[?UpiJe<_%X07kmZ*j]5_OK1Nlr'C"[:)^@8]qcQR=]i25IPb\MEg.,nYaVJe)Qg1C7_(c-9XX:c^MAJH1
%;ilNsUqo!nJaF5h+h6e&^.dDrdmJf]]@5Erp]1GCCj:.cAX"F(f$ase/s>0/S/T@UgVH12'l)42&/u+#"oO=ERB)5XmMj@1)5g.7
%0)c04\3t&ITDusMrS#_:*nUa-rmr4eP(o7M>WFL)_k#[:MHHTW^o7^.RceM#8"i8Yj,*T^Z/[GfX)WM5?N&17"UYRQK-<"p-[[rQ
%b`6Za7lLXGW<NXKZ,AK74S#i;`aORN)!B[JT5TVg!VlK$3PZ!.p#=(`TYDt3V%O9#UIX+U<c3](NZJjo<Ca$IV@fhFFbHd[r5snZ
%)qh]Yj.d2=k=IkimLa#/M+i8FB@.Jhl-?c21ESLiX]4+P3gf9A2[bL,#G@]:QWpd]#\q@_&:l1.N(V<\r3[/Q6'89gQc+<>^]#VM
%E$5^-n-=grB"3rs':;XFr#'l4(H(lT?IUQhn,U3R*#;/IC6h[V<=^LEc6ZF"'bnmgE'&1MHf)WZaqC_dGHUqt>Q1<+lous3CP/&d
%F/'(6I^4'F"[9Qlfn.7uCF6:\F"-H@jnjp!O>t-9\=ae_)_p2l[MA4`g,OYDRt*'lZbjEm[0#^<l#,edM#@hB0Y"j7idZX!7a_)8
%+4T0S]VYC4^>q?b/u=%]pB@jSBl5"F8#Zer<1.OT5hPrtN*En4[B^GN<i@>7hj<!C55a0/q.K#<JkB5Qgu%W/Ls]IBJ0R7g%pqV8
%pi)tohjo0<EW5J\-?B*:KHEhcep$33(nm<t'R809`#%oaKWR!03FYDK(&0qJ-NUkWi!'[dU2UKq\71E.]Yt0CH4_5Il@`F1%p/^%
%%t$[.q`rr:g1/FA7_6a`ArTm#,)7at4%NJ2U0sOMX*MSe(U6J]Z^8=FOuh2#R+jZs[2(*5!,9a(.@5L,.*k0/7c,RG][N]<+&;6G
%c+rkR5)a42$'Ah:SbVdo/(PN.X8\W>\Z69mpXHm>d(So%`K6_jpj(gWQY4Z?>Gm4p"ao6NBH9pMcrNp#pQCmY&k6p!4Kh'8;"/pR
%.*!8+%YJ*qd^M5[J=j7JID+_0DH6Y7L-7K`JNT(i_nmqWq%#S"nJCtKo`;5/F4e'pa&f8p.].HJde,aOUq^!4Ne?Z]>[sq`@g\,a
%W"`:p;j=CEa&/6ff@T.o`Ru276nGo)@KbIAV+u`*U:3mPG`EL\qP?_^@HX[Y_;NRbkT]?RcP9,KKqA1%)obY'=+YpMDM"YF=&#4C
%p=r``NJSUo6GUj)TDKUp?OH6[Od,L/c"_`&BB!`M"hsf1%#`Tp`K?Q<XE)r=.W3\"XdjVC@[k;GiX>a?pn`U`MM:2b/,E.4l5FqZ
%gFH<(J`mY$%/KEI%gAuQaPC=,_)tOV]LM<JG<,IJF7/aBh?`#$i7QB$I;G(>PGNV3rTm60*^Wl41VNkKo&%$fbHXiNS(N86l\7qJ
%+8Au$YrN$?H3@KOiDG0\OkK\a;*QA,G#<gs^h_+k-#6M#FMki";,%VK3dN26&pLG\*<^Dn=f_!phR"cU>,s[G[kBHa^?pb)rSGSN
%,=\L))[?UJhk/l+'!eKO'S5bc<>9Vs]5X8R:I$+2L8j\2URo5"la:K_/iHTD8;1\@!L=!T\=ffRh(Q;Ci_r]KjJ.q.Q<"W0#NA,j
%S=dJ,,L!(e1f!O=i7OV?7NghHYUQ@sE4;>25k;;$/VmE/>+j:@5s^`G;5rblil`4@1T,djid0p;M!qBE?-#qB].P^9:\K47hqQe'
%AK<Yb-!]H^*l3d&JXh_JkQXWUW&3VeOqUk=#j?>CZ2b&HeHHg7CLh7"hq!#@`Fjg!>b0mdrn4,nnR.I`\8kQr)%;C:0<i[Q<iDg.
%h2C>NoBuDrDG(f;Busn#g-.X0PUW1D!F1=r`[NJPfMkS2i!;"`(GJb_h_">$\eYCeZJR,$>q@K[m\+*S0tBnRoGq<KA"cdPe@iJW
%a<ZE4JL[D.ENQsY&+"ea2GEf)Fo:9P>6L\8^ESc\@9_ClWi(TG<Xd.^'GXR@WmX8,F-ZEE]EKk/,PZl$G*'K=/LcFdF9`%tB[-Tn
%%AO=/Zfl;bT>A0fnHc`;C;]/7eWn;g1#\e-2a@gf%e^%.V8.7k]>A2'n,Ir`Spk/_8mTVE=>5+li.^`6JN_T$<,Qap*5u[o@``dG
%s21TaicckD<%c0,2hjGF#9_a,%=T[$M;>Qh*:#'Np:51#"sA?W06N(CceCI[d+""A#?\5oJrf6pV1+[hO2+1hmC+qapq?m2FSN=m
%cSa]^6@K=FS1P1#?Qd`)JV+"Bk#!uQhR:%@\M4Hp<3Hhd%r[n+ii1[Z746qn@t8`MHrI<`ZjmU#Csb,c/$/tifnoJ+*`>WL@D:cT
%.^dgdM]fTT]YD=@gq!Y]a*^]^n"od:"1!d0Q[_UZC=A5FQCf7aOIXX1;G;a35Hm,#pfkS&T!iuONZe7#i9@SG^Mi"sG<h=8=E.=d
%%BTXZfKBZ3b/[Nb-fIqqpWLb(@"\/&E!/')Hc=U\[3sp%(a'&(!R<]8d!bgH(Do%h<hX)01fL2G\#0`hRta)3>%]eh\^q#j"\cI_
%+uO2,go<$aWXi$1;3?0U%f$F4V:G;Y[Q(dS="6ZkE,O>3;A^N;WtA<EW#4f50a[2b:"o\fKidBN<s>BF#'N*2[T_nrp9imCYXeQu
%,A=+mXTd=qp_/IW(TU@Y9N!;&/a!]]n<U+?/GMJArBMoII<L.u=rtH<U[uu#8ksF6]JkmFEROPZYXRkN&?*j".rq*22fl5>:KAfk
%ppXFAM[aVr#sn[[l$\u,]UfKtnBMQ$EX><[W*3N_Y7K]Xdat><pp1,jd0L:.cV_@Db[Qq5oMWTPb3'aKW[[kMDM(t;?ASio=?\5F
%H-tJs$^6#(C4p@E!)Us9o`6R+S.?"pQ2ec/4oM&p;<88iOR%o3rbU!jO$oX4U+V?/oEZ#UF^c>XHds?7U,*jVN(KB#5QOM_fmR3K
%!W0l0@DWnEPsF#$NI.V,[[*af<M]>>&hnXOesu_7&6FD>,'+3JrGQ8'%ZDHok"9%F[rP':YH[qEc,T;S3&OW![[BTnA>Nk7I(O/m
%8k<>#W<!m"U2UtLmZoq28Y.h%EaQNE\Z#,+7o%&'/hLp@,5$N,T2VND=#3BT@qZIIm=#?D1?$s5iiQ3u%X9;<,Oi_)56r4N*t^5C
%ec7pE5?8EIp0s$hLS!L`c\s4o!3ou9b6KInGR891fV=C-Kg`NI43WI3s5(EAOk,cgJW"K\5/H5tOiE%Kd?+HHp+gCS.\J%%&t/Z[
%5!=TRg6P+2euqn.7HLG,mF(PAHhcTOJSpOIMFOGd/f?W15:\4f"ZItb'dlX^6^cmBs2&[)nGZ"$4c4[)/b;`VCG)ncM<$/WXISl+
%&#jm8@l'%=pIs`V:?I]g!F1OH4P6,]ECd_qFLNe\+s)>)$mIhY+*'@a8b-6-$dq/*Ep?U6H0)dm6N,^V63A^BP))gan#B@kA_Tta
%l+=)b)m[=X%ZpmXfHu$efq:+]mFP9h;m1N),>t]_1ZVXi[1b('R[BfC8@bpeD6AATZadCRS\PFe$M*Snnh[F+3uJ;hXl]CpWecgH
%,:Sn,]K?QAB6j6u!frZlJ`@aTF7W8*=Wh>$*pr`SG8[F"H=LPt(OP>\p:)=_1Zat.-)nD2k_fd%`L^'9f[0qUaHI'%eV]'jPURHe
%+&667:bVu)\&U:tb/3BgEf+.4\6G_ppnFr$3Q&8jSV\@3,@%#un&ki'*47S*mH+BNb1mV)$r>a_%%Yf[Cq0<WDA*c%/@m6iE9>Ff
%)Yd^VRZQUgR$`7g4#=^FVDUtGf9n3sjh4^Q0O?.F(KKdJ$A0U1'ppJV-TsfjS2r>moV1un@4o-M9o8p[.Gh,h)S&ht2&km",:jP!
%be3^I?R&B>H?!rp#Ztsr8([sbF+ikP\Z3a3qM<s>6W+(td"BPoCN0m(kGh$[(YX^AGqOVOK`NN96?H6JDEIWu(&S>16#jNs)l>7]
%@cS0qgX=mh[<*sR5=tF'FY1VuW?WaQI&aXkn:HRq9]Zh>:gDZ5=?:QM[:``)m`c>7$-GYip582698q?f:Jb:uD/Y;RMMp^<gDTg)
%&s96b'Ur9;PA0Kr!B+RURLIr:+G:VnJ=!c@i#S\h6F2+52hFPr'!^KteNlgtKWi,s5&k&S!a"&4^cn$FBZmbZK9[YL5N;sFpNZ2)
%fFhSY.ZlBuNWEq35Hq?_7ee%1`JeN)RZhPR8&-Eh?4U71:2PI4^pt-bX(aS')P(s?n#I'4:rU([$7+]#ZVVq_-N%ghGQ]=Gc!OM-
%i880uo(8)Dk*)sk:%]mMe1?%"*,c=ZBIS=BN.;eX>2[OW#ct/k`T1h7ogNa+fa,6Dn/SkQ&P1f>4FNL^otGcX.GA_FrqEAemG+iY
%8sb!7bu^[)7dno\M904*pAd"16qshSC%;";4;A@kG4OYads?COA]><JnNjp0#DB>sEYirc(aO]X+t#-Y]Ne=^k"DAk*k+uGcq1?+
%$--s,bqJ'&!o*4gi'P[j8?N^a9^5,0&;KEi$.dfTKi>F@N@jE^ClMq:"EmEI9oB5)g7^Lk$qND\MX$uB>H4[G1t!MhXG)`!S3/]\
%n^8,P:N5$a:ru>O(BKHPHA*qQ6eW/tMWIco!$.aMc^.SBPV/R#;HXWcW.?VtX\?;tnH-\'c/Oo!nD%-*,A?g+0Tm.T4UYZ9qi*U>
%%(N"sj8`I'Gni@T*tVQ#V`_35`*/1IGKY@T1)"N;4&?];'Gk?#m7)u9]Q<!5a6l1<d!O+%*T!7d:X99sXU?+gdK2>Y+o36p4>EJ+
%P2RtUiCs^kQ.sEL8H5!_1$d$G\^9+XBD=)V8TG9K#hJQLNu9_`PorkLib'Vk/h2"m?EmL(/aV!Bfkq<3LT0D9$6ZFc,qnCQP4C4H
%9cj_3rf'oF$n]5o7fK[=^^h,YSUATr.H&&GdkTOHU#X7*anh[LC@^eiOtQZ8;1cY?T]hL95j,WBm0-*3a<PZ6XdmJs1SX0^o&>S$
%,-VM\BN2"V]q2c2QAr73:![u'7u:Z@'gukl`/[2NE6k:_i`GZkfJh)`<f>`1<fPpA3p_bKL^'>c&"?;NT2dP.74iL^^:61.W6\`e
%21qJT-0"O&!5C*EP-0VE8g(:g%[C/=8dZ!%8$\]umLqeGel)'<HmTS*Y&8'&PD#r0\'t7-i+fDXT(0:[PbS`RZcL$^/Fg+sIVbKo
%KEQt;hY-Ag.!^g.]2Y1<7C8R#T^!dR4Ycmj3=pA0@DGMBP=&kaq$ji2.kd4&YeW<["==c/kDq,)]-/p+,52I_i(QemFtm;n/`YM(
%203eY?2ClEjO97)SL^n7b,:AI/N`?OG+L(t\)Ikq./%_P9"#q$X^XBI+4qQh^^QT%T!;aHSAX6nUr=j,Prp[[.t(+<X:O)DZ\&+q
%$*+<'>fediVdVo!#=[`(G/pE?#cnmb'jUF?dqdV0j^fn9m4_2Y.l,;Kqas&VPP;lZpOLjm(/q<rqr>2V&Rb-^bO<OY!>^?F"aFCL
%[;55Ws34>l>A?CXq+fI\SJmM7c?stViOK:Gl1c@b=@s9!@=qELqR1NL2U/`V]"m(0d/Qq5Pqe&_-o*@40I-+qkKi%pS`BG.gXQW=
%Cc^)Pf%(86SY2B.;5d"EX"$eP>0n3s/,gd?TtqrDEi`n0Zem@U?l'[M>SUnR\?Foilk-'G1W6j07ju3_;VEP9NgVh,@Cl4_lM68?
%Pk.B>[N\KX#@!1G^NVmE>[:Lp*<H*A,DN?DOABN4/aAfjQhWt=K@$\$TBeIFk(&2>[N'6IcGgfA9<U[f)05qjQ3%<0e")OH<)Qm`
%`JT^5E:&__\Qoi4.$7#UaANn9l/i7!_RaFP:foC?gYPGNZa9kS%hGoB4N/"c?hg9Jg-8Y6hJhPT(FcN<'7;acS?1<O$jCeSSK.lM
%-YBWMPs\.Ef`P'&Yk$Ld$0gFUA(V/ZNZo=.)b9:Qb4?k;[FhQ$AV@<<_ad+[j*V9U=OecBUX-EBkZUI3k"2k>E1L^WGj!$YPS/5%
%'1Fe<Uj<<3keE6u=3sXW9<UInV5K^?jVk5a(WAP=iYmRX*H(i26Aflf!'es*G_C.pPnQH*:F';X+1X:2Ns_,eXhdc'Mm'KT,-@pT
%].L`XIqp<29OCrA#/%cNHf!B"^Y^[Q]h4)/H%;YQ?q)#Brn%^bGV>Bff9l0CM-DcbHE04oN;?(&@7!9#'Y*JR8WY9^?c4i?2Q+qG
%B8+Cti^FLiJJk`T[s#b$d;,t3_Q?g8635EH$-k.](WA1KAp.jh)F"&;L2UDQ*HcG=\0i]h++mFl+FMB=,P,^IVKdn\&sU>>7qb'%
%4aVPMd+`mQiW&N=nMgA0r2N4Ypbg_4<gQT)!oN1\&"X'[;Sg$'%GuuoOu'S$Ji(%4Gf60HHO.+VE9-u\mm"j="?^;/T+XqM4[/Eo
%3+7;9V@fn3n/eRP3a>u;E:m=mh%=bDof7)MSmLGZSZ".6'c15L#1,tHcf>+bc7+tt!+RPgFt:N-?q2bN,Z_8*,'P0'WG0`L)mC*s
%ZqeI(fI]XqaJ;322KE]`nWUK`=#Dl>Wc@J<Ke=@;A*r@r5Lt4L82aWEOVDQ$<fo`-mdD%ENDr?&D@.q)-<T1k.,f8;]H-Zgaa5.d
%f^dn503g;&5]cZ)C1BT@B/mNReFhtOpq""4,^4!%mZ<7Efa483qh"_,Esj_*G(,To;fr;e)/W@/Q-:30V7R.Y.Dn*d*bfKtUQ.*9
%8og;#UO#d#KBjq6/a%sS&EL>oUo`(:-$,MC.W/kIj@]jX^=a8E`Fr#\?Di?8`OEr06ZC5o$u*<'PcADS*+VC^gRps%SVL,&0/Ha*
%WfDp_$R-?oP-f=bF\LfcpW*S3`BEh@,>+&OGQ/H&<,^h3bEu_k82pA:-7X6r1YtZCq^`o&g3&^CQFi:,,giG/"j(bRWEi,]Z&:*n
%?8I/EMS;6=:dqZl#;m@tf?4N1#`Xu%ha&3#G6%S)GO#D$+=\P#WA8UYK9obG-ML1*&lB;>q]81=i$BXlW\LeNhBo$&Q"3X(3;Qf&
%%GL@\@3.(5jm`dX1$28j:U"FXNV&V`j$t3#eibJfVLu`2(e[7BMD:tE(Eo?=>ST4]Z"?tOZU=gVG+*o=[@lT0<GJQ[P@<pL9G(t!
%5)RGZM@I].Fk]fdd_1Z<RgJ>0q$b(;GU9&e"GOsA+LP7$d\[hZ'X>K&_R@kuh<p$9R)iS8Q6>-_.BmSO7.mHBL\6<"b_K#cP&^+2
%%/+oOcB</\%.4>\p2PPY+VOef7;=^CX<gl"K3[%8.pEhXqJK`\"4(KuU#?li)9/E7Hgp7VSNc$JW(ClU0M_`:8Qnm*X<k[4G!8p<
%@3"RlAJ7TXZl0bT3>7o?AjEI:N.%>NIKPg*gQU3D'.l--.6@bO8rE_Q8@]D$)\KBZU?C:a&I4sL?X1J[,R2l5^8R[p$-,F"'kC--
%"@&*^\+utM,du_Yq_agFY0BO@Ld[qb,4=a,0af?g\U_*U#:bT3EGFXrW\7-ZYLmc'>QS?.&X$B:2m:an&Qk)i@s)i18SBCdWOlGF
%$oLsLLHQ*bZXdNpD@>pQ`%-PkP/p2IPu"\S>"W/jQ9pcV!W&L)Z,FO2hS0Vi)ETs(;RFtX>fVkt$%!8%J1=^?ZW3&Fn'-+D;-klf
%`kj)-(dphL?WBcod[:5"kps*a@,=@<Xf;t*9>"WFKge&AL*\C.Y"@Qn_];et)@LP63/(Y8J8hdE!MWrWV`F+&C4`<.`puH*kA^lk
%'"og_@7d7*XJ+t@LJWt5<QdI.3lFBt1)Y'c\%cTINH4He36j^0`,t(SE;8:4P5!J`P7b<b<GXJs`#YDd!cd`G.+J)YH%#rH)[b^A
%pia[&\DH81LU;NG)dqLjat[@4<0TVE%,,ZWT;u9j"@K1)!dTNnIj!<BB&5j?bpA^DUss'2_5Gsqjn9m=+mcZ'c$^2#M4?qe%in.H
%oK^?^"jUlJOpU+d@;"6tI(tqhQ^)#22_'L:7sL@nK6G0Sm+l]\L+.??(.(,*Nk]RS[j%Unm&kQ$m\+jBd@S+*_0Z,>^ii7V(9;Jp
%`Vq`l_e`baN7T2S_OL\+;\#kt_e)qZo'T"_gL=mH+hk7A/I4bdXT!%0*QnX.2d-.++M$&X$Zf2(Zq<Znm::-,J4_'YVuZWFqcN:[
%#B#d7c0<[0Y@5u4kumd5JmfCXE/(hM_@-e__HfVF.!51h.#[KbkG<7f&OnUQ$('L-9P'GQ'3.'E(nm3"rXeaLqk5XAc^uhUKV5QO
%8_8)nM,V5pP@P1K0)log\W/Xh)'de5NYKOl\#_?6=d,RWZ0+c",ksEmpK^HJZoUTLFcNmlZsb-fLi@U\BnTDt2?j"$Ym)_aDsCDu
%+F-n9M[NbdM/i9^46Y.M$)J*L#]JJ_8.Na7:dj4u,CZ,P's@Yh_Jo.<b+b32:rZ-9W36.&#o]nc7-H3m=<WE-g;6au6^'jc0BY7)
%d_oP`Ppcs%'K#=*UeaGc3@-;TA(=8%_;-kX+d@pZ_lRN1j8juk7-YknMN+J;9pl;K7AOWiURL?]MY7<>,P\fE_aD1CW_mIc21@PU
%A]#IT]^5jR[^MoK5[mC$S.@\[+!fa*CI(OiD3l_K=;?*rM"GnETg<Np0PK+-YP'9R2^B+=o0DG=PFeI5Pp<rLLqR_MdSc8gc%3OO
%?bmu>^98s;q(:RL7mF&m$cYgjY+oiuLdS!3fuHrj'A/lAO::a*K3n)-8C8'LOI9HUTk4kmNSY-'Pt3Zog<#%60PL9Q%k7L^&8:tY
%XL>AR(&u)KfI$cTO@Y]ln8b%<PL.&c!SbqZJW=:4^7L&kae@QsS`b8LNuFp<I#E7Y7s)ojcdrgVWdm0qC]a?H;hlB1+Tc;.7</D5
%@otb</OmNn9m@*"I*s]m>-`3GYILbi>ITFEGJ=0e$WXWE$eef(Vn/(m#Yg/0UKd3l7#Bl:lfT-002ER>$q>dH1&T7CJm\eu8,1j-
%Z`=>dmt`?Y-Lu%69e\(,DJp4%.)5YmL>DbG)Kkg)nmI<c?=<@J`Od/.0,u-s>(5%3l$hfQH!N)B5"r^i+nD$*RmV(_K.L!s]l&H;
%J@`m#PmV%(a%ZT(4VG[V>mIY!Ak&<WcPW>YpP]sLd-74'7.747K]`S_9o@hAI^Cq9eMbX>HBJND'UrU)>DM0o=Uab-/(9XN!+K\D
%/(c.7>O5AI8RuX8l/mE%2Q'PD0!4SYBJ)#B6l^T\9iQfk&EU2[2V4%aZ!a!&GK;$(U"p'gGPRs/>1O!VTfdn$]IRbi#jCVtg%qG/
%;=n>Cf^8Gr?p"3O3-_"Q>:MPrC$Zt7Ubd&U30`IK#VMVN*0)ccP]I*M:]^K<&&UQ/YF=85]]$./<.J<5c<I4p%;29bA_>p>AbK,X
%qR$QQ9*nh!8Y*[n2X5`)fj0==4s]Co3.&:[-%]W[?$]hfHAs^Q6N*Y`hRsnkSQ@$nJ^W@1k_6&D>A7nqEUm<tKb$b0X`)efOCKO^
%T(=9[=\ln?m'`!r4UU65@QA:U:&Jp\f/&-pIS5&f\i3D'XC9K`!5%-A<'POb[d!tlT(bCdZ(hdmQ@*>hcCNRIR`=^$eYrR9AQ\_N
%J=J]?BkC]qM=G#]a77rbb02!VPS'nuDs#p_O7tis;#5Gd7.]3nR-YaLY!$]3-,X98OD84'?PD'/[`="dg@m*ZdVm:s'(YPa1l`^;
%!Y2Wn&6L2*;4mR>#@^kLJEZGH;iC,5;Gl3_@!AS'V(_Z=dWGLFT"td6_MN!Fm@"[q=R(i,W9,B4*,dR*Uu$1RLaD;/ccBOUU-!<o
%bo5!C[]%*k`=f^<^2emg`)ooAS+hE%KbK'c^'DDF.f3[mfu`<@^_i<glj'PWfQb-#"E17T6l9=c);Hie>?bs;j^qGBWE\3,W3+Ad
%/^?O4V!_4(KCdiT1)^P.4YaG-jgs_kD:/.=M]+AZEJ/*<_4O^h&RfgZ8*h:m!mBHhn"\fe8V$]V[;3eLZ<+4HeP5$+Slac>VhA(A
%@L6-2DF`Q#$(lU!"IsCGYIoSN7Rm2h&JUUqrY,R!5hN3qa-R^#^7`CS'J>h4-1"FVk8/6O+`ePBGagPu/c(l(VUYQ)oY9>F<Q17=
%eF"@n#?3UVeaP^'4gA@)Ka`se:U98la2KtaO\!s#&MpGIMl_3[GLRj6FIo`3K2qU5hM%5Fho8-e/JtVee/+bBdsF9FLf$nu9;V',
%/PAK#As<J*R&'[)Cp!PJPu^jlAeA(-`OQ[@;7q]-?gR,(jSo1<0OZEeftj#VFJd`r<koc-3s@c^Js=/bR.-fo?LJ6Qd9rq/TiNZ7
%)9h)4nER(uG]h-:ZmbP"Af"g[8E]0=?H%)-qKPjA\aD!D?8]OGjP(<Sc$:HDRqL2J`1dLnMs$#^=S9mIn7<p@\a`nr+mAGB0X>t%
%93[S^ZVp..H#`4KbO/\M^@LF>ZE@2B_:?+aZ"5dFf*rB)3XMh<&Kl)qO^!#u]pBaPj`JQ^GKX30+/[j%D!!\Wp+]H+JElBf(UlEb
%ipN7n7D5W1?A=G<6qq/YU'LV+Wa?RG-o$blJbi!h'rgQt`[hOr'E.Zi.G,i[@"9A/0T9.G=gaX*IQ$YfV>aS^"R41c<KPf&#L7Dk
%FrQSY#G1Yu]k7*C#-:t.)VG<6Pn*]IfPo[AOa(Jr)`onf#B\(*N*O''UeVN4hPDL)[TdK3RZDpq]b@du<M`(Z22N[GJ3;i>CX/C1
%nsq268OM:q]h%3sRVa@>'benj!iEmWW&S9E2NO3'H;iCe$r._"35m)e8s891CqpunWG+,F2^!6T*cHSM>qWu-7q[I[4l0rCke+H)
%47B^($rP0n*OsYMLU6?mn[2T\\f]"%4^qaGU+sb=X7qmLpBWWppIGtF,8=q?3f+QgRLjr*><"NP.@N?P!E=JYgCQf#]4%(e<btn'
%1tXSl"f]fq0B.LNB/HH[0)&N6'CG\Vr:C6QEmXLqj7)4>Rr;Hui$9UY;0qGkYZE50qT=u+SXoW!_C]/Mk(9Ei21j-jATRe6Jjk_h
%I8I>j"04Yn^W79^4qd^l+d,12NnYH^??uTVC[Z)\7+N$`b&[2b8HWeJhRLJV.dE[hq_OKk2(*$+&dYJXp?&fk&G9-[Mm05$4()[e
%\Rh6Dku/tR=I97j61]dE8_ekBSDG-_egt,bC\`KWhr@s6Xn^[cIpC_A"P;,q=?6Nt?;hFI[!k]kf"/!;&GUSWL'54EUI'\s0/gL>
%_f!3n2<j`V$#S=<,r,o](BPaI9-Z!fY(oaRN!ea%q>0/6$LGsn\KkaYZ3`gp*hW(KPKh][n&!cI<EO^tlDh)G%GY)fi2>acc$K!@
%H^#-$Y3``up2e!@+0J4@$>DM=88QKlPJUjU"&Yke?1$.6&QZ.Ce=nWkGJGg[O:I@IagMW=/M$:NT1O./(4<.o<*@N20;K&d"qoSK
%dr,kr>Akr1(NsJ-NjVE&gX]g!/fV-"(%6krCZWTEM[1dWN1irWPKt[#JZ8kU/1sTTGTaWrmU7bQ0iY#rF4TZ6)aj;J_q#6</p5@Z
%Bda`qo<Hgt-UauCH>Wup2=2*^BZ#BG7^MYc&?'c_5"B7VEUB,Pce(,j%Y-'kjo`H_r-K+n]T;dueJ$S@r$u9tq1s=%G]+/pG_ok:
%WLRC#eLImnC++)o,KDD8aOG$r!%#gYVY`nWK@#/R5YB@pWS46,#PJ;@8i)#\WYO;C"fnEQP/KD4%J+i*HPFfBFb+ga0C+9W9n(<q
%)`bjoZ@'9+:'!k7QLcTj7jG$F?G#^#,7\[W#C9<VKMllE?'=^ZNQJh_n.R`36EY1g@;F"n*5)D0#GZY8S:NVGENlB3rnQ<WDQFTA
%+Dt-qY4P\PhENB%q\l&:D#-NDj5e=RjFs]Z^@QZRBQ\'6.>@1%[OYBC&.2OQiSUZWKu'6N#2j-?2^dKiS;Q0@f4&^V*St`krrMW5
%+)efk?`0F.G/A<=<oXj*3Y@Diq_5bPc.*q7S@8JMQj<rhpj:OeoaD'b+<d%Le8-Y.?tE@-l%lO-D,+K`a^QZDlf8%1&o`IDd9@Z&
%1!_!JC.oG#B>q;%V4*%;gWE,o;Y8.#.@f?L`<3mgc9IQ^TJ"TR+\(+Ich7?:Z+0lWLI<'FF^oM2eXoJq@0AK7DQTd$lH(1;?UoIh
%+7YIFa<DK@];>iFH'fn#o[l$9%'](7.J1/PKIN/PM^\3K2UQa?h.1-.>&3.S/r7%fL#bEh?u"Mlg]@DmFZ>SDq8iZuk%,Cr>-&.:
%fU4%q2J'Z(R^B0+@ql/R&*o;kE7_QHd.%WMg@#WahU)#GQ'm%3Kf-YWH4D<)36qGIF\8F,nXsd<R1Y/>RaFYW]9E'Bh)!R8QVLj5
%njZ*F=3/*;RHS_\LcgekXRhS]7m]A7X-Ur[(!5n^E`[a5HZj/jTZs7+qsELEr(2t1eo7cn)434#"QHffS8SpE^/@ngBLqrG7T*8r
%C;6%dd=M7/A7`OU0/$XTHNCTg>T?4eTI%YkM$"(&`rUf:="HI*0[!q*$G@j#"f]??AsU*%!U^[@$5FX3$CfRI99Z6Ufe,M/b3&/4
%A1[5`<GJ"P/Ar(d_8'.C/muX9-RI"W:nX_<M;Lq/7AG4i%]Kf=R^&T94FmrU@0hd#7+Dn*Qii3B]ka0d/SZNY"11TiV$&[hk1o:F
%Dub_T(JTGKX15NI`LVma#?oTR:oYJFC/hV(o)L2Me9lqG?i[4`U%+g_iEAk'f")&VpDV>)\Mr2ZShI5uB$e7XQU)7]mH#omfR!e4
%Rk[#Z9OuGG,/;lV45=?:_ffWZ8BT4!AH*hY\Rl%iaN?-`?&AH1EF&c?S(EL6;L*26M5<68^J_?fg5:ao!\!j@^,Q7#.&u2s"EqT:
%"kgfpeMEQ`6W0T#,geII<cdBR[pdYJDn^RSj>a+J;=9=15gA@<*$%%i1KZIFki(n+W<#h<Eoh8,B).9tLjE[E2A:Bp(hA\f?PFHC
%E,P_\XdiHt]PVor2Tjn\hA*rNMlQ5GPgFX<W`-Z]D]r?JMpF5I!]R]2c$0T+^cCs.(+uh\(CE-AGQ`bu1>jdY0-e-%LSHbBcmmHF
%Di[bZBYe^N5LZj]'&;a`2=jg!1IEDpi>52+^n3LTDtoBC`k/=gp)7DF`R:_G/0F)h#.M_'l>B>OmE\m1B0#]M<#"V5Y88j+TC!BA
%q>OHI]I<fn!c'r<Fc,a91u38SE1nTA":i\U$[Jd;hhj%3Z'r1Kq%'Nn+@jlK1cTjsCth]Lho)a8[W$LX!o)&?&tCn*o!d[0qAs$;
%NLY\TV,+mg>T'bhrHd_%[.:r\[7[nnMlL:jM713i8RH=!N=6,#('He([k&rr-'%l.Ve\SJ]<eha%:uSQFm=1L-//YS6'jVDF%%8Z
%]Zc[&&5@jqKb/=PDH+b]Vnm<%=:5?#R[*VDWG"/sMOq$;qVlOJo#7:nbdW[LM_u^?p*ca4rZX3f[gC@/(Rs%dMlWerYt.:>2=CYX
%dWR2l;Vl\=;pkkhe@:4k(/uBcXgI`Th3Lu5>8LKU%Om:88fB=b:(=6U0i]#388uceWhnMoel,3"r)R%\TtG+``*t02e0SWn'O"Ys
%SLd'('m'gsN5kedj[u2F./ILa(-9pEq^l?7S@at[_2,[J-9\_ZpB_Up(>5qS+SU#kmhS4mmhpGilF;!tM4p6Y_f+pS]+\ID@i9i?
%hS5%Hh["Wp8m`0;$#kV=%$j%C\mG;p(MIhZaScf'bGH]/gch$QaB9,iY/W#/.VOQ@Y%Ppj=DgLi^NV5rgT#%js()sZCf3`_r4Qlo
%_t@k+93Orm^NG;d[RJ=8gY]$3O'0i;jW5Gb2>?Jh'OQRt&EdZl9N5t8,%Inj1'&XC>gK&an4JTQb\h&9i$=U-AX;9;5)C5XAeYMC
%Z/)D'C)A2F+'["'iJ`Al)[F:j`E!D@>@K7POt]h5[Q9]WK"X@cUG$@B4H]]t`(9g]5;ph/Hhe[@^_-4GTfS$t_Q3TZN=i2]dtOeS
%QO!U5JfM)dG&2AQWGmJ](rc9eeW`VEVpjnE=Rgkd'3nikE25NX[Vj03&Fj]`'a]HJF4-l>+`IV<&l#$Af!D#NTD@2uC.//!GS-t?
%4Z:,^e7Ef;k4I.Bb"Ij>dZ?\L6@TP9("Gl0`(sJBc^Vh_Qn\Re(,hJHNXuOa#,n/96V`Z1JIQ`>%\]S*!k#gH65cc4<O9NU;F@G5
%N6RT(6C74S*Z5E^>hgOF-GK`L"`A':WTDobhCZ*YA+A_Jk%1tL=O@#m>i<l7hDk\oq)lp1.@`gQ!dUBgU9"W!=T-cFSM'*=KH:P:
%i\4Z#%7!u>DH1ZB(u[9==+KPQbZ(bG<(e!Xf<rS%p"j"DHn$HBr/@$sJ]dDYp(U42!)#Ejl%^3r2MoWPH0<53D".LM_d`A)jh9GW
%?U'HVk5^:SX*4gCNGqDkr(l7E]u_,M@7C?0K<rnnH\Z/VHja)(8Wtj+mWHQ".Bc1bM/n:/.L.50F2!a4N5%T;;&EApT4U)B'X'Ks
%m5-"I(lJbC_X-acCWOs:$nFD%o!MX2WZ[)K;;(-G`[$7hLVkpu:q$1>DeNHdr]'DeU-Ce:MqO\g9^P3X@?^>\W"W<4Vqni7-V>&6
%=%b&4[CnR%rF^J7m+pWI^ug\F#U<P&JL^>[*oO/'4c1KNW^6TR3_ftiXX8,ZO,':W(BIboER.9>E=Z#4`gbUDNN-SS!S:I,a6.me
%.2@t)C7N;MHW,J3PW%&E26^#rMPP3.]I0Xt5/HAXV^K7tC2XqZ:3<M:?<e@"5!=M]]ImmUW"LnH9]A`[75n0J)^?%=0e>(5;Pf)6
%10j5mU';&Mm#!_J<X.K-eK\^<k$RlsmOZYPf4\H&;#LP4b6i[]/^HIN!Q[[ST%^?f72bbu1K*V7Y^o,RV>%'XakRM'-;IUs'K'6u
%if_?Lf8?oK0N>;JB[-@%s&cLUR\.Y@&@uYN\(0<Y_9DUL`<p?X`r<pTs/f1p?6!F,PMqA3&n!h^5ONmu-H7lkM#8bLU$bO]H?7%:
%P"3.L&\,'QV[f7Q?t,d!FYJq4-_a/$g395]X-ds!35uSFde.l'3XT(r1*^KT[fL3nMI8%CMkrg9_!4]ZB<J&8.oC.`%FX5g%oR&h
%'`V3NL',7em%?\n;UnlHiu.^L`$-B:]gCGR.N#l%XJ(PY/aJdtm,d^;[<5D&.TJ9mhAb;)U[DiMe:pl*aY<q-\cD4ogA^KBDf4B:
%"]Yu-hFms9S$?X@_5tH(*-(L*;*eU]/3l/!('>(rAep).jLpIIPS52TmR#cbV65JigEuV3S0R94n:dV!:\^taMiq:0#GY;%k'&7n
%k>S%c1*/'9m4.o>(LJuGVDLmEin_M,9]LIZKK_MMRT8^a\=>++Cd#THD$c`@^@*,sIa[n3S@IMrQ/69>:i^T"]HC)`j(B]o/!>Q]
%(NC"]5'b&GMXi8MmH5p)JIXTa)rZerj`,JK3*iHGoai#D82%Hr;)OW&Vaeh;i?r&u=MN<im\nHQ@CLBFc^T]!X\cF9\%Mgp7uF*A
%gDc+Z/2q%RlE"-(7?5KTiT`S5UV<O7GD0p?0nV'h)fu`-F+e!Qmtd>!3l;Vc'H/:pB)pZo#aFtNq0VD06=5cRWKY&HkIU<iZ#j+g
%.f9W&O5X87O$G^L2VQgG20J^H0)]@E7T=0YAdtdQeXSY80m/fQj0M8*",L=FqW0^%!)5pO\j0gj=puFR.+eGb-g7_%(#N4k7T"Mp
%9hQHePhMoTQ3@H7A@^Wf2!#t!>@imUcjaZW-%)AC7/qMjYrQ5b/ZnuS0@eYuX1BL1=[QI#_rdiLeg3NE+2^4,SP,)sKr^9/&$E,s
%[!D3J`;-^mWh2M]S'?pf$8D"F;54KTVfL18d8pIQ_"-XG\qB-`aT9Hu;^-CD<%0fYWT`UkK\u&3YCo@lD,86tD7NfcqfcuqCq=jg
%,1j.)paraErf^Ha3P]M.pnX8CcPLO[+&B6imYds3al4X?Y[!*iP#_<j>lq'7C*N356D=HbX_6,/LYWmV+0)-%q(/?ac^<3X>HGe^
%;E_nVMp5JA#4nOcY%po\kju4=5m#m?"+?\&Y]&EV?)=S\O/@lij11m$B02YO,H:,^RNA-?#=TTU\pk''lAR&kbq7?QL/&F_eal8@
%H&q]H]9O'$PH;$kT^k-F'V,]BoK!]#fq+ti3eTk6#>s+!hAH,<d]kmVT9!cio_4ZVTQo2fRei&Ye2%.F66Z)^f\F59B*R!iS.<M+
%,I"N;:[Yp+P"0B']'`oW$)1#CETrG2fc_JZ,;tsXlYKEj46W_h?6q7H"5N$Hf'Utbqi"*t5-<`(mOI.1T.mZ;bG.6th`6"&f'Bs?
%7\'8q`?fW8=><"?rJc9]pCi!j9o!sS(^AVc(3\V57h99I0(m<TDDT,YR;F3/U)BnWe#XS.QF.Rg-)>Q$[8PTdhq&H#;p!R"!=,i/
%Ju_F5DP!IaEfqIjjVbm4HHoY`LW%2lk&AK)hu0i:eJ*.0gbnrg7)Hp6kSb/Odj'id*K)F?7F.JO_PGS9O-YJIZ:X1EcuY8s51337
%4g+trIM/5)/HP7`$)[_EkgC$?X\OJ+>[\u$ML3?oX"Sui\BPA,Zi]$FU8"N#[(*6o<b<<$*m>FamT&r\deJj#g8\0ug=hnN,BhjY
%IuC"dpb<YXeH+8@N@A^`D'u]+O(W-4QQC_G3^8T/'m_*Z3hu3nI8m6Kd<)#KZi,EbQDj(l;e4iGA#MELM!O?e7:+Q*Vn*d1XrpWH
%m]UT1ML:#/0Vc*.hrfmTf='`VfZm=!U*J(H(WM<R.muo$l]im_2W=eu\ufM>Ja3\\<7f='L#TE,fWp>c5#VbXI6(UA2H!-ar7"j/
%'ElNCjfc\9(^&)lTC2Nsp<`Dp`[>qpj$iMj^$fIj4kSO;$H%e@UBHm,$VC]3^rK->KRP"FLF,kEkjI<ok&\ijNFRJl\usP*0`OY1
%q-#aWk,_g$'^M$mo4["Jct#?sSJ=*],YW:(<Dr_O*LkBW\[*J3G[n'HoVlJ#F_imNLLWenmY^0WbJ??&J-5#e82PAa4<E`6X#oEg
%-DsR[\kCo:pQ)"eh%3TG.CL]?i2Zl"mu0"ZAmd8L-1`foV,Im9k:rTSCuhhmCko%!AAg3ADP$E0a.aG!0r,\Ad<'(.f9R_[&M-"Z
%*!+?VI2Rh*H/a*FPK?Ae%b&%WR;]/L@)d@3H?&q*p^')iR:I%<#oK5DM'G&B"LlbWig'6:8a>c.b7X/3ZVq+Z%+%.hWg(e<@bG$^
%.QV!>]b.\gBo%>LpiNa*/5([bMUr7;P8BTOQc_cJ/%8<rXAB<B*LTn>+J2u"/l#f(j8MZjYK,8,4CKMHHi+e6J;T+,/aQMrCitt-
%GQb<udGin8PG$c^c@'T)bp6%UW6O+MHV'E`qT>FIf^ppQLHouKmM8e3dmA_S#'3c0r>E)k9e$^'7[+$Hq9NHXg>*Af2U@=K:D)JN
%=+NUXV`-HXRLQDM>u8KNQNX7o66oPfIoOkO+q+0@I=*HC3=JU!hS/*GiucegJEk3,kuN[D2X?(Qm4^R!nB=P"&+D`bJ!?:m(SRG:
%YpiLl=1o;U:g6Wop;6Ib$fcJ+2r*N5#:#()1Oid]35$@f_I`E.RI-I,a5!FsXK%TZ[*uT#*WXh^-Y.E;0Ph&8q:A_A,n#LP(C.T9
%F+emC7Hq9":cJ8)lJpo=>^DoME1<GFjkf,#K0M6,6u[,d?et!_/W==]jUg-Ld26)&ce3i;MBY8=eVUH>,M;5C7=WUnSYKX%]h"[$
%R9pZqUYVc6L<XIlW1lG1JH31&-UhG9BhJARbtr^_1GnQpP]OC.RSg8X<PrI2`k(HP_U(92R>B=KNT7p0.P^`;&8t5Q^#I5[Gd-D#
%H-mG\5D=m@iW^_42PX:F0aXEMn^HlYWK9&/mc)m4+rdIFiG,$01%a&A,M''?Z&:*?);iM88]uA]`1BaL5SjPD=Xq./3?BGbk5Zn>
%AFLR&_XO.I<9^\`,]QUDkuM1`\fR8BV#Cjc\9(3Ch<eYZDlJsFIe$6Q4/7"aZ1\GqD.h[2MC3g36mVSJlBXqbp&iEKeL7G&b%?([
%ZGrJ*&B1$E+FJm-BH\PaVbfrO1jZp"`"o;#.9[*o6-i65U9r:V7[1'/p8^jkBkS4&Uh<:cf(:)@;R]JK[5P3YGhk5jDC?7u%p)u$
%D/n@3?!!]RhFWH'D0%Q#m&B&Qe``e4Y'O[dr)TE<2qDF8\?#+X8W-2AO$H7Cj\pXN0ab[O&W8*=f5ZTC&mn1c,N%VhmMiZI@J0?g
%Ytd&oUH;tVR"#Y!TK!d))4;;D8=T+S/`.!#D1L3#,$,$Y2t`?EMg2PgQQ7+^hK?_tdTsg?:ct9qq61+\N.)r:m#J<a#7j'1,^U<d
%Kt,g?D#Cr"]<YoT`7b,RJm-Y_<T1rb)lZVe]XMSh\oPM+duq$#M')E[6B;!1=I&.P.B.TldbFh:+e`&3<p'_%mQ:KGo&a.<D5OHu
%m[(bT*O2CU03?<kd)o38]T%,TaVFuZj\KT*1kJ=8mu!CZ:GfPjq$AgOdX^1#>'_-h5ng.jad-FT>ZBd]bj*7]We)s?<6KVD-lH0K
%5j:e`&Z0nae$&ZS]M!SFjBKT6ej`P,MKuPM;-.=6FgCZ=)*/@_?+'[B+UqmsmqfA5IJDm2mXoLfR]ZK>Fh>/hH"1KU41f\PjT46T
%WTNPQh-&Sm<o%GM\S*^pp]fE+MF:t?q5n#s%o[DHFlVJ^1nqQcbr<KHHa:9CFhN@PlSdI;#MIp=aY:<Wa\fC((&?M[d_>seVLDOF
%e2?\e6m5a)I4"q!Yk;g[Bf5kE8"5b4BVMp\\`5bJ&s8c[]uRgd*npdYqG[=;n8dhgcB+@DG#VZK:@d<Ia3@Y9l>[\?:7ap,aU%4V
%\$o].9raQ@=F$`@@i>AlOSiZ0#'(1:5`!j6J6.1AI2$o"gqki1faF*h#*O]RI]MUi$F]4IFqHR[5c%TL?f1i)Nr\3YbreY-]3J*6
%jb]u)'l6KQ?/Wj.H<8i5Y@InJCA$)C1j*"D>>'DD,Z.eT2H'%l)NMbT9%X=%*U;jJ,EASc#AnU$N6?BhR!jm(ecVLBmgBj;eUdML
%XU^<Xns&'8@?Pg@/pk$BO33s+V:q$hFDFu,Ut$u`S(_jQGI?"L2nQ-Anu4*HMeaX4d`(kN<2i$&oVFW1jL&HYg@IWFBAEqm@Zj4`
%5Y^keMLV!7B#e$?*eAF?Z:c45ci^Wm]%W^"?G,^'k2>bF$('s#'Q,MoXqT(73_,WpWIo8iq?nOc9r<l5ALQR((Vr$UdrhlZX(oQh
%j!>#Ep^D\t3K*oNKGg4RHFU)#%Kl-,/:6n4Hk/<ke!caf@p]@'2nk!(AAI3a6Pg#(Ugtf/CpX]BPcm,h">X?W"C<@l4erl2`n@XQ
%Xh^q(Pd'2)Eqj3t9,'tdG_e[Cr*eA_%*aE6lJ'B;kGQ;Vj59>"SOlb&<7N[n!3>D\IHAQk6&c/a&cU\foDa1JTB\)2Pp@CLp?Sot
%pY(I^H7(C-JJe;K/V,dZD`*+MJ:s8ND%Q\`VY2[6M%rQr;W(^H*[ErHB9(o]3j]sdl1il)*d1-KelWG/X!Ql:pZL"2E-*O`\Y#pn
%*->#]l:Gq.ESXVcLDg]*+)mro"s&2#-H3s.s#l?kC5.i\F!]FVFk_L_p/f,X#7PN"1_m"ckUU>(Y2J"@ZnERVbA@s3ciOoo</2SN
%*gt0$9DoV,MhnM?CX`@l-fu&NT_=BaJJ<IdXu,#=Y'758<EO2N&lKKoV>:Z]6jnnb8dtT(Zg_V15k,/_/U!sZnQ3R[:]RZ:X9H2N
%:)KBaA,Che;Xs>-DVuiO\&+duJf4[`L"BZ[!,>WF)`/W/[GYQ7$JoYJ+ct'd5<V@rh%?Pa7k&ku.`.!k4^?:2nSa1YE'99t.o:n]
%!*p["I&cS,EIuF>:JJ'$Y8UXr7jumg:ZJIB1sQF`3;WM4GQ\4f?4'qDhD+SM:B=fRSjN.>_3Rme?h<ca#_GU'8?t'uO"!s5AC`k9
%>/[(<4:B+&1$FKo^eOUgcPSt7YdbPK*J:&!"*bFtYO)*T\V0L7>lYsZ`Pp+)#V:Q*pG:mj6!A4B!1!M8*W*%YHW9-+a2NIWL$/f]
%']]B*m\kW5XJ<_YWNQ34MfCo`cC[rQG*'MEhQUk;"tSJ7:cs>A=CB2hi,sHTZA/l$6uI18s(+<gC5',8(HZ$d-]S6,HPUXSr.eIi
%^L!cpMB"\:Hs'&(0L)5[jeLndFC;nV<2nAmoAV8P;e:<NIk@LHY<MWO/*ZoZTBB[^JA-g4C'WEErg/5RDK>47-qMSA`V,/t7IgDE
%JjpO&Uu#q?aBfLhRp&(o>>+m%$lZ3*SQBqF6(fb0K:>g6cPW@UENh*NSLq&sRmqq0C4g*[#e,/8j5Q4<?PKD$XS4W(kbB##2EV#D
%FU!i+d>;kuXE]VHD1>@T?dfQ:#cWoci`D>AfF%XN*.DV[e`&IAaEcDE/P7s/2#'rd`qR))/lb-Dpap-Y<91^oS2YeskdRo`)HYQi
%GP/GW<T*Kk*oT9<s"3j5=5khU#G4N^@u"o5JgUBqQCHS]Z^2c-R'tiWCSaQ0H.`2l:%]>[I0.''R)oq,fh\h#;H$HVq`mSbs&J07
%5^:V140+,fNLLID%SgL5-<9Y?dVj<ajC3iVG(=J/n]u59Ht(uQ'gfC0jQmkqIg'`OYeVtQ">5I@!?q%Pm.TcG]7Ys[Vh<CTqd"U9
%&^V/F+JeJ"S@ikn^SJY\hO@\K)0?!R"-ae`^E+Sccp'A]qCD%K]jce8h.Qr"+840#CRo.t7G-Xu1"M5bM*F<^JA\HZ24uERkeFOV
%>1)_u`9oe97Op;KICCSmHi7/iYd6r.Hu"a]IYL!K_11ZfVY:V)b:u[&%ERQ,ol/0^n8J%;[]_Ui&\;sT"J5>&jXN.JXhSYP03o(0
%BhUkR!p@nu]D7"2<Q1nF2@U1ro$RMVr;D+05WmdJ90YNE=\HDl^CoF64oCcoJZHGClllpW:pLc>dloZRF"=n&-5b6(.e$gq#<3dg
%#0_h"4rQ-maS#>BD@V!N+8t4UjPrgKBkAO[7`\5`Vqu[$!#(CiWM6Mnh'<Y+]Lq9cV3D*YZ%"A'g8tLm>u-&J&-X/7J9lgiX7g\h
%U?Zf34<M'^`YA5>#hr`$_H<OU"rQn?kd\kk5f&f/pqhjl$Cp-pi/A8&fu*qZJlXhcS`Z]M9!NA!>0k@U?uWZ(Xc+gSg=&&"9j1h"
%rrbD)4-P!.@daYC0MbP&g9NQ:KFt#(Zs.tQ5]XiOQt@gEDH5!3UTq;Z*8slK8ug#keC6?rdpf.!G42Nl>1f(FW,>mD,MgP%GsH?$
%(!6BBh]!aQb:aP*ZYg0DN2V+><oWRj.\Co:X96S.Ct#"*"%+!kQ\8%U<;rkjH*4&?_=c*B1$IJ/kV7;:(>Xc@JuCCP;0>A^$hI1Z
%*(J"s36.aYVkp=D;rO"G.*^Se=ZHFED3A-&f'/WT<ikrVMqcVA<gDUA!T&VT]-E(gn$\siQO+m3j^-gYXUUh?><TT(>di0A1u>!2
%G^=8SG9Gk;/f?r]gusoa1m[:O#rs*5r5["iiRJk6i01`Z8M&-Q))Q`h871V7m_KsIJ+Kg(*BB+AjZ"pY`N9kFK:tqA>2ZWB,[f@j
%[A<cNUV@CYe'tf((%Ug*2r/=3g/!u@Lnm\qlF8X:B)V#m7c@sh7Me&kWmmk`T5BL2l-2d3iMAt?ULI#(>?j1RKn_Xk%fEd2#2"40
%Cj!\@GMEe0pn,?SbRUeaD[pMa9,it%,Y@@[(9b5/?0m-'pPr?<6g*Jn=_sc4i.M@U/pYkC3_(fjrgC*qUtC\h__?@W3V8?2%BqbG
%<m/4g%2Ll=#J>=h,<\jM,45F4dZ5^XT-%fcj30%jeKeqM(QlbjJfs;0>tj"3Pri3RROouCXt4-9_/XP3n_U@\718[Qjm7o%<kb])
%qRKta[*+VT_ML/<5on[+(?dF,=K1TA]q0a@Q^*,c*H+V\/S51>s0o;?p0&M:@,9f?.c^J#dY,F]#@"UTdUh/s/h\;4ig.5$TkApe
%9P(/q*4(,7m9=%QnJ[N7k]>^n=<u=G"MdW,MFHP%CHt=b:Q.PtVPc2t+BpA$b[Whoe<s\O>=$`o9X\\AbfH.1k)S_0$=h_?-.2-u
%]3EB8/;BuB=8(r'Ldb]Aih4\NNbXGirdP4^hW\'R'of1fFFoqh3;iZl[Z!-s7]obA>KCWSfqN\Ch.U5A2K4KtCBSn2_eW=6OC+<m
%N?AGuT3#5.KYKKYa`J6kF:s%tgJnu8C\l(D1qTLp'0RQCp)>K!0Y;BRD@kF$`D_Q2\U8Cuh!\W16]4gThn5jdXipB,:g!_+e_+I`
%lGcMRgF@FA;ijQB6&RYof^VOik&%^:4on8R&ea&5<GWK*%ZaF,f%MCggYW2@h7>rBD=/5`\cgf([Z\GXU'RLNN/)oc*HI_f_b>!N
%W_7kB"f_FJAu0rkmJnEDOE_ERI>H6(4RTU"iT<5''.gG:5U#uPfcon`gYY(9E?u(j94H7cq@;#QQ7),GHVLa]Nr467!j.*'S(iur
%4Zdc'05MiW/%c(1&R6dt]!5\-VMk40V:AR9116M1WhO#*cO&u*7Yj;Tq!L<85.$<-E02&t0GafEM7&n$1\c8jYS>P!\6SR+B@&"M
%f!HZqB[QI8DS!K`HsW)1Iis/-rOurK6q3]$N+gJ>\8pE0CkU,uU6BQ\L%Y$59I[7t0VqDgPLJMKaF+TLb(:rC_72#grLWb[6O,;L
%DWn!-;jfUr/n<GL@J("5of^u6V&@M>?BgOT]Bk0TES[b[7X`hmdU)G(")kkD^_1?@9t1Q4&72Z2Jd!n7mCR%[N#@^"Z,I5hksquq
%>ND[oq#2Kp0Bk!9IAOO@``hLVq9S)6-6MH1^LkZGf?52SV>']%-:L\@Yk6</>h"2rR":P\'uHAMJYU5t7\_8^`;shk.$G;#qT)Hn
%30>9Io>,<Pe2D\VEK;AT-b#:rOMT8<>oeTKeb(\DL8,Q+UsGETbhNenV'!U6`aV>;:0bD#Cf9i2LV_A5?F`qXaq:q[QStYLK<o&s
%=?Pq*!i(74)URC7#$@T!Xqp`t.(\6U'5R>h%lW<$g_Q$'M'Q*"CEmj\[1_!81`G[GJEn,)/KrDnT"Y\JnOX#NMV=C-PL[D,@(GJh
%$*5A3+:M?#D*GVGcBW?6FI5kOGO:eq-?If3%>98uQ5%5mQ-A&F#.`9<6_SKKBj1A/Ok074'Q:Z[N$=2Z-RReOgClW#O.Lq1&0#Qo
%otmjJ\3btK7?8IMTL`8G&dH.b@KTd?`f#AaA><@'N*CeT0oA$BB+i4Kf(0<rMNU[O)D(e,B"PVm`X0hd((oCTidR<#,o!sqWXgcZ
%Uk\PdIbRpV2<Nkt=Q5&IFk_qi[J#e#Mf#6V]q<[!jSPHs4!)6q<"QS9g)WdYE3AP[EGF<bNOT'/9T7T.FP8a>Sugs3C9,EVTf*Bh
%2,iJFdW!6GMNeXb7CS9ioMZroe&!ukC#6j*_pbPs<muf._`DXf/Z-dOH,C'XJ,$b-L;AV88fI\@l(mgB>2e-aC2]675uAJMrR_Ot
%B&76E2sn]+ff<RldB:sD5@r>7_+94tDA`@f;OmpVgiUC$oH!9?`D)j[gOKR2N5TU,S!AU"Rnc;jQVt#=>=7%@nPhbSg?G";]HLad
%Fp02Q;\<rs^7tTo+YbfQ/=M=*jnT3HX`\Xel2IR`h:ZhS'c+36N!iZDO%`HMj3HdHZFuS+pXsf#^:YGN2G`UBFnq0J6Z8sbQ/uKG
%PsR/sRLpB;4A6#rE[k`K+cB^E@>4Aqe,R9fMc_3G,C*'`L#<Gf2$^8El^8,iouc%To)VYe;&;@#c";#Nr--48h=)u9[#]`*6-Ie@
%`O/KQ.EO%HN:qV.j6PtlQO'!%F\950Nc6R![FE;GW!?P].jGSFTqNp;n;J^d3mnm!DAd#59Xu$6]Z@`f`'fI%f2/L%P+@ZqbWKHY
%WS@$+!9;2bE8u,<).00=2j&rbFuLS"M#H^Nd\gOZ/RouD18Z9/4XP0,+!6moZl*,_NS5%We%W=pK*-(O'et]:*Q3jV)W(U9W5)h.
%p'>"n:JPFcgQF/$,lX69:M&AX7Yo:#g2cIo&E[V%&+^\Am+?cKH5aE/YY#<!AI^'5pu-:?@S]aEET&;Pma?RhQmokI3dYJT=_6Cj
%`9Pc\C6$K=Ob!;_MkJdB-f-0ScVeB0P:Ni8)f)m.eMf\A?ehY9"C3;i0,I;KZRIK&`_+Vldb>9[i6>F&n/9CehBg9`#H&P8Q]9b2
%YnPNO9Ae0_GCW"SFK&=LN8ZbKEK@!W\r#R"@Wul]M,Qi"nT@_G\2B%<BtP_m2JlC\:3m"@qH6IRNiJDr"7JF1NjKL!#>8oEgt+Fg
%+:r3Lalqf$R0i9r)bJt.1F9iE'PgTn?crG7@O3H.L(Qqj3Po1+$*;Cg)F]Q/^uk&3!m?OX\.g:!S-=&2PTTIu5Mr\3-49Il+HK0g
%X4EcVksZ;%"?qRS89l3VD;m@':61g2:Ak,>&q6-04VXG#7@!h`/I-o(hN^!,mTW7#YL,+*6NMsP?q8ZC,Jrc/KgOX3aF(;$m+YDU
%qTKPEelkU4jkn5\*B$1=(><T$7=bD_%TOL?BbpKAW<>[6PEKNi;-QJIN!-#1g3C61+Q-rd\POh+[\)S(IU,WYOgT5ZXLr:MdRIjQ
%\4=o[LhG6Vg/#\f2jUs,?;"9Ij6#\uE=a+HZ4pIUIdAm5[FM9L[@je`QS,$+;R2#oJTXXS2E16Ff)6"CZYIl`8*/N]odK%0BAA,D
%RnA*Gk<u$uG#H.nNgR,#gKQR9M*L4C-e9KKL\E,qR+h.idP3Dqa.a2NEXP5`>A2SOc>dFeQtPBJ@;B%U\6Z(=[AD]iY<bk2)@`k<
%<bID]).H#H@a!&51;((7kC<WM_R_16a:<q=PEu$$3:B]W131Kb3S]T42-k\(#SF<DP^ZctRoTklX0'M:HCc8`blN#Y/EduF*mS9M
%0aS,FKG;#_'m78>hlW&3A73f:`>=ih@h&e!79]A_FdHFg[]8#!$"=Db%BY:!3?:lTdUG?u$,ZGH\.iKl,o(V*dgdRgUXb`$np1o8
%#/B<%=r-ZY9rXF$Bg#Fd]N\+W,Nhd]0oj>WlKZFt;;9IjF/TGqZqEC+j][U('3hAFnoJ@a+q:c($TN;a!8/XZ'@h$;DheJCGH#5+
%c<2A[0I8f-S?36\.(3,P&BGTn8;`SP]U8i@*_Ld[*2e]`grs!T,*[$=OnQ@$fQ)KXi_P0*&!qXj*K1(G^gVeBHNVbYTDTnT=,2M^
%\L^E8lWEoTp^9_6`BTG&rf_F6<KN+%5r<D\?ur8FW*(EWoQ;6e\1RXI'JW43L2+du'cH8mn[6"+O`4l#[0+L`ZUgl%,ehE$r(Cdq
%eDA7"HVe)]\Ft,<)>lStc6^5[=uBBt+FgrjH&#a@fC0sK&=HhHV?KT^H21/55!NDRY3pR_P.<I+VQ-*bQUBKII$+h@;sp?tkrgbs
%Y=F?,0fUH>@j)VALku"I`SK?IkDI-1L5u,i8O[?p)AW=d5[;qg:#&:`9$gqO^q"oYi$Q>%C*oo.N?CUrQSBB;h6NWWg1jm:<d-D&
%:6+46Oa:`uK1H]jR$T9QA4pTX"K5F`19bqRUq*j*q?<n^O-*!`F^('3`i-l<53c`;-#"p7c-28feQRk@LOtSHZ*!j?&_)Ue6;c,^
%85AlfeUj_&c89Pnk)1]%]-Cf:A'<fu[aaD$h#L@V6?qfKoXlXjg@<,)/3>9r.0..IF5t8p9:PMoH5)mSZtRr0=_efq&^@bfm427g
%4o,T+c^>QIOM#sXD$jn-dLb#=%'n`aITpE6g`0aVTTJf9p@8LHZ.;$O":pFJ"`XX2EDZe`0p.<22d`feeW?t/NLPSqeNi'i#,g:@
%Ia#cBD$@mZpo(@53bf;\IBe+:)O/IG_<ji>ZOu3?gr0/6/M!^N7jH=?qqVm>eGFg21JNka-G$%+,C+:uR=Q]2WGNGJWnKn2"*:5)
%n,nS+m;bediT`R)Y[W8a]c:;0&aQe-?(."*ffokE`WRO:?$<liEFN%KL:PI88]#%rKmVZ>S>[QpP'i6B1Hp>?Ojnu%0p^!<LWo'T
%PgSikX1"nPP[MTh`e$1QI%q[oBPsXAi-3jS+-jbV(h::6:/-or$lC>G*ubft.;)Z'(Ts["?uu1%KCZYqp_'Q#NT0`K%'&C6=5K&a
%Zo7qB_Ur!p=LK:QEl?0G6r&AAg.hH%P8l7Z/\LtHSb7_KC$jjZZ=>8,QFHl-q?>@`4tai$D31$:Mp-phZF1DdU7KIRX/;F4%)C$.
%j6fAG2cZ3V`IV5=.A6OP/d_VLo>nLI8/8TtgU(fnA<dJ!_j/HK97f_<H.;4.^;!YJh'6T`)65.bXYTNIm-L9-`iH:]Ld=,-dB)1l
%k.8n9#2&?tEKt(&EUe0s"A0\UNpm%X`UEm_MSll&VfC`bj>92'pKpLUY]HS7,d4A^V(WH*p[7pk4hDP4F=m&,@MuPBf5=OS37'7k
%-0I?q"J,.X63<WP/et%/$OJqb1/^cOZ5U@5]_MhLbJ"(m!c<Tp&fK9,+_)aOQaggC2bJj:X<3dSNk=<6)X/e7,aQ_9DX6`0iP%'T
%[mq0f)YU_\*-\(<:o;!]&01SR1\db)h&-7PRZ.2ai&Jp^g:[lWQ*n9s<Ss6G!uuakCt6+[&P"&Bi=X$R9&ceZ5UB>`OS4qe%lhSB
%074G/.?-HS9MrFsSKjZmmp&0M']1@Ak0=/5p0G>Ua<?oG1[ObM6eZQ+-=sSL@o%nCYOH_P9M;c;G&O\^!mAoTC<,NM[Y)RK(8NA6
%O[hP*ad.lX=a:cq'!n^D\%.f5))Fk+``@Pi&q&/rLf<+jT/^3N*AR1qo"\@I[Vob)35?Z4$6/CM$)Tt1T(U\IHgmbuTOjF!cfZe;
%\86:[bP;p[`HT\!<!6PXmVmRF`k#Xd[YVs6Qb6YhCa:`LWJ]EE"sm8]4M@_sr:::X%TRuJiS82;&dhDB)YUHe7F6uk>;X=W\$^HX
%SJi!>Wt"_sh5[kYVC/f6K39Kn.Rq]C*.K7[-*C:#>3bsn.);6(^!O)-fH'gN'tFab[XcQF8G?UcE0Lu2TkoP8;X)PLF\59Q0(cnR
%o%)=h`WB'MlL)fmTX<"E>\Zm,SC14Y&)Ap^C'lICFYC1*fm!FRB^\?MRMbnaMM6T!^0C+[n[,LFJ(Su"]-n#=hgtEUG27G?Mm8qi
%YL)D/pW]F<8p)`_k(p@7Q)UqcUWqNCrD,8\6Y@I@^+$)o4M0S!3i](KNlZ3rSJTFi&pT@W>8\T#8supI5$`O+$F%b`c@]=5**e3o
%*k(l=OMTN&l0?=D"']OgeSdnPXRJ!hlU*_^T+;-%]0QF%:2ifZojl':5nV:QP-_?$b)p)u,N\On<T94*lk@fkXJ#O?QF6IO!'EQT
%A+'c`>KQ73;FgMf/9HOf8'N5%<:iP-MZ`F*O!^FKQK"CMe0TG!(m;[2c8FHKC)\4J7-!8HG&A17dQgB;Ks@?<EV&4BS"dl=Go$Q=
%5>%!@*k3D[W+PdAf-Jb_X-K>T'5Ll6$9BOo.;mh[UqTI3cmrHq2G#HYA$Y;Ul2aLXLgCb?i\_o`eO%QE'`897?]An6\%$*iKTbNL
%NX.qO2VTHi.p#O`j%>I=JCAmfFJlf`X,BSCH0fmQ"oo-?FhA)6mI&-%MMpm:KkP'KkR$(9<Dib0d>d;+=,Qhql/67kcq-$Y'3Xq5
%jD:0G4RBtj'I"luT1.37jZ':YBd4o"3?Zs#7GG&RR^M+rI/*.bP![1%=hd[aZK^ELLpLBHNU)?GERo$u5u;)s*^I]EU7\Y[L6Oi>
%r<?s7*EY<J.4N=R3:+t*KT_Y:k$H\RiD[lIlrs,rdJUCVHZr;DgL5&WNVIqNhN@2t24pN`k;\bGGlGp;ZZp4);#OVQJg%nZGG$FZ
%X=IAZ1E^_fmMhj[SlL)OZE%=o:A>n\EV,*.?RHmf%F#qmO+IW2!uTJ)0Is'XkfRjD/gIMpoS33#&Ejk>$LmlIA,r_d_Js#m[:fe3
%O_14O:27Zq+UHm_-]oO*`@O4]hQ7^7a&3&\TJU#<T6GFJYgHrbS_.H7dt?9;dUC]mc!)U[>^^#[_o,b5FY<Vk"!F)=iXqUdC*r3+
%mZ2(`#Q`6DZ]oIM1U''03dejc.WY;m1Rg?GM(@*VbDo1dFb,CYJC:Dg7#.3^W`fSW]<\V.OoI2'Pf?n.Y?N2N2:Vu\42p1f`B;ZK
%p@g<*#hP8CePMmepTlT+lH"0sN^X@iY\7SO34EckntjX@WOmS?3@=c7=]7NVTn<<T?i0Dhi/bU-XX63AGEa-!dbH;)-sR*IIZnXL
%$TQ*fP=b'30d^jUm;m2]RJp7!M4jS$"l,8*VN-QGIW4<;QUHW%@\caXScRteY?lFJSfD/N.2<09&RO?qHYbk)#gQXpCY/2F(A>ub
%"u8nVj5ibV$d$QP4iiPRnIu3I80kt`q;2X67Sa%Jd`p`a=V4BMoqcep2!J+>VnYfDb$KB>=WZDfX;Cs:e6_UE*g&+2'<q4&#&YCt
%#\eX`M#9-5d%,)Na^,Ql]-PfD9me3qHa__2SW&ht3;2*.O,9W%C&U8*@uT7ll6#:1^mk489@<T^LJr'H)".b+&tN-EA<Fs'$5Z9"
%hRWKpXD.#'Op%YSpW?1VC"b+\lN;QC8sqLWJIY,ecemC=g\,lSK_7!<kG*_MZIs)A<&R\\@)Q<oW%gV<22&0`KhWAIYI2?k5F$t1
%<GbW7fK,2GYalntD$N6:AWiT\]\*:VTdV"U'@iIHV6@XnE1XbpX2lNnAK"B7i0!O0(qpmM8SBIi+-rj+:1*u5NT<FQ=&GEPeI!Hb
%>c"p#SB#&YWH!^B0TCf9["-'&$8tks$**j>,<uisMeSZVa9M;ie'kIoNZNB!ff(4[+!ZC@eW)fq.(4!IN);-V3A8WZ1F^S*`?D0+
%.3WA<T9YGRZ/;NAS**\nO``S2"=H8b);e<VY4'1)!<\?cdP'>Ne,f%.N8nfP\Us(YW^A+dG?50<Ap6=H^hnN2,tMpCKm-To%Nm(O
%&[91i1dJ>%MTU)k-O+7MBEAm-4@co(H\@4l-79.,K"Y<W/9rpiFmKBW?:cif+_aD5+EY&W,JXp%4ZrR:IkOEt#I1;m7)<T0/?b(#
%JX6GH8Nh(\FLONN921@.1[jfmfsT-JlK9lbk770T3VI'38@ZMMFe5UkC$*K)[IC-nBa@A'1/p$9^B&dFUHsV)jCU?o.08EAAspc6
%<6tGt>$7DpP?Vr"F:hV,nm^fihu+nC<kPPc[`8udSWjS>EVJ-NiB(OrDAUe7Mm@7h,%]nO_@.uUK0Z/Q,%X=,[fs:S[ik>c0c-4B
%1FpMmToI%nC-jCoFqF?<-S,RM,uVgE>JUPQnNKth65$D?W(nOQqDj72glOnri3/.qp/lQrFoEu2'@BpH`G^TXd(\@mLkCQB%g-tM
%THO*=dV]-$iP=LG1bCm>\MYRs3"u^Qd_I_PEpIP_&[kE7hhng5X&pq(;7q9J6s[b3d/c3_,IFT?*u8Y&0+M\FP#\$a0ISqmJ_R1W
%=)HDBdKPKX7,0;TDacu@A_diGSLC41#VXmH'>CV$UMXf.nZ6F$OS?<:CY(lMHYJ+:C4\SM<9):h@t_Q:0g%RGF_pPJ8#/NR<<Q';
%s)G@j1<**uD/&\-SngPs=Zlt2Vf)RZM2=j&oOO&D/8(%WHM&guZoSGCTSF#)HoN45="0%",*pKc0'S7g5l$10f-$7pnJB;Pa)g,/
%>&4MKrFK&6&au-B$)%n`G1DN`g3FmjD6KS@B\@4f83>+OVV`gu2LDVE@IB6K-#NG6@WQ/6M5+ia3#>Z>haeL8$tY09hA8K;;h&Cf
%bL*]`D"V#"mR1`NbH$#T(q\l'6>,n%OT[Gbe!XDMCKFDO("quqZ^o0e6VXu2't'J\$Nqm6%ujYJ@].MN/`la>Bt]=/,;]tK<K:nO
%T+UqBN+8?_Z8RB?P2P.B1?eZ_2jKBKq"[Ku;AAU@5f\8Z$4p&r'gr)Jm_#4H1hM=S'a9LFK(#J=/]1mB$TU'joUleneSD-!kr$0[
%jt*ZP;.Sa5o].4C\9B:tS!B-#6*i=m9u+M3Or0A=MCcOOeS31(7D';3\iEhUW,cZ<b]4tQ,>h`o1,#U,eOXg!Y7TcpSVa18@\cBn
%nfPcKhhaEp11MG66CIXeKnD8<Gg$KoZeE`<?'fW+I!ML*-i>SD'AhbZ[<eIe"ZtmeWJdfsZpm`M=.Ot6^r[49K+i%t`g0N(rF^Io
%<oo\B4JSQWRR'sCQRrRj:Z!C5&\I>_iUaCmq*"S+Pkjh#\iG"FLTbtH`:"bH3UgM#!-n65<^P*g?p0WJ\_!VZ[8MsE8huLEdl;0Z
%gS`Q17V@6qppRW3Igq8trb%acF'0`UL)WRdA):sV[S)N&No/i,r=4]ST%0rimD;)M:7Y/WDP:m8@;MR"dZHN2FfDA9+^GuOfAV-N
%[<%1BiN38,a6H!]l_[_fG;Ag2M8Cm]6ZSuQ2@-DkBYl`kZg2g&$b%$`5f/"a38H4J3.I=#^i-bsGT8Y^2V>6>dV-54PGfPZ,r?CO
%A,YI6S/^C&hA-*d$&<?(Qi^::LY6m#0Q!0K@kB#c./o@@ZS^fVi_f>(RQDf#hoFjh7:4<3mKpaUAqNQHJ6J[;hPZ&q^Gr%7cHPJY
%W-)'H%KR0pfIL's0$4__octq<]YUjnKX40r$oGe;(22Ri^Sm'i&>$FuO"'r#3GLHeYTs;U=3&VkTubg!Ras[(BbJ#22"gq$a<QT?
%fF;p`<8Xi;l1fUP-M/hC4U5gW`S@O7i%Mj48r,!AIHH@4Ub`X0kjGuOPa]^m#*UY.@Ei,(WM=d]&>SPSnfZPaA6aCd2.T@/X`3M2
%b>I]V*>G_tSL:U5NmHAB<3^5BHM_Y>hH[BgebI0$dkF,;T[n8UauKOd:I/P2hQdIUH<[c-HN%/2)7.uO-Trhm)Jr)a`POu*e+[(@
%LgSal1\8bK1)aHO<_<QIBHIP]d@rup.mtlGmu2`qp,c('&(0o01p0JRZ06O,%]TnBVHa`r.8VV/NVkdl@D^=RGnd7$MEuq9%DGc,
%?W2P8j9[%b<qhZ8i(A"*J($?X.7-XG@`5J+\e88E`&"LZX]Yg:)+1;g]QlpjQfU?LT!lJFZF^C7!,OLuMf*)I!jg@6F?p5H;/i..
%$(crn!"_hu_$5\jbj[P2P;l3XaLA[hg2$q6H3HNDpB6\%9[NHil6G=T-`$mOp@ncjmtOKcUZp#ADQ*7Qa8'BS)!DRa:5?;e%%4)Z
%)B"SLF4`(nq.IX\:UHZXEMuE;_5D\jqe&MT$*[0/Fr9cr1Aq@,QTrtG$&%DJHP5UE(pJn?O'C)5)E0HMMHHM3@eO9U<ZF]3qP,@k
%C*[:7a(K@PP=YbcQFBhFSQE"#'m!f8'jfDh=".83Bua(04@2!8Q]Y'@Ar=_0Ri:\?Pj'%ZW+"u\`(_-iJE=FX-oWpo,nd\Y#*o.L
%H+C!;Uq?%"n-j7)\uuuC.Iat@*_Os!AW<m^pF@imIhh(a/8[PJV[qn9&?W!>:X[FYOd9b<`+O(!B?4K%Cpf$&"1IKa:fc"[Rds\1
%UF$,5mHnXXG8JMVg=,jW+=&/KG@KG=HTZ@pq\@c/9Q7Jbkt"u9DKo@anb[Si6Ea>,C6U`D^#R5&8-jm^1P_pK/b&"cE*uoFYa)bU
%P<#mnQG6iV5s=unF/[ckEC.*+;8TTo5n><AHZ`g4$%'kEPp\bRJY@M@^"Eb\9eg$ZJi'D,ge"uGdV4R*Km*)s@nsRRgb7qke(ZlC
%7VPCggq)U.ND/f)ZG77@DZgFg9U_AQ)S&]@/V`<Pr0\!;%-AK6e\pM?ShUMF/$mc^bfq,8*%`qNEVqH^VBU[VM$h;;A`=BTU6JfE
%pY8a=5,ANr%g"ifjbentl^\L8p2RF=,TMA0kO@^9'\:,t"=i7QI#MK\@jE:869XuM^oo61>/FQ./OArH0n;*M9sLQB>"[IGL%'gc
%n5s5&.G^a?=PoMk/S_8+&hf\+g<e*5"#N?pCsGF'B7MIfpB]2+o/!=0p+Q%BEDR<I4Qll]!\"DGX"`8IKg0@rF,666\<M6$4eUcF
%g^bp_03N0V"+("T%AKU+PU\<)B5%!&Cr_#=0JLA]^?j=F/Ga]+^0rm.a"%6GLpD>F<l81Ds+)K&]rcFB[<Pmp;Eo=NKTZmK\H;r-
%Guj.HX5.f(+=s-^SVi2Y[gp@qh?`c+jC3FQ"EY$n\j<:*fjI29j35.<G#Nn"BQ2&c+)II`Ak2EeCLX2@DDPO=Jt>!lH'`#RNVLK@
%[;,S!!o.h_^88V+GAq61VUMV4315eGam*LV."gI&QD=r/qdA:uosNjh]?pW,YBZ:X/4Lb9R13.n-ALMG2N,MoNr[kr^]g:S\>Fe8
%N^jeaSm13[HaB?j)Z+H&5&NjRL0ciAHup)qn.:D@i%L+:hAaE3_8b$"D9`P&(>u."`CW@QRQ5\NXI&_T8iZ#\=IfX5)ON#R"rtA6
%18kL>pqtI7o&`_&G70%C2"bW>a.=Tt3B1[qI\Q(;1ImWmR;>P'B'5`r=-8Et(M-[>0ac5&aiJ:bC'%[qp@KmM&kN]0#H,nUE4e"Y
%MP7Cr$Z,.E"KUKkE8epBO`!aN2R0I\cfaUm<7KW'@!>mg4;Xm/-;dL-,.L;]P\(mEZp9L(5XP^jYPFqWCOX"88rDUOmR6qdQhZ/=
%(Zj7Fg\OdGGf8?;k7@MS7&+E%M-uA#6+7iaMC$_Of;jX-j'eom%6Pi'67o@kZ+r7Q0\tsS-*Tmp0JtO'Dh'iR5c$om3X"6oFp.du
%4<f>8p4<VTBE-c(g>4fh'I[_Q_Te"B"EM+&*#\,r'L1a\20tTe>cDa_^p;`I&-#q'QT4roCjjh.iu>WSi=#Sl5?.!icqiU$qj)PM
%iSqhrU"Z3`f9TX'qCos38%Hid)2DSCN`r7@<dJ'Uj]0+gk^QHD7TRONF(3MjggK_4LWX3>'2NlCDUbN([ChN7QmSA3S46L+lMf\=
%)@Ng7Pp^7=EkQY(Y4Vc^4Dl3lKZadNJRXq19DO=*Sa`Hi`t3H8LD`rW!TE?X4`$U+kDY/M+&4r'AuN@CD*E>Sb9#JADOk(tLXmX^
%5o+YJ`L/BgVg1]hmcqu$06'=e=u:$kSuq3t3M]<9q[%A80ZJ9TZIq=j#b-O&O$qP!:IN_F98``7g6&[&l%#b3K;hIG3,e-rC.)%e
%'q6?Y>9_cb<&`kiF=:V<[7$#F`u9gf+%D(ch1;pO]e>]gVriQ,h)A:Am8'1NCtW)]-`T,5TahSr7YoIq0+s0cEEp^AMHNY7hPKW$
%n03T_MYE+5g4U']d9La`=PbH*E*'*$]_iomW3^qJa,!:\($m5Af-o;&TS2]T4A3r7i3)76m`-@ZpSEJl+^*PRgpX6#5"tY8H/Y8L
%s8E5=8,1f,!HeMp3Ip@o@n7q&#?[Zb159,pMV7j?@i7(5@a5'U;hcUim&'fDYW#.>,?L1!=&=8%#+1"f!5k2Q[u1srZeYSf65r:r
%hW<!H@qtj+^tmt"[Ak@P4>d2Q3I03N;UI?gF(htJHW$eYZ*^6lot">[)"?i286@9G6OI_)6R:aXU9G>H0->fVBq&DZ3ZGD:./H$T
%WX065d&M1D0Y[-Oo<jtrLS$14m':d2F&Q41d<IDEJH?A*,T"<E46m9rYI2"p[3qL"Iu>n[X1j[ROMM0T.?NY^[<*K"N:Z$+#`Et*
%S@XlrQ[0"soVV/rk"WNr;E\rJO;Z"C5];Z()Vb=J9h@7f0/C;5L]O^'?"&Y^o@<5S-dA0>1<Fb-9Xu_?.;QdD?7$q''_eg::\nUJ
%9pGC:#LAhZGuE^3s!_%L<cAS6[JBLhfffHkbB8eR,XaWD8SPO=Q,*nW0:IM$&:@lJ0Eba`^DF-](>Y_E^<%]&C"]VM:k'r_$uh:m
%+J@@(ZS#RRN1T+P.4gd%PlS-]K`FY$##G',1Bs=Z]0+f0X[4HuX/rTOqV`g15s-pFrDbX0G'o$(41PNl_>WdE+=Qcs6(<usk^#/m
%/.uK]>n2*`NY16FY4hqn7,JZ1:Lrm@ACCUR!5PNuFd6l#ZIo%#Vr.r5%7PmR\dJ+)ZbD-)cBE`Y=6>DFJL/aD5t!Nn,9UUH.Ps@p
%_hRBt$H6fmAHd.-_B?)NA;h]gXK_CBhi3@rW*`*7PB+h8hi'-HR"I0cGn`k]n+opMlFnN"gSGaulMc$JiSG<t@YIM[HHCmRpq!BS
%5,m\AYe+5C3i[?RO<<l!g?[e'H\4Y3]th<!Ih%X5o`AJG"M%Y3r$:Oek8.q]]EKcocal"",dHgoCOn6(C>K0p*4dmh+<F%VR/^l*
%9ra\_<;Wf1Hm&6tZ;MZ0N5EDcQND*pfqK63oZF+ddCsbtI6%C_?o%Oh.6d$]*L!H>G-c%mYZ3g)9MBhBh?34Y<3C!$m:q6ri$pSq
%"E.eob''cI2Ft45b(-<FNQUSUX^kS<P+?"Cbd@VqBp23`O@T>I^m]l=W7udc[T2Z.N7khq"[=rT"8lj<+%7rCNAO0:=I&_ZkFb:(
%P2HlmOD@j^U@%V+*lj!/(?#H@7FAOI-'@l2U;hYd)[J8*,HL$Z*82s5&$J)p8GLM&/5b=Z=YZDg\%tGO1OugS/+/eDdYi`F7k/h*
%f/9DnWBpmYfGkSg$C+B2qo\osFSl$Rl/_#c<qIkocuojIO]B@1oYQj+U7-,acNfl6Ql!t=T3lRed,48Ve%]$j09)J[<>@2H3@Wks
%lrGtPDCn8+>J@rY<h3n,9]9:D5&]Yghc]UbLW:&Xd-lFu"[bX+_#*cD-$Jaoo]mD3WAB^lQ3=DCi*@uV$skaA;'<im>j%[O*Ul6l
%S:HEQfR1JS'"pp4HKbd#&>b<NAMBnt#%=t=;":uh*+5k\<Nq/*W(#Z(=^Jp^9fY(&WP54I\l]9XaC9jHB')Ct6QCgt$U!>rGU$fV
%4%iXO6XWo/J>F%c>U5daL09ZV@@sJR/F]E+@7L&!gD%0gV<6_PKM4<#dAjG'D*04K%5t1:Ao,1r:tBdR_Z@e6F.oO./i"(qaPX#f
%fU<PCr6MiEUcDZ]S7`.nr>\mi+26NNS9l$\:9Q=&,q2Tj!>!`!O<`?/#\f;]VBo..SDsY[Q"K?2OX:t.a5%)h?0eo)9W!1X`6hf>
%(,*[37=Knlpi3"Q0Pd!,oVOpnP<kDN%VUh%HX#*r#D2(2/9mA7)AqhZLr;JtP;98tZtA7LW;[:^:h(<XmQ.)e+r(8G.9aNY_GT'f
%7K>C%]Z/KY#;DWHi^b,b.P)n'KiGl'R_;dOiMB2t+seq0gZmIu@'#f>,JHsnKH^P[p#<b^R0?ca)FRahCKCPsYlujjlD@1YiMi4&
%$\#QgnDSZ_1C(tQ]_S,9,mPu@G!:dY\.nn1-*.*,Bph/th#"3XC\P*#a`?:_GXd[3<J)-IB@[@_Ojj;Qb8N[umd,XE'nT<Eq:#DC
%U\aXiKF#\SQ.tuQ\d&D\Cts>sYml.G_0@d"Kd1ARr@/P5!A>GX*;q4>Y/?/MU)^<Rb72<EYI?\tIZMQ#^/rY=WkbB*cG0OTMLa['
%:@e&L'5pD,B(E#F21X4XZ$4\87t4hUG>c0)%m^>9#cbB]&^P$&d#B=)rn`7$14A_`nA7C>Zg3N^Pt)[#Gj<r&TJp$^@I/S5FeBS:
%Q?XdpG]QShB?)b?"CRi!dTs%**E^5^Zem6_e?g&TLgG"nl_h0pC#0Z*WW:tF[ITgP$G(!O49ZB!U:B^ImgsUYG*#67D(,lq!Xkfc
%U`>)53[(j<chK[)ZBP]/&Hon[oYqIO&>pL5eN!\ia(kpH2T4YmbZ/s0*%tl^5QO$"UkJKH<NH=qf!gBr6Y3(_PZLRqM`M_.Fds@.
%k:6Yjm]@ULfd9BpGnYd,',u/IYbr9Z"eSO'NiHN)_TQaH*t[DfpEI#!dcXs0+INK>N5F@V>poVjOElf]qk4-]hp`,3D/2>p'&5uD
%lM<72f:B!W`hYcl_;Ht8rq84saQW+ZDH5PJoh,fuN]f]bL9]$J#"-53IRmB6[W]s]:_c!+#5W4'H.T&N0WIA.KB(nWhNC'G3(H5n
%Dl_?dHWmN@IB>H%/j\Dh8PC39.]DTJ<4rGV)W%%`k3)V%Zt:9qdH0h2:44?@pZB&0ltL_j)+&iMTTj-SYffF$Je(J^E5/MI8MOGA
%jtNH?=Xmt^f0c<9<"Jr+;YafSHoB+#)<]*CpW`0P2RZ?i;BP`XBmL,QI/)R!S8]GrfN\6bZd(!:AL+Tg"?GF*?mTA@J1cMR:&c7E
%+i;%23*DdSSMr7TH91?Acmg$noQ^(AOJ%iiJfmahDaEfL,R?lhqAd(=Ig9XH>5rFcO:mKH)7B)ApTVJ]frUO5i!mJ_U\$F.<*2#&
%4GKb,!XF8&dVOAe7i(%X*/&+@!O)mr=r*!]<M\GkTK$&u(3g+*i<BW3k4eVJmM:(m`cSbbO9=SH*d)4E<]ibS_Y!$H[u@*p76KCH
%2UQ]h)(aoX6PcIc,71fW"siPSjC.!QemUqJ&6m(un[P#TL\\:c`pC+4J,u:)KX"'Jb.F;j8/R<5c!YY7<^q%@Gu"g%*(N3uLI.9e
%7su]c[Flad,_'E&g\VGq\f"4ZX7Vftb%LYmJe3**;^!@F`.FflA[V94fc798ND/NuWkrApn5I)5;\Bc%r_9!f\9^+=fGqp(#eNR!
%1q%`p6`CHD(FJdX)Bn`"i\@\me\YsW&j2R8\-E2M!G4,\1AaP+4W-e.o]'Q3*2Jf>Rlfnu;`:S_nGu4;DAIVa-Rht$r8r-WWDc&l
%Z_Ch5Pkkg)fq(=dqVkSpJ`<4uTOjX"qDCh/q<NZHlCHhOE3<N$'Fu`M8X7p=L+)h='?F;e>k&;MP_X$ZRN:2$:.;u!*d=raN`-H)
%XO;#k5j5`W^6u-?ZFYV=F_Q%(Mf!uqO0.Jt2OUM@-P\/6Iuue<#J*HipJ76;<VM!KRa=)`5jJ'\"L7_mZbWD@m6fq04i$ao,uCP?
%Y=T)8(6jn5&)U#p)'Cgs[9Z^DA:@Zk_,B`ggZ"ZF:<![-7Zk^Y^EcT>p(hGXAcV@V0te.So7M"LS.R;jEbgK/GLu"KdmF5!^@rPD
%m&?pdYBCFuMs:*u7@-9$[5Yi_6Bfjo?qD[1lbUcrL9]!d2c7JaDK+B?rZ\hP[W1_igQJn<q\/Af\bH_Rkg<iiCh55NSR_ODB[p4W
%[NDUjPYU)(f+:IETGGlKNmK3_a;sWImgn97(+g^9lDbP`m5-eq<i?%t?%.c'*l#dsnq)F2D/09QT.a\1hHE8*XD8#N)>@=Wd'?eQ
%)GfW0,R"OalhS/7/m"P9r*3uU]nfWpK;Y]>&346m/glRo%1>uM5N&KaqS?c1jKX,HS\]gs1+;bD=]fSCBF^T'W1[L84If'a&*04=
%S;4bs-T!gWn,_@V](HX/5'<0\g(LA+gF*`obn;i;SQ,CBB1?Y#iiZtRTF2d3durra*eim?%_$M>5tZi0F)At[%!tUB1plLAIEiV<
%L?%)U=3Vg<Wfd0A.XdstcX=bHTE=R9a:=YkC4maKAooq9pu5n<#+8,]e9MGE0Z2CM(9Btb<t?*eSt.`jQQ53^mWF_+/tJ!CZaST:
%Z2]P:^m9!Ve.OsQHQ\E`giU2oh]:(UBWHGWiM;uRHn,\`q(AQ6#:&<C5jbQol0\:p$9P-/>pbT@XqbRYmH%<c'6cNKN'Mig[sTF=
%oWLR.q"c%&2YhXPD#`eh1"*\DY#p17;=PdoCSokG:Y=aKqPr)J,$K4=\,H"=;E=Qu_RAdn[H4E?c0)aR>kZ[rRlZgnk%)q#)TZj!
%-,oAX(U*.Y^^be'O0/B#(U1(eE$Rf<jp0^W7-ru4\Fh_t.e'fND7NK*eU4V2SQZ:X'hMf2D9Y^X2-etmFgUB"n1!cqVatu_AaHFR
%%o6'BIHQ7;h\3^S+PjSW>0Z!h.:<J.=ri%G$]f5"%;c62BV:k"B>C[:Y"(sm\@3)M2r1Gm<^#0lQ97*^aeZDMC^SAi'itg`Fbk]B
%q<q$;7#\(!E[G1'<J22OALhN!=cTB+*<+g4:l@7$348>OnI/T4@Mlr6$<5DGqi*\S_-cg<:_eYqrD;j*;%_P]:hHM%?p).*oWp'P
%G*FRd(;).SLT[H,gI$u],',j3:#Zs73e;?G]pF+S=s&Z;e6^J+HmMIgpAL_O\jnhE#cZBpC\/(B;lIDC[<Qd#.":XDlr;X/i)IBR
%h.0_6QFV%(']Y-!&D\"2/p"p/6jBd"XY.=[Jp(&Le8fB\X,+1Vh,Qk+6G0SVN,*,V9JbB!l[@$?/sOOD7<T_W$<t@T?M47<n`YI/
%,1o-Y&Fq6PKk?DCgN(#T<2;UIF<6E)7/KDAc3L+gg[.#QHQ8'<;e!BTK#nuTk:o_Kpo!B,J9Lnc9d/$C6q*0)ILZ9!5pb6B#j'.H
%;Jr64#!frdXVH6JF'20I1b8j_$!TD(NthqGa=$1Q8H=]gA@8anJ(5N,+Ebd&2*BPuI53YL]ke6nBufi\gR9i;l+-I<5^fONCSlS!
%W(1N`_CRBj"ht[5ZV;lJ)9pH_@=Wa")/pK/ZU:RdGZm\Q^$F\(^/[32Z=3N,BKE:.[Z%7^'s(V/^@k4@W1T4TajP`+P?D$=#98cX
%1*N,:rH@I'Ch)X!Qj$Nf<Eq5GVr@ae4,jW;RloW8>*q@'8s4qFJ\NZJK.Yr0O"Ehnae88R-\+ol-g(KIUF#K.g+ekL.2EL@OIMOF
%.;h.u<4M!:1GiA])CXW`:/PHGWB;a&asrN>g8;--O7G1m%k4>9-uaqO(S+Cd8JrhHE^p:JJB-`%.P]gpE/QR[/\"!*naX(41'%F5
%FZp&U:FYJKeq#5L(TBO,PdPdeFDMcT(R,>.rPoA'8iW%G]._:4HF"q8Bs54(Nm\Gj@$eS`AAQB`65ojb.?N]F&noS%:m5Yjmnm>`
%]:JG8_\s&6lI;;B0I&_ol7aRKe.ZG5,s"Bj1i)QN]^K=/U.pI_kbi=k.1g^)*)'jdq0#R"220BI3WcL,:RL6)V7Zt)[HTAtT>]_P
%WCZh=6i5d+d[:rP1[L@$h'H$ONCu22qD!5iP^WUhR1IdOj,DCs?%n"5c[72Q0O/pp^5:EUJm1rp9T!hH&p.k$`UL@4[sHH:1&j,I
%\1Gb0oZnNiq,?Kc*p<$QlMpW)J`"VYbpH:QYisciYY(WT[CYt_m#q"9KS:HXU80BM/oJ(iYAAYZ)t#cMUNT*:TV*BHQ4P.hClWg)
%Z0%O-oTpp!ZMm<qZ"onoj]\=iDB.NT^_f@M,,+8PbQbu\.Z2/_D+JUJ!@],jm)ZWfi)#Mdl.k;[8dK%9OnH+XMu'-Yg>ZJ8leJnh
%LA*2jQ2ODh1VU^Y0h+R8TVi&11ZQo>#7c[?+;muZIV*M[P_K5u?%(^ChGapNoAg(;gHm%\.p7uYOsRX1aU92/!5sCN^j.&iFoHUn
%^O17p8]A`p\1(mkrtI*&G2cp0'.Dg<7UFJ57?DQY"_qqE)5gbi&*I2j`)6m#h%:X.%X-o6+reCe5umCiffb<[.nLO%r;=T^W7sDb
%,PfI8UpWG-p-47,1*I;1lj^gX]PFbeb!0BX=5]/E/Fa9U2L-0+`^l12('a6u#a7,Cie4SnJ8c+Y&k>*;L6YjG7mN[<O#Q%p)bfs8
%APphg\Z1,d*`hnQC>'o2,L5kPpd'MkR0/gThnMYEU0\(be`1!M?St;<Y*._-&u9tlNpd6TAAGtmrXrmr?\"6+s3j]lmBN`rTuoen
%Ml$=*AF`R""gp50>Ig'<AaF@*QEpp>R")B^!V*L?j^lfITSoS>QNQ3t'IXh;KaHQs_G&$S0/\uuHB^s?(5gL?59AF:0tHC*Tq@"5
%EbII+c55B$E_+hULIT(J=+l?G.e4s@X"akSJBbrI:kli%m%sM?,_B7m0+8qkVF`N/:o%ojab`5PV:=mjl1>N,TgTYSoCF"K6N3Dl
%6^2tY-neL-G)!"k'N)$SAGi8j&&,\qEba$O_(%h$HM[(Z2Lu/W`[]+@>e-_(L@jh#,QO@B&%n=b_AJgbh7/*Qn2muP.F)5%-h,*?
%0ZhMP$H(_p^Ja%Rd$EX;^c?R5h*[[E?1&G2@$;Ah&NGP5]<G"/Bhs-+$c_enSATaM3><;rK9G/S]n#<_.@0O^4N]58r'MTZ@.13_
%Wg*$\GPFeCP2cSih]0cu_m+!%&aUKYg_R:gJU-4(?g":037g:pqAY`,`*ahn^G_1h:bW\R_ip]S_Soi(_fU5D!C7;Dd\([$`<[OF
%E@MX9iIQFVL!j3hKhaKnJ!6g7lUh8QiT"BC7]*kCh#pnK1i,sMX!i)F>pmHZoFd8q6H=n%r_R'2U`Tj_PC\s.>po4d?K+FQibc4K
%J/,/q@tpnh`_]>7LR^SJeU7X@C_b2C4KYVJL6R>VWDb@[MAKZ0rnn=FbP\'\Dp.)Eg$rO2@j@K`JKfphJ\!JD2&&3,UWhd<Q":#E
%G3s0HjMh1lhdp1p=<L;Uh`YFk*%Eg?&&9Z.QrB@ISKA8"9Db-NA#B9.b4.1p"gV6$GC\iB=X>?fE7qHA<Ipq2npULNg?V$.8p2ik
%oQ!#!5Y>"'J"7!IM@H:b2n-UTHEYZR#\.&91RQY!E]XG,EB&UL8a<B*7#$]".(JP$=@CW8m=WS)du/:bH/urh0`Y0>UE>b&?M/+9
%m*TPPW5MTT1T?8oT,Xto-Pjr/5#'!859ND9COj+[2piYD4`f;-Y*ceH"Sq-QPc[_^Iegp0U9&D4a]Nlp9.D%3F[V)Oe[,?S.V*8D
%,k(*l#S?6BA:H"-YIc(.eZu*"fub#%`PU&[`;=r$=-5<`=kp0IfYP$;8)R44Z8:'QD2(rfZ-'fc-io_[kZ-oeUBIb)9`fcGA6r39
%Nqd=gVuk-\qF>W\lFDXdQBSc]8n*oJ&-V<Z7VGDtB`rO0rX`a=$9@S):#HC_<UI508*EoXPB4%5'RU%\<^&dM$>),tlb$%a\%CN"
%(bT+EKo#Dq>JW?ZK8AX_-#e[2$fKW=7;,L`#KA#tbi)-sFXj^OQTu6!kiltbmV78XD(^?APX2O!l%?tnKI0C.XJq6`XJbgD'W.gk
%IknL;OX222[L.32<>RR2pK#oM>h$3*BUso/87=!6FhY;"82&Hr;W&)i/s?iZeJ+GfU%"1dXq9I^W1[L]:NXi\:%/YI$@Ge+5tK)A
%jg_;)>1]q#'a@JAUWdqPH4PhO]$d*kP^HqrgNm?r2;+cQM4t5NM]G,j$&C_d7FbO;8'crq1K'2B');Lr)c[:J,n4L63?qhjF:sK/
%;+;oD9[,>oG4!q^^]`9(e[`<f23@G^X($82o['(N&/*O,#_!E1Ge"g*qDH,,ShA.rps/RiXY`=9q%9]EiOXo7BEU#ZkY#DUio14t
%1%fA1Y5uoN/rEiAaMj\.]eNEbXZp*>NH6/EC0*;!#$&QH^e@fi'&k/5GU^RWLXEcBO0TJ`L$"cN;XJ@G^bA2QV@c'0j@fn)L0)ue
%mIG7m.2e?U.cYAu'R&X$M"YC[mNE<d2a8@t'?BE@kJ%/.3@bneDtmUmq[n<5lC!88SY"Q;deGma0iVjH-AK*`g6`HE;V.^RXF(Uf
%8l2iG5k<@fPrN"RQ@i2p,WN++W&X;J*Nl/LMWUS$o*8W/*5,V0T?B\O?JZ7n/7[+dnWmTIF9])W4sLg!+9+M`STGEtRO!b;YsU`t
%Z)sH\C488\GUdHf7/[!C;6NFI;\gAdI"[Y'e,Un&KO4ne$M,/":Hq3%4Y4K@<mARKYRCAVH[)]4JXcj/8hV2S'(:X^.*s:%kDp\u
%cOrLq`/<H,ee&=([q7[#>F>pI=*1q#W>WYN)82^\L15@T4UM;MDIl(X%ob0/L*?<";mh=gJ9&i,1CGQ"?GF0C-_>"3dl)h'WVWT#
%at[->bEDO+:`]GI@,,buS=5!ZIQ47+3IFN[L+[3mA_WNXk*nR_<%Ml$m,R*AQ\I.`//M!D+_7AZ;DaGJGcH(8V6R4&GgMQ"#77CT
%67At0&Vi>u-sH]FB.jG=\Z8/79cgUVLE6YJ@^,F/]"W3Vn%NJ5'0$:/\;A4=b@%)dWBJm0#2o@VG]8i]E8&!pe0fQOLf@]Q>%5T^
%k??(!4X,sAqJ_>WR)b[ohrdF6q[8=m+8(6aV%2`5C'qcX>=:=deURnX!h)19gJ`mg9"WDKBkDglWo"`#Ff)PP5f5s5S475&23Cbr
%R_lHlQ>k2FcsSYX4U0PD#Z1()d17Yo7dZ)d*`;$1hO,]8/5>YYTU]WC,p>cJ2`<8$8GK4RM`=lmh,=m8`Rqt_8Ph]Kp-?o\OKl;b
%PRZV38f?<`]/Q[j(9U*)WVJkh--H,#Xf5G@A@,8V(]o8'l%_%biMd,B6O"*J<7@rcFA&&O-9cZIGoDp^.M2"d*MAs#%CPP?ci@/_
%lA&.n>'B^ge,@]4b$re)/4(I/a]CS)4D)PmNmf))%D]*W4b>(0UeBK;C]NbUEUA[jU.SrMB]!EtRBCMVXs6f]!#6,XgJ,?e)0ms`
%>IXG2r!lnSnEW`(+Be@\bf/]]@#\;JJR&6J%A1qM0/bG.>`E;oD(<WRlcJ:f(`c3b9UGnU')%=E/#FtPo/7Jl_Psh2oad+f(Pm<q
%UJkha^@6FR1ni315lN<8#'Nhdi\kPm02taOJYpM7OW0&u"&WKY.BI@R$&j>$p^rd!Y3Ju6le^7$*VY=6B]9+b2FU>k;YJN8CAsq3
%S,(hLhGkoAfHH0/eNA>)2n3<\RK;TGKI]P%]V.TWi/&ul"L8Ug,WSTOJARSQ;!"sX\d0KV>>0!QdqU,]W^u7Aj.\<QY(qP&D\Q7Y
%PiHoVfT-.p'nQT\@c$)fT'aK7amL]4)02`0`>OFkj%,'N^l7PHM$8fFl:&.N7=?uN*U9brk9o%e_dHlNR?USge&MR[BhGQo:6na&
%BSi.ARTe:O$U"A"f1':&-AKsspeXKn93:Y#df1_3hRCu]"J/U*hp15;@=4sg5MXgo(N7[inCt34%PZ)a@E@q%#$spOW%5ua"^quZ
%IHW2=qW<`8+#V2KHP%6145L!3dfVYujhDmP\06+^S&?(QZ:<n<@"JsVB$!DpjY1PiSZR^;f9d;IUMA\4lUG)'3\sM!ZG]<dYUE_[
%7D4ZiNnu5A(nBd#pi`u_J(=cJV,RStlZ0`/'GB/(\;BWQn*[*\'G)Cd+JIQC6%F"14Dt:t,BUFiq\G&L)@RrcJNM?%$_1?((IE%=
%F!-kW4U&nb[R\e4XqRCST1)hO*iE"gCclH&0T']#hI;.&2*a!N8'q^mN0o3Upf!TRa:+-d0L7*:on*jSq^(/iK^;-NE&a2I!Jo<O
%$dc_)ZSj__9)XiCcqc*^N*E!HAD0FU3I!i#(4[B2?XG]g%5C8ZEY^CN0X1pYS#p'In=U/C^G:^%0uj3cs/C$SlADZG-6);1j'Xr0
%6\2%IH?2J(RmoY^n!tBq^'Il^1[2p"A7G@2Lhn!bUVPE'O`*KCo,4^c3^cPO,"H7hqM&[!F'p<'%1m,)b*UDo[u460UCh>WVWkWB
%G,$_F/QbKkH"MH[W)VrTb\X0.TbK//@9gHeA*DcjG;9R@G7kL3HjXc-QJWV?NA[Z=)&h2kW<%1fnjW(nUFc@$R23hGi*[>B?>9Cs
%`HE)W;(`+hg$Mlu0l>=uDMebC.1"]3UbBuQ!eo1;T#3fe82)T;RZ3juVkO15?q?uTS[57henk=23cD1f'fr%1=I6LI,j>M'J0>_?
%1I9g7,>@p1=sGEZNe1,?f32jWT*YiHn%3O?g`4;)$:Sro@>E4;F$Iijn_*X8R''kAcC+b(+#\u'?-*To%$s.k&V&AUL8%GLPpVnC
%r=BmDQKeSO//u5,GcTurL?R#R<<0gKc:@@-XnEd/:$qg+IY;D:\+Z2dPENt.9]571YNjT887?!^Z^@"9,9nUC1VrCN;CH030gP7d
%[B*a`en`!:RtWe15<6.9n"^bQ[H^[''c>8na2tT);.jTUCK+[mp+N8Ol'5EW%>8&d9u$aN9[.WPWc3?6!10\<ck1tqPHLpr]-)E?
%r>IZbGm%[=#LmcQA`Gt3iGj@WCXb'Va4Y&#YU5RP1!?XH^tD2JaV:u?kAhY+>Y_^!&H90Hn(P4ZY+=]1hf[#fM)F$2>;B5R!VLTS
%)TR#H@L@TWogH7hns&[?:o7@IM!(3QLVdX?K%h&$gOnEe&NmPtj]X^=a:Z-3G6*"l:8'7D.qGP33:00%V38O'LU9mCUt1PY5'rV.
%FMT#q]84nRLfDX-S9A-*<8grL05@.]JUsNt3T@Mmrmn*a#NPG.d?92k!PtAr>.3mVbc"PjM$3bu;)%+hlEJS4>=C9#@N0+oqPe7%
%RYD0\H3T=Zg1H#W8EXpa7g$k80/h'1h;M&^:7t[&#m0aX6h*Q>]PT>*^CSosZ?]l%8oT*WEaL(oNYK;(f3:phG\C.AM@P4`N"h(U
%M@XFZUI6lQi1i:Tk><'6B$:`cFJ:.0h#jsPHAMoKF'#/`S&pR+)T:p::/2RE0GEIb!#pA$e+#ifJ^('$AqcDg%rS6"]P*sb^#BqS
%hCNrV8Je[]r!s$M7;m_L)=VAZ;j+$o3-Cg@*nXm`9(r5SUY/.A1I?/V7t^@Kmkg7bfm;Z*XPVRN:LEQL@b/hn3*Ed-8stXWUKrf?
%N`MBg;0bn>Pt2"YrVdjTN0$nTAY3<$auBBEMi+[^rr#BcDcg%QpIFKS'tV2nHO]Ri-ag;YG-J#M-S*;H20JGg+OHcN1\]5H*'4.7
%6IpUH]eE&)Y9hf;-,&mA">5RC$$J0?!'CO/eHeO!BF<`R>/EH#4RkR*3"%O3+Pq0hc[_/<_?U]&)RZ.+SaZ-^bU>##^%8+_N`<f_
%4us\WUK`A%b]!r"WTh2l-p+:<&B(\1cFH"4Rok2PD37"Y;.^2Q+f*a@p4mC-0/:W)db8Fq?>KchHa]M7@E(8#+dVe@`/E#F1ncpW
%8[C/EblE#V'u;?R1+O4!aZ=EXap((GRTlp8BI7bp[F^rc6/B_@Y8(05E"Er8P=,_b)^oFo*8?e)%&!oJorfCI`%t")CGWq:U@UTD
%U;f/JoEO*ELROo6mNl=d0(nDpKJ/AQ$j[ohVc=^<SJgAbgFZCAVVgLg65\Nd%bblm[;E+2ApeNj[8Ym5PN=.$K?CQon4CVO_H=F+
%`\*Pn/[54+DF#ah1*m!Y*+sgFf^U\XFBcXn1h3KdnX$0#f?<Y<*R+EWXQIY:IZA3h!QB6e=oM>M!TXr4,XFQoe,FT6T%=_WU`-_t
%QT:J$rgNFo<gH]B@8%\ur"RFUoJ4G2!7+V_X-?"^*M'L6./)S?`*0]SebG*t'20u(A>&\jHYdNr<?`FRBFKSR`n8dQ0GX*mkdS1>
%KN!_u(9c'kWA51u:iR]e$Uu3L=dlf<*H!P1\=njd1I0p@n_Xk(L1ouC/0$nh8kC]BbI$dsk)\2XOPipSHVfQr9M)-gPkGCr.&b!j
%-o_18Xn`u0'aFo8D9gIVX.l?4H2OnN6V0K/XJa]_=VcOT'K;SM-HUkBeu8!0.TO)drVlQGgs<$<Bf\o.*k2[96N[N^GNsN?,d$fg
%-X<0ENOqmMbI[AA;>9?)qtLr)<r^DQ<P]_Q9)0o+UenWP<.)Wmm9*lF8%_38/X8,^WeP=@>gkc!9YE)"r<u$lFSX:%G2SM0-A"@2
%fRhpiI:Gf]d-#"G?YVqVg:F0jKk+*J's,MhKL5>^`+q+bT^qFn5-0'KXL&E^r.3oB9.pVFD)s4+Ci!<aEk`1O>LQ6%cDt[Uki2+p
%"c#THN<,<h28TBJY3IX]Epohi=r11<@q?03:hW$GOt2bi+ok8!dk3g'Ol^m<JEu4O,.^soFbBZb[G<T+4BmAB6m@W?2YW1bgFG-m
%QB26qWlZ18=]_&;+Hlbu'%jP6*2Wk4$HmF*0FCNEGPbi)p_^ZA'iEQ-pD=I-bec"C>[EqX<MC[]+F'tr]1ElJBhIlS\>r%XZ<ek+
%YGI3%&X]o%A7tXTiDZnGac\VI?Ske-Akf]"<0]6RF"X$,-`R/_+)fG8&W]sMat%/sd4Z;G`TSLXQ1q<r&o3lHA*J),Ku0_F%K_"5
%UaLfjAmoCWMIC3m4b6l_-*44<dS'5tF$+Ej?:4YH98Q`Qr^Jki.3g$Wb"XCPJ'$^t+iO2BI[="+mC=TnL9>[^'eoD4rcqY?aon:.
%mXNPcFCc?^1)OfRU'6s_>['=VGk4]g,Lb[5Ak$6&(VNr;]I3TGek1Kt?8PPZm@8J(-joXg=8h)%ad3J`q9jlll6`p?3Y;pOmC&I7
%/(d7;KjRu*4[@^WI1H[$"/@p$YI=d*3].fM9O7NUIVR40Q[f:=/c_1L`uEtOBj1Z_MAO^4X2$iH[+hG4^oE9H""SN9!O0,u^3UL'
%&ZsQ0OI-<i2Z&sF2Y``Ep-j.FWIUR!;0OqJHL733mm["GinC5i$"m;g%9)'O?f!'@.5t"D7JMX[(j<<J[)ios]'\olWO`,15tK(4
%Yj6Js>,P.#/+^+oTag8Zn=1Bh6"6"\NTZu3Z8-1Li7?`pn31<S*Us?$]pO?\b9VTidFY_h"Ul%Ia*<4`prR9$Q*%WX\q3Wn2'8[O
%LmlnR?$o(N]l+NP3MY6uH?NZN]LG30-OV?dcI]uedLhuO8Nkd;l9gcH7VM8A8E21=IIG%C`l^u48dQ#`A_,B-3:??P@P4";X*DYi
%`D,Zk7ncO6-A+phr&#+CW'pfJKlfqKV-Z*'B1pe=)?HXIU8(qWR,Q##%occeOZUPp>S]XuWa3G6P4oI(N-4sM?BeLIn0lu<COd@!
%GrH@Nl2sGu.2Z+ePN+\7S4h='drJlIl)YA(BYVf.."&h1d[EI7L8(r!oJ(4=E#cQrVUl6,nA]a>/2dQdSW#uT(_mKcWQgQ@q"QS<
%9@(:d)ti\_@fT8F]^_a3Au6DCZ!#C@"8hCMU_QCT,&@0+;:'9-n58Fc(W_o()W@cAn_Q.?k?hXOf=M@\Y$j7-B>5&0MRrSalOh.%
%*QJ8;S(g!m>Mnd(W=`7@o*3RL</))a*O].+JC0M96rlol+h./Ac-:p>ZnQSVK?-K(G;m8M<$a'A#YmLF/ntMO.%LU)qcG\>!D;co
%0I=Q1OsB2fV=dkN1k/7G;A>%$,TJE#dk;aYo92E_XU"r^lo_I!cu*Ru#b%tDMlKl+,_L=kgj:K>h,3NtZ-),oam,?JX-5+,RRJIB
%L0P(O7GYe)Wt?f*1$TW5)I2JIh!_DW<[\l-9l>cMrcHT%M0Pn8T^t".<5m,YrQG.f3j*)!)Oqr#g8$F>-SoEW%5d0ZJX^LPOBGl;
%DB*KV/jG@jG.fjbQ'R-HBnj&-,eAVH!RVGb0Fqp(%.C@_Xg>>7US#NfOA\1f*'HZ@FTf>Rf@4O&N<SCMW<qTFE]J?BESO`Vd5`jV
%UGRtAh4_Ub(`q,Q_2j@A"HoeI(#?s]n_$0[b*/YsN\g^N]<+JB<)\s$W`]Kg_&'Z(d9,oc>;!Et4?ttSB[?D.cE3Ja26pmab)AiC
%@"ggp#S-OM8hbOhCJh_G6@sQf=?j2V:F[4=bN_Qh)D9bBTFC$YT.gBH`s6-lCA/Slnq;oRX7KF!moHP;nNCDN//K'6S>*84b:S`U
%K&(jLW+QY@4d,C-R2^rN&>Z,0O&X'M5-?NLYdXQoY8%`OX/_B=\KJo(+GCCN'2IDBJC=`cH?6Zuk0OV.)5b<*3fku]21;:!ehL9&
%FXV69Iin2"BB(t?6!q6q(3J:f_VXUH5gAB8`93Jp&HtE&:T/DXP+X?/B)c$r7?ViI:"P<npej&@F,58eQqQ@6!=19E.6!.Z)7p_3
%-eXdTBY,0DfE.%-LOXX[l)n(B"SErE/e^B7PZg"srm"ZKj*.]sDSd+--uI2Ql,*A&4cNAHA61_c:92-tdc$Vr;sK+:[rkjG;pEt^
%>[o!Sohn^^]`*:<pjg,7ED@(X:^.LaeqMpQ(;Fbk$0%sX@BVMes#G_D?JdU[<6\C$/gt,?=3`YmZ\fQ_Zt70r\uFNh'E@n7>23l)
%hG[?dO/8<agX*sM-m'P;I*Uq&GJ:#A.*m2!E=e$,>l<.JNBkjj[0#*_KnLk;l$Lg#NV7TfWhM=G5DC'_0\BVun5T=BZH1]mZ@,Rs
%B6tQ9]3l$N[`pdh5*ZEY4b-h+H$3Paq=11u9'LN7lmjDBc%LV"K-[%TG/5eKco..TlBc&*Dr:g@5D!lmNR2Xa'3%s?Z0%=)jsWH`
%IMHf!+6/A<TSJ9EYEt1Q;8^h@,a]co@oT@/f\r"=?T,me$IO8e"Eo0._q]$oWe@jk:p8&]5<-:oh_LT*Gk(au4=nn9rjai74^PnC
%j'%0Jgl&OurUjjIrIF[;7Q'ZWLoc'@.I&"W\uN"JXsu$_S(AkOe&t<Ie/0?BRn<\^Y>CC?mUD$dUgC]M6Yu4d7X1JB-QVbEdFm4=
%]0]KL`X6>C.U4a53*$(%q-(;flQdQi1HR&Da'>lX[hCgI+$][q2$Mi]N:S&o2\u`LX2"Q,$4ei9gOZ??XAQ)=J<luT=M9L'HA,]/
%>m]B/E^XV*nU#B<(;T%Sq@AV!Ydm2ASo\O->L`d=j/B8<0>3:?M0pVK$7Tj#mTtOtRYuM;.^PF:8TGqp"6rLG$J]@p3pftM85iu@
%DjVkd,EiK.7U7J)<K1tD)^2,)mfV5p*\]RnZUPe-Y9c/O>rd,4K9&&u2)61qD6Kkh`"F/DJ#h2'I6Nbg[XIK2%]WCW`UBKt'5-Sj
%=PeD/an)&cfW)9:1U=3(!)4S)[&p>(kY;^4rULt^lCNR9UH:^CX9UkO?YQgKl58jpg^3D_/MKWZLg.jm8$I]f4Jk2;QfNQ>gck!(
%>Vb-pjDL-%,\Yp5.l?)gpXZk['s+>=F%JuLT8oRnmG;Id4Ri&"_N98tQbH#9G'%^GUMb=>0:5\J-L!_R8U38"^BX8.l&Ju/&Nrd5
%>kcb*O0g#1n.8eW6S5+L"5),f_GEng61Wo>j,u1r:R^i7A]')$;83mR3jrk7@u$Ihe>")%I4l&g*"nXVPhoUl-\F^S*WihOoOOn+
%1OTqPD%seYTXf/7d:s;hL+'j'ArHu<:$agSO=IBRJ?H&Gb2ZDQJo(:r0`)dh740t.<]q-%J9OH/C:j>MlR>etJg9o.-q<=]G]2Xo
%#.R\sR@aETkoTs5fZrq+jF$a^f*'HO3%@uIEb(Vr.GM%gEe#LH8+:%r\N\&<AWUQRK=[$L6r1/V\q+#<k`i?^b<B&gT#m(l*o^*N
%@USM):j7ispa>*%KBL%Xkaer+\\KjZU3[!Zm^.9m4NJk;C#CGDn;9%s"7YY"(m5'b0.kXn&m$q*E%Z0lcjMsQH._)sLFL"q!"KeM
%?Vl;C>Nr"8`#14DEYUl4THssaLZ8S]36'QW%Y@\jgU4KT1*[uZ-Yof%W!LB3_=3$I`><J#?fjlu)ik+W=0UcV%s)q8Wl-n-hHA93
%f:m29fX@!\!L@4",dnIZk+>uq?gnheJJA\]'i7MTi@O*d#VL6";Y/pL-lsUl2rCI)+4ti7Y5(Ok#,?US3+`>/J6RF%/1-"CWBM@D
%&(D<?2+]L>OgQG1(e%"m05'O3FOq5Bj"Ca.FMTq]8'9"O2^(BF1hfZ0e1.WhT[#SRCD-$bm4/%_L)(&Tg,A7<G(lE*<i>qEW(cjT
%YtN#r5BImQ`:5in:_,[YHc7=+Z:'67X9*J.\O<jd$lhI;47pZN+B]u>MGK9elj)^>P,>C(,S5N\I(-oM3!'IrR7]gg];g8a@Q'^$
%?5.[-I1Y<AMG!17[nUq;Ur+A]<_b)ULQ;gbX9'\R5KGl"ocdJ"7SRu!9[?cKiZFNPo,4gE)QuHO-ki00]uj,4'S)\P*q,=25#bs1
%?^oE]*""b_Bl,EirPf8$2U%!Z.(7V`PZ<Pq@WlptiYt_qe0;sm<fp1fpcS;$V`m]E'hX'c@];4K`Q=u2A!),OfWR^bJ^;W<!5#hm
%[Bqn1.rW/RDN;/_Tnde6ii;'GTlb<\b`r0D<!a;r6bI4>'rJ0QQsH9.0DNO`T?V4aZ!1eko.%0Li2M%78Ra<KQ-_IgCV0Ere[h]S
%*uFWR,qu,**.$r/B&_^#p+H$d;#J<,^hB^];FDGtDu%)KG(B\Y=dB(D,F[>VES?O#%(Xh6Q@+5C>BiH5-]Kh9%"_pVQ!_SWoAd4:
%%>,5LfIogA=tb,a%S--`b"%<EWnaR',QW())_]HMME:r2[56gflnRMHT>N+tSGr/l$LQ^jXq&CnL[MhCE>\X4q#pis"2?i:7[)lk
%>F@<9qfMV-fQAU_GU;J]0I96h[n$5'2rUlQBL0KVEA!7tb0!h9X9osdBY(?g$B.THmV(R#-I<nlQ<l.U/`Z[_X#sF?F%%Ul-aV(I
%qf?e._=/bTa#dl$0NfgnNs/c9l;WNEU+5!p&6)kKM9Zo/_b%W2I^cQHO<b@\dbT*>^/E$F;a:asV?4nK?83/bo>cU1EciLGgFLEQ
%l7AUi@^HGo(D8?#eM>HC&53h-n&Nl\"*"iP@rDuT)f'`"%L<9h/9@'"]Bk-OX97hH.\8W[$,'3LiG[>qAG0IiSQ"'<W+37P]@=s<
%R\r>e"i=&XLngDRmr,::nqJU%AV/'h#cc%[g7uQEXCMP)rHL@bR0D5smYB(E)7N\[^\LtiUUP/=fs''7%a.08N3--o,,g_.=4=;M
%5RK?TC2q%B7pXoDn_mBPl"do:bt=u"66mU%BhoTJ(E#J@J/P0#R!KYR7D6JoB+\nP*-DqnS^a;H+Sd)Aj^Xk:!R.;\2G+TtJ)0pK
%N7W>>`-ZG!M=pD]CIefq-=b_l9FB?2M9"?l0#BGsNr3BjHF/KhaYX(B6/;GDBPZ5uhA^p-.1L)kNK.0bIsqnV&]fi`2]5nV7/>f"
%P;I)$3f"t6m3AYo&ERNp0G35,4HNANq9$8eM'%9(Bn7_[?*'L2WK+q`-Doo+\mlb5-97CtlCOX;e:k#,,P:@ooTTi>VVqA,P+XRu
%ckYA?J\*Hcf[24M3cD(O'U>8r(RXM*m.Xe2X\PdPa*R?RR>b"\:P%EH^HRAKQfG)uYD5>sNMBK&Tj%M\'iQcsh<R4SYsM&VXCbGW
%+/aurZ;;A%VPTD-k<s1,Wd7l'_dq/km]@6T4D'pNU<f!,,L<PreY@DjC,cgWe$EI!.buM/9SfYQHmBC.FZ\3=A0%ibL[D?-,g$!L
%h*%'u9FrGkWKndV2NUjK[$h)[?EY"9#43.qmoJX?A*6`o9</R)e\)@02gc3NXI",tr(bj-cYNbSW4NYl;/40;#A7(K(bC=tlf,i+
%o0:6a.M@9hh5a=Dp(?SH>B8e8hnU1>QSFb,[<]?N\sdN_;d0JrR(YaV]Feu-ht'\U4U7#0CQH1DhFFcH^U/Y)meE(8-)L49ERM=0
%^1Q-7WLD8Hh)?l+6TlJKjTqJ'IIWO9,f$S*Nlu1Y@["Ls[g0R8<JDqO55gX5X%f-n<V-4AQe]cUis;>Bc!J=Wppj5?(F!h;n[d6V
%ap32@O3,gqoI6b?ku)Fo(F*3f*N8ePcqZ<*T_O">5R(.g0b*AP26Wh+:u)AM.X`lF;o[$-HQutiEO$_fZk$>#BIZ6U>)A_Al,e<P
%;b._(P0gV;"Umg/0#o%`AoWa9jpKhB$5oKCA#_d'ec./Q3eU+LMqsmT.3LL1M"Gehcs;-^fVQXq=bnigS?`h?!Y%LeTpVh-Z:IdS
%lPG+Km&<_dSK6q*=`+F1YUm50kaS&m^hQdg[qOsXrD@oNFLV2Ba+&s21:A$*bFX7sE>1,K3h<^U7':&S7>IeEO3XG&WqKNIM`p1t
%#+3<A1b$.`Wu>,2$u:t9!F.LEeXghZfrYk#4UL=(--6L.re;>"aF?`A=JSM?Dbnd>@_*fcTpeW95hi*!,`.PMQ]Ql,`mV_<+;ILq
%RV^Al^DAGUbJp*h\7lO>VY]3Tb(TEGT^:oc07b9[\N((\_FFBW,HaB+Fe---_GYqEIc8.;r8eNNpt1.us-mIb1>"$R[)qPjfMJ<^
%XsMV!blMtKf)/\qD%aIVBT<)L_4JZ/:L@`cQ,75Fps^iXKTXAh!)U(k*-Tp>?"P-^fdnm(D507$Md'[9)Mm!>5Wb9VNnBQHk.<BL
%oi7_fbrU/\.5WZn,P>&[g)]N4K7t8JSaPM@RO=6aS`5@baPmk!8p]*n<2S^!Fqb@G[oH'D.O^<a1:AA"+2WXY)GY=Ws0-=0Fr&q0
%1!>,p,c^HR-<CZarD^jg]BOEbW4@$H;h&N#l7bL[B$*m@q(5s$C?6S4:6H5h_-#HH[.n^V&]T4*V+nVN+C(3!6eYF]mc*j5R$Y]5
%"i>BqVkciQnCfJB:.t!u9jH=)8McsN<PQJu3R$^p6_A][Wj`[(!B;I9MoG5nbnY6?C62`g1#%j.m//PQD/m=RS4Nd6DE+3a2[3Mt
%Vq'j$I@lq):AsrF_r*T8?Cg#o'::77dg2?$/A\;Y57aE60Mr2&:D1UX[>-W]46u?t7!A;IN(Q89VS)4u`@W@.o6>QD.XmIJnIo1:
%*VXFEfe2MiJ9)JP/L9+da..!2cHjhKe$b/\bW\q3-ecXGj?#(.kT*f1GrtCW&mj10&oV$c82Mq@&cgUt%+\8@('<i_abnq6l=,(<
%k4\32jLF#6^r,Nd4ALc"<c]\aE9X-=En%JS,Lel8pIcmhU^M(HD]@kKi@;Zllc7:'.cT0&(I^C)S&'7Q,DDa]15$9_pB6Z-R2sqQ
%7[(S\VW^s:!I;q%*0F:i9*''@4Yj;hZU$H6-5d!$@k(TTDY0qr(7@MNehDP3V<^usYeX0,+?[#hU:aiZ73H_&L!e4aoRdoK&'pHr
%XZm$.U(iCt',7(SmUCbGl+`u&K@HM>c4L#/pb1M+P'8(-$\9tu.BmjZZ;>g(4Mn'E;#EYJ9W1rmB*@]8"82r(W3dP+Lg4J_heXp9
%[\Fm*3GSQCj1C(+T>^K+1h(+ZrX_!Nl[p3r:YBP#2bZs`Bh%>%nGe[J8J7W5GRdnRCQloHn<j+dW/n#m#kco9kS.4RXK%1"q=,IK
%QL>3,RI+A9i^j\U4dQ?ljCWmC<j+Fs2b3h8.Ge4V;a2$[j+50#mX't$1H7gf:IYg)YY@Y!0Ulus[l7A`7O'V#?%t#_%LI<N]$La`
%-U,*e<V&W_J6b5DC[F8D/B_U&r*BHD?!S+#c#:]KOC:]kiNO9=kSehVi3t8n#5156Jc"ZL@P0QS!9iT:-P#+u6TYHo<2L'.5D]#V
%e4Wg-0eG^F-%q;ir<i<T\d,URS,uX5nV:>B"<+FZ,)sC?$o$ZjQ9;YaTF)r_^Z^.6Osb%]I1tP`MV$>4eaf;BRD/r))_2hl/S[FK
%/#E?/pf@G<.4ms1?e-cma0q-9"q"Nbh285)FMiB:@?MqD5p+@t+/BtOZ9dRr#6JBa$V6Vh'u)aGF6[4,7rZ29-K(L?"_Ms/^moi^
%-ulu?%gWY4m5>4t9Q&linSlt\Q0,Hin,ntC5b!&&o*Hsap6dO9P"8(K;qAf;BPZP_8C^NA0pW*H3<H-jCm-[0`P^n;`hkf2Vaqr_
%$a9PQHMY*?pkkafC*L8+C7t!%!0;YR#-,>72ORf[;'Sp22iZuEO7ka!H9rEmleU4A9*5HXfE:UceuqeGY"N*AEDKP7FHYrJ((:aA
%6K_!RI)Mp6q>"N#T'cg37f>.7J6%Q'q>8bLPVQ&L%j/MT5b5TGf+8pTb&PNCrGWm!m&r1lFerqFgh/:f%^5kk>$c3Pip9`WDr?Fl
%QS%]paoejuKtkVA\fuUeX1j2&I4U#p!1puXs._fV+QjHbl^UfpMh27ia8o/#bF0,>+D#Bt&'HaTWq7g?4\9Tf:0BNGd;(no,9VA7
%=b%qA,u/ef61(E.4d9ba>^i]/OuG+#035WQkYfs"frC]'3ginOBe"pi_njAEKCSd):M&VmbD+be?q?SBYjH_MAqrO-bF$KReS.8^
%8ZfP4MJ!I1;#0k/fdijt:<`c=:T)o.Jk@M?8i!8@ja,/]N4t0TQ)'Y_dg1d+l/'u)qa+62W^]LcT+K_R-pZ3$h.1m@A!]F]136Z_
%B`lJc.b&8+M:c&a.PMQsNEk@r89%b.!LI?b;"ZML'(IkW1kUNl<KC&7-TsDGJ!0'<-CHk1kPo(HeNDiUAn1NF,r^$:Ce=9#n,r18
%P'qt_kc'$JEQC,"roTu57tS?dXg-Ed=V<G.C'^QMg&4=C^5hjW=Cs2tTf_"6CfRGU449$s%]Fe>T%FfsX_OAs`2AR,X\Mpf8dtfG
%l:oV5E:k-Gej:j>e_!,bPkiia$oa/E?"RGL]SEdrkQ=!'.EFQ@<PPuSMC+2#?2Hd-I["BHCNVAc2dEDo?QX$NSm!eBWpo`A(BH3r
%C#65V-8b2hF;[O7DZofte"W-`-9D+W>9RX*J:5ufi&Z)m4C*)d9#=],n*0fYo[kpU0$2C9*Hisjhk+iUDB9FjX+7M,mN1Et-dDBi
%d'Ig&l*n%r+uWqWbb]N#GJSkcK/S;cr@0l?r+8pOK\*\:?$g\5i^5#g)Lp<YS9.A]TH"VhVE0g8Vfj=92tRe#\XGXts-=H!S#W5*
%&-9mUPc3q)qPWgsFu]-?UG/",[XNf6YRA\R7S(3:ick)T!pe>BROenj,ud*A8:&gbI7b2Tf;_c03+Na%C\Kp+qXMUQpa&ef\Jd?1
%IX^,a&i*OO\:hu%+Il06"=63)&?_-\Ie!Pu/X8:'LP^XXC9h@/4G_c@!#O1=":jUULpMTUIh/TC+Hd!/0j8H5[M;>njr,Dq+B\C#
%&N8sjF>757IsMC88olnm56d;a2!er$=YSo-;\urc'ECboR34LI!K%H_"!U>%/HRUTVKM:b:'m!c#R%c(Cc?-llUhk?r&2Eo.3P_W
%.BmJk,NP=1lN[S/aTulEXU1?n0'Uh2b0,W=q">5ZTq2h\bh0`'EDTL'SDC3_Vun)L4KgY:l@Y#s);3DgRB+-%*=SK9*e5hSi;m&u
%95q!"!D_715i$:>]j\6\Sf);eVDaNIIH%EYN`]oEhab<s^gNlb1Oi*@*(UD[kMU&#M=po<&F0),k@MjQ.^LNbg3PqqRZLd!OIRBM
%g4cYaJ[!>UFN#8?12R;pPt=Y9c/=qO,fBW`duM+j/0DU9"?ES_diGfarbr7Z]0DQas'r]VoRJ#]eGs\Qj]SUe&a6MO<KhgrS679g
%I.lTYVh1*`MA@cm_#.5*L\VE_`U+-[i%&(PriH3^)6O#?YGKff<+cKr<,HlO!iHB#rbK>06N9n-%oN<+</+8rVSGFGXQ'H[fTgr7
%GMRGL"USe7hZl[M0WOl2<*!EYEDsaB0Xb7'7JJLLC#[c'5@>s$.Zj5U*tV*%LB/5SO'4&Q0ni"QZN8?;JrA_khRCl=Q^$.Ig0q<:
%5,L=_,\7r1aI4blmK0*WVRmjek<CpfIaqAiZp6i,/D]QK\IY=W,/s/K*Z%>C*;t3X+JiPaUt4Q8X&Y<j6XBS%[Gk`ZBCmpGiGNlC
%G_t@)f<6JuocK:O<&KA\5j-1o-9Xb&)-_20`.M#q_L#R9a]q/O/\VNN&$.W(kao>Tm&!@l':CAlJ[-O@QrUg`(eLg@_.=\'%h?ds
%&*"ZR7g&n+r!ANSOl0g7n,rC1C/UkuK9O/&I.9H>a9Mih@SC-&2r`kTU+Wkj8;8tH!?M8o&&]j<'L(G4e'$p^j.@0=67lsk)b\r5
%#@@u9C1+sn5\1$:l+FESQGs&u&Xgu;(_rMaHq1pF".T#e6GU6?_bT(?VW;OkrBYIb1YAKAXWKX'ksfCVk:qrE&8bqa!YQ7eBmI39
%J@MCA4^2$1.9;Y$6:6-ai(5Tb;</1384R$jCpT6^%o7eY=*(o;g!lRA<]=eCU:Oga,<QMC,UPNW^%1)+&4sriMoX$HM6`,ll?h=-
%>9_.GJ47/V6S\aofq+$\F*Rab2=&k]S&+-:U;uamKDKbQ8gI(%Zlpu#@d+Aa)VJ:Kb^j`A36;K#hu6;8PN9F8Jj]$N]t[p=O;,tT
%G>,kl9M:Qn`*,RPAP9Z:[&S?YV9\2<,"V.<)?Clu<rnf^oSJdk-bKr*;4Ul[T_Oq&iKl9G%6G7tpjcnJ("foWi?g1Wf2CKC8qIQm
%Wge>CFRe)G,!\tFk^<KE77>Q@A(nq4CBP94n1MdC7T,+uG$=:KE<"[9lQHOjQRqOGRNHWuU9m^#qa@NKrJ8-k[eBkJ1cF.eL]AV.
%/c>R]Cdo`RAF^cg.Bh-R#*"\CP7V7gGIXK<V$^C7i9nF!q>ha?WD@'a'>]*j@Nk@\Z0eELaG]mper(0ebAQH&*;:0"8Oe=.fr\6^
%$G<J6IVcmgf#;Kfl2d0s#eKe?oaXa^;sMN.\dOJtbpTX,am^kX"At&\oLYf364K/YjRdNK,1k`Y#f,h+cR_pVLF*#NF8(!lah([=
%%_?)QppN@GknT6q6YAW*1e1NPE"'n,d8IJL+d"*[0U0n!pINaYXK7,b-TgGm/QSYGrZ&ZXfJ6[?$]Ymb@ur^E8#pc&b".,"lF`bl
%3Sh]4K4=[eD%^J,V*Z,)c9.?$6HQPF[7!f.pS@t):QTQ./KfP<>u9=(7prW%`F*m;.SdCXC2W3t1P=])hAAcp_@c8hp\NGOZBQ89
%R1E"27MddI3/@D4U%BY6##nOefEu]okUmJ[)XX[A-9Ir5:j:IqAFa7H=+dSL"KmXJ!<o"iH6T/65l-4thVOB)D[(E2jTn1b;)KK\
%J'&bM%>oIBB9oTI`1qm*@/B*,lUcS)OEroufN`i&8--$OliZ7#+D&kBEO,j?2=tm=A.]bf":iXTF#l.MoFSg(ebLDNPZtH\huVbD
%qc,HXo%jl[>2H[MfK<DA:ca=s<i#2Va$+VeG&mt`"S%_9I*o;Hn8%ac*FEQN^0YpC@nN,f+VZAu7kh)9!!.VT=e?tu<VUrcE,CSQ
%g%bi]0ner.J%n`agXe,06oM50jS@6^8REA#/?`8;Ceu>tdm&#1f0Q?Ub;74#l-G4`gF_'__9:O#G&:5%93RiM\$]DtHg`WF7CT$W
%rP5/uBiCKb=N"/9$dD-/r1:XinI44G]"%.qMgO($6kL%edj0'QUILX$id[U8G#hnM/Hc7_]BM/R<[`(@r1O47"e1m3Hlu!5?.\4%
%p&-[AlH.=c0J`A!*ldL8E8SQh;qQ!V*k(7cGW=;BT\?J+S#LO#hDLi-?kL%/lB5AY(^fsQNK_QK$`X2Jl]_<-382u](j/BKZF?sE
%-=OR%9`Ph@q<#eAl%E?Nkib)u;-K(Q"4f/9?8ssEkkDP8B^X7K0qh*)WWh`to@2H?o9d(%9YCY#mQKl)U>8FK)O8Ueb1-I^#m28D
%//F#h?e8\(e"dpjmQ4uH7%^jl2B<<lH_;HIDgD[[S],L]11SIR5U4G&-4%Tu4^7RUqB"!JTd'p0A9n"j+g,u",[sV\@)a+Q=-0H+
%jpa9#.?KM;^HB@AI1U.qf<pK-!ZJo:JSq.-f<9@YqKn<tC?7B40mEn$JQ74T[6@D^HY\;&,Mi^>4hM<rPT7mA!DKp$C=m$0@k#++
%57^8T;uN(a69ApB-?rE='KPeia##;M$9h%-$?eST/V-G!MMefV]2f!7kYo)T(@K`Ye]:q*I3<b0a0=VPM5`E.?#\alVaqO#$;tX*
%3$j#+R8QlY`(F*_)tFgK#75__`[\t[^c_TTHS8o/5]gr^l`eidiR"5f*K)e-cZ_L1O!*9&As^'*[2j8hGZg##YZ+sh_IQF9K9,$^
%6V``#c_!u6]ZDU,B?30hW*lTt#4P?@C7#LP2GRNtCsi95+<KY@K#A7egkMcSI[8FLHF-f'K8p"<EW-MUkF"6"RU#ZL=/WF_qg2At
%Idj552_XS[Lc4!&__62=HFIg=odAX_eAsuK_'PVi;3q]f9r`Ol!ef>u?+B<t9gc.&)c#f*GQVI[-Ph\(+M0&$#Vm3i>JU!,70)*r
%*"B]*b;Pt=:DV*OjTBRRhr3kub(23#F0XfmNNbMH^(`..QJE8pj?C!:2qN!B;kSlT6#gIUl7m(-U'>,6E#-Z(0YMH$TpolmX$E)h
%!,m?GJW@6#CVD/l?+f#MoBQ6l0B.TDVAgWN5-DlU3,I/DYk%ms]DkfB:=E:!>W5f@5allopDmsl>MW5,k[puoR(Xoc5`6:8V8]j2
%j\?A'f1UMXp"Kc0H]X%%nJ1^[lof)c:al^`?#'kWl&P@@cc^AsEC[,$*Hk`D\Xm5oTDM+VSh7I_G8&G3!fdu^9&e:Rs7."'[WqI:
%`0P8cMt?3AL=%GJb/6cNT$<MHgts/]P?d+"&*4V<?S>#dHpEq=b$7;8N2D.&fj?X+=dL(MgOoAI,&@t<rIB]]l$PiaLmB9Qa[]_,
%E$..`iCR'F2"Is+L=hUf"a<@M%Q(19l4LhueqQuSeEI9-liOf@ndt"%)?Cl(nT=l?KhWW3h:j^Nf)'%u`\?B0cih-=\Vf#IJPEFd
%6XU(g'3EdD,m$!9G)!_mTb:+NaAC[gU_25-$cB.gs&d`I\gM6N[+h;,9D\j\NLg5C^*K.Y+-5kD0mf$=d9&XPkQpNc#Pio52g/6A
%9Gq3lLn9],$K4`s.3rr1f`2okef4,k*c$lF^KN>LW"l3W\^4.H95'k.&V+*/B[Kr[c<rTuQ]$9ENa:9?h;D1Hb;"l$YAQ!Lo)J*=
%aRO]s>nW;'j3li'nii82.>5mJcFk?9CV9ruf_R<da7.F"g$@YBg^1fno`8s7Cu;IU_Nu5bY,=NS-[q%L1B>G'G(TVBa$cX,4U%(T
%F?W2'W\4dss2>-K9OVZ%4gF0q"3f5/$`(P2@+!BV%>I>k$h2:2B^n?okZP/&S`NR*K6nO1TqfqRZe`m4\h]4'c;hNH?[df)oGd8T
%D]QM%"\sNoC^TYTJ.,I=*`u)CeH4Xu(=S6]6&]5'jO'P'UW^VlMIQDIAagsmnXB=NC%kVHCj=dBmVAou)"2be2`^I1\'G:73jJl_
%,m$&+-PGsbr,Q3;Of8kQ^LtQlNZ[UcN0HipoAbHq#j3'Zn)nP(o!k<@YZ.@)r<)5UhEnGk:+(7?f6o'45]Cj1JuE/qA5"ic5/\jZ
%Bq;gp:LUM;f13F;VrE[(6Fb/>!bY)i^mK6X\(,,?a#X`Ilh_`ui4R;:;"RAI\1ma7me9BKIW&Ys\m<H'#hs:EI;<i)N4O&UrV`8L
%e?QWXl_S^jS*^"'(Wf-+):S?iI6!CH?"J3*78''Y3dSDW-#[dIj&fYL?,28tcrqE#,_+7ZTAgF#]ZNK0j48TnnOsGn$bL\ua(l">
%30#j<,r4^DgurYZEn8_Gf.4W'2f*+f(KZJq8)SA6PM;YS,,V>o7rZN[@'nW$H=q,71J(Ro*9OK"7ejJ%FiUKa+um(+[B1PXJ*Y'%
%__9U99Ri=sS3I.s\M_772/F!lkc&o-^k=e1#7:P8@OR&fQ.WWaWM!a1PlJ`]C[J67'(>hsETI0H6S\d3aT@"NWTdc9k-,Gacoff\
%!Z/r9EQ%q?9&3Nu<:?uLNRdd8E"V!f"IYh`hNV>#r#6[Li0Kbj%5>87EY.:"oX/P,\lPW`=Lbu)a"*)k4)5sqP@@X%It'Wr)1sW%
%^L$J*PS]239@p(2B`LALk)TZ$&fMJ^CKcY;5IS$2=LYSpn(imIHTIBV3B8.M#`?)0+nhl/aB8*e][MRmP4o\N(ubg?JF*CoLQD8/
%0(Zmk.].L%\9VD5SVn@;n67t40&.0P!P@f_T0ch)-Ls]IS/$:Y#V.S4pA&mD_.XRXKI3S5BY]t5i$jQCH!u-kg]?Vk'04gV4"g`W
%GK"+Hk)g'>O6S*MZV57<BM0@KJJrQP-l%R!W>ne+K()=&N)TXN</=aBP,QY=6"[S]]!-:UQ%\K\#kFM]A8/3!>tP&('LO?;7!,[.
%#)Tgd3Ya=h*kJ&@!`opA`!)(F?l"mI#=SSX<'$8+@RUOL`Qcj7[I[V->@_c<>N;C=hDNA<+m!f=d"hCe1qgpf_9rSTC/>$b&SgmR
%@"6`;S;q_"(YAF);;!Y3ZnJ+#`6mIn@YitrC/=n\GDr[<egCJ<U"K3l]1!6F^dqQ'BXi)8,G=;=Q)TCAQChqS!sXFE(pH4A71bg%
%3;"I@WiI"f5*nJ<nj,e?_&CWE$:62kDuF&LaE?AAif_G$T^uTSO;inE>=fIMbV6KV&FnA+/2a@5Kd3%/Kr#S`@36%Zfa;,2SFf0+
%%TH*(#^CR4&P4d*7EZ3HlCQZ)VB,eZh-6]h.3UGOiJ2X.`/_R&7:/$\Gqko7$f_I1T0=Cs9W:QnbJX<P15SJbR4Zq20M?I;=73gf
%'QVf1q*eAebP=faZH3S+r'!H$<OAtVLVue$L7!'/'3r<IpQ4U^)L"Q)8RRTO>&9Eg'&56'$+BI^5WZiO=3U%%4cg[C4GD8%fN`l-
%(i-j++.5AZWT^AqTW'f$7lXM"K3D)_/E]o:3[_/bR8Fh78t+g)@LRH)";V0ATZ5CrL9_3YW"T,TG*NIRXR)X%U2W=5dLhf0"Ab@=
%Ta;k4\>hrL"jsEh3_jUTY`1M*#b8"U.X,1C^l>`?@;clo+oCJ)ef<f0Dc+N;?UJG-,H<4CCIu'j[=9#%@gh6&%1ouQ(fd9G?].pV
%hSf5bH26P19'(`Ag"ltIC/7HF]%"2bEa3%n^ZN+0n2^KUI1%GmF1<8+D-Kk%lug,T%mc5V[G8lkYmnhm5@g1]8l"CBnBaH+S!9RV
%f:aPrqtI&aNm,!7feoW#JCis@;4njU>cG3?WKGkW$M3dW`njaGhd=?#V]`W)9pZ612J[Y5s31Da1een<#ubq%#"o[C299'2f-_'C
%dcGSL(:S`Fna$,e)(h`N'&`kXfei7@#ReUAOWRb0gBm7\<?OP6>K(rn2<E?He5giFl6a+9,BR`3V^t[1QnG"F&9-%9]6q$(>-I7l
%aPD!M63k-JBAdFW=G1*DCP5Ns*eqi\L94+O`''/<J2N^nEWMV)aT=qBk>dcQYiA+r-jhoeH?Ys.,M86q.',ig,*B66Jf5a_.ULa(
%.D+10mOSj=XmG7@SH]jg3l[,mkG'ubgtY]oif:&=$aPeXf5Wme`;k[hU2X)&J:W:*e/M#LTPbqD^(K)5h)HiC2=-S+#R-qn%kHLC
%JQWMgWLc_$7/++:DG=OaYsWKbe\i/>N&QIWA(SM\?UtqAS-%GS*@GS6R^-k1J@UsXiuFL$D0StC4.``JkS*OC0TZ6]CN;.MJ9@Dq
%LOYn'+8K<:UHH,89t1r-CQf3scACLtCJ.l6c(jcRpd$PG,,E$ZD,5_+Xo$^c8;'73U?^eEj4Cn^Wo"Tm@Q5Q7FPoR=<n^=oKNRbo
%1@;q7klWQ>VMae9<k\QM-Roui.\MnPeNBnlK<;%)Y1tG7*>V[/O<<]b#+KPs/gg:oCOGFE"c6"/Q1R%'_d_NGMIjZ_pBXk=MAlc+
%T?A$$R(u+GSdeb:2`TVa6+lqu+^(16`+F5AA<QDFQ/*Np@N&HJT+i3K*;dOZOGFN/*2\FA46tYCdc5lIPil6qbijbQ_kRVtHfn[^
%=KEW!.W=p(N8C*S>8qJj;t%D&+H57!GR/p3=9V..i]Dp@lXKKSl/L6*h(ibM"R]30(oM0jWkN3*/u`qn]o-6hdJ8mO9]8.:7jNr^
%[fPiX+R"=-F,8!9ktE@C$k-Pl$U(oRTTZW,d=?/G)8O>s6u].C**J:8iBmRTjg@n2J(flV'!Xsg:=rUgrdd5?j\=lB;U#Cr[561u
%F0/28&#rY+jp#$BU_&js(P?<kKf=^#;!:f.9!gnFE"35O&jOlM0si!aQ=BJC_1jkUL%$NkVnc]Qf^KqE,[c_EML^Df*0j-4g.*NN
%PHksSWul4X7r!C(BQYol_hB\/)kc,7\TJR1Y6T6I+f=Ml<EUWVV@q\_]s4Y6!HbuP!`iF-Rp.>qrghb1RZbt>i&419I'G;/'AQr@
%&1%&QSbiSh9q,41"N3CeW#m9a)d\J%"!#LU16FS!?4&BV1g"q.riTI%'Uo6W4CO'1,?q\Jn7u9(T.eWUT(a"FlKX#5f_>d@TpNrg
%D2t9F7\tT<`<&qZcI;Q!NB4l;dic^j+De.T;U<%[2aB96]>3oTVq0l$S`)81;B%b[WYf<Aa<X9/oCP('m]MTOl[n%kF$)anq!m-R
%CVKlo7\*D9"VS=g%dhp<KgHeKk^bs`&rJ(R9&b`mduWH/I\cj%UBAi*2A<p.C]osRogPK*"&BX4>o0hF>K:bGFQ;:YGFuu_,X]?6
%985+mZ%tC@:8Vdp8rcoH`3,P(ke&BQVImlL4m=Scoh<^Bkg-kU5tF]lp$6Eo&<<71#)Ji%[M=gUecfAa0KE^WrU$0OP_ls$g;n=X
%I7D'j*QoE$3Xu7$dFPJA^"[O-I!`GLaF!kW,It)O%U`<X(VHaTb0X&-$@X&lh)Nk`?4''5c*7"_LTU1nnuZ7?J`5:S$9SfI^A,4O
%K0V,(ka5XV`MNaBU)M,hlJtp"h-bJ&gLmY#p'kWkZ6;,]7mP5$h?==p4fZp_R+R-B<um*9UBVa\`CPe)8XS;2Nd>4L'qFPg!XY9d
%h5/aHW)gAQ)h/Pcl$0kkJ-0\Ngs;B_4Z!kkgMsk=_4XLcFd0[[#.;H,^oPFa%(0I4if?qp%&W`'1?6Is7aYg:[t5QW4F6)_h>"Eh
%]/%6I\O=M#X6-9FY#kWd7D'@"4_fNm==(@7!p(N`lh?*7,i7X<Ko:O1_k^_=9*l>&CKe8mHRYgW7FhA0"g8D3(<Us7i11l'88;ra
%8d^#iA%PY!R+f'1].rqUcYL%i#P(4C?,b(R(!>L4%6@SoYB0S_cE_aM]"C,70Wpn#!G[?6/rs:4,Bs?nI$j/)YT`*./\.YO$P1N_
%Q8?*Nh$XEY7Q/.nh>.VS*OArU>hQ/nN6PMOM)i7QcQ_I$SC]fSf(\ea6AA3c\TWDMnX#040.:,m-r=2Ri+[99d6BN']nIV5[5-OU
%*(%XN9Z1GQS#b'F1M^ofC)MTtC'@(7;mn0H5>r=Md^QCjV(q^rh7:'</h";OhtGp^#SLs\?8`WVWZ$?^gdAuuI\lPGU&nHM\d-.T
%'H86WYc!E-%5)Vj5j9MknUJ^:@`#0,#[#bME(t1mLepd59AhP<FX=FsCP3;seA[?*KuaT\p.15n4GW>A1dBVJ'nG1A3",$EC[95H
%f(boRQSHoLe-nM_kOMPBKg?jOIbZ_Gfprg*5';IT4d-C"[]C?'Q>WC!3cil3;+=Qfi<l4:+loSnF4sC$E"nD73P:@ISliL.S+Q2-
%6>`fp/aU%cZ)6f*5AaBSaM%MGfJ_Wf_hAFiJ,c-UVlpU)-2WeVIVnPZSH#qarg,\:s!64k:Z80>!ku:c&pn?8#8D83G5,^X_BFb'
%?[T0/%RX,*r&No$s$a/3==$=tOej^FEERlh8Feu6-i^s@cMW/@2?,*bc6JaI_fV,9H;4T1UnWec5*!ciCs/p(SR:eW1MVYHKnRGE
%2a0l&'ud].?Yc6"ln9S1"bZf>e[)`Z!0(2!0=%r%Ht8rN5qGX^$Wa_++[]^TUW!2)_Bh68kqWQ9+JL<1nk$FeAl5EMQ:HI5`VJTr
%-s^K<6<p<I4U%!VSR?pL[$'caC0t._QpGWgen(;=fKhO*^g%&_.`DL<<HW(f$d`]GCXbN5(B4%qW:e%;<?1CaD44B2.+mOb++BQ5
%K['K%ORae!`\)Y`"U]X7SsWpU)jB:H?T=A)ls&s'jZ]THC/fqIs*,3b!W55BpRf<lq;jko:"`c6:eN+0$`R@Pp:k>A`ia*4Rh2Q#
%(BlQ.qerdL\$,6+_b.gjI]%=#JcD_JbN00DFc-eWfkE"_)W8)_Q41-nA;)3E:EbiPE0S+P9u9/@oV/n-p5g2L04#=t6g:`:kbLud
%_PW1U<4ZT4)QB&=I^ZF#GLa(/`:g.n@$+%ORdT'FnF2E8BAJ2/O"dTq^Ad^Q]_DGu!o!YkcdEF9E.RLa1[QB,Yq>o_Jh&D@"ec$R
%S1g@0lIr4\#@^hDN7.3e-IZ,1O'4ja[&[t$CC:^,QbF"=@K-;6YHN1ILVi$li'-u(HR-W/h^$""$(UYsp2-Wcm^JkpepmVf.Ja(?
%KsiKco@`*MI'+"HO><49J:Q&QRp*VT&sNn&J4HFl,&Wh@,GWp_rnAZRFmXf[n7LtFa_dC&g"R`"!"(9TfONTA*3r6>DC:f+#j.rW
%%PY_gO1p=_.'N-V5V)L35dZ+9=ePR#4QUBU?7M]NGT#mVDm?VAdA\-2k7A*Fe=jclU/L"^#$6EPK0TkSqBnJ)8r%Pu%9=;?a-ujP
%Or=>S*Uj.APZ/Ar"ZE"bp&RNpDLq,B.HTWilk&[(G0?)Vq(sS<hM^="rl#+IM!`^uf@lo?*'$$hfS9Mq.<%p_Q=,M:-G\g_G4U8\
%3@qu!_4_I,5tWV8%[X1(!\)p_3D`A)WR3t])GB8rG*<4F]^/K?W,u[FqS4.)iUF6RI09fKf?sG`XNoH"cXlGq<,3*f!!K`91I.m9
%(GGF8F1MW-D(^N8<a5P;pc+`.c[juH_\/n\CRQl!$'o;F\g!@7JD`VfNuW_PPUg>V`-oSG(8Rs#9'olF^1oZ_M4T&Pp>>Aj:honF
%:E%=V3<HYP`r&S!lN?;Xesf+K'26GPCM_HpW<!R+@U(NnF7DNt>YVDb7GWpTZtYAN%g^5)N_*`T!%?!EQ')7(SiGE_FQF7VPc+:U
%J90YYBf)M-7[@SF]2c_qfgW82X]-P_P!<D+#um/E<CBes3D\Q%3$P(`8YeO,b&K(e>=#qF$\.suB^_lI^6QJVEum\O_.m(AN6&l;
%I>)r"=)-aSF7g7;K%\G'Mq;P<%q)X11tb9t!BM'Ir=JL9d*3']]1#s,0lCa6JW'm%!ur#s'IKqk*D&`b.AD6X/m".TPna_+EFA#/
%j)&"84W3dZ>0Y]MWZJ-:oTC^HA_?nDQ#5&ninJ1iL?%Bq<sE#<$*@^^L``!kHL$N9Ta5\dCW0=1=:g/i5*'nA`:2X8J1+"VU?sR?
%3tsOJm#\/7^B.X)gE27G\+T]iPSsmb.'\kp(Fp($E1I&q"i`0D:F1BcV9sGM_;BSkDm)P75-ZLV%jk8/LXT[#'nqd;>MEFRE^8M7
%bJS]CiB[a=A4YhpGt0G3On=;;?V9j.Fg\o**5\28[?-WV>mqRR[uprL!']n</<Eo,.KUC(Z+[f3KBJT5:aqe)$s5BXKMa,BC*FYm
%NLT#2S^Q't:isd4YTPIK.M1F?0/DSjS=U?Z8bmi7'CgR,XZkYWP6Ja>Nd%V%V?,%ma3\+e.'od)Cu95\7FqNFanf@N8osm]E$FaV
%.tMih$d9,`Qe\$0"p1k?1NdH2]5iJ[AEfUR<J(O,2*$'0?hI=t>g9M`i)=&7ir!sp[^$S_Lp\/Qpjj^DXUET$=MWEl,J4PH!]"S_
%RTAG.rIAEtT,t@>0b!PJ6k9!)_[]tb`i^2`est[VG.f<&.<h>e?TM^Q8Xa_i7p[87k;F/_Du?j2H[C9Q!EkC9B^d%*ZIP#`cN5HR
%!uPh1p%K.WhgRXSFp;Xf1(,A&)8NsK"4[8%VE[ag/Zhn2"kJcP\&E9Dp!rTCcnmjXh[">gRu="kpT5/sY6W0`fUQ%9/bg@sR2o\B
%B(1acM6q!!"Aj]BTq>h'e.6"`H/gD""WB]#Ds<0rQ*hDQSe`PCr`NSZ'#LMaqRCL,b]Tq2q\Y9*p=jM=5%VgO@_d"?-tDH3EQ))$
%_htgUHd++*%pjfBR*fTa:0jq.S)E8..K$+@n@)]4o;1ju!Q\p.rQ"[j]*dQBC^`eXp9%$?<4tBC9O+1TWag?<]_78mlG:.cWu@B=
%D4\PDYMIa=UitYa_!/Sg]j,%ULOZhg=Fi'K'^jm4O74WH)b[Isk^&N?T=;Oar:(*Gm:)[B7&WVM[f7%XhXAA5Q#oc,!g!P/jj*b/
%c8U?XXX[C[kfDR+5+GU@=%^:1O#-1S_^;n-2'6oGK_(*;-t+UMiDd,_s1J`r?GL,kW>XbZ%`rGh0=CEQAp#32;+6C>28kVMcqFbm
%jhT(:jUio+/t<e1Jh>gbM,beiAu/i*34-sC\d:="cS](bkGjHj4%D!]9e]+=Eu=4l7n2]m\)qE2JD=i>Y49"^*g\?r'c6Hoi:n26
%Rb25?r?!)V+7X6-<GH>,0jd(Rikp1%8:/83,Ii'ME*f,I"D%QF7,RkpN^-=X)BmMN6L_L/+!<s8#k#bPJYi)u_N$R16PDrIRmSr=
%7W<d*b6i1a\`,+'OpiP%m9P**eL=<Pm!9-oiR2!kr==:#%bKeQH>)K^+.qU%5Ae@DjlLYr)#l>ImBluPMB7nPnQfCe6n!l!ZR^>-
%V:`3a=19$^&J&D:22.IUhp:;0bl.5"SMLipjcXi:FT(ACr;(<X;pB<$DobtW%3"mZ93r"K=%LnrF4M":XUb/h,c1-#DCVV)1c_k_
%V"&FH\X:+d@"3;2WMO>a!Ufh2?-=Bm7auRn(<;K[GUC;\[eg(iT<RI86aWfXfSL73`^i>^;!q=F+1u`E"h:jr_$Am^0=llt__sVh
%o<iAf*CI.b)qhOhnd)PsUS`"=!]#[GN^M%I;aN@QT%E.mWF8:M*lB62]gat*G1?kmW=0Jd0gQ09p_ZI\fHUkkQd56L/P/#9S6i*9
%Yt1u;:t&r8MPJ$Y^lK<]&NC(b7_#Ccap!E4oHIf*9&&6g<_F176aA"g%ro?QAOF"WQW?J0*D1m[>:2V;<?VA&:MMqgeQ/rTI@(!;
%`a"nH>E"`4mZj[TWL;4_&,j4>00Oc6D81L:l[<[5'F5&Bf!g(:4^69RYe)a$75"s&b?f8"f2#g=b!7f==4$H89c+LKC(I.F]8G)a
%TgGE;N_Vh=>#qKQB-j7Pis6(j[3YX*2o,".qToO<OM"_:=-oBJP"k?7CR`E&2+!.W0`4#8L_EY<TSodO^dSUHp#/.j85ZG&Pj7-L
%S!O8`]U4(qa4>7#<N4X"b,pUPoDfqI9;H2\Q+&%UMemB(TnYA<9;Nj%$J4_ko^KhmpM*IN8f3s;"mp5[8,M%M1]$gG\>W7Aj["$T
%3!3E#Z[hd;=8l)@bo$!PdGGZ+Z!2o>cQ:\rrSknP7)BHGZ@SS^q=rb/b<CqH^GmT+p<\#g)L^!_B_MmXZ/^B/1)!R;Y"<]$$>Q9f
%U./JbF*MPFGTjmaSK;P0%C-e,'K`_JiO*Sa,Tog5k[]>GTJ54(/O<KE\tM!ioBTP8dnaX@2FLOB@*kBt\,el/4tQOVZUUU82kL/W
%@-HY6`E+d^'s'j_]TD*;Y6L#>H.O!D,X:T0FQ_pmKiD#_JIE:[##=+Vo(M3,QM+!uT\i#l6^j0gYJ>Rk94e68$#4[GKAT=#pHO%7
%i>^i$ZVG3kNG]&05BW,BQXDN@aDu@scggJ"B-jSV(hp[fFttr8i<YkG,m@?1&ZF3d-jik%35%/bVHg*Z!tq-c3ZoWNdm^1aD'h]O
%1TaG)Kf:\3+B9R=01Ye!]dNSpU/48IQ/(%0603nLH]K-n9&h6GO(q7^+^r`he?]m4;Dm\0JEDo%P+gJUC)'#Ea%S0unc0E`D^:BP
%'>%kKO?U_\Cl,:R;T-n&S7p(;+q!PDb&!em+'M[.'hY>KEl5u]S/<+N"n%7?R=+%%_BGSRYu55&.MPA*;I#'?UZt.'_VXMmOeP*?
%l]j>*h[A9G<5Yb&C)MoQ%+;%+KX<bbche9N_uc])cAL4AS<tiR]K%D*`<$9<<6Z]iS(c8/(+%/#p'BNJi`PTYP/p)?HG,a<@0'9U
%4-+n%Uge-HOqLDqOj=2k7:B"fNBf)X<tQnLolD)`%Bu2pj)IfWjZt,fW,q/W.7I.LX<n@REZKoNUj4XKb`Grr6I,6\O4B?0*$K?V
%4)j3IK",u&k\;kn3K%6$:hU%r"V`?&,<0R0/Cm<D2?[f%'C-n@TLgZ\#5MijBJSBKXqV6g:i9R]b&TAR6oiq'pJL=hP^tam>ft<h
%%e7uhW?j0E"iF0s!YJBeUoFUN3NZp[[R2e9;D(jW@VD8S!.tmV-XmGA:-\AOB<B5UgS#Fu/p66@+%n@3$q&k@9n>XH]"qdhWOFPf
%Z>mB%j98VpKGtVTp6.Hk=Z-IWM<a@pGJ[tqNo5T7&pr,$U%\C07W83&$=CVg:RsssK\24B>R/"f?:+pi3"H$1pYu9FJ_59%4_J>:
%lIjU]-u3>WKS20PosA*QB#2f]Vm[p115M%DZM]+^B4@MJ"K@PffUN0WDK9(P'V^4^4UA9%ERDCWa,L8\/E+8BR6lI%.7Kdo'n$LI
%.oJ58:1EokKeBoF`5_TC_>RPXI7E_chM2&qV&Q_WdJttH`@NPno]\`Ckb4hX^@PP<2'QV64&05[m"L<J%AL%[W-LqpM(6GFb+^4F
%;-S&Y+]Zp.:oc%d4!F6T;#aFc!E.n4_,EkTGV3Xa=S8EFVt,!B]4\5pQhh\u(C)RaCFO!(0p@l1W*&tL'(9?'SG[H2bW/MY%bBjT
%bPE].MBKG3HP;<L@)`2c(<$?Pm4nI?cK2.IbF%)FE)u#\Y2-GDs$-M]htkBCq6(n?nN['Phu4Gjmsc;Vc[Yk:E@=E/H7B(;fr.:[
%bJ59mn:24q6H!epFS)92n#4MZ#sq)m_/qMV:4hL;muj6#5S6X/B4!Vh*$].N2t=UpKYe<+aEZp?1-[/f>jB[$I\BLlkR84dHOn60
%<I5ic^*kA$T_]]5-R3#P709JQgF,K"eX'EN/_"-3*Icp4TkKEb$KPaL1Y3>6,'JZMFl=^4ih!)B(Y]Uib>B0K8#rd`8mUSk>TeH8
%7NBsjA+q>"J>A=qe0g(fEYuW=Oj5\P'@h.o3A7]7;IONfPf%%"23EaVHpS2_+P0$?^.&u0#IY;]#u$,,0rsFZThZ3#c(/SLI;lGe
%a*CCX*ROJioTH4BI4nR^I7fP7C3IP,&!_HR$SGm.Lrjg^^rT\X+=EF/W2k$gjr(;LV=0Z*8^p')qH,-:^Y#cGplF4D6uJ]q:Z+Pe
%G[6FO6ZRZhq3XF#.h=\<^9@CV>_=F7<9K#-<_++(83.*Hab!CZf=8Z\'[ZN.Z#T[biIqA(0O<ae&4U-d5LP<5akq0p$MIm*KhMIm
%?C]JBbQU+UJ4L(!KKO?=`X6+OigO`c8mP?n%1biBg5s`s%I*BKiBcR$/hW#L!"Q?]PS'YOXtZ<3_T3Mi6$6n;;'K+ND%qOdW['[P
%ffUTIp@'E:V?XKS.DaLKKDB*hS8#p0<>q8kISIN#?GZb9(FrO?rMHeJf26*)383l#8W?oLH"h(qouu>>W=cuLJXl^m,f*.tp=-Yt
%C<g,28cKhE,J,A>m`A!+coKB8`3W0##2HIEW?$ckYL-q2(:)4X@['@e0Q8olQ'$mhHE/$1/kK&<#Cr(Tjsa0%#_>^5T;\2p%m#5_
%S=id,I87UMK+*u--UEqEZ>dMo2:-;r6!#GUCO6D7%]#IUX;WMH1&_Q?l9j!4Uq$DDH<U),EqJofl#]fe)V%<=e,CqNCuec%KjKKf
%FYc3nafqQ*_WnJG"`Lho.X*cqNt0nd'@e?Rl=ieITm%UWSlnD+W&PK'.4g-\Yd=X\JZC@`We0UA9N4%a%AcDN5S*:/-nMhnm,FK<
%rJt\i'7[/9=[I5k3\2Q(YWr9YS(G;C"@H3r*G"ZXV*,Ca+sV2IYs_YaD`2&jX17h!E0eb(d!n/(KHLYfF.r*.^tJ]tk)hr<r,l0I
%$4NI/1MY<(!D4&1bjflKGP(YRY)[r(R0ki&j$ohJBY9CtX)-0I9'\NgeCBHADL(%VW3Y-L#Q^-Z/!mdJ"Vq(&dYFDXf+R?)83lRJ
%j,"]Zd0SYf8KuepqomJ-a9S#r&4A*"/rWr7]s+j6;:MGP[L3^)8@ftBBbf6u^5,n[R;fi]`T.9.c>qB1'JbeWQS?1(Vuj:u?>Q:*
%AYt'Di[-\QA6ge2OcTfSeTBUlkHlJ,MY?a_Vo1ZXps#VbXXUoP^%7&+M;hp>`$("OKV77f.sb<$.:T]N=W94[NC-!VX4/p+9o`"s
%$LFRmE"d5U_IJLg4=!7fQkN*dc,(01O_?=cU+o4kNoR*`*PfH:Lf)9l^]MEY\4u9!;&YO:.Z'Ujhbq?SJ1T*sTSPlVN1)hb0J_ZI
%ELk&:9:JWf2CNF^ERIsUkKj^'Jr*2pI3sqPU>tH@O>]A]q%Pqa8Hfs>co-D4bkG7sA+6M>#Jj:9>eaOeA66'"Gcds,O[)]>\$I=]
%Q,36'ai$bFE0Mfq)IV;GLnAuq-Si1T3%T-q%GZKt[I'pU!\BbP--R>q<&$GOW#hJ[C#IR!R7bL\WIZ40I;rIsQpkQTY49K,Xojmq
%9GN#t;,2,4KbJa2FtH5#+uq8kBs!%f?^:soJVRcOkY\(';]TbYo%(@Lf0:5VR^B+?/jI+6n2oe!KUW\dI"MDs3cfeXhILC&W]#->
%Ns!i3LSA?p$r?T#89M)H$l`UnTF.,-P<l8=+ZpL_;q,41V@%2#f,m+*oINI8.NlUS>3T3<)tGBb[fq26nXbjDg.B*ti^K+!KTO*o
%*?S,TU.T5MXO<)dVh&Wf6'hH99Y(KDC76bP'5r,N[,dk%qkX[WJ?MtP/06g>5-lF'K*m6k>JhhCba@)-O!I>Wk(R7=K=2QH1]fsP
%eDe>2^5d6pA27X0#B`YFr4S$dghQ1_k-F]CTA[os\T%n'VCko,XD1(GT$rP<,JiAVTus0/GHA,eQ`9)9[Q(+"F-_ldE<8T"Us+**
%]Eau0.oGQ(aFuk^S8-8E#NQn[UqlfXJP$;(8Eim6a,28SI`>gmTClR(B>2U<E(E_*HF)YC9HIYYc5[W<.Mp-Vf<Qi,8=XDo&!_X<
%R_/pF0AOg>2:sDS"T)uO&']V$+2jaI.#('G*#rfL;Le.[LW_n:6_rb;4IS>aj*Y1Qs-._fe7`=1SVfpPIZ)0BZXhiZ)@FJ"^=[X7
%`qd9+s/@_ZGYojmdiioSc<1YJ6MNM4Yb(XQN`-_-(Yjsj_k1rJ[1-\+gu<QNO;>J>Fi3U$T>oJYq]_To`uEC8k3_mnhGA`nL8'Q\
%&8Zj7Bq3Mmpj1M9,!<iY3B0K)eb"4/V9TXC?):rtn09RGHsXhE<MKaNRGaYmqVH4=eq(D%e/r[Weq`ege*qT[Y5#Tn"ZNKg)gK?H
%W__[@L-s;HI(AoV)r-U?]tZLR\^uW,Fk$eGQT02eFF&cr79(!M3]urY*O!-&c[D<&rf$HPKfl::27_^I14/N:%C]9Aj4nT0cMhNM
%<\=./du*UdmM&ptqM?//`n;5D'k>,+87<SNm=ep(?l<NgUBY)W9GTOdA@16/`V3SO)2B6qL7<2^,s!guESG`kMEa32&I3k2@Xl6:
%??R/m5>>"9l1J(]gtZ5cO3S^UI)kWV5)__0Q<ohneLUX#DI/SMnRpC-nb(@"MajG8)>-5nhI60f'Ak?_@?5)nq@h/lI%EiXiM"SG
%:``daRIc_kZJ][/`Wr-rh!esHIr074Sna0&)2JW4;ceYpE;NTV`h2Vp@CoQ*Z#&#U:((q\Ve)A;^'Q4MS^Wp5IkMU(`8Ji(bW%Q:
%N3dHtnnCH3bGPgK`l9(?J)R(@;1ophmtE8Upud[4G=U;rjU_,Bc@4@,AhC6t62%7\piEbOUE=Z+&V;TP"War(=54-VL[bo'ag0Z5
%ZHI,ih!V0_kD$1PrU>T%Ks(3g.ZKD["9,OO_t]"V[I=if>J=N7r#>Xu)n3t#gRDbo.rh$@mu#jYlS/<(86A90"Lh5-a\A!Y3-FL+
%>4O9Sh!k9kk0iKoq;-+4<Qq#J_=k_d7R%02<Wl`J,LSbkrW3&*I/:!f@^hD&8G""^G@_G/+Xk=>VjE=<pjQ)AOLU6j_k1rB40=Fn
%5Q->n[,B,>*6(5,eB<"S*I7I6_3[rbEGkPHh8Zh-a9Vu?e,qJoFs_OQ(Ra8:ra.c.p(LI.]&@Qk*RC?OmH&\I.AbLKD5972Pb>qX
%#DHYJBVRgD#Artl5g;8Ir!*^HT<&Ko:Qsn55N%#h^NP<@\QK,diuM7kA^uS+c%bfo5!8@^a/p4fDVu&82'X*\5<RF'GoM,SA+Li#
%n2F$7]=P<c:Q/J`XNogKF`s8o^)9]n+*as2b"pS=A8uBT0Z..'1WmHJT"(>u`U0*A:](7&CHd],=>RqSpmm1(pqGn0#&VAjiF\V1
%#/)cI""t'ud```@N9k]ZK=[a3oDWPWZF%IJW)qb"om^hq$p;r,f'Pedik(;Y=O,K;DRb_5b@B+ZYi*ML@#)>QIl?#_X'Wc>`O9?r
%U5R93*Tr/q@ZbrrPUKUUH6q,G2ia,6S/_HdZP3*(BoC`>VUsf4geRMrrl[[BEDV9l)mD1Ihs`S]R9_^R<c)g!:$`)@n7C.*nc*(9
%QVSI,EPp\hnAgR"DRdZPNL`,K*Ocu:)ZRUemA^uX\cep:i!92+Cjd&r2_m2aZ9%UHhXEHF\URo1BXQ3(B4l42\a2:7Hs="YL"i=2
%C`cu1U,Ul1q/u=^<bk-3CI>QTXi2)&dYr7bIk^V$-c^gC^%TjDDt'AHoWRp@(.6UR5PD$u"ZQ@a;n\3oh_i`1'hg/pr'QAhFi02H
%niHV5WO.9!JfCJX[6%]7,KQCpIlZQ>H+2a21bjZ0LSnO#)ZB=m/^=e->@3(%k_`SOaQr&F"ksPl?>E':p_ul<c"K=RlUWe.!:(IW
%n/I..nLsDgKlRpq,n=>!NKVklmB:kn"^,eS#!\)3[HL-X?!)p%/[$j3nJ/N,j=pRk(;5.Miq=&*$us8RV[qf02V`V"/8i_aG%5I#
%p&:K$5J3)DKpd_CZ6Tf^%VA5Ai@>9tfIloKO#J7p(AnWrk\`Aag6FN,/A,`:T:<HQF2Jg]l;cm%Ks2kr^^+.Gr(m$>S\V=Ph\(l*
%fJ!$;@[:FTn7LN9Q@DQ\el/dUd276;U+t]`n=?kE/Rs(*<r=si,=_Z_5KA-gs"Cn7)^,o><c[A4G!dhL[Muig[k2Jlg3/u*^@:P<
%s0AE_,pf`!O6Y4cV'B_B79Ac.3=ZWYI598gVuDpKR!"T"U5W#@<DqJ=kJ28[RqI%71:ZW`Y1,1gi#i5(Jt%"u:]X:Y-'t8qJl;]<
%B:'56:Io8m?]F(/6+.\3WCTuTQ3YOQ1dEAl$5+N]*?b4R<%3MXn4%]dBTA(FIL;c<R?P]7;G.@P<@98l*F,<#J.g@j_FdD4.oa*:
%#3_S"`?6X`:qiECeBJ&^f4qR]3Zj2MSLSgACRJ'7]7Q&55^k4:$u&eLSNSa^*1nBnY"8eYX70sKji%SjV<%u_O171Mij!3EOl+p*
%_"3k7oHpC93.tolM@h&V$Whrc*g.A'.Iu9chP3"uU9kR*eZ6@Qe8gM*bSNn$iHQ^1*D)+liRDUai)3a4B7_nGm&d/Qif3]HU.mIs
%fnZ`.2h)^LE6d12Fp1n9JACDEFo-G)&I!/6X<'s6XpQ#BE],,d.s3-WYdEF;YXJjQ73OE9f+5)%"hiO:_n`F\''LUC%\RI8-'F?6
%<?at5#E.[ko^5WZ6sUZ64k4.;e4q8;R%-jM(\(Tcc8#;2cHoGZ6l6^R4$)FXq4T)P<BE)i"JG?Hc7>\AKSja3]Wi$J!(:B-<YiPp
%N+rY<$_]taL*Fnn%j;o=**++)F_P%5GR39Q^$lTMO\3$e&2&8DH*<HdE)m_Qe$'D+M5$;S.gr&N2kF215:hJOV%ONiRQQ6RKXeUu
%&BaaIQ&e15#_B7IKnjUc1sG/6%j@IC=rSO"?s%[[K3nC84ZnC;7ho2S&(s7oX_1JA[ne'^AQ`1I.hCUe-2iOQE2aJo;gCg/XsesY
%WOJN#%h#L1p74E<c?S;*U@*T!SZ?"t%2dUu0arU31HO,G#!b0"WI>Zas*LV(K9H?*^W2lGn:/HC!>$E]cF6[h!.g@C\2"&];<9^k
%q5Pfa.-T@@s7)^kj&;la"(3r@Y>GM>?s+@tr;@!*n9m"H-D[X]!%%/4%A6l75Tj(h=?40i8EpNo?8qrM.A3j#c2gc?]BB11!?;_)
%>CPN2PTT#A$O^pplqq?FYQ-L25fL%""e\i"HY!6-#[q3DX\3G+b6#[@7apb3ZN(\*n<*"54Y37'QVU43H<<F"[W?\%!KB-7cinl#
%!5RYS(=9!LQ^38L=9*=/-s?4O!<AZ99MH9fi2"8G"V;_'e+6uK)osR\6*83f=TH;+Ka#8rdSU`q@faA$P%XTjA'!j;%p=TLFJ^1G
%L)R\cM'MVX4.1-83T@d`JhZ:2!pl<nb+^KsVZ]r,@F@?Z8@.K$GJZ@oX.n\cT.,?@]<]"TS2No?Oc1c3g?\lq_X1?U[K*#L*1Xd&
%S&?b5";[m=aqJOHl),riT*5%Kb)*F0`jLRIO'frK<8s6ZK6s0hPC/4=Wjrl#"A8Y^>K%0:2C:'UNZ'c[p6$?o3A%p.n/>gT8@,3+
%&iJ^Git#fDMo8$c)q-+e0qcGA*'oB?5X#UN[,B)GE]':#;HY7H,t4=B.rl^SC3E0KL'Z#OC5_T*pIfK1A"Fg0(eAaqZ3=rl:r]0:
%[/ChA,:V^_'2+TgG6,]5Ml9Kf!>E[;Oh`bfQ13cQ=D![9We%2!"0<ro?;fc0K8Hlk!MZ+dO,Wf$=gp@)g'I,NSn2MdOHDkhPX[Q1
%2\^8K"fA[2]HBl]W9M-Ps&#VL>%^D3;PZ@6X[Nm;)?IDHWCuY4odshA60WWY\gO]e@bjBO6IcO]\6:]E%mQsWV82;1e3,h=f2/J/
%1:(hrn/3+f>R[o..OSH_#aHo\;%Y<n>mdf9YJL$gC<FmVWE0LP/kbl*"8C"WS2,,5$D%?DcL[t^6N&BJ(#6=HF4K#-[t/);JV/rG
%,)+%E^2WBhLLP:T-jT\Y14olb;5F9p])K!q!1]8^U(UGYTL'fTQ_m@6<60/h)("4N),R*&Vt@T@E_k:./mM(pV5@SKCrMO%Q$s^P
%E"Ug;7%IH/:++NtLNP</]i&>U:OT!L!fe4I_TA78c?)0EOpHr8nCXbD\5=G/l6:9s2DdRj7Kne;CBb/]oa**dYl#7s_q]\L+C-$"
%<gR]>e1.E=PClUngguY7d+.3<.PQSMd<Fl`765)B]#OcCSMRXkau((EV5OTZb]QU7+#?k\USa)96uE?&DbWm[Oq=&GXDgqj&m-Qc
%\g?;f[RI[t!E,!iMf.dYF'"F7Ep:D%4#J(,PY7'D2L/4R!P0?NY$?;.Q(ijU/!h;[j^D"<4^(]DiGVZ(*,7'LWj'&\rKI\B5.[Tg
%IGT*>N6p@[>C*YEb;Ci^jYTab79i1@:)O#4O\Us7F:AAW\90,/eck=)BA>J1m<<KYNG#QS^#?slCd39!NK)V?oo-)g`+PS^E8uDQ
%-KZ7bD9QUZ)f,u9AsPB'EClR<Y4uA8]PMtjrU(,%4>u?62uISW68gR8IeSF)D4Tu&ZAF'#$!d#jWL!.6Zi5io_G+qST0DrfCqj^i
%Bif["k-:[gnR\#IIJo$Vj#l2</&'7!$#RH:b;bQHl\[@eI%4PFHl;+(g:uWjSgKWgMVE,EUtuiqo/,.(=+'fr$j<E?m&.\O&e*@7
%FMk5I.?TkbieOr:il*\1^#;UjJbe^C?^rh4]3!cKH-CJNpl_gj`jt)YPmt*RadQ)0\4pZnZTR9;GBAl:"9)@nhFfE/q<ADr!p7^.
%YP;JUmTAJMc$(i9i9.$Pf=!b_`F1t];0U[rm+u\g\Z*cp"0VFi?/o5*iQF43]7.Zb4K\MSL+hR(\*aE,kP<V<\Dca5-<Ttr0Cq"d
%Zo<@Ma!>G*n9(<Yo'$4ZUR5_k)fB;&US0=8nl[2[hXE*YJ84]._d&qR/8iA@bTU>5)]j/>s78+ZFU9jK,<FnF:Y`etp3J;K50UmP
%TRb.\\`+s-luhsH-W3Q.:Npa'2d1CTic]$ZS/_HdZNd_:Q&lb%bj%q^h9:n#_m`6/k(52j^#DiCLg^9Ji"'69`rFg]e$`&Uq""fu
%JNr)=V[qhRVbL?GXdHEPInHS@@2g;3)#`Qlf>RCes%@c\d7Y#1^Kg"TI)fcn0&\c*[ul2aS/Zp8"C/E_dHRbkIaRiU0GeuiDOZ/h
%H&75,cS2c5Y.3F:YG8kZf+uMFE>u3"7_7S;b4RIf][4tn>TO?4>;g(GkS:RClnJEqKA',Y0'J]^gcp5LXF%tLZJh-Oi-9;:m66JX
%qQRNWp75>]eDbuW`,U1<<J>`BO@@e`Y3l3?Gb?D!+i%a72(_\P*Hlm^n@MS&$e4D4@b&KCa]b#K<@um?fk&J9N1#YLW;K3b5%+2'
%U:OOO0B3f`bb\D1A3)p/R;Wl*c$W5SPn3"pg<cU3r+JL5(u.p,q4e])B(A0s#EF7dMpLAKT/_'NDJkN!LZIYj3OiAIC%pni@I<FB
%dlD`(Y-+Lo?g6R$]"+le^9*S8m,g&bqUZ4K\=;7@m,C,'!mcnEUR1N3O1[J+c^rF79D%@1"WjR3]o.dem5q6P5IoGr0SmR044!DJ
%kQlf`W)l2\49`OQS;tBJHN;2n#NdimZUPKn<9JVnjR,G>5R9J;60F'>@,l"0K,_(RS4A+U^TdTbOH\iZCBud@$pc8j7m'\U732F<
%X0jR%6sEOA"]SMM++$7_F,>j+LWXa'*AL6\FEj%CP)<ooDD"Mo6l[;\6dHP%F1A_.2RUCdeYpMb.hmO]SHK"bE"p1R-rN.B^`D6u
%_?r"0J<?>]&33@t.DU>p+C+=90HfeG9,,[BgB6Fd-0[7[+-4hoF^^8MGGq2\JK+a-[k.#C7pGK8oLd-Mk6N]G^C']Op!J$lRGSir
%>=Xen=92]!@LK$B31&R&U\hP8#d3)AM[7gok:][+-?,jG.Jt&kFips#=4>6*#J?a@2qs,7YEQSEH]LCNi]sC?joj8P-+f)Bdj&h9
%S,0XV1[uX*V>!^$%G)2j7lIXDZ"ICY*+GF%j=%)K3'*UL$jj>T-EqID(jJnNID."6c3C>=$VaZg3u,f]E&2YP%pYlR#":P>o@':R
%M7tG[c%P8;dD^o0CMJL\nsi,p;.Ams]Lr5<ocb8,.!;0s:g)b=.>AVcgKY_PE"t4</38B$e:$d.c?uUeo,>sI4n0.,>kD=?3H;hC
%KfNkO)Zmda/Ja+%Ol$j]:>EpS_jkbZLH-AbU<_.bLJY&/Q_dB$c6I.]o3Wnb;f_F?\B0^M3HDIi.fC$W.C_ckZK"m$4AVZC)A@RX
%'\t/-WHESq_PF^"k96Sb(j^=\e"R51+7lYn[ubY1,"ue?hA/0P4n3,m?"<Gn9=[;Eo!2&B)V=<foi.(Q'N*1O99,s#G&Nm>Iden@
%T`;/$^H]a!c]P[RINA5$n:++@fJeG8!N=4;i=;Y+9G6s3#u;a(.K2W#b@P.N3m"\CrIE"2h^%-26Q.19_0k8b=3hJ@@j9H#b>q0b
%8^*mXOsA*TobVgoC=LtGU!45h#c5Oqk`"+(;a:TB.$l@,3-)l'VnPCf<2.&ONR52Q/%QdDE,u4^<%0#1/*I_&2!$n#egDV%oTA'/
%O]0-f+Bg[M5!-WfC^rdO?00u;_Vu]lVT#oN./V=ra93#N-5KIhSMhhbdlbtCG`Z9Jc4V4JnEf(fX:t92$Q91^^eK%&$CBJ53W3r9
%e;42&=INuL@kZtQpKi(E1rSD2U:C]GruQ*bmg=4JN/:))OtKo,10&efZfAbQ";Y%K4K&FZ`REfc%%4mSPl+/[fa"N6j3_/F'Nme>
%*3Fjj!pF*)G%uR+fBfht(-@A&gSk\m9t*B4A(?q:HXmR3;9IJ:_U4:Ic:*uYK&Y#_FVf>c#qSBYfG*Zl[n:[=FKD,E.BO5r%>?`>
%2fR3Jcmg"X'VDZ]P64=BE)^D3mhbhP[?=P))j88B@8uJtIi5q`P=3$ZdO$#<1*R2a<)-Fl/%-Tumo:DF_M-%mN^FiU=VNRJ3Mpe+
%<M=?j`9(58jV`4e*uLg)A;h[NPQu.]GNdY!VJ@u$OF"Vr==SH+K<1kqK,ce84421RO.G:Y\ZS9Me5=U>r.?b(;Fs1+)X>eS[PZS=
%:YeZ^9sl(9h^o-H`&Hgj\_4.gg$"E*eIZKP>iZuNH=UF;.$S[J]%1!#/M"oZi0OH/"foNCc^">2(Pp77D'g\Js-"bkA@8t8GL!Xi
%MrEl-@QFj82eh_/(Z'hdUVqGB9j\',)IXUhH=ZB^?%:7]\;O78HnliKcZt\h@b,GPkVM>rW`*gG@MWX=7EXrsYp2hr1$=Ci/<&E&
%L`lg_2/+:U7M@#\49,aP(Jk5bo*PY8"QY[[RDSkV'&d:ucpqQ`\9m'YR;?Ye?:f)P!tuFt;Mj?B-o53U0QEcL\Gh<1Q5-(Q'0W.I
%]^Th,(DK:Fhafarg$KioL^4)).oQnU48.Tk3I17/;dpS1+`TX*PWTZ.BXpLKGt9A"mY3K71'5Ahrd!e]=dbPe1at@+Eg%R9U"UjP
%UEt(D*qZ[RraG=75Gn/9?60@_OdNB2q;lB$*MK:hr/b<5oj(lFlC1OV9l0D@DcD<MKtp%BG0nHsRmlWK+nNe%koK.Eba:$J45&!?
%PiWu"C$89.6[P%0#!)554;o0XlM8K>9=PbU.dBN,TdBu'_KC9a?kAWoio:T^at!#'"a1_WM+n%Pl)mBuWPXIqVbRC4+6JUrSpM/H
%^21_;$(<E+,\gjRc.gWc88n'fZ3i$*YW.2UY>gcandM376g[^IRU+M%QDQNl0V:[t6f=7,E^L=N*.3M]Ln4s+K`q^W>DP[6E,I3g
%TYqLd0a7l$Cq2eAi[DD/cmYX)^1:OnZ(to[lC4j_(dA!S">WaX(o$SIZjhq.4<4htZ\m-eQ,BX9Up2?'g@^P=ZE[>hkgqEdRdg[W
%aH>al/!mQJ7nuXocDBXD$1rX+EP`p?=OTtRc#pjXPgWZK$e2kX_:D"!#u,Gra7Vo[^Y^5l\K!Sg*H,BpbZVs,<GDP7Lp+?D%ra7D
%nPU3ooL_-g=!q49C(rg%2/dTu/g;=0R:thGj5c*].NZ:(AUdsB+3.)SQ1_Ni/eL'j@C]1Hd.>I%&SJ`15fr6>!L`R9l5j$6&N0EN
%lVBOOLp66`.i;L!i0Oobj5J&6`03FJFU!EN[8$-.TpO@QkGJc-$+bdt1&cNE;4`hKVl`C/d6VK-\-9M4!W%,RV\c/tdM+P`qN)VX
%(,j#.6hWVqNQ0/'%B,U7RVbo&[Z1pPUl3YHj/))>@l?#=@m7pB_9qqIFZG4PVaW->X`<>\iuo#t7?9@PIffmtSpM>&l6])qbG$8u
%`^-^WC"u/r%^N"rQ!c;p[6UA[<9==8Zn_h*V6Of%Z6^0&TRLfJ@D2_T@i7WME%q+3U&]O2J0eRO'I5g8[)OGOG=HHhP%&i:I'>ch
%$D`Ub+XY9f?,QqSAT,sF<Sp(4/9ue>Tp\2]BMG]>P7^@pp%_L#;:KOB*')B-[u(s7%'llCI0t]S_BdL36"_T7,RNC[O/Htr<PmsC
%rkk:IS!O/]H47eV`i)"PJo&+C3*MZ$$"*u(*C-ZH<ed[W0;*>Qf3ERi`kkF7?GYi*_J,258S7*/F2.mo;3`tn^da!91)`7VWE,;[
%Bm+<!JR,oXIDs&$3@tb$4QIc!Bn@Q-R&$/*Tn)D]a4lbg,KW1"(!kCOH[r)Mq;Y06q#JNc+s>m8J'/,q>4As6h#PV\.V(S9/'I!B
%PG9BjUWt"5^pJVm`'J%OHk9AUl`A2&`XJNbl^++'0nQg?9_)Q98@2q>c>.aYW*Ed!!`hlW,#(22W-EMSH3pI.k_5"U99*F@cUT\X
%S>`Y'AqGqm;c@JGIV>Q.S]cGkZnl?siR%H!fH^@G;#SahrRe%HoU[YSfu46o/HV+O)Snes6Cj9AC]'V'kAh'^jZ:[/B/Xj`*hm+X
%lHR8NeL6kHBaZT!cQ#Fbj$o"0VECumg(9S>/.[,:Q1IrP)7]sZqW>TE>q"D&gZ4l+j6gY'T#TU2S32eC-en7?9"f*(Dr#$]:QcLu
%&#jWB>F!?7%E>.qqcW.B&m/;ALQ@<CE<&D)E8AmneC@B!MK:^;Q_kTRF`QXnN@%(0)ID"gEV*]'DB)mja-D%d/@&-8PFue+-o\[d
%%MpbD4%]94$A5S=]s2?M5St*_$g,*'T1sn,Q6q4k7bl.Rn>-%/[Wa(7F4Bh6q"H5c7IVW\i`Pgq&F/]*;=uo*:4B=sV15LJ?c>^]
%VQ?>`qi#>dGRLQgc<smfF2i66o/0-SecP)G2u"uH4mN)R7Ir!;G_rT\PftYg*6D%n:bk@&p,jLd5,b<f2NhN1R=sa=#0U)rW\G1s
%or5su<jZU8MelIML_.(,$[KoaismV2NL-'8MSDU?:7eQ[oYos'ADi"`5g\ZGOZl)rY"I;Ke-7nCU6[Vbi_Us"+Jj?'Oa0'jI(jA"
%Q0N\l3$+T1c(UXA2sH@6iI4SX'oN`mHclYu,RaU;&I)<7LB8@+M9L%00$D'<.t^4($l8amG9T/V:Uo8HS3u-;6%D]Ycf`HkEHTFE
%89X0OIg@Vnfo^DE).p>g6E_RJQ%AGlj?\RY5,gg8oT9Zj:_`r<cJN4Gs*^AG_AH9BfOjXGb`)g;Bd5sMe]@uThJftg7H_[MU`mRm
%:3K9D&5<uB"=E)\J@dKWL':67's#A>GHqPfmq#8<Lj2h/3SOUGD21*@Dh3s(43-QV>:<<`GqqG1D.6>K*^oRP/AXa!b:b[G?N60#
%UjrnCneCXA-SjTek%+OGMK%\b5Zb=M7K?(Y-X8%b%]X+$/.<@mDb7/_!do`Z=^m4ai5<Y::a:l4ngN2;>6fN.]bJPmDTK*"aJBfs
%c-<tLc4=6)9]/l5K`c3gV,e'P=jFEZc=L=B"^uicX4Uo9cI!Q6&*B4k\;/,tp^FpOftW#_j2'oq*-pLa+nT5`@>_3/^m0P$.AqQ)
%[n"Gcj5Ma8ZoZgu`AZBY7M.,s1uiZmkFD,WkPK'lAdL/qkEa6FPo7i@@"O'aVfO6j+b*IIkt)&o3&t-9DX]23W1qst^*@0uXU7.n
%Q&Qnu-e433DLu#aKS"4\Ld`#(gL*fX]f=,.Bb2V^E74hH-Juc?cP[]=gG;Rec=/"`&-RsmnkVP9<iG^2>nlJoa*;(W;RNS>W1XI.
%m$+1d(NZgVUkNY8Kk<`2e&@nn\E=\4b$>E1.Tcq`$Prfp961uB_@Hkj$,,E12]`qsP<$*Sn4OTq0!VQDL*.;03FXZI@d)kF/'fiD
%-?50)k/NJ'i#!.6"jlSY!iLHXbXiMqG]IR5d]:`7)K16Q*B3MLK2;>-3u;JXR%mj4`W3ja'0NR'%:LLu'A/]D3_3YLMTS1&QtEiB
%jT8I<c`%5m+l[(S!DQMSaKC3?5%]-Ud3BDX.9tIql:gk\R_cd^*"4It/s7H9/gYOJ>Z6^mFEE"aW#pV4TtLG5V%23MZ]5OkcjGqk
%LAj@H*mqm4NA[kdQT;L@_&0SE@>[g^E"<c-M!J)o>D5a8mc<$_hK6Fu!:fDY/^_mejm[p5-E[VEiY.3+Z5Y]@fFJ<mink'DZ-Blj
%-DISCi`h7FUr]E>jAo#0r[9`HKrh%+p+#in<*4ih4!(M(W^OXI\]KMKq=,kI?H(>RD,LZ&e/u_F<6far[]?6MR]6m!l(e(NB'VW!
%`XaEgS%\c6S3NJ40.-^WGMq[S3;FO$!j8D#.jc`69P+s9[PC7inmr[9=Y3V`eghX>X<u*6L3D#03oZ0Fq(ZF$`qRknV`$7:(uY:M
%b.,oC1ZTsqcg]LHp!VnLr#k3q;g:OM5qj.r\R!F-^h)0F9OkZ`KI'K'#u@5:UP2ND074rdhWKNChC?S3!Ge954W%/;0`W$)'Ka/d
%PKcVe6;J!+TikNr5rjOeXDr<f6^B],1(hi"UeV?j%&Hkp$o0),il\DthpZ,9Prtt.3Z@@c,j9H0&L*sMV22F>]hB49ffa$O0$AiT
%pnGec2QdB5*40cN"GCPFlj&bqeI`^k(;8uZdS#<5k58i&cM."!2P:/B;@Lj]#a`J`6^GV=+6&YL_:m[;`P$2D:Y#7NFo6,Gs)&PQ
%O0o+OKa3Z=$8;&\pYprh_Hne`;t4@/`D[5c>t^Z5hGL+2.=X9NnPuVPWh24Uoq^1\(#Z^4Hrd@F9),QolNlZIT4:XCQ9[8s3#6:W
%/aN18"7l2SJ>WkO2:CGf67DQKLekuc@2,VaMb@a'CD=f<g>a(gEXX-PKU]WoVPorjKsFA[oP<+&0gOk8fl<&S3Q-igDRl5%n5b:H
%2^Yf_BRC83Q]&/M==>/@;GlTDMU;;M2U7(LR09hab&Qfn`^=t2!(TkO=;Cn"M`-[^TrMr$l9buEEN!ng5pdAZ^u8hiWfBsa._3Mb
%.Op:@66h+ke/0O2Z+h>+`Dt#3M;nVV2CdY98@HUE3Oq.mRas)p*!-SsMF$`$2A\b,[e.'rTam\GIT,Aj)@$dB`)UVSH0nVK5"OZ<
%WVoIQ68b$bo9Fo$3She?VQa2F^f?oEKk=("1H:#icT),'r-^FD..nW4%7co+%gItoCWFOJE\jC/bUl>sbe],,-)UI4h>V*Hh[S^1
%!qK>5ZXP;gGXHt3Bh1j]`6QtmqBbR)6Su]i7#.+6e;iNJ1,C(m+\diGMEkSkKjq"B/Ausi7jgLZ!Ji"uFte>BA8=neg1=0"6[J)-
%2.>I-VMlmp/hi%,cj+m@,XB%<L6M.`e%B_HoAH'jS=p@*kgM$5M#l\;%N7s=5j@fK^<>+:3I=>X3G$SX'/aZ1*QS)=T9;WL'2)(,
%.!r7WcCft*L81K^+VgRKQ4bY-i"0TX]n<5ePX>Go/_];#)KQ=]3RF^fmt&`5$beh5T7SF^V1q1m9k;c#b8ARP<"_\j%E6j*kX1OV
%l-rf>mO4Hg_B8"7Q+eVp$Di'.]OLXMV0.a[HB%ll&)nKVp3D-8s!9I8m-$`#S$2\$PO43b=!?E^W:L_X<K\/GLjaiP=<mRK8=`t3
%dRT!3&_JtR/7`X'`*^Ftd)2i#p)2id(83NT8!1ff"-,2:r@Fge$p3l7<"*%?optl5p]Uh>o3*Oe`X=tJX64Cj-XGPj`(]DQ&W/5C
%b=V?c$^V]o%ZMEidKm5J_1uc,/E\Vu9\8"!!?E:.BHLCWJ_NVQQb5d@&Z>^GVEXN8<s2po1d_=)B*Na:47iOF^!)UKFPP"ErHOdX
%6:;)'ruUO.;,U9p\)T)$Pl'PfpLi7*\^0d;E6?^m(+JA;>B(/<T/_H/ob5`Yo,A:PR"k]lbE8IU0uMio%9&3j.2,<!jBR!S.QNu#
%Zu&6=']c<=N^XaG*\TUkTH=>5S,j0AQXsZgJtcr=Efm(Bi+b('&qNAH[=lu6T7f:L?KLFF"4?s-'"W04$N(+KD>P".*m`qiJqrBX
%A?_2OP!S^[q@)[tV!(f.Pel<VO=MR5[g#i*WGXDT2Kq2_%emu--g=*Xgkuit6(Bcl#FO`6HX69q98_bF1?l8[-qXr/%`Oa?5JYE%
%3h]KfP(9M;dmr\oVTWL$:hh5LM??"O#b<JP)l''#`s:c.7?3pi$31g//jC)H.Ji'=Lnl$=5<+Z+)H*99UCQEd['**Cg0COCs5N5]
%I*Rk%M'U*X3Ss7]<&+ol_)/"8UAL4RA2kVH>leM(ZMCk!8PI9&/>@?o<O\)8Tf`rG'cLLC8o(gCrD4HFGVQQL,$,D"&J?RB1q7O(
%0"SY^bEWQI;1a\`OpP:&%XBrJUIS%K"k_d@PL_UF*H^*(V+Vh$`#8ho%b5pV,+Y^5U4ET?a?KlqSIL#dl]s\s9I/QQ+G`NI2\ULS
%3co.6FQmCZk^.F9O`]icFQgAZCX[Cjl#^\>F>"DK/hCrm6#_eU3sGn\+p_P-%DTj;m=S&`=0`6ub/u.A9IO1/"H?#)&NKJUF`,8F
%*7oo3-m\HFnk'03bib6tT7^gOchXU]F-LnZimF)\\5sbp"OBZf6h-fg,>6<#,Ib\AI7`/aCZsS/7dh,>G7OU67L:+[dk5'Fa+1Wd
%F<$9:ZUdo?9`i9U_mdSp!OuB4V+"4g-=/:SE)O@O?E!)_8jdf;r*.hWLd?_NplOdbrR]tsku"e[5kquPLj8H[g.*bFA`GXellbZD
%74\;!m>=E,Q<2;^,)8JsW;W@H]83aKHa*Y.`n/?;`tAZ]0AMo=PA;Q^`?!K;k_>/WHf@WTk-V])$r:,J)'T9/.r:$IG'Y:UPN<-?
%^:QdN;CsN3LFoIa$_1HU>^8%0"i3;lDI=_iG$f=uFkWEL-Wr63n?T?P=m%IK,'bmkENM%CS\pti[\K@`Y1Wt+G0AAqU7(kH3FPc_
%bUZPDI$s=P`F`PpC3m[o?s1;&&tq'_-U2$=Kl)QacUSD3gaVdZ8d9VC@i'2]d%4s.H,=[![e\r%a=p/u>XP,j,L]n=:`^s^\]uf+
%OpOMTLe5iW3A>/[\<n_s)$+5p3T/9plAoiDda*e`npYd>5YQcPDK4:,9js?c\O6buA"9T2"&IX[JT-`l^^mfQ*,0]ReWEI]L'^@!
%&j2uOnUAo\iR/+V-?>qao5Fl1ge?$3EtHL6bp#,oad(u]':jhR(d*'3+O"KE=E_PrW1BGN[n]k]\9T)2F_7.BLi=#jA%<K-QM_Es
%.VU<hBSp30I]Ec!V0Nf<WNI"P0b$KRE/@Ok:H\gao8Th)Yj_d@2_mcm@9<eq#U2T3!=0<-$`'scInU.u%LIk'Mu%mTHa0W6^?2h,
%/*07l:'*p'B^/6ZK<@.gXB60N,B?Zo%m9><GHuOsU]]Sbc5.W?P&ku5!Y.U4.?\nM;\#ZsGbM-_(]J5W1('m=o"0F1Mr7*S#Jm]^
%,aj4aYW<KsP2;ZL+blYt5%lO+#(YnSZH[Qu!:!9l:&PSNc_pH[iBR]a,^H4Y[C9*A!F[]";/8k0YU\g4"HUAj,of[.!_,'%#`ESP
%`VDE%d\ZRu?tmYUE,3loZ>hL`7`KdXGUQ_3kd`;a4ds?(#n\#OREIrRmR^)SGTd`]!@p_%#8n*o78$VSc<gt;?8RA0?r@'2^9P)N
%We;?1f'?`uB+$/DArqGHU1'h$MU"p3^EeuW(!\6FGRYqR+nDp"Q1>S.Mk'J[7-]H&ePoFs3D?5LcZ1))s0>#&ZU7M\$i!48BJHQ]
%)!NCDKK6Ve#isNO(On/t-mX%;_8]$75Z-#5:3`e578pcce(`rq(/mI(7ZhDDUP$Y+72Dg%JW;N#EtUU/j^e=0/7__44bE'X1dVS=
%>_uHBI0p?$D_b!s<A;IV.p@I8h9&u8d@eF7</cT/Sg<\9kLM`>Z,YPE3M)dhakfh+<FI+IWuSpnh%a]2A`-jsF+Dup!X,iTPkC_R
%"PHHsNf>?:#^JSSOZ!^36bCq5['EB%bZc[Cm^#rjMF&"J=Ed3058f]#"[,8=32721Vrs"a](fQBh<^WlWcnpS`T:itiPrgU+k*rZ
%9l)`OT?csB?oMs/?b?hF'"nje_J+t]09LC3P`VKMW>ZC:dRPj_?^/k401:[3`3%EKlR[kcCfA*!*DK^!+F:Ce)6'<\(Bkbi.Nead
%Td5>bM4\J8OVKNH)%,Bd?.(CW6E-;rb=(Ora:8_#CMipY'!s\9[A;?(UF54\Kt'1/FrW#>:Q?cY<cD".e<4"#J@hQQ5"K&+dm^E4
%ngR$V&uui[\Oh@N'UU8YaLn*fP>iUccE3q@1d[MnRuTUe;H"^=1l*MGMKIq!>Sn6R3q^IP8Gt#_'K$!D+LO*jPt(IkkNchO5rs/Y
%HI9Q_3:3QB?^+uB@OEPT%a:&=YG8:FPrf5?\&Nom/.,<VK^gdQ.8-C=&SO\&TH_3aIH$e%D`3JnD"=$Mlp[IZM1nr*nT?$87Tk8B
%CbY#i3(YP!m(2oA`J[W*5N.1XR[JuY]h*-*MrNY&Mk;-Q8G*U%'nf*I=S7MRORT?!S@"MF.l?d5Kgs<C8A`I>,[HSM<g?8knrH?i
%H_lBK%0UsAK"_t$70>">`<p]44YRI7[]5SWd)hX/6kJt#8X(rU6@7r%"H(TUf:<8+,nVLe/$=ur=M$u7Ys@C!+[:d]*"\Vk(Rh/]
%\J[[RK^];K15[r0Hq=1srNjHWcOsWnHFA(0!T!,>Nag?epSf-c_UJcm.1lf:P<gI8W$7b"+"8loLkJm1n:S!g^h'<uhI@7,6;FTk
%H]f/ua&2L,I6"+LK2I%m\^VgcW9pL-F5e<\.4LY;SGsGV$&"@t)(7HT;q\t*</&7eesI@T]'@U:]J&dt]mBTOY/+0m,00(-,\cbg
%T[&ZU##rC#0*!6o3fI&\)DOR:GH3oH7p;7al=5J]<hk,]=_V)=A(9\)baVHOH?j*+HQ)Pr/3brAHJ8$`*A1l$2g5-hKa[`df;Ga!
%2<to[9L0O3S+W`f=s,?7A(IRLC*DtVIDY#^f#N/Dm]0L*Mb@cnlh>*_RWa,5d7fLGRe6nt_CQe8r]!,A4"!P<2!\*4QtMWVe!q0I
%eS2Dam,CVYo[oY@lLVE"ZjBNH=K8hg"8AEWZG9\p7^CH_Q41Z[2=$G6%=&Yg=eEkF7<Tm!Y.&@n;Up26>3$=Kjt?@1633ZT+!g&5
%c/379i"*e=c]r4*2/H&'%8PFaNb&i0CFX^'$:tUsM`Ok`UOeDdXtNk9N1jIn5(S+dO[('bni8ZSWC/8b<\l[++[71(l44&oe?"+t
%2Kc)oFXppD/pMN?N-2')FX\DT/2VLJ8u5SYi47QA%%OZBG'0rH8M%,WCK@@"Y%E)fVHJ?*)5[@l=e.$q:d%0U<i;u7lAJf9/5&:9
%Hb/$>fNiX<Z)JWX(RdThfA`D`Hk`jc&'9s%Ms\AF_!)1?+^'u(hX=&7\rEm.!7%tR?=18!YjU/GmGZH/I\u#c`*HsuF#YcK^ppk`
%JF*KjCdG`?TaPFV/hKXGgneUJ.JHE[]R[joW/!dCJd.Ch1<uTYCuNnK(qGa2r-;1S)KflWc;FVG%t]E23=9H,,acfs+mN/\ie1ot
%@@@"_\?I4PF;P'C*[Kmj#mDh@%pbUnJ1qR=6*p551C57n;mW&DY9[(m(d]XV[)UM!<2?B<nT+mh8>AA0(=!/fG2nV8=*esE2.-^l
%-8$R,nIk-u;bVLHSo^YE0>0ppe)o<bK2G"#ps5%s:*H8CSZ3c7e-&CinKQZ'MD+f9Eg0ZGLCtld(=HtRL!2lpiN``[$M8#tEJP4K
%i-cO&UR66+F)DpLAggt,@in5YDt(iP<7E?b7<LNH/5uV1[8)'sP.(^[,nf^sj4(UZW2"T5MC0ck6lPTHLGc'F]%smRkDQ9q!+_:R
%8KM(mb7KYcMZ!^:drJBQ[lmE3Z2sp-q5A9?Rblfa]rZqW'Eg&p!E<9G:X#`Q&VDDc__Ngi(t;4HeP;,m$4(ZOKM''-2F5K*;T4Y`
%qXeId1NEMiB0EPpjc*c:5)^)^+ORQN]V\ZW@T8Bg/A"=T81]Y1`m%0;CQTfO-tB+>'RHf($)9qZ#l1#r]&_C,L_HgK=F@1_*p4d&
%`jBlTl:IS2E$m8G#R=1D)M-.lY`>e#G#j)p3lphU"cf#2qTq^=BG!l+d``4(R^lC\!as\Pr7&Tfa3PH'`(3fO:`\?k?a@aXHk=F0
%quC3fV("Ek`;1mV(%d9X7*U@7=,F[]GVWU%-uTk9!3YTe&k7o4/Q=]hh+CO_'M@^I&]')F_Ac0R<&)ra2S//Go,l#RqXs.EkZCfd
%0.md6%aH^KO,f<Sh;cnfK3fQ3e)LHGXY+dX#<_I7XgdTc+O).,'!0-+esW#]&_5o-]Sg<Ve`/pu&H(h`T_kH(%+O<'q(,JkGP-4-
%4n9T'2a&3-_<#"0ols:ql'S'"E9cs9]Xh.Fa+G)!jB%BI7jth>(q82Y_0RsGh]%U]d9U3JR2ukcB<R$\eDnAGN4*snLpC<(dCMFW
%Cg(t(\ifcUKGTs[j7UCQ_(nbd/'`6^aPC*,*XnprjhW04h)"*^@!0g2Dd4?"k$e#3oQef\jo"-0i)!f_o&fQ%btkstK+=nk`iIF<
%EPM92#h&nZom%*>FimdX#Fhg-ldk5bZpH?tN6d-oM-CCXc\'.#,=feQc\#@l/*[CS6J=lVEfJCt1ip^GUZqBC)j>UBf&o?NWs-2^
%e*"R<"Y<u\f7V_\b<;t6O']@te`-8cPl(=BocX&a\(0eq]]VPb^W,R?Z)kkk)aq@\PkeVNlLb-Z31o:%H9dj:PLLYW#Dm6mO;Y5,
%T(KC:4Z_]0DI*j(:j=q&#?%t;ri/"BYRGEa@@SAM7H*XfSK9q5'%$(>k]E$<)tJ5::qhtMiJcB`_d'p&4]'MndDd93#<4XmXiBZm
%Y=+GPgB1o!f"<6fp)noF/RAqj!k(&pE.*&6f:u@58-"gRYjB]g.aL#A6#sY:AZ\Gd_Rr[KBI4$[WM*+-W6F8:=mJ/2m$+Gs6%`A(
%ouGK1!=k"09*(EenciENS5h%STrPh,3-UF'$4BirM^7St1-T-<.c?EreT079hS?)ra8j@cCP?:J/&h4%;JW4):6k]`S>^4/Un,d;
%d_FtPKS@7n8KgVY#C$/2Re&?heV79$b&g#AAS0o48&<DE)F!@N7*bcm.d4HPruW!Jqi?fU*p.E@Ac?o3^igd_:0spGMfk!l8tAf9
%:;89#6)^tRq'[<I2/O/+#=Kq/LE,;4%V?T=d-B,VK?`-hYg=gEXA+Bp\tmB5:dg.Oc,$:MiMD\SD5Kf3V5D=ditFAf5]gj@R5m'!
%-]+1V4c$(4T*VI\Yh?pH-$Aa7">@aqaC6;pT?%`%J(>cLFUk!_6J>5$h/J40<29q&h'*BKq7+OR:LMm7QgZa.f:'d=04uqtY6bh9
%hK.VWLnDBq[^F"h(Wta\@1Y>@p#U-e"2Z"4d&#$.nipSX,i.iF6%fd:Qq_VD4#nRccj7+6VdjJkSk#XVTItguL!iGq%;9<NR&sA-
%H?t(<5D[-^_r_J=S-89E%UpuBB`14";Tci@&!AB'3FM]9BYH']01Gh*KVd]%4:g0;`X*O3+%/>:C%V`$kp-^[RgpUMm060/Qjt8@
%]iuLDFQgEN3.r-(.V0SdI)&]Bk&CY9&FLUqL?T6fS,mU3SC@!fK^`Yr1:H]Y;4X4YO,um)GE+2&4@1):aCta;8&uq5Dh\p!Q]O_O
%BNQ6@*^O^L9)<N5H-!9IWW$lC!H37)#^LZ8]2q314+o`hEp\o`8j#GU]D#b(#bb0(maL/-,-VoF&5`GfR@HL'/UNEug@)/e1OJQ'
%I;@>\m-&l_3H].7F_kX^g@sl*;E^sn-0)Cp,oRQK3JA7?P3G8?GGWLpjsGdIi:KQ\Iqt09317H,a':fV;dL.;c7+@Kq1LR+Lbs+f
%$j<YN08!M#8<WY#.QnER(45>/3jdp/2XWXbd]jjm[Hl,C5L6m.ca!)fWCP=/ToaSb]_$"NNYPa["a['j#ErAaPXcitXA?-XpnZ8"
%\4Ht(3i.RA"j?r*POar)Vb-I!-O"KllnA.;Y5Gj&+K6DVls<6DaA1=uq<e3;F'hP%Lst^e*.:=[;f,4=G*,X5jJChZ\MMLr>J5BZ
%fO$?kN^=fXRd._..:LAUdO$HZ:IF5/AuZ)eP!q6,4W'.3r,&<W&>$r`5;PG.o7[h!Au5gXJGa1i9;VsQK+QIdan-]0\KHV$V5laE
%hbB@IcL`7Y9:6A=dt>H)Q:qh+&h`hi)"kZk0M9/!=B-.+pQFbqSfi]K`hu:?@FCaWJG]g2Qkc\1pl'$=4@_@@]?W_@:\pA8Z9Wi*
%C_O[+mo!8RZVC4M2*GMY389++._>:`S&j3k2N;=<&D2$PF<F.6@@3Y,R;F]5\/2-Ed*+Bk0Jk)<R;G8MAWAq,-A6MC6mCW,'9WlH
%0982PZV:]Y&6%.r'?8LCJ8)Fu0ab98hpP4':4e//WAr^e=B1C8,]LMQ^K%>/3Z<<+>**P6VtD0(#&kP_l_G]:J;L:*ZC/?U-ooV:
%APqRqrBkWWoNPIeDu_02Q#<=W:QC.AadBAEX"YUj6,<`DbFj*`+pj7$Gg3pX[:\6g67)h[KH*5CfM5Q%^Vo_tP'+]ed7T2#Lb]3>
%%P0u&%?+<->SHPRX;RpA)LV,OeS&FkMWb+$=7?70CC3Z=,Z1o8YH[;CDOt*ER6oh6@gABjR.[.H]@`_fnr*dSM/DO;CA(O?#C%/m
%P1Os)8G*gY8HNNI_ZiiLTo?o.P]e9qD'JS^IZ>B")MP?1Ro%:Mi,C1-3"Nqre>Kaj'bA.jPP1E=66SYuBI9,^PRaD*U;N2[)Y9b`
%QF2a.D^'knMXh#eiMc4(P;Fu5GqFua1eUnpmVbfQ#cF>Y%%HmklD-T'bmA8O5>;B3]jrI8VT[-a5FMA14L7=S!G^/6%T7u\nqQJ!
%Z0Ft]@NL-Cdj_"8I:%Gnfm"N6DDoV@Kmb/OJi?Ci%@Ze/YY*'YdDb436dap"=`*^maY,0ON$mrBFa6R!)D\4F;DN5-:g+<$31`7"
%Y!7n*K$Pnl5V?$n8JZ"^(5u!K2JfEmR]+%o$f^B%Jj$(*,b`b:dc8PG-kQ(;1-`FfEQr8#*>O$6P$eTbM?8*8=V0qFg_HFCA`-9C
%=[Z/S_F<@3GV*XTL]QPu_VS/=+:/I?)LmcP=_^EX/Wq44:)SUn7RH]$\^3mL-DN:Sma3D_"EjDl/oWFHs+=^&(H1c.D5L!<c/mn1
%o+Yc2Ga/MkJ!ugKW`2Q/m.nceBs-aM)`)\/70t3t<Fe5Z@_iXbZT4>&eUg`b*4[uu>$tIH"8$mUC=8VD&lb0bHP<\Y9kn),9:`,Z
%<4FPF%Zod-++<[C1Y2=t&*8fOLREtSE<5_5\f=0"<je1@bIX:?jf5$YI=kO3=-T7PMGkpD%@q.8#>EY<Qrd>7GoOgp*<`94m(C0r
%=*"_h&u>n<8rnfOH'R-`Hn'\U4t%*OjRgKs&O,VF2S0&]W@2q$9NI0g;5D`-"669$i"75-X"UP5(1KCX#ce(9k+!O,MIZU.QM>UF
%l<p"r9$3UR+ZRLEBjui'a<)b2K:qRP>gkatUP8:m1ol7hWMPt];A?j&l`N[aB3GNH$Fo=B-EVo:5tP<.Ras4/Ldlq6rT$r+BF&c3
%g<W(63r%6[:&@NJ8:%*YQl+8Z?4X-nKte5^o3VdpO/B34+DY`5MmdY(C]:C9/\1;!d"%u'7R?p)O'grYP8_;&Y#UA&m.@+IDCZVK
%Ai,@Z_9,WRdmW^m<oQG'?+M.Z4Mslgl>V9=Jj!=o,t4O+:W[^?-kq!OV>;.SKWM48<*>t56O8`=*]NjXRjO,jXS\,cY=AM)o@^6P
%r;qU1pb[-D5&5:<#`+@9c:N=KbABG`OeODbRcimFJ3f&%Y^\m[IA1VESRo(BpSu:K5%O2Qm.0*7QMbuh6hU1PB#Q:tZ-'MRiD']i
%LXZ6cQp%a6EZR6XUeiZ-Hc%:hcH.g#OJEH1%G,S`0B6iX+>g7>NZJE1;j0urHl;5CM;+849/o`3XmohDX-sXh&Q$7QW<Ef1C@I6B
%,&l*/T(Ut0\Nb0$SgicYU7gK,e.gf,N:P%aH4APIDR^Qss"rH[V_#B6\"R]3^.n:ukllk3gpJbg3J@VqVf9Orrf!U?<-uU/p^;Q'
%LBCuNP'=d?*i5mn>Pp.`@Qh-NmiG6+2\,`A#tFI`F;e=Yp"*u._p(1<VdZ\Yr7'MW\paE5eao[Jc;$[Wb''Es4pbW;Q!eM)Z`]j\
%(>KJLJfj^L5Y/I$4!C:^GqH4QA6e:Jr`<=5TCV;q?;?o90\"NZ-*RXSgi08Kds')Ya3?U@Vl:>68fN=u6esqSS*Kgu$_C2`?NWV'
%JM"ATYSDWnm"Xi;p2Ll'I!<C;qt!-^cW5G^3-#qfMJI0Ug8&Q,NrRY\Xf)(XT>N*Z'P%K]T^q%<Bbi[[gWled\/Ar:-2j$UQOq+E
%ZbaA5AP2,]r%Ou!miHX^RF5s&[p=;i8oR:W`4=7IJfC.`nV;j;G_U#TqoeaBDWZ#XpFU]W9SUe/?8rQshium=27_^-cKAd:f@--T
%rV5XK;"mamV`G.HMPC=b6DJ`e^e[s;36r%XeG1Z0Eh3FnVfT]A4L'#<Ad-JZ>,BF*j]SFa#Ih"I)<M!=10]AW/oo7&rUBV9mc-O,
%gi1R#o<7pQTpIG!)mLe-QOWf_r2g*Y#1jPLp7>gjQMth<Ra"$$<NN5nG#f4Br"o96mKGLUh0+:5=eG/c1>ILdA]"ptJN&G3&qp8'
%pP)U"bP"7eG!>("go'c?d=VR:'hu<f<])U=\A4"TG1j=Y2ZJ&*<a)nPHp`d>9=MG=ma%;+("K?CGLZU-.bk3^7kRmI]a)$8MAbOX
%DdqZm&C4^2ml4cA?c\=FKg+kYD4Tkc_tRlZ:?Fg4<i`VUDtP#9-qAM\n1NI@g\sDjbDNmW*8_B[hboE9;ZCebMcOYSn>\'I<Q(Y)
%\P]JdC-0tK,2@fTou@J^J^#T)e`pN.</V=?P4qIlS^@0?p\DINoq46GS_,!seV_Qe0(>SV?M<cpc[T8e<>b'Bhp=sO;QF\e]02CZ
%;LR(@O.,6$LFR]>FLV[S%rPA^1X$"\U[3*$J$II27s[FIV*d><o,$idH2[$#e<)tRkK?8s9&Wd,4R9hL[MJdDf`b]sH9SOeq>P@q
%(R<+dnP'ba#F4E`YH3Z$imp?A$C0h45N/XWq`;H?qX>li5CMNLV=Q)&;_n-B#?Af]B]%C1rhRQ)`VIK6dZ>=[UcA8iIqMXUIP0Wa
%RK"c255:jbR;m->/dn-$/tY?-ao)lbS/Z@:';t:?#i#29Y.O5D<#<6d:s0gSarB'c9i\Ia]kGDE4o2+m02l4sZd]r.IeH;t4"W)%
%YPFA^b'ibJ9etban6Nme1h$=q)a=35(:SaL"h.DnJ,2@Z_gDqNC,L9`5`77/5&nK,:Z$?gFp`_(g8=hmH+p*irDD1Y.n')9(5;TF
%`f$F:e&m`[M19B#>m+ZDW)WnJn3r*fj4s-0.%I*=H9;tuGW[Np4WYRA9_J>Jqc"*t3QR=`rO4&W.%9932gkGnD-(YRnA`llc,e-#
%%?9T]L$u/q4m-:]D0q3X-2aXG*t9%`Tia7<`>:\[CsEJsL#(AN?hG<&o""%.([]eDb(?)hh=+tV[frB?E*oic(Oa<Io*mkG%5mOM
%C)G:Q=W-(!f!>28r[ur5nDt#ns3'f_VtB>oio%-;U=).k?#f1A3fX/3MH7.!C9ltQ(YgS0K!-uDXmA1!qoWg:5DO=!XZt%nNYcr2
%jjdgj"R+@APmV_\C698@^?A!tS/]2SR1Kks96p@*q+pFN0]UsX`Ue6ImU8&Ulg).IgFg1EKLOH]G<4noS6m,J8F>iS1oWEu];n\7
%\*0\Whj!Pu5&9;qi+BYQrp7r?hq_l+T,&m19PKUu%DJcUAt0gSbE@UAQ;=.QjSfHAc4.7S\&2hhg<not]5>P,1L9'YF)JT*V!%Z1
%G4_*[G?'XH:>E5NS$mf)-nNhSE3n=7J%"Np0Cq3Qge,;MUhq1=76WR'U1Ka4DYPh[:-.*6D&0U`2M548Rt^6'cX4E4oIug<=YKIQ
%F)HnRC!LS7TCY)'gQZTFI63rXQFuD]F.TS(=coBS2`.tPPgQPCAkpbm!pmb\$j8MA_V)B'lbM(=BCSCm1HTfu(R<r5r]uKLHuq='
%ntp#g_c^r"Qn//0onG+m]5>N4C%n_`pnAgsH1#F"Y3Vr[r2k9je)hEQkZN\uRH&<uL/fd/A9%JQKE(>ir@k':s"M'lkS"/-PX@7P
%%GsTsZ\l`4BCNmNB5p#0o-`s)3dg\p:+bnI2mfW.W]*ZMVOH@@=[U(7DJ4L<T-`CaANmTP]Uf%o[sHTRSpA%`J[2HQ[)TG<\I5Nt
%?d@Sfs,BVr8MfE8^52'0nb(@d5Pb<C'=TE]5B3<Y_&$sCC>GagQf)9#5''rn[hR(GFPi!7Z[)d(NP3&P&KgqAp$Q%t\EqEP(<P+b
%MrJEi\`(/9cHLJ-o_D;NT.o<\nAT`tq!N^q(N88L2r9qe,2X>+=r"Q&OPWn1hU"QlHALC7X-qpUQ8i):QME2D=mq54qfBZAq4+F%
%-f@GS2h/-SS-E=W8i+a%hdobS8EuZ?hJrGWo2,0WRrNnm+5b[Y4pSr2]V2f?qVtO6$%F#gY,a![]VWNZTq21UW*/TIC6s1Rk\@<2
%fJh)&P_J$3g^sC@5Po`DQhd/NFI2D2a/$Nfh9I"n%:@VE_tXJ)<]sOA42.Yq(H(r!#r'l7i.egDr)plG?flFaU@XQ:>@d4lXYB?O
%eW"3I=#K%lQ.[69a2cSP33O.,\bVU?&)"D4imqgXnE&+Lr`<=8qj>V\/ac;b07'H4l@prIr*fL*_(Qk;Rm))G*t86%\074SJ#7P0
%Q_iNHik2Yq<Z$3]>Kf32NUL$%)k,\hb3W-qZ6%/pa^QXaji@ir/mDlUjV&F0bH9Nso^'T_"?#tKPW_B>n\nLQ)#lk:M\Y6Kns]_e
%E'jUUriGsJY=lAWq7MCXP&KAFVfp#q2lP--Dtp>VhlSN\H/-/Hk8C78O`_,I."c-%)npSB/*bg[pA4%FT3OTha1:0[qfho)@5er,
%l#"t[?$]ueMl)"?gTJ4N6;[oAC3@7i4MIN8?8WYe+MF3X/gcCD$?,(Ai+BYaY5<:XG6b,CVo;;CVR4FI#%*Tk1X6Hegl[naQ;=.Q
%jSB0Ec4)^M_:*$]?Zj!"6$h:E2eKW,pu^@4h<m;d[rfGFeCLZE@N;1FK>kgFEOMPldpI(#g`>#6\`(_Zc8<#%f]F;6pnC[3:YbJ/
%WAoi$5HUu8;j`#$-+iG&`XQRGEU/@k.d7bGrar>fLUl@*0R$b4m>PuT\XgriVsc!Cn7=]E4Ek)nose=Qi9KTV35mr/"ZJqZEH>Rs
%r0Jqg?/9+V('ghT(Z!IIFi,"qj"UHu`*U)n2r3o!$^u-=E-#nYY#E$mbL194EF.@I.h'.j%VD<59(B"KVJ?%2_KsZ4([pJ=/@![3
%4YfZlG)I-kI)=lm]6->3Bi.UK/hJQ,_&(qTN,ulq;;JCl3_1i?]oEJ<Vf_pVF\8S#^>>j>62G3tCNY_F2>E*`H;eko%555bq&S'5
%hsb2@\'r!\rh$ZG<RdUcDMm@Wf6`D8=jc#Y<pQTh\Fi>BQDJfM*Ohd>BmfmOiD71;qS[5Ck>0m2AFNSb7+2qGiX!4HPjdhG(Th7g
%Gh1SF^c24B^U((k9<C/$0#:/Y(:OXF*Tr/q?:R*3jjWBW\UVJTF2P-Sn+>E<D-KNoFZ80ElDfq/"S7WTpPr!oeLR`=o*;V<ain_/
%E%LTfE3nC?^)YCcMY8:!N_PF9NR*(5L0LYT2#cH^>QR+hW&"=E&6SDVWY@\S\K@'tPB)*!hj;epE3g9<I+c*c<hHkh^=<nS[0N8c
%%pHq%p7J5Y^"qd]W[g9Bg>_g>(AtA%p>W$XX0@UVMd*U5ma;QR@fL0?_l":[jUEO"#E@d6DHVtJHGb3Y6r3[89cp`qZ/B4EDYUM[
%\#hi4h0l=5^8_Lc4Kn%f.e]L3\e=Kj<K!?K[^\Jh%KEK*D8lRf$L;rD\CK3t:cI1P`i&>;b0f4f]'*9U^!%PEJt"4Fn7;p8-(gNC
%?a@LLc01SY)]I109&EW3Z!P/NC;1F^4T\8ab>oJ8IU^.nEf9?a=r`B2QPM6B`N<$Ja1:0@,OqM1hc+*4TF5X<GJVl[h3N"anp(Q9
%nXn:@ieq<nkaOMYf0aIW#kQPLYFWWKAIAB!]mkk[[J1qe*lcf-+,9X^e*!FmT/QJEM4e'pI.>'Z24$7dWN5f2*L/Rsoqpp/oLC_;
%"ZPb\iL@=DH3CdPEV2ukYf2s*=o9q6AtP5h[IqC>Hr8J=:cEb6ZOc(<5.uc[D^[JE$/[`=DJJB0D*;[SbP<g$=n)r.^3eV^o+'T#
%eDRCWs31'>D.&LW%o_<KELEiCm7pm\03>A<o^'J0*I8K.[&,k5*FFK^_t]!_01+qC.`tat2f9b=%pH0a9i&DN?T2Q@*<1V[bs(1B
%GAfQkhRWMY)gmq<Fe1h=r0pB/R-I;@gJfbB\(]d6A1[YF/))q(ZO#liZhU7NRA"Nn,,ua)5C@bh?/JITDVDnc"hL[c2]_4]PF;#L
%E3nUE^3o[`V<9GADlLQSdJfQs:#t2#otsaQ3aJUtEP'a*s4\jdR^`*j7>*V#=@@1^005L=kD&H"mQp^+$1b)B=@_.@ID"fB2r2Xs
%k^o9Mh!jF;[k51.l$81<^1ea3T'pAFB.`:R)^-ds:P1<)D=PAF_R^J;n*6-8qGdb^IIUba).J`*%DI(lbW%P/p%J<ms#'fOj1kU>
%L;+nZRtbPk?Th8=J%=!6;Y:I4M>:TDc1P(8\Z#a6ESg6^%X\#"hjaLLhY-qr<r\>+U%Y)pf9X5h`Qil1L+`W%@JlaXG`ch"&D@qE
%fhJHZBj*I?bT-/)-a]CkD+J),jbBt%q(r"E@Xgb)HV!@>-9n*\q+U3hGWt^j6KXmVe^3640P`k%_\\m-0`DFd*MglDKPi9[%g'96
%\u^55j/'<NG;jC(VL9>F=E$WJ$Z8N$N,S$Qj6Y4'IeO)HHkDiT\^od;]Uelo%.@hXVNFrCgXJH?064$pc4+.QS&>"cOk_-G^7cnO
%+A4qJ'!%4!^WK8P]4jMhNQE1=Jf@TjE'mefHs*WjB,.57mp61a753RiDY$occMW'EpG5%_aGJsnQ-J6F6u%IgiJX^V)#ktH>=?Cg
%"TGG9D*9%$p$/EtgiOWZ`!^HRjb>G[2^GbfXO$\1M6a<1[.k#IB6ZV(q\c!Or'3TLP%F.%-1VIg`>@Xq0`GA/g2tQ.2IX%?_9J*J
%nAY?8'rW'h]?4CoY,`'0El>!`m^C1!4hL1Qq+UF:>7A9$mYCH*2PfgT1b^;Q?R9uOCIfN]l'NJ0PS6#Wect?bNLdG@na:_LmFn%N
%^Hs>Ci"X5&n9&DsY&uC*pCUdP!a9cCcF?0/j(>'[qXWCGrUFA<Z]<3gG(077*B^hirk=rgG`->(+3U+-#Z<h:ACj$o_5GQ\,W@'k
%D&)9TV2cXqrl\l[K]c4Q*tN<]SjQH)?Y4CWV\-qba6<09A+q^3Tmiofi`oO(_OCL)S1N[QK&sIu@o(]RZ*CHM;](:?T'a/r1LD,h
%b9-&m?jrtU7k3Ftl%;J%a+*og+91jqs8CjSfD<7lU[Ed7a4((da8\:dg+1+6bapsV<oBbed_NoD3UeVN,X+a59MUJ4%Q\Qr9Wn_`
%NBFuf>qs5M)ITY5FW#!.s)\[6,:c1'UE$l):cUT:&VE9gT9l89jPU2bhI-D#BB+Z00kt_Ol!DA/MPs86=7dZZ#iSk1?=u>@@N*&n
%6K$@Y36i*d,d:?!bL=L[X`U9S^l<7D4QmQ1p*mLIRIN"A?RsGHLa5+h2g\lc&-.SdANmRHB(F#1KD+YC*EuE,<Z!\\./8R$D:Ub8
%&:pgeP!3D#kNBd(mM[B5DG$<1/(q2Z1?6N&Slh/8*#roO;#4:G:sZlr`&,P+p2'5m.Ku"uBU^oiNCe(Gh#NWH(npe56ZhbuB$W:n
%n?L7kFp/ER873@XQ1n^7/u2%f:k&)iAR9AT[5(!7+?%PiOAMUp).66<2KmGOmYnQT#+?%1nlu+-lF91eaGD"b:*qd*[uC+mS-aN*
%?ue@P4e?EO]cH;"MUu:QYGBN^7N7o6;b0IiZ4+J/$\L1",h1mRn8i(99bTl24Y><sSm%Do)j?BG_;c_"`sWerQs??p)+WpIPM<Sr
%XTeu891kR3]-^bYgq,<8l=8uZb`^`b3OKF\`_]rj(joAi(`O@T!5<^(A.b9KG!hoLD!VelXtbJ]88OGhPE%]sf/R"Z_*MgAC1IcS
%SuWZ(2\_#`ScRum++&c[,&i>JRW>I\B^CIS*#^aCDm/_q_)&B9KCP=/?:#=V-.`fW+THYB<E\"JomnOJ)Y:8NPSB%\-O+?eSsd4I
%.Qe/m87eMI"ZaEh@X;2*:j;3FOTrOq5o060.EW%<p[TSj*.m%"U$!%7UgG:f,oA25Gp*],7cOtIHr-f;=.\6XE._hGGu^;tiYonh
%%&RD)Qd57^a^`E?<N^?aA0lTgMN/62h:VgTa8P,?*8K<mS=7ql)m;\]X8pIihT`<[QG!jN\G]QR@3"o,+<<C.DEW'.K)P1E=DGpj
%0h?\O)1``#;aqUJ/+\BPn8X!L39_qM3-?L_"PYX*SUq/'RZbe&),]o>KHu;TWM#=MO@Hg#r2J=HRnkAJ.aPRlIPf*U4/n/JK6*CN
%h21*+MM_@c?i'ftJ,]E(MFn!>@[k%"hspaF?RNs(B^*B'fdrQDE6^.Y^[X^Y+W>mS%<t]PX9.Q.kBm[H_FquP%VATAN$/PldWhU;
%df9L=Y,agNI-6'9#W6/9+?6VTrnt9f.2@,L>-(<bnW9'>D\;LB`Q(WOpX+P;&e6WY0N//3;k<[pJ93ucQ"U"<Jn2i!R'8*hS8#4S
%Pd8,*U)D9Hr#fggQ<s;>csHBPI;huu#2OCSQ@ZBhLf5]m@JW*YNd5H\Y)QZDSJOcEE'(gGQRh]3`eUK7k&-1o/!js5kUto&OqM45
%XEP]*s8:1icoh)N@V,][e<e*hbf'P!AER7,/;*g7_rgRCpH/pYaY#>Eha-a\3X``Gb$T6@Fl:cHo[8W7JW<kYH&r5WU\=padboE1
%9`^W6N"!@t:ulSD4p=`b4</VP3s8Sm(kWb<JXF21VP_dB*H)K+#2qp9MLlMb+`Ju=_'.Uo?B.I9eAEF-kEdg(8qm7aT8)4H5M!"I
%R5B.+@*jm7+gA9+6b>7JROSpp$$*\D;\%&tE8(h#\Va'DASdCdYmSSS=7-\Ef,X<(L>au3GTW@g2M>a$*l.l?VO&VhoNM)8iD&c]
%F%Z'0K)7c"oJaIDn%b(`ks<LsGJFar'e+rN2e;po*t.,:FQo)!3?Udd3W\gX+ukVg1B^9In`(@$dO-&2DNM#."&E(VkMgc+LI5Z%
%<2VpC(oJ!'o_Y;aJWQoB46S*sNG0<T,u48!2!L>h?MLO@rF),o^MoVLPB#O7]F,:=UDHDbnB-TuHjC;i!WH%<D]6Y:Oa9BW8WNG<
%!J6t"Y,m8S/@cpEa6:7QnBj!1b/)1LY,iSj@cOXX_'7HaRo;+Ebo:,i@t>/?,uEkEpBmE8cegb8]EfMJ++rd9j1YB\d(9Ar:*/;o
%OJrMeXYT-+rSlF7Y/!9/PWVu17qan;4l@\:o8eZ]W",Uc'Q]j5-Ri\YOh^Q8O&7G_$B^<:<0eJ*G9JZ\J3EO$iPdGb?t5?#`\OSo
%V1bZ<6&Q/3GAogD&BbtB*/_Is$&f>[o*D?(M@ToJD8a!'Urclu':0dk:YA`N/;_lp64f'@-*hD.U+>igA:jp-@PF=n",E'3!p1%U
%:G#VN\(0ZALHF"\.dM'G%a]6Ok`c2`H"*kqaj(;G&%PZYX<AVIM)Q#jE'Ttt)9.Yi2Jn9;;-#CSg!V?C0<%V\5^2fm,aH3dFjn?*
%?tte+]Gr635RW<[-+W1K$:>V4L[\CL-]?:5+p0REqc\5^6WT+c9u_-T83I;[%jK.N:P,7$/&kegZQ!-5*8eN)9rAbPgP7mKYB@!'
%[=ONJa':#cQm)E>CS<2`NBsDZTphe6-Vf;H+XH=+&D0<7@')`0fO92*_(XoIE,o[\7BN$J2/[Q)ChIBZs-[,tN/';kFWUCZ>d?c&
%[a;s@-1Mf&Yp=D0M'ij,#qU3SfT[6h[S6hrCh'4&H18j"gPGm!_/W%uJ2J`*(_;,=dU4c7d``n%DYg5p0fadEdVH(%KKUQ:r'K7=
%*[)[\T*2^p30mkS*7qYRkR)BK!fNZp'_qhGYF^HPg5:JL%oUf8`,d7]Yn+XupIi"D$sAuX=ru;&AR0;U`9YmFQ-'>_%Ei73h_IFs
%gX\O6.P,!]S)V@T7-\Sg#14.jR-=/j`e.-cKUE`CGQT<CTG8u\*+5m?KZ5a=qLE8eLq_")!9YTL0X^+29(nf73'*sY85>R^LAen&
%SZnUg`R4mcW6b\f_QhNqE`%P?_/DY<663oK'1B!0Y@&9k%tcIXN6^"C:8*_M46d7t',>jC]iSX8<8SF$r].JYmqe"r4:.@,4HNP-
%,ZYaMGSho!(Ab)EB6]qTM5*3Q]?hnWihX=59G)6)8q(%N.#CCfEQ2:]J4N%m-o.rndj^5WN4*BGQ]"GtRnFEh*%Fo$cs\gpK#=/_
%iRS=*NJOuVoXn;*$"RNm^[?%Lcj9-4W)s1Be7"!?9gTXFAh_?(T^*f=ADZ,FTDT*gOVfKtq.l&l4=O28cIY0)jWR7;Fjm8CrCUqp
%bi$0?UfK7hZ[V#27L-a\63jCe(;c6,KL[seELO[N>,AHS@#R.<^8,S+h^c@dB_;9M4I3kTpcTZkW6Abl!)_=t6Ym)V9hWQ6Kp;c7
%?Ao1.jt%*bn?0/_(%!-5$I,ZO)AifGiXfHY#njUkk3`AL3-hP8bfU5>d<'12BmE#\SnNftr_j$"`J8_S`[1jl;h]#YF5g=]@/QqX
%B]%sg%P:*3<dL4m,[&30,ttrT?<nPsR"/_tjms8e%b\/Mp9;Qb<5)?nMQC:o-,Rd-400es&)m!#cMqNjS9M"Al#2Q*^uHQ3;*4:p
%^u=*PI9%q?ls*P\>h>cT<p=MM=U/TD$'`H^U.)rG,S#/3%r7_>X(RGWi!+%L7W=2e"<?!L:"!Eu/;]?np7Zk.os=oP@GI7WnA#oj
%o.#"Z?6"B]]OC`u/6M4c*sY8FWMu?b5_NbqZ*N4+S:3'cTZ6E81cdlG_QTr$9,6QC^+NmH:5rC^KAPD%!aZeo8&MBk+7EsF]]]QL
%Gn>UTD\<O9'Xh>e75A3!-m2gDhs+-t3^A@Bk>Q3TM>*Q9c=_bkQNSB@U"I@*X6oub\?p&kO!M/\aPTA*Om``OYD((J^`kkB"Zs-j
%B?IWD14%t7P/d@P\)R<V@247TCol3HLUbN4$S4`J'a7`Yi+)Ws]<JL?rtsmQ4M]D5&/kau[k9->1D.rjr1i;0,)?7\>]',i'rP0X
%Uj>*^1$8s-?A1&_72olAHZAsG4HtnC*)@0.Kgu9PjP])nK`r\oOm0gIX'2Z%;WDPOS<@VfSNAKUW&s>6R4[`F"+7.Jq8n^R(_<c5
%f(>R0V&E]_ONph]MQZ2;L/_%m29\].[;l"`oXr@APefO"%Mc4R,"J;-[m]BQQZ3@<H2J\s.*`#cZH17sQJtKj`BbZ_(1:Qor`]o[
%n]THkDb+H"bY]2Z+4kbYS`2L=I<'ieZ=,,=4d*XU&ck\L6.*\.K7p=9Q9mo!7+0!^XFgn61eBKWWY:;qG,AbLj?%YF1P;NJXVst.
%JM0m]".1@oK)h?F%ler&7Bf[7/-4`k>?X-?%)'h(k^pna!CI/b&PrVCn<:qJFB3I/WWE[9P(Pi$h*n99aGSYZbJPY!/U5?'m"==@
%Wee):L8nDU)0.-0(ja_7ZD#:<Youlk%<)sVI:-Q:lptUoRYR$(bDq[EYETW.R^MFNH[J#K=6dntm<RW`9Ot]i5n/9Qc,r]09i!`c
%46,A<#SFVqPs'ds"QZ3g!f*_XPa.ZG1Q/"fG1mq^ihIma+A&Wd0pW7LHEWbglLRFSQlCr#nj"#VoYNU/@N66F\0L!$`fsEPQAT`8
%5n#7`YqrUVRPJC'.FTJljS.cks3j,40QsZXahpO#`O/<WSaU.RQ$!,u^!f/Cn,OtbRC"CEiRV$7e^03ir)9u+`5X(>EGZ?*raXPu
%_(<Q5mP:p4UI_)/PAmbI0'lBQ@oneg=12mP^)D(IZT?bD(J,:1i[s.^b(?\:l]T9Np=)NtDN3=\X),3jSOcjoK2o4W8i-f6cK?Da
%SRZ`Y_t=s__$&&8TL1M9NTfJS<e[JD//N./T'YnPbJctn<>'r#cmA>c.?QGAjN#cK'-&Z5IIs4>'IWo'.4>m`^oOOj..EN\+"+#2
%)[]3_'4tH@A8+h0m@pD>j]/349hjWoPPHQ6N?L9UW=[mI1<!X24WD!5$;kGJlq-o2?DYsS=(TJ<1`V#/Hr<7&ZpflNM\@r$U:ckP
%#LO:l=ER`LRkAV-cU#8/Y6XfO?CcCBXYtn6NpI!n3r$t>beXM4&@F]0O/A;<nPTR`#=F.bTHJR/iCSb3Ng-c:@%cS^6NhE>%8+L%
%$hT!8G_N%*0tdl',qc?'.m#@aE;U;?q,!lj_'p8HC%@_/$^8R#\VS$W6tk8a`C-sT^UGYe^.C-VOHF"U<Yu>CkQN:j@=U`%adkXT
%XtWUnJ4"9#RJ-`s.+3I@3/%DZb`<?%a0DG-n<hr7,+Q9d!#FuBOYK,AU?_e6`IPItMXWR-]ACOAgGgQe11GkKfmt'0%2&&-CR.eq
%#/cE.IDm+[^%1&b\3s'5I,OOGetDk?Pj#%[\qT1/1EK.+d0rrFA/F-jDFYBmd"Y(=3,oNHT3J/J6N"/[#[8<F%u[b)\0%R,T,4N7
%&Wh.>E-<H=%Ag"kIT]Bl%o/8XCc`q^Le/_#nAiE9f!2IU9f"OaNhr3jB9JI%]JtqN'KdPMY9G%?0dXXI)JEUg!_56h4F<+,j%Y2&
%Rg21Y&YdAs.B=.TeF5<g]Rpn82#gn@36hV%-@LhiB6GN>>^Zq%Y5Q*$k,7?nS*`J.SsRSu#-W_lcVMA[X!`;mBAgJK>Qg8+TklJd
%3Du*W.cK0u>FP2NoWTSd'3KDkjB.fVrg&a_X]14.asr0;qMJ3N35p'0_%B0%q9E'IBs&9]+MJ4J>4L$n-7]rRL.6hZi+qtNRLQ)B
%B?qAc_&$Ppr-;l9>;0B6_?!d$)LZOKPun$T)6?DtfaO8FcmOpo0pGIo?mOmkBY"t46D&pA%$"HffX2'Y_)!:4^ssPfAZs>62^67B
%6k:U+:=4s6A^1s=fJq:qHAb#)1(*&JCg?+dP\:[W=A%F(38K8J>23"KK=DJ"W=*qsCQtNe#5(VA<^ePK!jViegW"o-_*$1`K+;59
%Jq$D8M_"%W7ii.g-&t97NpWI35d?>uDg6t3&s)od,SAR*AA#b:!$]\!2N,sf'68m'Ot-G[=[sH?BncnI%6)JN%&btWJIS3hN;pHI
%0i9iZrE*SpmkQQ4FLnab6"s$!i&Q>@RJ@kUl(!30G1SoUi:<"&.tM!hStn$$JY>to,iB8lnj:/@S2_lF8%t`1q#F-1IpbfeHLn/S
%H\#d=X;2CZGG!$d)$84l&`1SKefTP>K3T\_+s;WoK";(g\\Ur#oT@H/#M2@7aRZlF3*^EjRtA5_g4V9,+$Vj\N;?pCKAYiT5;CCP
%g(/'LcW"J*':fSK:SAM3R$E>sTsG1W8UcW.$CXm`-3Qt0%K8K3C)P0eL5aQ_KT1)(:0hqC"[qm4o/*a!2%.h<%2P\b[N?meNRP-(
%>15^bDD2pCIX$N3bu)HcdOGG<1M:2$r?jai[.`dBMKOOi,Y;liIF&@+a[\&i)+WGH^EoaSaGQ!HO.)prP)`*X5k1J`pQ4t(jh:@-
%J%U:>+#%qs*9Hk(iJ<)?gd?-);NH5F`l^BDbn!:h!VeaGgQ_o34*s!O;Bh9_iPOH_*Ca-gbBsnoVMCtb1/V&o,]DfFLDE_^<D\dC
%fAOG:c/LQ8N]G>88-Zn]pT.G["NLZcPWi2dP`[%-(B`OjcOKo(>J$?\8898nO-K[+99,.gDR\AKKP6L07Y1_d1^^!/&gSl^5l>t6
%moA'&SsdBFgZn1E+6@ORr*35R)*r7"X]g?o9m5+L7`_qtBo8d(bKPBsq]9)-)aKS0\n19,-aI%1EP'\7P6=?;@Z=]Q7&;-JeDZA]
%hc<ZrmLhqPVS)Q;UMKZZ7k!XjD2Xj4#FfA4LWp3i>bmaF%6cSK8YY&R\C9mpm&oCJ]LI;?SG24>J@iE'!l,I4piZ[.HHXO9=L8J2
%!4iQJa1[Nli9$e+DcJQfO+qb4*:20l52(P]>pNP`+\puPf_K2O7gnYHUH.l=YrPM@Z!Z,(3&#NBPl!i^;b5W5*)<LgOqo8#^D2tQ
%$pTk?%DCl%7r1.@*$.grlj:.KPoVL!;Tn?FFNAD0c8d"aDr+#d5(Gdf@F9KKWG3rS%O!qmot7(jdU0B-<qI+OR@:08bt+42Y.<fJ
%bW"+;/XN8aS@G@\2<>'lf\qHH?eEBu8r[,P\c*t2Wua0Dc@1RLPRL(Z?-/"Y0r!3O10,&n&"]L!<)+O"#1H`Vi\pe32b/i[Y+f@s
%)_Tgu`p^a0U*^l%qA\=)%-1u$_F<'npLC!e=:7r5YZmsn79<%GCq'H0n/rrR`s-0oQ,k=!/S,\ka9Tc2kDHQqm!_j,:Eu2p$kl4&
%HDJI_Tm5,\-7=`Z"`r`l9F8r1Hr@6SiGTH<2^Yt5:kJU9a,8IZG0=Cdr1dnWa6Uh:5^_5ETaE8#U`2*[L4,0cANhDpHl2XW990Ju
%LQhJ4(5\+,Lt]-q2tFd4c=7+>=^GJb1b`RB7('@;,&.`L8jZ4!QSd(aQ*Pr`D`AVk"D2(U6c-Y6>ZTHa9t3E39Z#sZ;Vn+bOuB=9
%$NmKXcKo7DKpZT;][.?KV+-ChiCTt1aC%Bg"Y@>bTTYA^00Ms(,tpsqqL6?L0;aq$VrhAKB=?,oH9Ck.&Lj?f'OWbS]R1Ds.'(T!
%^E##]0WSM^3h/&RRr!ek2hJu_MUuGoh(r=1IK`g3Ao25QW_A%7N4+!KX3bgV2t-<\TRMJSGt@VJS7<BsXd9*dhs0E;XIKNd6p+e@
%D\fs1f],9WYX%.=mSF3[eAi"m%^>g0g2P+2T(>mqL0Ha(FVAQVdYY`"c%A'>a8O^e4EV/r<O`HaEHkT;_cGu,=2ksLgHfno3'9Au
%>LFCT<'J453(cH$MoEl7TYNk;K00@bai!.FV[)"!g@s0`g'qmqC6(I<]sPoUG!O?l<6jl]a1WLl9=F-+f&a-!R[Os*K9sekjV`t%
%V)QuE><Hpa;SXNF'Tet@(p?';OPE@G2X7Oq<*%QO1m66V'/.X*J]K@-&ml;F+O(6I0VYC967rmC/>f74-l@D0]UINT\;inkTQYZ+
%ZOROX:k1-#n(`L!I]cKQM1>X_6@pHu0.N0?+:<q#BQoKkaD_DFS0J]&3d=M.J5Q&0Gc5<a4(DA';l&aGou?#uDhO'"l#U*]BD$W:
%.)=21)WB-:r##tk@$JN;!99T-/Ui^L)HB-iH,r?alOWGH90'o[Z8U%C)8iLB),3jDbZo9JVH@YVoVD!12Db&(B4@Z,KDi_Am#lp5
%9L;Qq$a5D<7bgGLB$nLRga:#TmHRM!CmoTZU7^?opVc#_qj1Em!kWK]QTOJVE`j6*4_T_kNV6kA-eJFq1Yq#BanBtcMQXR'523jW
%KAB@BQA%7i)Gk\g+3_.2`hecPrZl)O"*"+P4Qt%t_Zt8MnReq0DbZUJBR\\F\C\$meN;f(<_e`t75R1&R3]6Jo?rbb`+p`8Eq/)C
%iZ=%0rpsfI<5l>^![/fp!Xi^=+-@2Ha%[f(E)RjXV#ca,OA/t:[Ug/4K:QNu=a])5h.q6o8<R>`M$3#sUGS.0`\9oeH`I84<86F[
%W5BZp;K^f<q7E?R>!;;.ltmZ@Lr;0AiNnb9j-iWPF_i<ra+rP6*P$pZGlBcRE:)P<Df9R^^\N?Sq9-r7LZ@9i[tf_Gh#DVH55k+s
%r:RPJg[38Wqsi"]h=9Ugp#GgeqP4&Ah=KCcrT!S<FSGe-oe/VlO4k]2hgbI\]A&g)!1PrlNW~>
%AI9_PrivateDataEnd
